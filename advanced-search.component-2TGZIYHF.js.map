{"version":3,"sources":["node_modules/ngx-mat-select-search/fesm2022/ngx-mat-select-search.mjs","src/app/services/projects-list.service.ts","src/app/services/properties-list.service.ts","src/app/search/advanced-search/project-select/project-select.component.ts","src/app/search/advanced-search/project-select/project-select.component.html","src/app/services/search-engine.service.ts","src/app/search/advanced-search/variable.ts","src/app/search/advanced-search/services/data.service.ts","src/app/search/advanced-search/services/statements-controls.service.ts","src/app/search/advanced-search/statement-search/statement-search.component.ts","src/app/search/advanced-search/statement-search/statement-search.component.html","src/app/search/advanced-search/services/mutator.service.ts","src/app/search/advanced-search/advanced-search.component.ts","src/app/search/advanced-search/advanced-search.component.html"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, ElementRef, forwardRef, ContentChild, ViewChild, Output, Input, Inject, Optional, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { FormControl, ReactiveFormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i5 from '@angular/material/core';\nimport { MatOption } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MatFormField } from '@angular/material/form-field';\nimport * as i4 from '@angular/material/select';\nimport { MatSelect } from '@angular/material/select';\nimport { BehaviorSubject, of, combineLatest, Subject } from 'rxjs';\nimport { switchMap, map, startWith, delay, takeUntil, take, tap, filter } from 'rxjs/operators';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MatDivider } from '@angular/material/divider';\nimport { AsyncPipe } from '@angular/common';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { MatIcon } from '@angular/material/icon';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i1 from '@angular/cdk/scrolling';\n\n/**\n * Directive for providing a custom clear-icon.\n * e.g.\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\n *   <mat-icon ngxMatSelectSearchClear>delete</mat-icon>\n * </ngx-mat-select-search>\n */\nconst _c0 = [\"searchSelectInput\"];\nconst _c1 = [\"innerSelectSearch\"];\nconst _c2 = [[[\"\", 8, \"mat-select-search-custom-header-content\"]], [[\"\", \"ngxMatSelectSearchClear\", \"\"]], [[\"\", \"ngxMatSelectNoEntriesFound\", \"\"]]];\nconst _c3 = [\".mat-select-search-custom-header-content\", \"[ngxMatSelectSearchClear]\", \"[ngxMatSelectNoEntriesFound]\"];\nfunction MatSelectSearchComponent_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-checkbox\", 10);\n    i0.ɵɵlistener(\"change\", function MatSelectSearchComponent_Conditional_4_Template_mat_checkbox_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._emitSelectAllBooleanToParent($event.checked));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r2.matFormField == null ? null : ctx_r2.matFormField.color)(\"checked\", ctx_r2.toggleAllCheckboxChecked)(\"indeterminate\", ctx_r2.toggleAllCheckboxIndeterminate)(\"matTooltip\", ctx_r2.toggleAllCheckboxTooltipMessage)(\"matTooltipPosition\", ctx_r2.toggleAllCheckboxTooltipPosition);\n  }\n}\nfunction MatSelectSearchComponent_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 7);\n  }\n}\nfunction MatSelectSearchComponent_Conditional_8_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nfunction MatSelectSearchComponent_Conditional_8_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r2.closeSvgIcon);\n  }\n}\nfunction MatSelectSearchComponent_Conditional_8_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.closeIcon, \" \");\n  }\n}\nfunction MatSelectSearchComponent_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function MatSelectSearchComponent_Conditional_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._reset(true));\n    });\n    i0.ɵɵconditionalCreate(1, MatSelectSearchComponent_Conditional_8_Conditional_1_Template, 1, 0)(2, MatSelectSearchComponent_Conditional_8_Conditional_2_Template, 1, 1, \"mat-icon\", 12)(3, MatSelectSearchComponent_Conditional_8_Conditional_3_Template, 2, 1, \"mat-icon\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r2.clearIcon ? 1 : ctx_r2.closeSvgIcon ? 2 : 3);\n  }\n}\nfunction MatSelectSearchComponent_Conditional_11_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatSelectSearchComponent_Conditional_11_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.noEntriesFoundLabel, \" \");\n  }\n}\nfunction MatSelectSearchComponent_Conditional_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵconditionalCreate(1, MatSelectSearchComponent_Conditional_11_Conditional_1_Template, 1, 0)(2, MatSelectSearchComponent_Conditional_11_Conditional_2_Template, 1, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r2.noEntriesFound ? 1 : 2);\n  }\n}\nclass MatSelectSearchClearDirective {\n  static ɵfac = function MatSelectSearchClearDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectSearchClearDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSelectSearchClearDirective,\n    selectors: [[\"\", \"ngxMatSelectSearchClear\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectSearchClearDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxMatSelectSearchClear]'\n    }]\n  }], null, null);\n})();\n\n/** List of inputs of NgxMatSelectSearchComponent that can be configured with a global default. */\nconst configurableDefaultOptions = ['ariaLabel', 'clearSearchInput', 'closeIcon', 'closeSvgIcon', 'disableInitialFocus', 'disableScrollToActiveOnOptionsChanged', 'enableClearOnEscapePressed', 'hideClearSearchButton', 'noEntriesFoundLabel', 'placeholderLabel', 'preventHomeEndKeyPropagation', 'searching'];\n/**\n * InjectionToken that can be used to specify global options. e.g.\n *\n * ```typescript\n * providers: [\n *   {\n *     provide: MAT_SELECTSEARCH_DEFAULT_OPTIONS,\n *     useValue: <MatSelectSearchOptions>{\n *       closeIcon: 'delete',\n *       noEntriesFoundLabel: 'No options found'\n *     }\n *   }\n * ]\n * ```\n *\n * See the corresponding inputs of `MatSelectSearchComponent` for documentation.\n */\nconst MAT_SELECTSEARCH_DEFAULT_OPTIONS = new InjectionToken('mat-selectsearch-default-options');\n\n/**\n * Directive for providing a custom no entries found element.\n * e.g.\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\n *   <span ngxMatSelectNoEntriesFound>\n *     No entries found <button>Add</button>\n *   </span>\n * </ngx-mat-select-search>\n */\nclass MatSelectNoEntriesFoundDirective {\n  static ɵfac = function MatSelectNoEntriesFoundDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectNoEntriesFoundDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSelectNoEntriesFoundDirective,\n    selectors: [[\"\", \"ngxMatSelectNoEntriesFound\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectNoEntriesFoundDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxMatSelectNoEntriesFound]'\n    }]\n  }], null, null);\n})();\n\n/**\n * Component providing an input field for searching MatSelect options.\n *\n * Example usage:\n *\n * interface Bank {\n *  id: string;\n *  name: string;\n * }\n *\n * @Component({\n *   selector: 'my-app-data-selection',\n *   template: `\n *     <mat-form-field>\n *       <mat-select [formControl]=\"bankCtrl\" placeholder=\"Bank\">\n *         <mat-option>\n *           <ngx-mat-select-search [formControl]=\"bankFilterCtrl\"></ngx-mat-select-search>\n *         </mat-option>\n *         <mat-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank.id\">\n *           {{bank.name}}\n *         </mat-option>\n *       </mat-select>\n *     </mat-form-field>\n *   `\n * })\n * export class DataSelectionComponent implements OnInit, OnDestroy {\n *\n *   // control for the selected bank\n *   public bankCtrl: FormControl = new FormControl();\n *   // control for the MatSelect filter keyword\n *   public bankFilterCtrl: FormControl = new FormControl();\n *\n *   // list of banks\n *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];\n *   // list of banks filtered by search keyword\n *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);\n *\n *   // Subject that emits when the component has been destroyed.\n *   private _onDestroy = new Subject<void>();\n *\n *\n *   ngOnInit() {\n *     // load the initial bank list\n *     this.filteredBanks.next(this.banks.slice());\n *     // listen for search field value changes\n *     this.bankFilterCtrl.valueChanges\n *       .pipe(takeUntil(this._onDestroy))\n *       .subscribe(() => {\n *         this.filterBanks();\n *       });\n *   }\n *\n *   ngOnDestroy() {\n *     this._onDestroy.next();\n *     this._onDestroy.complete();\n *   }\n *\n *   private filterBanks() {\n *     if (!this.banks) {\n *       return;\n *     }\n *\n *     // get the search keyword\n *     let search = this.bankFilterCtrl.value;\n *     if (!search) {\n *       this.filteredBanks.next(this.banks.slice());\n *       return;\n *     } else {\n *       search = search.toLowerCase();\n *     }\n *\n *     // filter the banks\n *     this.filteredBanks.next(\n *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)\n *     );\n *   }\n * }\n */\nclass MatSelectSearchComponent {\n  matSelect;\n  changeDetectorRef;\n  _viewportRuler;\n  matOption;\n  matFormField;\n  /** Label of the search placeholder */\n  placeholderLabel = 'Suche';\n  /** Type of the search input field */\n  type = 'text';\n  /** Font-based icon used for displaying Close-Icon */\n  closeIcon = 'close';\n  /** SVG-based icon used for displaying Close-Icon. If set, closeIcon is overridden */\n  closeSvgIcon;\n  /** Label to be shown when no entries are found. Set to null if no message should be shown. */\n  noEntriesFoundLabel = 'Keine Optionen gefunden';\n  /**\n    * Whether the search field should be cleared after the dropdown menu is closed.\n    * Useful for server-side filtering. See [#3](https://github.com/bithost-gmbh/ngx-mat-select-search/issues/3)\n    */\n  clearSearchInput = true;\n  /** Whether to show the search-in-progress indicator */\n  searching = false;\n  /** Disables initial focusing of the input field */\n  disableInitialFocus = false;\n  /** Enable clear input on escape pressed */\n  enableClearOnEscapePressed = false;\n  /**\n   * Prevents home / end key being propagated to mat-select,\n   * allowing to move the cursor within the search input instead of navigating the options\n   */\n  preventHomeEndKeyPropagation = false;\n  /** Disables scrolling to active options when option list changes. Useful for server-side search */\n  disableScrollToActiveOnOptionsChanged = false;\n  /** Adds 508 screen reader support for search box */\n  ariaLabel = 'dropdown search';\n  /** Whether to show Select All Checkbox (for mat-select[multi=true]) */\n  showToggleAllCheckbox = false;\n  /** Select all checkbox checked state */\n  toggleAllCheckboxChecked = false;\n  /** select all checkbox indeterminate state */\n  toggleAllCheckboxIndeterminate = false;\n  /** Display a message in a tooltip on the toggle-all checkbox */\n  toggleAllCheckboxTooltipMessage = '';\n  /** Define the position of the tooltip on the toggle-all checkbox. */\n  toggleAllCheckboxTooltipPosition = 'below';\n  /** Show/Hide the search clear button of the search input */\n  hideClearSearchButton = false;\n  /**\n   * Always restore selected options on selectionChange for mode multi (e.g. for lazy loading/infinity scrolling).\n   * Defaults to false, so selected options are only restored while filtering is active.\n   */\n  alwaysRestoreSelectedOptionsMulti = false;\n  /**\n   * Recreate array of selected values for multi-selects.\n   *\n   * This is useful if the selected values are stored in an immutable data structure.\n   */\n  recreateValuesArray = false;\n  /** Output emitter to send to parent component with the toggle all boolean */\n  toggleAll = new EventEmitter();\n  /** Reference to the search input field */\n  searchSelectInput;\n  /** Reference to the search input field */\n  innerSelectSearch;\n  /** Reference to custom search input clear icon */\n  clearIcon;\n  /** Reference to custom no entries found element */\n  noEntriesFound;\n  /** Current search value */\n  get value() {\n    return this._formControl.value;\n  }\n  _lastExternalInputValue;\n  onTouched = () => {\n    // do nothing.\n  };\n  /** Reference to the MatSelect options */\n  set _options(_options) {\n    this._options$.next(_options);\n  }\n  get _options() {\n    return this._options$.getValue();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _options$ = new BehaviorSubject(null);\n  optionsList$ = this._options$.pipe(switchMap(_options => _options ? _options.changes.pipe(map(options => options.toArray()), startWith(_options.toArray())) : of(null)));\n  optionsLength$ = this.optionsList$.pipe(map(options => options ? options.length : 0));\n  /** Previously selected values when using <mat-select [multiple]=\"true\">*/\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  previousSelectedValues;\n  _formControl = new FormControl('', {\n    nonNullable: true\n  });\n  /** Whether to show the no entries found message */\n  _showNoEntriesFound$ = combineLatest([this._formControl.valueChanges, this.optionsLength$]).pipe(map(([value, optionsLength]) => !!(this.noEntriesFoundLabel && value && optionsLength === this.getOptionsLengthOffset())));\n  /** Subject that emits when the component has been destroyed. */\n  _onDestroy = new Subject();\n  /** Reference to active descendant for ARIA Support. */\n  activeDescendant;\n  constructor(matSelect, changeDetectorRef, _viewportRuler, matOption, matFormField, defaultOptions) {\n    this.matSelect = matSelect;\n    this.changeDetectorRef = changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this.matOption = matOption;\n    this.matFormField = matFormField;\n    this.applyDefaultOptions(defaultOptions);\n  }\n  applyDefaultOptions(defaultOptions) {\n    if (!defaultOptions) {\n      return;\n    }\n    for (const key of configurableDefaultOptions) {\n      if (Object.prototype.hasOwnProperty.call(defaultOptions, key)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this[key] = defaultOptions[key];\n      }\n    }\n  }\n  ngOnInit() {\n    // set custom mat-option class if the component was placed inside a mat-option\n    if (this.matOption) {\n      this.matOption.disabled = true;\n      this.matOption._getHostElement().classList.add('contains-mat-select-search');\n      this.matOption._getHostElement().setAttribute('role', 'presentation');\n    } else {\n      console.error('<ngx-mat-select-search> must be placed inside a <mat-option> element');\n    }\n    // when the select dropdown panel is opened or closed\n    this.matSelect.openedChange.pipe(delay(1), takeUntil(this._onDestroy)).subscribe(opened => {\n      if (opened) {\n        this.updateInputWidth();\n        // focus the search field when opening\n        if (!this.disableInitialFocus) {\n          this._focus();\n        }\n      } else {\n        // clear it when closing\n        if (this.clearSearchInput) {\n          this._reset();\n        }\n      }\n    });\n    // set the first item active after the options changed\n    this.matSelect.openedChange.pipe(take(1), switchMap(() => {\n      this._options = this.matSelect.options;\n      // Closure variable for tracking the most recent first option.\n      // In order to avoid causing the list to\n      // scroll to the top when options are added to the bottom of\n      // the list (eg: infinite scroll), we compare only\n      // the changes to the first options to determine if we\n      // should set the first item as active.\n      // This prevents unnecessary scrolling to the top of the list\n      // when options are appended, but allows the first item\n      // in the list to be set as active by default when there\n      // is no active selection\n      let previousFirstOption = this._options.toArray()[this.getOptionsLengthOffset()];\n      return this._options.changes.pipe(tap(() => {\n        // avoid \"expression has been changed\" error\n        setTimeout(() => {\n          // Convert the QueryList to an array\n          const options = this._options.toArray();\n          // The true first item is offset by 1\n          const currentFirstOption = options[this.getOptionsLengthOffset()];\n          const keyManager = this.matSelect._keyManager;\n          if (keyManager && this.matSelect.panelOpen && currentFirstOption) {\n            // set first item active and input width\n            // Check to see if the first option in these changes is different from the previous.\n            const firstOptionIsChanged = !previousFirstOption || !this.matSelect.compareWith(previousFirstOption.value, currentFirstOption.value);\n            // CASE: The first option is different now.\n            // Indicates we should set it as active and scroll to the top.\n            if (firstOptionIsChanged || !keyManager.activeItem || !options.find(option => this.matSelect.compareWith(option.value, keyManager.activeItem?.value))) {\n              keyManager.setActiveItem(this.getOptionsLengthOffset());\n            }\n            // wait for panel width changes\n            setTimeout(() => {\n              this.updateInputWidth();\n            });\n          }\n          // Update our reference\n          previousFirstOption = currentFirstOption;\n        });\n      }));\n    })).pipe(takeUntil(this._onDestroy)).subscribe();\n    // add or remove css class depending on whether to show the no entries found message\n    // note: this is hacky\n    this._showNoEntriesFound$.pipe(takeUntil(this._onDestroy)).subscribe(showNoEntriesFound => {\n      // set no entries found class on mat option\n      if (this.matOption) {\n        if (showNoEntriesFound) {\n          this.matOption._getHostElement().classList.add('mat-select-search-no-entries-found');\n        } else {\n          this.matOption._getHostElement().classList.remove('mat-select-search-no-entries-found');\n        }\n      }\n    });\n    // resize the input width when the viewport is resized, i.e. the trigger width could potentially be resized\n    this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      if (this.matSelect.panelOpen) {\n        this.updateInputWidth();\n      }\n    });\n    this.initMultipleHandling();\n    this.optionsList$.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      // update view when available options change\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n  _emitSelectAllBooleanToParent(state) {\n    this.toggleAll.emit(state);\n  }\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n  _isToggleAllCheckboxVisible() {\n    return this.matSelect.multiple && this.showToggleAllCheckbox;\n  }\n  /**\n   * Handles the key down event with MatSelect.\n   * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\n   * @param event\n   */\n  _handleKeydown(event) {\n    // Prevent propagation for all alphanumeric characters in order to avoid selection issues\n    // Needed to avoid handling in https://github.com/angular/components/blob/5439460d1fe166f8ec34ab7d48f05e0dd7f6a946/src/material/select/select.ts#L965\n    if (event.key && event.key.length === 1 || this.preventHomeEndKeyPropagation && (event.key === 'Home' || event.key === 'End')) {\n      event.stopPropagation();\n    }\n    if (this.matSelect.multiple && event.key && event.key === 'Enter') {\n      // Regain focus after multiselect, so we can further type\n      setTimeout(() => this._focus());\n    }\n    // Special case if click Escape, if input is empty, close the dropdown, if not, empty out the search field\n    if (this.enableClearOnEscapePressed && event.key === 'Escape' && this.value) {\n      this._reset(true);\n      event.stopPropagation();\n    }\n  }\n  /**\n   * Handles the key up event with MatSelect.\n   * Allows e.g. the announcing of the currently activeDescendant by screen readers.\n   */\n  _handleKeyup(event) {\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      const ariaActiveDescendantId = this.matSelect._getAriaActiveDescendant();\n      const index = this._options.toArray().findIndex(item => item.id === ariaActiveDescendantId);\n      if (index !== -1) {\n        this.unselectActiveDescendant();\n        this.activeDescendant = this._options.toArray()[index]._getHostElement();\n        this.activeDescendant.setAttribute('aria-selected', 'true');\n        this.searchSelectInput.nativeElement.setAttribute('aria-activedescendant', ariaActiveDescendantId);\n      }\n    }\n  }\n  writeValue(value) {\n    this._lastExternalInputValue = value;\n    this._formControl.setValue(value);\n    this.changeDetectorRef.markForCheck();\n  }\n  onBlur() {\n    this.unselectActiveDescendant();\n    this.onTouched();\n  }\n  registerOnChange(fn) {\n    this._formControl.valueChanges.pipe(filter(value => value !== this._lastExternalInputValue), tap(() => this._lastExternalInputValue = undefined), takeUntil(this._onDestroy)).subscribe(fn);\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Focuses the search input field\n   */\n  _focus() {\n    if (!this.searchSelectInput || !this.matSelect.panel) {\n      return;\n    }\n    // save and restore scrollTop of panel, since it will be reset by focus()\n    // note: this is hacky\n    const panel = this.matSelect.panel.nativeElement;\n    const scrollTop = panel.scrollTop;\n    // focus\n    this.searchSelectInput.nativeElement.focus();\n    panel.scrollTop = scrollTop;\n  }\n  /**\n   * Resets the current search value\n   * @param focus whether to focus after resetting\n   */\n  _reset(focus) {\n    this._formControl.setValue('');\n    if (focus) {\n      this._focus();\n    }\n  }\n  /**\n   * Initializes handling <mat-select [multiple]=\"true\">\n   * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\n   */\n  initMultipleHandling() {\n    if (!this.matSelect.ngControl) {\n      if (this.matSelect.multiple) {\n        // note: the access to matSelect.ngControl (instead of matSelect.value / matSelect.valueChanges)\n        // is necessary to properly work in multi-selection mode.\n        console.error('the mat-select containing ngx-mat-select-search must have a ngModel or formControl directive when multiple=true');\n      }\n      return;\n    }\n    // if <mat-select [multiple]=\"true\">\n    // store previously selected values and restore them when they are deselected\n    // because the option is not available while we are currently filtering\n    this.previousSelectedValues = this.matSelect.ngControl.value;\n    if (!this.matSelect.ngControl.valueChanges) {\n      return;\n    }\n    this.matSelect.ngControl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(values => {\n      let restoreSelectedValues = false;\n      if (this.matSelect.multiple) {\n        if ((this.alwaysRestoreSelectedOptionsMulti || this._formControl.value && this._formControl.value.length) && this.previousSelectedValues && Array.isArray(this.previousSelectedValues)) {\n          if (!values || !Array.isArray(values)) {\n            values = [];\n          }\n          const optionValues = this.matSelect.options.map(option => option.value);\n          this.previousSelectedValues.forEach(previousValue => {\n            if (!values.some(v => this.matSelect.compareWith(v, previousValue)) && !optionValues.some(v => this.matSelect.compareWith(v, previousValue))) {\n              // if a value that was selected before is deselected and not found in the options, it was deselected\n              // due to the filtering, so we restore it.\n              if (this.recreateValuesArray) {\n                values = [...values, previousValue];\n              } else {\n                values.push(previousValue);\n              }\n              restoreSelectedValues = true;\n            }\n          });\n        }\n      }\n      this.previousSelectedValues = values;\n      if (restoreSelectedValues) {\n        this.matSelect._onChange(values);\n      }\n    });\n  }\n  /**\n   *  Set the width of the innerSelectSearch to fit even custom scrollbars\n   *  And support all Operating Systems\n   */\n  updateInputWidth() {\n    if (!this.innerSelectSearch || !this.innerSelectSearch.nativeElement) {\n      return;\n    }\n    let element = this.innerSelectSearch.nativeElement;\n    let panelElement = null;\n    while (element && element.parentElement) {\n      element = element.parentElement;\n      if (element.classList.contains('mat-select-panel')) {\n        panelElement = element;\n        break;\n      }\n    }\n    if (panelElement) {\n      this.innerSelectSearch.nativeElement.style.width = panelElement.clientWidth + 'px';\n    }\n  }\n  /**\n   * Determine the offset to length that can be caused by the optional matOption used as a search input.\n   */\n  getOptionsLengthOffset() {\n    if (this.matOption) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n  unselectActiveDescendant() {\n    this.activeDescendant?.removeAttribute('aria-selected');\n    this.searchSelectInput.nativeElement.removeAttribute('aria-activedescendant');\n  }\n  static ɵfac = function MatSelectSearchComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectSearchComponent)(i0.ɵɵdirectiveInject(MatSelect), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(MatOption, 8), i0.ɵɵdirectiveInject(MatFormField, 8), i0.ɵɵdirectiveInject(MAT_SELECTSEARCH_DEFAULT_OPTIONS, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSelectSearchComponent,\n    selectors: [[\"ngx-mat-select-search\"]],\n    contentQueries: function MatSelectSearchComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatSelectSearchClearDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatSelectNoEntriesFoundDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clearIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.noEntriesFound = _t.first);\n      }\n    },\n    viewQuery: function MatSelectSearchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ElementRef);\n        i0.ɵɵviewQuery(_c1, 7, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchSelectInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.innerSelectSearch = _t.first);\n      }\n    },\n    inputs: {\n      placeholderLabel: \"placeholderLabel\",\n      type: \"type\",\n      closeIcon: \"closeIcon\",\n      closeSvgIcon: \"closeSvgIcon\",\n      noEntriesFoundLabel: \"noEntriesFoundLabel\",\n      clearSearchInput: \"clearSearchInput\",\n      searching: \"searching\",\n      disableInitialFocus: \"disableInitialFocus\",\n      enableClearOnEscapePressed: \"enableClearOnEscapePressed\",\n      preventHomeEndKeyPropagation: \"preventHomeEndKeyPropagation\",\n      disableScrollToActiveOnOptionsChanged: \"disableScrollToActiveOnOptionsChanged\",\n      ariaLabel: \"ariaLabel\",\n      showToggleAllCheckbox: \"showToggleAllCheckbox\",\n      toggleAllCheckboxChecked: \"toggleAllCheckboxChecked\",\n      toggleAllCheckboxIndeterminate: \"toggleAllCheckboxIndeterminate\",\n      toggleAllCheckboxTooltipMessage: \"toggleAllCheckboxTooltipMessage\",\n      toggleAllCheckboxTooltipPosition: \"toggleAllCheckboxTooltipPosition\",\n      hideClearSearchButton: \"hideClearSearchButton\",\n      alwaysRestoreSelectedOptionsMulti: \"alwaysRestoreSelectedOptionsMulti\",\n      recreateValuesArray: \"recreateValuesArray\"\n    },\n    outputs: {\n      toggleAll: \"toggleAll\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MatSelectSearchComponent),\n      multi: true\n    }])],\n    ngContentSelectors: _c3,\n    decls: 13,\n    vars: 14,\n    consts: [[\"innerSelectSearch\", \"\"], [\"searchSelectInput\", \"\"], [\"matInput\", \"\", 1, \"mat-select-search-input\", \"mat-select-search-hidden\"], [1, \"mat-select-search-inner\", \"mat-typography\", \"mat-datepicker-content\", \"mat-tab-header\"], [1, \"mat-select-search-inner-row\"], [\"matTooltipClass\", \"ngx-mat-select-search-toggle-all-tooltip\", 1, \"mat-select-search-toggle-all-checkbox\", 3, \"color\", \"checked\", \"indeterminate\", \"matTooltip\", \"matTooltipPosition\"], [\"autocomplete\", \"off\", 1, \"mat-select-search-input\", 3, \"keydown\", \"keyup\", \"blur\", \"type\", \"formControl\", \"placeholder\"], [\"diameter\", \"16\", 1, \"mat-select-search-spinner\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 1, \"mat-select-search-clear\"], [1, \"mat-select-search-no-entries-found\"], [\"matTooltipClass\", \"ngx-mat-select-search-toggle-all-tooltip\", 1, \"mat-select-search-toggle-all-checkbox\", 3, \"change\", \"color\", \"checked\", \"indeterminate\", \"matTooltip\", \"matTooltipPosition\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 1, \"mat-select-search-clear\", 3, \"click\"], [3, \"svgIcon\"]],\n    template: function MatSelectSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵelement(0, \"input\", 2);\n        i0.ɵɵelementStart(1, \"div\", 3, 0)(3, \"div\", 4);\n        i0.ɵɵconditionalCreate(4, MatSelectSearchComponent_Conditional_4_Template, 1, 5, \"mat-checkbox\", 5);\n        i0.ɵɵelementStart(5, \"input\", 6, 1);\n        i0.ɵɵlistener(\"keydown\", function MatSelectSearchComponent_Template_input_keydown_5_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handleKeydown($event));\n        })(\"keyup\", function MatSelectSearchComponent_Template_input_keyup_5_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handleKeyup($event));\n        })(\"blur\", function MatSelectSearchComponent_Template_input_blur_5_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onBlur());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵconditionalCreate(7, MatSelectSearchComponent_Conditional_7_Template, 1, 0, \"mat-spinner\", 7);\n        i0.ɵɵconditionalCreate(8, MatSelectSearchComponent_Conditional_8_Template, 4, 1, \"button\", 8);\n        i0.ɵɵprojection(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"mat-divider\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵconditionalCreate(11, MatSelectSearchComponent_Conditional_11_Template, 3, 1, \"div\", 9);\n        i0.ɵɵpipe(12, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"mat-select-search-inner-multiple\", ctx.matSelect.multiple)(\"mat-select-search-inner-toggle-all\", ctx._isToggleAllCheckboxVisible());\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(ctx._isToggleAllCheckboxVisible() ? 4 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"type\", ctx.type)(\"formControl\", ctx._formControl)(\"placeholder\", ctx.placeholderLabel);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.searching ? 7 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(!ctx.hideClearSearchButton && ctx.value && !ctx.searching ? 8 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(i0.ɵɵpipeBind1(12, 12, ctx._showNoEntriesFound$) ? 11 : -1);\n      }\n    },\n    dependencies: [AsyncPipe, ReactiveFormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, MatCheckbox, MatDivider, MatTooltip, MatProgressSpinner, MatIcon, MatButtonModule, i3.MatIconButton],\n    styles: [\".mat-select-search-hidden[_ngcontent-%COMP%]{visibility:hidden}.mat-select-search-inner[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;z-index:100;font-size:inherit;box-shadow:none;background-color:var(--mat-sys-surface-container, var(--mat-select-panel-background-color, white))}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all[_ngcontent-%COMP%]   .mat-select-search-inner-row[_ngcontent-%COMP%]{display:flex;align-items:center}.mat-select-search-input[_ngcontent-%COMP%]{box-sizing:border-box;width:100%;border:none;font-family:inherit;font-size:inherit;color:currentColor;outline:none;background-color:var(--mat-sys-surface-container, var(--mat-select-panel-background-color, white));padding:0 44px 0 16px;height:47px;line-height:47px}[dir=rtl][_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-right:16px;padding-left:44px}.mat-select-search-input[_ngcontent-%COMP%]::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}.mat-select-search-inner-toggle-all[_ngcontent-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-left:5px}.mat-select-search-no-entries-found[_ngcontent-%COMP%]{padding-top:8px}.mat-select-search-clear[_ngcontent-%COMP%]{position:absolute;right:4px;top:0}[dir=rtl][_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%]{right:auto;left:4px}.mat-select-search-spinner[_ngcontent-%COMP%]{position:absolute;right:16px;top:calc(50% - 8px)}[dir=rtl][_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%]{right:auto;left:16px}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search{position:sticky;top:-8px;z-index:1;opacity:1;margin-top:-8px;pointer-events:all}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search mat-pseudo-checkbox{display:none}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mdc-list-item__primary-text{opacity:1}.mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:5px}[dir=rtl][_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:0;padding-right:5px}\"],\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectSearchComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-mat-select-search',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => MatSelectSearchComponent),\n        multi: true\n      }],\n      imports: [AsyncPipe, ReactiveFormsModule, MatCheckbox, MatDivider, MatTooltip, MatProgressSpinner, MatIcon, MatButtonModule],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<!--\\nCopyright (c) 2018 Bithost GmbH All Rights Reserved.\\n\\nUse of this source code is governed by an MIT-style license that can be\\nfound in the LICENSE file at https://angular.io/license\\n-->\\n<!-- Placeholder to adjust vertical offset of the mat-option elements -->\\n<input matInput class=\\\"mat-select-search-input mat-select-search-hidden\\\"/>\\n\\n<!-- Note: the  mat-datepicker-content mat-tab-header are needed to inherit the material theme colors, see PR #22 -->\\n<div\\n      #innerSelectSearch\\n      class=\\\"mat-select-search-inner mat-typography mat-datepicker-content mat-tab-header\\\"\\n      [class.mat-select-search-inner-multiple]=\\\"matSelect.multiple\\\"\\n      [class.mat-select-search-inner-toggle-all]=\\\"_isToggleAllCheckboxVisible()\\\">\\n\\n  <div class=\\\"mat-select-search-inner-row\\\">\\n    @if(_isToggleAllCheckboxVisible())\\n    {\\n      <mat-checkbox [color]=\\\"matFormField?.color\\\"\\n                    class=\\\"mat-select-search-toggle-all-checkbox\\\"\\n                    [checked]=\\\"toggleAllCheckboxChecked\\\"\\n                    [indeterminate]=\\\"toggleAllCheckboxIndeterminate\\\"\\n                    [matTooltip]=\\\"toggleAllCheckboxTooltipMessage\\\"\\n                    matTooltipClass=\\\"ngx-mat-select-search-toggle-all-tooltip\\\"\\n                    [matTooltipPosition]=\\\"toggleAllCheckboxTooltipPosition\\\"\\n                    (change)=\\\"_emitSelectAllBooleanToParent($event.checked)\\\" />\\n    }\\n\\n    <input class=\\\"mat-select-search-input\\\"\\n           autocomplete=\\\"off\\\"\\n           [type]=\\\"type\\\"\\n           [formControl]=\\\"_formControl\\\"\\n           #searchSelectInput\\n           (keydown)=\\\"_handleKeydown($event)\\\"\\n           (keyup)=\\\"_handleKeyup($event)\\\"\\n           (blur)=\\\"onBlur()\\\"\\n           [placeholder]=\\\"placeholderLabel\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n    />\\n    @if(searching)\\n    {\\n      <mat-spinner class=\\\"mat-select-search-spinner\\\"\\n                   diameter=\\\"16\\\" />\\n    }\\n\\n    @if(!hideClearSearchButton && value && !searching)\\n    {\\n      <button mat-icon-button\\n              aria-label=\\\"Clear\\\"\\n              (click)=\\\"_reset(true)\\\"\\n              class=\\\"mat-select-search-clear\\\">\\n        @if(clearIcon)\\n        {\\n          <ng-content select=\\\"[ngxMatSelectSearchClear]\\\" />\\n        }\\n        @else if(closeSvgIcon)\\n        {\\n          <mat-icon [svgIcon]=\\\"closeSvgIcon\\\" />\\n        }\\n        @else\\n        {\\n          <mat-icon>\\n            {{closeIcon}}\\n          </mat-icon>\\n        }\\n      </button>\\n    }\\n\\n\\n    <ng-content select=\\\".mat-select-search-custom-header-content\\\" />\\n  </div>\\n\\n  <mat-divider />\\n</div>\\n\\n@if(_showNoEntriesFound$ | async)\\n{\\n  <div class=\\\"mat-select-search-no-entries-found\\\">\\n    @if(noEntriesFound)\\n    {\\n      <ng-content select=\\\"[ngxMatSelectNoEntriesFound]\\\" />\\n    }\\n    @else\\n    {\\n      {{noEntriesFoundLabel}}\\n    }\\n  </div>\\n}\\n\\n\",\n      styles: [\".mat-select-search-hidden{visibility:hidden}.mat-select-search-inner{position:absolute;top:0;left:0;width:100%;z-index:100;font-size:inherit;box-shadow:none;background-color:var(--mat-sys-surface-container, var(--mat-select-panel-background-color, white))}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all .mat-select-search-inner-row{display:flex;align-items:center}.mat-select-search-input{box-sizing:border-box;width:100%;border:none;font-family:inherit;font-size:inherit;color:currentColor;outline:none;background-color:var(--mat-sys-surface-container, var(--mat-select-panel-background-color, white));padding:0 44px 0 16px;height:47px;line-height:47px}:host-context([dir=rtl]) .mat-select-search-input{padding-right:16px;padding-left:44px}.mat-select-search-input::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}.mat-select-search-inner-toggle-all .mat-select-search-input{padding-left:5px}.mat-select-search-no-entries-found{padding-top:8px}.mat-select-search-clear{position:absolute;right:4px;top:0}:host-context([dir=rtl]) .mat-select-search-clear{right:auto;left:4px}.mat-select-search-spinner{position:absolute;right:16px;top:calc(50% - 8px)}:host-context([dir=rtl]) .mat-select-search-spinner{right:auto;left:16px}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search{position:sticky;top:-8px;z-index:1;opacity:1;margin-top:-8px;pointer-events:all}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search mat-pseudo-checkbox{display:none}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mdc-list-item__primary-text{opacity:1}.mat-select-search-toggle-all-checkbox{padding-left:5px}:host-context([dir=rtl]) .mat-select-search-toggle-all-checkbox{padding-left:0;padding-right:5px}\\n\"]\n    }]\n  }], () => [{\n    type: i4.MatSelect,\n    decorators: [{\n      type: Inject,\n      args: [MatSelect]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: i5.MatOption,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MatOption]\n    }]\n  }, {\n    type: i6.MatFormField,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MatFormField]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_SELECTSEARCH_DEFAULT_OPTIONS]\n    }]\n  }], {\n    placeholderLabel: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    closeIcon: [{\n      type: Input\n    }],\n    closeSvgIcon: [{\n      type: Input\n    }],\n    noEntriesFoundLabel: [{\n      type: Input\n    }],\n    clearSearchInput: [{\n      type: Input\n    }],\n    searching: [{\n      type: Input\n    }],\n    disableInitialFocus: [{\n      type: Input\n    }],\n    enableClearOnEscapePressed: [{\n      type: Input\n    }],\n    preventHomeEndKeyPropagation: [{\n      type: Input\n    }],\n    disableScrollToActiveOnOptionsChanged: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    showToggleAllCheckbox: [{\n      type: Input\n    }],\n    toggleAllCheckboxChecked: [{\n      type: Input\n    }],\n    toggleAllCheckboxIndeterminate: [{\n      type: Input\n    }],\n    toggleAllCheckboxTooltipMessage: [{\n      type: Input\n    }],\n    toggleAllCheckboxTooltipPosition: [{\n      type: Input\n    }],\n    hideClearSearchButton: [{\n      type: Input\n    }],\n    alwaysRestoreSelectedOptionsMulti: [{\n      type: Input\n    }],\n    recreateValuesArray: [{\n      type: Input\n    }],\n    toggleAll: [{\n      type: Output\n    }],\n    searchSelectInput: [{\n      type: ViewChild,\n      args: ['searchSelectInput', {\n        read: ElementRef,\n        static: true\n      }]\n    }],\n    innerSelectSearch: [{\n      type: ViewChild,\n      args: ['innerSelectSearch', {\n        read: ElementRef,\n        static: true\n      }]\n    }],\n    clearIcon: [{\n      type: ContentChild,\n      args: [MatSelectSearchClearDirective]\n    }],\n    noEntriesFound: [{\n      type: ContentChild,\n      args: [MatSelectNoEntriesFoundDirective]\n    }]\n  });\n})();\n\n/**\n * Copyright (c) 2018 Bithost GmbH All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MatSelectSearchVersion = '8.0.2';\nclass NgxMatSelectSearchModule {\n  static ɵfac = function NgxMatSelectSearchModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgxMatSelectSearchModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxMatSelectSearchModule,\n    imports: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective],\n    exports: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatSelectSearchComponent]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMatSelectSearchModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective],\n      exports: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTSEARCH_DEFAULT_OPTIONS, MatSelectNoEntriesFoundDirective, MatSelectSearchClearDirective, MatSelectSearchComponent, MatSelectSearchVersion, NgxMatSelectSearchModule, configurableDefaultOptions };\n","import { Injectable, inject } from '@angular/core';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { RequestService } from './request.service';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsListService {\r\n  private request = inject(RequestService);\r\n  private lang = inject(SelectedLangService);\r\n\r\n\r\n  langService: string = \"%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\" + this.lang.selectedLang + \"%22%2C%22en%22.%20%7D%0A\";\r\n\r\n  projectsListBuilding(id) {\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20WHERE%20%7B\";\r\n    let suffix = \"%3Fitem%20wdt%3AP2%20wd%3A\";\r\n    let suffix2 = \".%7D%0A\";\r\n    let u = this.newSparqlAddress(prefix + this.langService + suffix + id + suffix2);\r\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\r\n  }\r\n\r\n  listFromSparql(res) {\r\n    if (res !== undefined) {\r\n      if (res.results !== undefined) {\r\n        let v = res.results.bindings;\r\n        for (let i = 0; i < v.length; i++) {\r\n          v[i][\"item\"].id = v[i][\"item\"].value.replace(\r\n            \"https://database.factgrid.de/entity/\", \"\");\r\n        };\r\n   \r\n      v.sort((a, b) => {\r\n          if(a.itemLabel.value.toUpperCase()<b.itemLabel.value.toUpperCase()) { return -1; }\r\n           if(b.itemLabel.value.toUpperCase()>b.itemLabel.value.toUpperCase()) { return 1; }\r\n          return 0;\r\n        });\r\n  \r\n      }\r\n    }\r\n    return res.results.bindings\r\n  }\r\n\r\n  newSparqlAddress(address: string): string {\r\n    const newPrefix = \"https://database.factgrid.de/sparql?query=\";\r\n    let oldPrefix = \"https://database.factgrid.de/query/#\";\r\n    if (address.includes('embed.html')) { oldPrefix = \"https://database.factgrid.de/query/embed.html#\" };\r\n    if (address !== undefined) address = address.replace(oldPrefix, newPrefix);\r\n    return address\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { RequestService } from './request.service';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PropertiesListService {\r\n  private request = inject(RequestService);\r\n  private lang = inject(SelectedLangService);\r\n\r\n\r\n  langService: string = \"%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\" + this.lang.selectedLang + \"%22%2C%22en%22.%20%7D%0A\";\r\n\r\n\r\n  propertiesListBuilding(id) {\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FpropertyType%20WHERE%20%7B\";\r\n    let prefix2 = \"VALUES%20%3Fproperties%20%7B%20wd%3A\";\r\n    let suffix = \"%20wd%3AQ1089730%7D%20%3Fitem%20wdt%3AP8%20%3Fproperties%3B%20wikibase%3ApropertyType%20%3FpropertyType%20MINUS%20%7B%20%3Fproperty%20wikibase%3ApropertyType%20wikibase%3AUrl%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3AExternalId%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3AUrl%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3AGlobeCoordinate%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3AGeoShape%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3ACommonsMedia%20%7D%20%7D%20ORDER%20BY%20%3FitemLabel%0A\";\r\n    let address = prefix + this.langService + prefix2 + id + suffix;\r\n    console.log(address);\r\n    let u = this.newSparqlAddress(address);\r\n    console.log(u);\r\n    return this.request.getList(u).pipe(map(res => this.transformListFromSparql(res)));\r\n  }\r\n\r\n  propertiesList2Building(id) {\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20WHERE%20%7B\";\r\n    let suffix = \"%3Fitem%20wdt%3AP2%20wd%3A\";\r\n    let suffix2 = \".%7D%0A\";\r\n    console.log(prefix + this.langService + suffix + id + suffix2);\r\n    let u = this.newSparqlAddress(prefix + this.langService + suffix + id + suffix2);\r\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\r\n  }\r\n\r\n  get qualifierPropertiesListBuilding() {\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FpropertyType%20%20WHERE%20%7B%20\"\r\n    let suffix = \"%20VALUES%20%3Fqualifier%20%7B%20wd%3AQ514317%20wd%3AQ21403%20%7D%0A%20%3Fitem%20wikibase%3ApropertyType%20%3FpropertyType%3B%0A%20%20%20%20%20%20%20%20%20%20%20wdt%3AP8%20%3Fqualifier.%0A%7D%0AORDER%20BY%20%3FitemLabel\";\r\n    let v: any[];\r\n    let u = this.newSparqlAddress(prefix + this.langService + suffix);\r\n    //  this.request.getList(u).pipe(map(res => this.listFromSparql(res)), map(res => this.changeList(res))).subscribe(res => console.log(res));\r\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)), map(res => this.transformListFromSparql(res)));\r\n  }\r\n\r\n \r\n\r\n  listFromSparql(res) {\r\n    if (res !== undefined) {\r\n      if (res.results !== undefined) {\r\n        let v = res.results.bindings;\r\n        for (let i = 0; i < v.length; i++) {\r\n          v[i][\"item\"].id = v[i][\"item\"].value.replace(\r\n            \"https://database.factgrid.de/entity/\", \"\");\r\n        };\r\n\r\n        v.sort((a, b) => {\r\n          if (a.itemLabel.value.toUpperCase() < b.itemLabel.value.toUpperCase()) { return -1; }\r\n          if (b.itemLabel.value.toUpperCase() > b.itemLabel.value.toUpperCase()) { return 1; }\r\n          return 0;\r\n        });\r\n\r\n      }\r\n    }\r\n    return res.results.bindings\r\n  }\r\n\r\n  newSparqlAddress(address: string): string {\r\n    const newPrefix = \"https://database.factgrid.de/sparql?query=\";\r\n    let oldPrefix = \"https://database.factgrid.de/query/#\";\r\n    if (address.includes('embed.html')) { oldPrefix = \"https://database.factgrid.de/query/embed.html#\" };\r\n    if (address !== undefined) address = address.replace(oldPrefix, newPrefix);\r\n    return address\r\n  }\r\n\r\n  deepNatureOf() {\r\n    let u = \"Instance of (deep search)\"\r\n    if (this.lang.selectedLang === \"de\") { u = \"Ist ein(e) (vertiefte Suche)\" };\r\n    if (this.lang.selectedLang === \"fr\") { u = \"Nature de l'élément (recherche approfondie)\" };\r\n    if (this.lang.selectedLang === \"es\") { u = \"Instancia de (investigación en profundidad)\" };\r\n    if (this.lang.selectedLang === \"it\") { u = \"È (ricerca approfondita)\" };\r\n    return u\r\n  }\r\n\r\n  changeList(data) {\r\n    if (data !== undefined) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        let type = this.removeSubstring(data[i][\"propertyType\"].value, \"http://wikiba.se/ontology#\");\r\n        data[i][\"itemLabel\"].label = data[i][\"itemLabel\"].value + \" (\" + type + \")\"\r\n      };\r\n    }\r\n    return data\r\n  }\r\n\r\n  transformListFromSparql(res) {\r\n    if (res !== undefined && res.results !== undefined) {\r\n      let v = res.results.bindings;\r\n      return v.map(item => {\r\n        const value = item.itemLabel.value;\r\n        const type = item.propertyType.value.replace(\"http://wikiba.se/ontology#\", \"\");\r\n        return {\r\n          value: value,\r\n          id: item.item.value.replace(\"https://database.factgrid.de/entity/\", \"\"),\r\n          type: type,\r\n          label: `${value} (${type})` // Ajouter la propriété label\r\n        };\r\n      }).sort((a, b) => {\r\n        if (a.value.toUpperCase() < b.value.toUpperCase()) { return -1; }\r\n        if (a.value.toUpperCase() > b.value.toUpperCase()) { return 1; }\r\n        return 0;\r\n      });\r\n    }\r\n    return [];\r\n  }\r\n\r\n\r\n removeSubstring(str, substring) {\r\n  const regex = new RegExp(substring, 'g');\r\n  return str.replace(regex, '');\r\n}\r\n}\r\n\r\n","import { Component, OnInit, Input, Output, OnDestroy, AfterViewInit, ViewChild, EventEmitter, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormControl, ReactiveFormsModule, FormsModule, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { Subject, ReplaySubject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SetLanguageService } from '../../../services/set-language.service';\r\nimport { SelectedLangService } from '../../../selected-lang.service';\r\n\r\n@Component({\r\n\r\n  selector: 'app-project-select',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatSelect,\r\n    NgxMatSelectSearchModule,\r\n  ],\r\n  templateUrl: './project-select.component.html',\r\n  styleUrl: './project-select.component.scss',\r\n})\r\n\r\nexport class ProjectSelectComponent implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private setLanguage = inject(SetLanguageService);\r\n  private lang = inject(SelectedLangService);\r\n  private formBuilder = inject(FormBuilder);\r\n\r\n\r\n  @Input() placeholderLabel = 'Search';\r\n\r\n  @Input() set data(data: any[]) {\r\n    this._data = data;\r\n    // load the initial project list\r\n    this.filteredProjectMulti.next(this.data.slice());\r\n  }\r\n  get data(): any[] {\r\n    return this._data;\r\n  }\r\n\r\n  private _data: any[];\r\n\r\n  public projectSearchInput = new FormControl();\r\n\r\n  /** control for the MatSelect filter keyword multi-selection */\r\n  public projectMultiFilterCtrl: FormControl<string> = new FormControl<string>('');\r\n\r\n  /** list of projects filtered by search keyword */\r\n  public filteredProjectMulti: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n\r\n\r\n  @ViewChild('multiSelect', { static: true }) multiSelect: MatSelect;\r\n\r\n  @Output() selectionChange: EventEmitter<MatSelectChange> = new EventEmitter<MatSelectChange>();\r\n\r\n  protected _onDestroy = new Subject<void>();\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.projectMultiFilterCtrl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterProjectMulti();\r\n      });\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setInitialValue();\r\n  }\r\n\r\n  protected setInitialValue() {\r\n    this.filteredProjectMulti;\r\n  }\r\n\r\n  onSelectChange($event): void {\r\n  }\r\n  \r\n  protected filterProjectMulti() {\r\n    if (!this.data) {\r\n      return;\r\n    }\r\n    // get the search keyword\r\n    let search = this.projectMultiFilterCtrl.value;\r\n    if (!search) {\r\n      this.filteredProjectMulti.next(this.data.slice());\r\n      return;\r\n    } else {\r\n      search = search.toLowerCase();\r\n    }\r\n    // filter the projects\r\n    this.filteredProjectMulti.next(\r\n      this.data.filter(entity => entity.itemLabel.value.toLowerCase().indexOf(search) > -1)\r\n    );\r\n  }\r\n\r\n  onSelection(event: MatSelectChange) {\r\n    this.selectionChange.emit(new MatSelectChange(this.multiSelect, event.value));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n   \r\n  }\r\n}\r\n","\r\n<div class=\"cardBackground\">\r\n  <div class=\"search-center2\" id=\"projects\">\r\n    <mat-form-field>\r\n      <mat-select [formControl]=\"projectSearchInput\"\r\n                  placeholder=\"Projects\"\r\n                  [multiple]=\"true\"\r\n                  #multiSelect\r\n                  (selectionChange)=\"onSelection($event)\">\r\n        <mat-option>\r\n          <ngx-mat-select-search [formControl]=\"projectMultiFilterCtrl\"\r\n                                 placeholderLabel=\"Search\"\r\n                                 noEntriesFoundLabel=\"Not found\"></ngx-mat-select-search>\r\n        </mat-option>\r\n        <mat-option *ngFor=\"let project of filteredProjectMulti | async\" [value]=\"project.item.id\">\r\n          {{project.itemLabel.value}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map, switchMap, tap, debounceTime, takeWhile, filter } from 'rxjs/operators';\r\nimport { RequestService } from '../services/request.service';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchEngineService {\r\n  private request = inject(RequestService);\r\n  private lang = inject(SelectedLangService);\r\n\r\n\r\n \r\n\r\n  private baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\r\n  private getUrlSuffix = '&format=json&origin=*';\r\n\r\n  input(de:Observable<any>) {   //search engine\r\n   de.pipe(\r\n    debounceTime(400),\r\n    switchMap(label => this.request.searchItem(label, this.lang.selectedLang)),\r\n    map(res => this.createList(res)),\r\n    map(res => res == \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin=*\" ?\r\n      \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=Q220375&format=json&origin=*\" : res),\r\n    debounceTime(200),\r\n    switchMap(url => this.request.getItem(url)),\r\n    // tap(res => console.log(res)),\r\n    //  takeWhile (res => res !== undefined),\r\n    filter(res => res !== undefined),\r\n  )\r\n  }\r\n\r\n\r\n  createList(re) {  //create an url whith the elements of an array\r\n    let list = \"\";\r\n    let url = \"\";\r\n    let arr = re.search;\r\n    if (arr === undefined) { arr = [] }\r\n    else { arr = arr };\r\n    for (let i = 0; i < arr.length; i++) {\r\n      list = list + \"|\" + arr[i].id;\r\n    };\r\n    list = list.slice(1);\r\n    url = this.baseGetURL + list + this.getUrlSuffix;\r\n    return url\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport interface Data {\r\n  statement: number;\r\n  types?: Statement;\r\n  values?: Statement;\r\n}\r\n\r\nexport interface Statement {\r\n  options: Variable[];\r\n  selections?: Variable[];\r\n}\r\n\r\nexport interface Variable {\r\n  label: string;\r\n  id?: string;\r\n  type?: string;\r\n  order?: number;\r\n  col?: number;\r\n  originalLabel?: string;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport interface Selection {\r\n  variable: number[];\r\n  label: string;\r\n  id: string;\r\n}\r\n\r\n\r\n\r\n\r\nexport const ITEMTYPES: Variable[] = [\r\n  { label: '?activity', id: 'Q256699', order:0 },\r\n  { label: '?archive', id: 'Q21870', order: 0 },\r\n  { label: '?artefact', id: 'Q101755', order: 0 },\r\n  { label: '?book', id: 'Q100626', order: 0 },\r\n  { label: '?career', id: 'Q77493', order: 0 },\r\n  { label: '?city', id: 'Q77500', order: 0 },\r\n  { label: '?context', id: 'Q77500', order: 0 },\r\n  { label: '?country', id: 'Q77500', order: 0 },\r\n  { label: '?date', id: \"Q77483\", order: 0 },\r\n  { label: '?document', id: 'Q21870', order: 0 },\r\n  { label: '?education', id: 'Q100631', order: 0 },\r\n  { label: '?event', id: 'Q77499', order: 0 },\r\n  { label: '?freemasonry', id: 'Q23197', order: 0 },\r\n  { label: '?group', id: 'Q77498', order: 0 },\r\n  { label: '?human', id: 'Q77478', order: 0 },\r\n  { label: '?human work', id: 'Q77495', order: 0 },\r\n  { label: '?name', id: 'Q77488', order: 0 },\r\n  { label: '?object', id: 'Q101755', order: 0 },\r\n  { label: '?organisation', id: 'Q77501', order: 0 },\r\n  { label: '?person', id: 'Q77478',  order: 0 },\r\n  { label: '?people', id: 'Q77478',  order: 0 },\r\n{ label: '?place', id: 'Q77500', order: 0 },\r\n{ label: '?printed document', id: 'Q100626', order: 0 },\r\n{ label: '?profession', id: 'Q256699', order: 0 },\r\n  { label: '?publication', id: 'Q77502', order: 0 },\r\n];\r\n\r\n\r\n\r\n\r\nexport const LITERALS: Variable[] = [\r\n  { label: \"write literal string\", type: \"String\", col: 0 },\r\n  { label: \"write date : YYYY-MM-DD\", type: \"Time\", col: 0 },\r\n  { label: \"write number\", type:\"Quantity\", col:0 },\r\n  { label: \"None\", type: \"Any\", col: 2 },\r\n  { label: \"None\", type: \"Any\", col: 3 },\r\n  { label: \"None\", type: \"Any\", col: 4 },\r\n  { label: '?date', type: \"Time\", col: 0 },\r\n  { label: '?date1', type: \"Time\", col: 1 },\r\n  { label: '?date2', type: \"Time\", col: 2 },\r\n  { label: '?date3', type: \"Time\", col: 3 },\r\n  { label: '?date4', type: \"Time\", col: 4 },\r\n  { label: '?date5', type: \"Time\", col: 5 },\r\n  { label: '?string', type: \"String\", col: 0 },\r\n  { label: '?string1', type: \"String\", col: 1 },\r\n  { label: '?string2', type: \"String\", col: 2 },\r\n  { label: '?string3', type: \"String\", col: 3 },\r\n  { label: '?string4', type: \"String\", col: 4 },\r\n  /*{ label: '?context', type: 'String', col: 0 },\r\n  { label: '?context1', type: 'String', col: 1 },\r\n  { label: '?context2', type: 'String', col: 2 },\r\n  { label: '?context3', type: 'String', col: 3 },\r\n  { label: '?context4', type: 'String', col: 4 },*/\r\n  { label: '?amount', type: \"Quantity\", col: 0 },\r\n  { label: '?amount1', type: \"Quantity\", col: 1 },\r\n  { label: '?amount2', type: \"Quantity\", col: 2 },\r\n  { label: '?amount3', type: \"Quantity\", col: 3 },\r\n  { label: '?number', type: \"Quantity\", col: 0 },\r\n  { label: '?number1', type: \"Quantity\", col: 1 },\r\n  { label: '?number2', type: \"Quantity\", col: 2 },\r\n  { label: '?number3', type: \"Quantity\", col: 3 }\r\n]\r\n\r\nexport const QUALIFIERTYPES: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23]; // list of columns for the qualifier types\r\n\r\nexport const MUTATOR: Variable[][] = [\r\n  [{ label: '?activity', id: 'Q256699', col: 0 }, { label: '?archive', id: 'Q21870', col: 1 }, { label: '?artefact', id: 'Q101755', col: 2 }, { label: '?book', id: 'Q100626', col: 3 }, { label: '?career', id: 'Q77493', col: 4 }, { label: '?city', id: 'Q77500', col: 5 }, { label: '?country', id: 'Q77500', col: 6 }, { label: '?date', id: \"Q77483\", col: 7 }, { label: '?document', id: 'Q21870', col: 8 }, { label: '?education', id: 'Q100631', col: 9 }, { label: '?event', id: 'Q77499', col: 10 }, { label: '?freemasonry', id: 'Q23197', col: 11 }, { label: '?group', id: 'Q77498', col: 12 }, { label: '?human', id: 'Q77478', col: 13 }, { label: '?human work', id: 'Q77495', col: 14 }, { label: '?name', id: 'Q77488', col: 15 }, { label: '?object', id: 'Q101755', col: 16 }, { label: '?organisation', id: 'Q77501', col: 17 }, { label: '?people', id: 'Q77478', col: 18 }, { label: '?person', id: 'Q77478', col: 19 }, { label: '?place', id: 'Q77500', col: 20 }, { label: '?printed document', id: 'Q100626', col: 21 }, { label: '?profession', id: 'Q256699', col: 22 }, { label: '?publication', id: 'Q77502', col: 23 }],\r\n  [{ label: '?activity1', id: 'Q256699', col: 0 }, { label: '?archive1', id: 'Q21870', col: 1 }, { label: '?artefact1', id: 'Q101755', col: 2 }, { label: '?book1', id: 'Q100626', col: 3 }, { label: '?career1', id: 'Q77493', col: 4 }, { label: '?city1', id: 'Q77500', col: 5 }, { label: '?country1', id: 'Q77500', col: 6 }, { label: '?date1', id: \"Q77483\", col: 7 }, { label: '?document1', id: 'Q21870', col: 8 }, { label: '?education1', id: 'Q100631', col: 9 }, { label: '?event1', id: 'Q77499', col: 10 }, { label: '?freemasonry1', id: 'Q23197', col: 11 }, { label: '?group1', id: 'Q77498', col: 12 }, { label: '?human1', id: 'Q77478', col: 13 }, { label: '?human work1', id: 'Q77495', col: 14 }, { label: '?name1', id: 'Q77488', col: 15 }, { label: '?object1', id: 'Q101755', col: 16 }, { label: '?organisation1', id: 'Q77501', col: 17 }, { label: '?people1', id: 'Q77478', col: 18 }, { label: '?person1', id: 'Q77478', col: 19 }, { label: '?place1', id: 'Q77500', col: 20 }, { label: '?printed document1', id: 'Q100626', col: 21 }, { label: '?profession1', id: 'Q256699', col: 22 }, { label: '?publication1', id: 'Q77502', col:23}],\r\n  [{ label: '?activity2', id: 'Q256699', col: 0 }, { label: '?archive2', id: 'Q21870', col: 1 }, { label: '?artefact2', id: 'Q101755', col: 2 }, { label: '?book2', id: 'Q100626', col: 3 }, { label: '?career2', id: 'Q77493', col: 4 }, { label: '?city2', id: 'Q77500', col: 5 }, { label: '?country2', id: 'Q77500', col: 6 }, { label: '?date2', id: \"Q77483\", col: 7 }, { label: '?document2', id: 'Q21870', col: 8 }, { label: '?education2', id: 'Q100631', col: 9 }, { label: '?event2', id: 'Q77499', col: 10 }, { label: '?freemasonry2', id: 'Q23197', col: 11 }, { label: '?group2', id: 'Q77498', col: 12 }, { label: '?human2', id: 'Q77478', col: 13 }, { label: '?human work2', id: 'Q77495', col: 14 }, { label: '?name2', id: 'Q77488', col: 15 }, { label: '?object2', id: 'Q101755', col: 16 }, { label: '?organisation2', id: 'Q77501', col: 17 }, { label: '?people2', id: 'Q77478', col: 18 }, { label: '?person2', id: 'Q77478', col: 19 }, { label: '?place2', id: 'Q77500', col: 20 }, { label: '?printed document2', id: 'Q100626', col: 21 }, { label: '?profession2', id: 'Q256699', col: 22 }, { label: '?publication2', id: 'Q77502', col:23}],\r\n  [{ label: '?activity3', id: 'Q256699', col: 0 }, { label: '?archive3', id: 'Q21870', col: 1 }, { label: '?artefact3', id: 'Q101755', col: 2 }, { label: '?book3', id: 'Q100626', col: 3 }, { label: '?career3', id: 'Q77493', col: 4 }, { label: '?city3', id: 'Q77500', col: 5 }, { label: '?country3', id: 'Q77500', col: 6 }, { label: '?date3', id: \"Q77483\", col: 7 }, { label: '?document3', id: 'Q21870', col: 8 }, { label: '?education3', id: 'Q100631', col: 9 }, { label: '?event3', id: 'Q77499', col: 10 }, { label: '?freemasonry3', id: 'Q23197', col: 11 }, { label: '?group3', id: 'Q77498', col: 12 }, { label: '?human3', id: 'Q77478', col: 13 }, { label: '?human work3', id: 'Q77495', col: 14 }, { label: '?name3', id: 'Q77488', col: 15 }, { label: '?object3', id: 'Q101755', col: 16 }, { label: '?organisation3', id: 'Q77501', col: 17 }, { label: '?people3', id: 'Q77478', col: 18 }, { label: '?person3', id: 'Q77478', col: 19 }, { label: '?place3', id: 'Q77500', col: 20 }, { label: '?printed document3', id: 'Q100626', col: 21 }, { label: '?profession3', id: 'Q256699', col: 22 }, { label: '?publication3', id: 'Q77502', col:23}],\r\n  [{ label: '?activity4', id: 'Q256699', col: 0 }, { label: '?archive4', id: 'Q21870', col: 1 }, { label: '?artefact4', id: 'Q101755', col: 2 }, { label: '?book4', id: 'Q100626', col: 3 }, { label: '?career4', id: 'Q77493', col: 4 }, { label: '?city4', id: 'Q77500', col: 5 }, { label: '?country4', id: 'Q77500', col: 6 }, { label: '?date4', id: \"Q77483\", col: 7 }, { label: '?document4', id: 'Q21870', col: 8 }, { label: '?education4', id: 'Q100631', col: 9 }, { label: '?event4', id: 'Q77499', col: 10 }, { label: '?freemasonry4', id: 'Q23197', col: 11 }, { label: '?group4', id: 'Q77498', col: 12 }, { label: '?human4', id: 'Q77478', col: 13 }, { label: '?human work4', id: 'Q77495', col: 14 }, { label: '?name4', id: 'Q77488', col: 15 }, { label: '?object4', id: 'Q101755', col: 16 }, { label: '?organisation4', id: 'Q77501', col: 17 }, { label: '?people4', id: 'Q77478', col: 18 }, { label: '?person4', id: 'Q77478', col: 19 }, { label: '?place4', id: 'Q77500', col: 20 }, { label: '?printed document4', id: 'Q100626', col: 21 }, { label: '?profession4', id: 'Q256699', col: 22 }, { label: '?publication4', id: 'Q77502', col:23}],\r\n  [{ label: '?activity5', id: 'Q256699', col: 0 }, { label: '?archive5', id: 'Q21870', col: 1 }, { label: '?artefact5', id: 'Q101755', col: 2 }, { label: '?book5', id: 'Q100626', col: 3 }, { label: '?career5', id: 'Q77493', col: 4 }, { label: '?city5', id: 'Q77500', col: 5 }, { label: '?country5', id: 'Q77500', col: 6 }, { label: '?date5', id: \"Q77483\", col: 7 }, { label: '?document5', id: 'Q21870', col: 8 }, { label: '?education5', id: 'Q100631', col: 9 }, { label: '?event5', id: 'Q77499', col: 10 }, { label: '?freemasonry5', id: 'Q23197', col: 11 }, { label: '?group5', id: 'Q77498', col: 12 }, { label: '?human5', id: 'Q77478', col: 13 }, { label: '?human work5', id: 'Q77495', col: 14 }, { label: '?name5', id: 'Q77488', col: 15 }, { label: '?object5', id: 'Q101755', col: 16 }, { label: '?organisation5', id: 'Q77501', col: 17 }, { label: '?people5', id: 'Q77478', col: 18 }, { label: '?person5', id: 'Q77478', col: 19 }, { label: '?place5', id: 'Q77500', col: 20 }, { label: '?printed document5', id: 'Q100626', col: 21 }, { label: '?profession5', id: 'Q256699', col: 22 }, { label: '?publication5', id: 'Q77502', col:23}]\r\n]\r\n\r\n\r\n\r\nexport const _MUTATOR: Variable[][] = [\r\n[{ label: '?activity', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date', id: '', col: 25, type: \"Time\" }, { label: '?string', id: '', col: 26, type: \"String\" }, { label: '?amount', id: '', col: 27, type: \"Quantity\" }],\r\n[{ label: '?activity1', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive1', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact1', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book1', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career1', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city1', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context1', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country1', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document1', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education1', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event1', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry1', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group1', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human1', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work1', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name1', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object1', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation1', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people1', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person1', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place1', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document1', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession1', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication1', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date1', id: '', col: 25, type: \"Time\" }, { label: '?string1', id: '', col: 26, type: \"String\" }, { label: '?amount1', id: '', col: 27, type: \"Quantity\" }],\r\n[{ label: '?activity2', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive2', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact2', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book2', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career2', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city2', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context2', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country2', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document2', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education2', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event2', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry2', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group2', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human2', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work2', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name2', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object2', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation2', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people2', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person2', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place2', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document2', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession2', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication2', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date2', id: '', col: 25, type: \"Time\" }, { label: '?string2', id: '', col: 26, type: \"String\" }, { label: '?amount2', id: '', col: 27, type: \"Quantity\" }],\r\n[{ label: '?activity3', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive3', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact3', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book3', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career3', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city3', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context3', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country3', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document3', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education3', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event3', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry3', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group3', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human3', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work3', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name3', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object3', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation3', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people3', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person3', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place3', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document3', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession3', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication3', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date3', id: '', col: 25, type: \"Time\" }, { label: '?string3', id: '', col: 26, type: \"String\" }, { label: '?amount3', id: '', col: 27, type: \"Quantity\" }],\r\n[{ label: '?activity4', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive4', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact4', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book4', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career4', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city4', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context4', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country4', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document4', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education4', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event4', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry4', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group4', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human4', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work4', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name4', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object4', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation4', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people4', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person4', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place4', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document4', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession4', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication4', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date4', id: '', col: 25, type: \"Time\" }, { label: '?string4', id: '', col: 26, type: \"String\" }, { label: '?amount4', id: '', col: 27, type: \"Quantity\" }],\r\n[{ label: '?activity5', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive5', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact5', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book5', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career5', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city5', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context5', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country5', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document5', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education5', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event5', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry5', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group5', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human5', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work5', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name5', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object5', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation5', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people5', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person5', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place5', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document5', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession5', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication5', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date5', id: '', col: 25, type: \"Time\" }, { label: '?string5', id: '', col: 26, type: \"String\" }, { label: '?amount5', id: '', col: 27, type: \"Quantity\" }]\r\n]\r\n\r\nexport const MUTATOR2: Variable[][] = [\r\n  [{ label: 'activity', id: 'Q256699', col: 0 }, { label: 'archive', id: 'Q21870', col: 1 }, { label: 'artefact', id: 'Q101755', col: 2 }, { label: 'book', id: 'Q100626', col: 3 }, { label: 'career', id: 'Q77493', col: 4 }, { label: 'city', id: 'Q77500', col: 5 }, { label: 'country', id: 'Q77500', col: 6 }, { label: 'date', id: \"Q77483\", col: 7 }, { label: 'document', id: 'Q21870', col: 8 }, { label: 'education', id: 'Q100631', col: 9 }, { label: 'event', id: 'Q77499', col: 10 }, { label: 'freemasonry', id: 'Q23197', col: 11 }, { label: 'group', id: 'Q77498', col: 12 }, { label: 'human', id: 'Q77478', col: 13 }, { label: 'human work', id: 'Q77495', col: 14 }, { label: 'name', id: 'Q77488', col: 15 }, { label: 'object', id: 'Q101755', col: 16 }, { label: 'organisation', id: 'Q77501', col: 17 }, { label: 'people', id: 'Q77478', col: 18 }, { label: 'person', id: 'Q77478', col: 19 }, { label: 'place', id: 'Q77500', col: 20 }, { label: 'printed document', id: 'Q100626', col: 21 }, { label: 'profession', id: 'Q256699', col: 22 }, { label: 'publication', id: 'Q77502', col: 23 }],\r\n  [{ label: 'activity1', id: 'Q256699', col: 0 }, { label: 'archive1', id: 'Q21870', col: 1 }, { label: 'artefact1', id: 'Q101755', col: 2 }, { label: 'book1', id: 'Q100626', col: 3 }, { label: 'career1', id: 'Q77493', col: 4 }, { label: 'city1', id: 'Q77500', col: 5 }, { label: 'country1', id: 'Q77500', col: 6 }, { label: 'date1', id: \"Q77483\", col: 7 }, { label: 'document1', id: 'Q21870', col: 8 }, { label: 'education1', id: 'Q100631', col: 9 }, { label: 'event1', id: 'Q77499', col: 10 }, { label: 'freemasonry1', id: 'Q23197', col: 11 }, { label: 'group1', id: 'Q77498', col: 12 }, { label: 'human1', id: 'Q77478', col: 13 }, { label: 'human work1', id: 'Q77495', col: 14 }, { label: 'name1', id: 'Q77488', col: 15 }, { label: 'object1', id: 'Q101755', col: 16 }, { label: 'organisation1', id: 'Q77501', col: 17 }, { label: 'people1', id: 'Q77478', col: 18 }, { label: 'person1', id: 'Q77478', col: 19 }, { label: 'place1', id: 'Q77500', col: 20 }, { label: 'printed document1', id: 'Q100626', col: 21 }, { label: 'profession1', id: 'Q256699', col: 22 }, { label: 'publication1', id: 'Q77502', col: 23 }],\r\n  [{ label: 'activity2', id: 'Q256699', col: 0 }, { label: 'archive2', id: 'Q21870', col: 1 }, { label: 'artefact2', id: 'Q101755', col: 2 }, { label: 'book2', id: 'Q100626', col: 3 }, { label: 'career2', id: 'Q77493', col: 4 }, { label: 'city2', id: 'Q77500', col: 5 }, { label: 'country2', id: 'Q77500', col: 6 }, { label: 'date2', id: \"Q77483\", col: 7 }, { label: 'document2', id: 'Q21870', col: 8 }, { label: 'education2', id: 'Q100631', col: 9 }, { label: 'event2', id: 'Q77499', col: 10 }, { label: 'freemasonry2', id: 'Q23197', col: 11 }, { label: 'group2', id: 'Q77498', col: 12 }, { label: 'human2', id: 'Q77478', col: 13 }, { label: 'human work2', id: 'Q77495', col: 14 }, { label: 'name2', id: 'Q77488', col: 15 }, { label: 'object2', id: 'Q101755', col: 16 }, { label: 'organisation2', id: 'Q77501', col: 17 }, { label: 'people2', id: 'Q77478', col: 18 }, { label: 'person2', id: 'Q77478', col: 19 }, { label: 'place2', id: 'Q77500', col: 20 }, { label: 'printed document2', id: 'Q100626', col: 21 }, { label: 'profession2', id: 'Q256699', col: 22 }, { label: 'publication2', id: 'Q77502', col: 23 }],\r\n  [{ label: 'activity3', id: 'Q256699', col: 0 }, { label: 'archive3', id: 'Q21870', col: 1 }, { label: 'artefact3', id: 'Q101755', col: 2 }, { label: 'book3', id: 'Q100626', col: 3 }, { label: 'career3', id: 'Q77493', col: 4 }, { label: 'city3', id: 'Q77500', col: 5 }, { label: 'country3', id: 'Q77500', col: 6 }, { label: 'date3', id: \"Q77483\", col: 7 }, { label: 'document3', id: 'Q21870', col: 8 }, { label: 'education3', id: 'Q100631', col: 9 }, { label: 'event3', id: 'Q77499', col: 10 }, { label: 'freemasonry3', id: 'Q23197', col: 11 }, { label: 'group3', id: 'Q77498', col: 12 }, { label: 'human3', id: 'Q77478', col: 13 }, { label: 'human work3', id: 'Q77495', col: 14 }, { label: 'name3', id: 'Q77488', col: 15 }, { label: 'object3', id: 'Q101755', col: 16 }, { label: 'organisation3', id: 'Q77501', col: 17 }, { label: 'people3', id: 'Q77478', col: 18 }, { label: 'person3', id: 'Q77478', col: 19 }, { label: 'place3', id: 'Q77500', col: 20 }, { label: 'printed document3', id: 'Q100626', col: 21 }, { label: 'profession3', id: 'Q256699', col: 22 }, { label: 'publication3', id: 'Q77502', col: 23 }],\r\n  [{ label: 'activity4', id: 'Q256699', col: 0 }, { label: 'archive4', id: 'Q21870', col: 1 }, { label: 'artefact4', id: 'Q101755', col: 2 }, { label: 'book4', id: 'Q100626', col: 3 }, { label: 'career4', id: 'Q77493', col: 4 }, { label: 'city4', id: 'Q77500', col: 5 }, { label: 'country4', id: 'Q77500', col: 6 }, { label: 'date4', id: \"Q77483\", col: 7 }, { label: 'document4', id: 'Q21870', col: 8 }, { label: 'education4', id: 'Q100631', col: 9 }, { label: 'event4', id: 'Q77499', col: 10 }, { label: 'freemasonry4', id: 'Q23197', col: 11 }, { label: 'group4', id: 'Q77498', col: 12 }, { label: 'human4', id: 'Q77478', col: 13 }, { label: 'human work4', id: 'Q77495', col: 14 }, { label: 'name4', id: 'Q77488', col: 15 }, { label: 'object4', id: 'Q101755', col: 16 }, { label: 'organisation4', id: 'Q77501', col: 17 }, { label: 'people4', id: 'Q77478', col: 18 }, { label: 'person4', id: 'Q77478', col: 19 }, { label: 'place4', id: 'Q77500', col: 20 }, { label: 'printed document4', id: 'Q100626', col: 21 }, { label: 'profession4', id: 'Q256699', col: 22 }, { label: 'publication4', id: 'Q77502', col: 23 }],\r\n  [{ label: 'activity5', id: 'Q256699', col: 0 }, { label: 'archive5', id: 'Q21870', col: 1 }, { label: 'artefact5', id: 'Q101755', col: 2 }, { label: 'book5', id: 'Q100626', col: 3 }, { label: 'career5', id: 'Q77493', col: 4 }, { label: 'city5', id: 'Q77500', col: 5 }, { label: 'country5', id: 'Q77500', col: 6 }, { label: 'date5', id: \"Q77483\", col: 7 }, { label: 'document5', id: 'Q21870', col: 8 }, { label: 'education5', id: 'Q100631', col: 9 }, { label: 'event5', id: 'Q77499', col: 10 }, { label: 'freemasonry5', id: 'Q23197', col: 11 }, { label: 'group5', id: 'Q77498', col: 12 }, { label: 'human5', id: 'Q77478', col: 13 }, { label: 'human work5', id: 'Q77495', col: 14 }, { label: 'name5', id: 'Q77488', col: 15 }, { label: 'object5', id: 'Q101755', col: 16 }, { label: 'organisation5', id: 'Q77501', col: 17 }, { label: 'people5', id: 'Q77478', col: 18 }, { label: 'person5', id: 'Q77478', col: 19 }, { label: 'place5', id: 'Q77500', col: 20 }, { label: 'printed document5', id: 'Q100626', col: 21 }, { label: 'profession5', id: 'Q256699', col: 22 }, { label: 'publication5', id: 'Q77502', col: 23 }]\r\n]\r\n\r\n\r\n","import { Injectable, signal, computed } from '@angular/core';\r\nimport { BehaviorSubject, Observable, map, switchMap, combineLatest } from 'rxjs';\r\nimport { Variable, ITEMTYPES, LITERALS, MUTATOR } from './../variable';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  constructor() { }\r\n\r\n  mutator:BehaviorSubject<Variable[][]> = new BehaviorSubject(MUTATOR);\r\n\r\n  mutator$: Observable<Variable[][]> = this.mutator.asObservable();\r\n\r\n  mutatorForItemValue: BehaviorSubject<Variable[][]> = new BehaviorSubject(MUTATOR);\r\n\r\n  mutatorForItemValue$: Observable<Variable[][]> = this.mutator.asObservable();\r\n\r\n  mutatorForNextStatement:BehaviorSubject<Variable[][]> = new BehaviorSubject(MUTATOR);\r\n\r\n  mutatorForNextStatement$:Observable<Variable[][]> = this.mutatorForNextStatement.asObservable();\r\n\r\n\r\n  updateMutator(mutator: Variable[][]) { this.mutator.next(mutator) };\r\n\r\n  updateMutatorForItemValue(mutator: Variable[][]) { this.mutatorForItemValue.next(mutator) }\r\n\r\n  updateMutatorForNextStatement(mutator: Variable[][]) { this.mutatorForNextStatement.next(mutator) };\r\n\r\n  //  itemTypes: BehaviorSubject<Variable[][]> = new BehaviorSubject([ITEMTYPES]);\r\n\r\n  //  $currentItemTypes: Observable<Variable[][]> = this.itemTypes.asObservable();\r\n\r\n  itemTypes: BehaviorSubject<Variable[]> = new BehaviorSubject(ITEMTYPES);\r\n\r\n  itemTypes$:Observable<Variable[]> = this.itemTypes.asObservable();\r\n\r\n  itemTypes1: BehaviorSubject<Variable[]> = new BehaviorSubject([]);\r\n\r\n  itemTypes1$: Observable<Variable[]> = this.itemTypes1.asObservable();\r\n\r\n  itemTypes2: BehaviorSubject<Variable[]> = new BehaviorSubject([]);\r\n\r\n  itemTypes2$: Observable<Variable[]> = this.itemTypes2.asObservable();\r\n\r\n  formerItemTypes: BehaviorSubject<Variable[][]> = new BehaviorSubject([ITEMTYPES]);\r\n\r\n  formerItemTypes$: Observable<Variable[][]> = this.formerItemTypes.asObservable();\r\n\r\n \r\n\r\n  lastItemTypes$(u$:Observable<Variable[][]>) {\r\n    return u$.pipe(map(res => res[res.length - 1]))\r\n  }\r\n\r\n\r\n  updateItemTypes(item) { this.itemTypes.next(item) };\r\n\r\n  updateItemTypes1(item) { this.itemTypes1.next(item) };\r\n\r\n  updateItemTypes2(item) { this.itemTypes2.next(item) };\r\n\r\n  updateFormerItemTypes(itemTypes) { this.formerItemTypes.next(itemTypes) };\r\n\r\n  propertiesList:BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n\r\n  propertiesList$ = this.propertiesList.asObservable();\r\n\r\n  updatePropertiesList(list) { this.propertiesList.next(list) }\r\n\r\n  currentStatement: BehaviorSubject<number> = new BehaviorSubject(0);\r\n\r\n  currentStatement$: Observable<number> = this.currentStatement.asObservable();\r\n\r\n  updateCurrentStatement(i) { this.currentStatement.next(i) };\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule, FormsModule, FormGroup, FormArray, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatementsControlsService {\r\n\r\n  constructor() { }\r\n\r\n  itemType(statements: FormArray, i: number) {\r\n    if (statements && statements.length > i) {\r\n      return statements.at(i).get('value.itemType');\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  itemValue(statements, i: number) { return statements.at(i).get('value.itemValue') };\r\n\r\n  propertyValues(statements, i: number) { return statements.at(i).get('properties') as FormControl };\r\n\r\n  literalValue(statements, i: number) { return statements.at(i).get('value.literalValue') };\r\n\r\n  literalString(statements, i: number) { return statements.at(i).get('value.literalString') };\r\n\r\n  qualifiers(statements, i: number) { return statements.at(i).get('qualifiers') as FormArray };\r\n\r\n  qualifierProperty(qualifiers, j: number) { return qualifiers.at(j).get('qualifierProperty') }\r\n\r\n  qualifierValue(qualifiers, j) {  return qualifiers.at(j).controls[\"value\"].get('qualifierValue') };\r\n\r\n  qualifierLiteralValue(qualifiers, j) {  return qualifiers.at(j).controls[\"value\"].get('qualifierLiteralValue') };\r\n\r\n  qualifierLiteralString(qualifiers, j: number) { return qualifiers.at(j).controls[\"value\"].get('qualifierLiteralString') };\r\n\r\n  patchQualifierValue(value, qualifiers, j) { let control = this.qualifierValue(qualifiers, j); return control.patchValue(\"value\") };\r\n\r\n}  \r\n\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, effect, inject, input, AfterViewInit } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelect, MatSelectChange, MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nimport { Observable, ReplaySubject, Subject, BehaviorSubject, map, tap, takeUntil, switchMap, debounceTime, combineLatest, forkJoin, filter, iif, of, delay, startWith } from 'rxjs';\r\n//import { takeUntil } from 'rxjs/operators';\r\nimport { SelectedLangService } from '../../../selected-lang.service';\r\nimport { PropertiesListService } from '../../../services/properties-list.service';\r\nimport { RequestService } from '../../../services/request.service';\r\nimport { SearchEngineService } from '../../../services/search-engine.service';\r\nimport { SetLanguageService } from '../../../services/set-language.service';\r\nimport { DataService } from '../services/data.service';\r\nimport { StatementsControlsService } from '../services/statements-controls.service';\r\nimport { ITEMTYPES, MUTATOR, QUALIFIERTYPES, Selection, Variable } from '../variable';\r\n\r\nexport interface Statement {\r\n  itemType: FormControl<string>,\r\n  properties: FormControl<string[]>,\r\n  value?: FormGroup,\r\n  optional: FormControl<boolean>,\r\n  qualifiers?: FormArray<FormGroup>\r\n}\r\n\r\nexport interface Qualifier {\r\n  qualifierProperty: FormControl<string>,\r\n  value?: FormGroup\r\n}\r\n\r\n@Component({\r\n  selector: 'app-statement-search',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    NgxMatSelectSearchModule,\r\n    MatSelect,\r\n    MatCheckboxModule,\r\n    MatOption,\r\n    MatSlideToggleModule,\r\n  ],\r\n  templateUrl: './statement-search.component.html',\r\n  styleUrl: './statement-search.component.scss'\r\n})\r\n\r\nexport class StatementSearchComponent\r\n  implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  private changeDetector = inject(ChangeDetectorRef);\r\n  private request = inject(RequestService);\r\n  private setLanguage = inject(SetLanguageService);\r\n  private lang = inject(SelectedLangService);\r\n  private propertyList = inject(PropertiesListService);\r\n  private fb = inject(FormBuilder);\r\n  private searchEngine = inject(SearchEngineService);\r\n  private data = inject(DataService);\r\n  private controls = inject(StatementsControlsService);\r\n  //  private data = inject(DataService);\r\n\r\n\r\n  @Input() set literalVariables(literalVariables: any[]) {\r\n    this._literalVariables = literalVariables;\r\n    if (this.literalVariables) {\r\n      this.filteredLiteralVariables.next(this.literalVariables.slice())\r\n    }\r\n  }\r\n\r\n  @Input() set qualifierLiteralVariables(qualifierLiteralVariables: any[]) {\r\n    this._qualifierLiteralVariables = qualifierLiteralVariables;\r\n    if (this.qualifierLiteralVariables) {\r\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice())\r\n    }\r\n  }\r\n  get literalVariables(): any[] {\r\n    return this._literalVariables;\r\n  }\r\n\r\n  get qualifierLiteralVariables(): any[] {\r\n    return this._qualifierLiteralVariables;\r\n  }\r\n\r\n  @Output() datatype;\r\n\r\n\r\n  @Output() selectedItemType: EventEmitter<string[]> = new EventEmitter();\r\n\r\n\r\n  protected currentItemTypes: any[] = [];\r\n  protected currentItemTypesArray: any[][] = [];\r\n\r\n  public statementOptions: BehaviorSubject<any[]>[] = [];\r\n\r\n\r\n  private _propertiesList: any[];\r\n  private propertiesToSelect: any[];\r\n  private _literalVariables: any[];\r\n  private _qualifierLiteralVariables: any[];\r\n  propertiesList: any[];\r\n\r\n\r\n  private qualifierPropertiesToSelect: any[];\r\n\r\n  protected entityValues: any[] = []; //\r\n  protected currentMutator: Variable[][] = MUTATOR;\r\n\r\n  protected selectedLiteralVariables: Variable[] = []; // probablement à supprimer\r\n\r\n  isWikibaseItemOnStatement: boolean = true;\r\n  isLiteralOnStatement: boolean = false;\r\n  isLiteralStringOnStatement: boolean = false;\r\n\r\n\r\n  isWikibaseItemOnQualifier: boolean = true;\r\n  isLiteralOnQualifier: boolean = false;\r\n  isLiteralStringOnQualifier: boolean = false;\r\n\r\n  isLastStatement: boolean = false;\r\n  isAddStatement: boolean = false;\r\n  isRemoveStatement: boolean = false;\r\n\r\n  isAddQualifier: boolean = false;\r\n  isRemoveQualifier: boolean = false;\r\n  isQualifier: boolean = false;\r\n\r\n  isItemValue: boolean = true;\r\n\r\n\r\n  isLiteralVariableSelected: boolean = true;\r\n\r\n  selectedItemTypes: any[] = [];\r\n\r\n\r\n\r\n  placeholderForLiteralValue: string = \"literal value?\"\r\n  placeholderForLiteralString: string = \"write string? | date? | number?\";\r\n\r\n  query = this.fb.group({\r\n    statements: this.fb.array([this.statement])\r\n  });\r\n\r\n  get statements(): FormArray<FormGroup> { return this.query.get('statements') as FormArray; } // getter for statements as form array\r\n\r\n\r\n  // on pourrait aussi bien écrire : get statements() { return this.query.controls['statements'] as FormArray; }\r\n  qualifiers(i: number): FormArray<FormGroup> { return this.statements.at(i).get('qualifiers') as FormArray; }\r\n\r\n  get lastStatementIndex(): number {\r\n    const index = this.statements.length > 0 ? this.statements.length - 1 : 0;\r\n    console.log('lastStatementIndex:', index);\r\n    return index;\r\n  }\r\n\r\n\r\n  get statement(): FormGroup<Statement> {\r\n    return this.fb.group<Statement>(\r\n      {\r\n        itemType: new FormControl({ value: \"\", disabled: false }),\r\n        properties: new FormControl({ value: [], disabled: true }, [Validators.required, this.datatypeValidator]),\r\n        value: this.value,\r\n        optional: new FormControl({ value: false, disabled: false }),\r\n        qualifiers: this.fb.array([this.qualifier])\r\n      }\r\n    );\r\n  }\r\n\r\n  get value(): FormGroup {\r\n    return this.fb.group({\r\n      itemValue: new FormControl({ value: \"\", disabled: true }),\r\n      literalValue: new FormControl({ value: \"\", disabled: true }),\r\n      literalString: new FormControl({ value: \"\", disabled: true })\r\n    }\r\n    );\r\n  }\r\n\r\n  get qualifier(): FormGroup {\r\n    return this.fb.group({\r\n      qualifierProperty: new FormControl({ value: \"\", disabled: false }),\r\n      value: this.qualifierValue,\r\n      optional: new FormControl({ value: false, disabled: false }),\r\n    }\r\n    );\r\n  }\r\n\r\n  get qualifierValue(): FormGroup {\r\n    return this.fb.group({\r\n      qualifierValue: new FormControl({ value: \"\", disabled: true }),\r\n      qualifierLiteralValue: new FormControl({ value: \"\", disabled: true }),\r\n      qualifierLiteralString: new FormControl({ value: \"\", disabled: true })\r\n    }\r\n    );\r\n  }\r\n\r\n  isPropertiesInvalid(index: number): boolean {\r\n    const statementGroup = this.statements.at(index) as FormGroup;\r\n    const propertiesControl = statementGroup.get('properties') as FormControl;\r\n    return propertiesControl.invalid\r\n    //      && (propertiesControl.dirty || propertiesControl.touched);\r\n  }\r\n\r\n  public itemTypeFilterCtrl: FormControl<string | null> = new FormControl<string>('');\r\n\r\n  public filteredItemTypesArray: ReplaySubject<any[]>[] = [];\r\n\r\n\r\n\r\n  /** control for the MatSelect filter keyword multi-selection */\r\n  public propertytMultiFilterCtrl: FormControl<string> = new FormControl<string>('');\r\n\r\n  public filteredPropertyMultiArray: ReplaySubject<any[]>[] = [];\r\n\r\n\r\n  //  public valueSearchInput: FormControl = new FormControl();\r\n  /** control for the MatSelect filter keyword single-selection */\r\n  public itemValueFilterCtrl: FormControl<string> = new FormControl<string>('');\r\n\r\n  /** value filtered by search keyword */\r\n  public filteredItemValuesArray: ReplaySubject<any[]>[] = [];\r\n\r\n  /** control for the MatSelect filter keyword single-selection */\r\n  public literalFilterCtrl: FormControl<string | null> = new FormControl<string>('');\r\n\r\n  /** value filtered by search keyword */\r\n  public filteredLiteralVariables: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n\r\n  /** control for the MatSelect filter keyword single-selection */\r\n  public qualifierPropertyFilterCtrl: FormControl<string | null> = new FormControl<string>('');\r\n\r\n  /** value filtered by search keyword */\r\n  public filteredQualifierProperties: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n\r\n  /** control for the MatSelect filter keyword single-selection */\r\n  public qualifierValueFilterCtrl: FormControl<string> = new FormControl<string>('');\r\n\r\n  /** value filtered by search keyword */\r\n  public filteredQualifierValues: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n\r\n  /** control for the MatSelect filter keyword single-selection */\r\n  public qualifierLiteralFilterCtrl: FormControl<string> = new FormControl<string>('');\r\n\r\n  /** value filtered by search keyword */\r\n  public filteredQualifierLiteralVariables: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n\r\n\r\n  addStatements() {\r\n    this.statements.push(this.statement);\r\n    console.log('Added statement, new statements length:', this.statements.length);\r\n    this.isRemoveStatement = true;\r\n    this.filteredItemTypesArray.push(new ReplaySubject<any[]>(1)); // Initialiser un nouveau ReplaySubject pour la nouvelle déclaration\r\n    this.filteredItemValuesArray.push(new ReplaySubject<any[]>(1)); // Initialiser un nouveau ReplaySubject pour la nouvelle déclaration\r\n    this.filteredPropertyMultiArray.push(new ReplaySubject<any[]>(1)); // Initialiser un nouveau ReplaySubject pour la nouvelle déclaration\r\n    this.statementOptions.push(new BehaviorSubject<any[]>([])); // Initialiser un nouveau BehaviorSubject pour la nouvelle déclaration\r\n\r\n\r\n    // Initialiser les valeurs des nouveaux ReplaySubject avec une liste vide pour filterItemTypes et un observable de liste vide pour filterPropertyMulti\r\n    this.filteredItemTypesArray[this.lastStatementIndex].next([]);\r\n    this.filteredItemValuesArray[this.lastStatementIndex].next([]);\r\n    this.filteredPropertyMultiArray[this.lastStatementIndex].next([]);\r\n\r\n\r\n    this.setCurrentItemTypes(this.lastStatementIndex);\r\n    this.filterItemTypes(this.lastStatementIndex);\r\n    this.filterItemValues(this.lastStatementIndex);\r\n    this.filterPropertyMulti(this.lastStatementIndex, of([]));\r\n  }\r\n\r\n\r\n  removeStatements(i: number) {\r\n    this.statements.removeAt(i);\r\n    console.log('Removed statement at index', i, 'new statements length:', this.statements.length);\r\n    this.currentItemTypesArray.splice(i, 1); // Supprimer les currentItemTypes correspondants\r\n    this.filteredItemTypesArray.splice(i, 1); // Supprimer le ReplaySubject correspondant\r\n    this.setCurrentItemTypes(this.lastStatementIndex);\r\n    this.filterItemTypes(this.lastStatementIndex);\r\n  }\r\n\r\n  addQualifiers(i: number) {\r\n    let m = this.qualifiers(i).controls.length - 1\r\n    if (this.qualifiers(i).pristine) { this.qualifiers(i).removeAt(m) };\r\n    this.isQualifier = true;\r\n    this.qualifiers(i).push(this.qualifier);\r\n    let qual = this.controls.qualifiers(this.statements, i);\r\n    this.isQualifier = true;\r\n\r\n  }\r\n\r\n  addFirstQualifier(i) {\r\n    this.controls.qualifiers(this.statements, i).enable();\r\n    if (i === 0) { this.isQualifier = true; }\r\n  }\r\n\r\n  removeQualifiers(i: number, j: number) {\r\n    this.qualifiers(i).removeAt(j);\r\n  }\r\n\r\n  statementControllerDisplay(u, i) {\r\n    const statement = this.statements.at(i) as FormGroup;\r\n    const itemValueControl = statement.get('value.itemValue') as FormControl;\r\n\r\n    if (u === \"WikibaseItem\") {\r\n      this.isWikibaseItemOnStatement = true;\r\n      this.isLiteralOnStatement = false;\r\n      itemValueControl.enable();\r\n      statement.get('value.literalValue').disable();\r\n      statement.get('value.literalString').disable();\r\n    } else {\r\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\r\n        console.log(u);\r\n        itemValueControl.disable();\r\n        statement.get('value.literalValue').enable();\r\n        statement.get('value.literalString').enable();\r\n        this.isWikibaseItemOnStatement = false;\r\n        this.isLiteralStringOnStatement = false;\r\n        this.isLiteralOnStatement = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  literalControllerDisplay(label, i) {\r\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\") {\r\n      this.controls.literalValue(this.statements, i).enable(); this.controls.literalString(this.statements, i).enable();\r\n      this.controls.literalValue(this.statements, i).patchValue(\"\");\r\n      this.isLiteralStringOnStatement = true;\r\n      this.placeholderForLiteralString = \"write below\";\r\n    }\r\n    else {\r\n      this.controls.literalValue(this.statements, i).enable();\r\n      this.controls.literalString(this.statements, i).disable();\r\n      this.isLiteralStringOnStatement = false;\r\n      this.placeholderForLiteralString = \"disabled\";\r\n    }\r\n  }\r\n\r\n  qualifierControllerDisplay(u, i, j) {\r\n    console.log(u);\r\n    let qual = this.controls.qualifiers(this.statements, i);\r\n    if (u === \"WikibaseItem\") {\r\n      let value = this.controls.qualifierValue(qual, j);\r\n      console.log(value);\r\n      this.isWikibaseItemOnQualifier = true;\r\n      this.isLiteralOnQualifier = false;\r\n      this.controls.qualifierValue(qual, j).enable();\r\n      this.controls.qualifierLiteralValue(qual, j).disable();\r\n      this.controls.qualifierLiteralString(qual, j).disable();\r\n      //  this.controls.qualifierValue(qual, j).patchvalue(value);\r\n    } else {\r\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\r\n        this.controls.qualifierLiteralValue(qual, j).enable();\r\n        this.controls.qualifierLiteralString(qual, j).enable();\r\n        this.isWikibaseItemOnQualifier = false;\r\n        this.isLiteralOnQualifier = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  qualifierLiteralControllerDisplay(label, i, j) {\r\n    let qual = this.controls.qualifiers(this.statements, i);\r\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\") {\r\n      this.controls.qualifierLiteralValue(qual, j).enable(); this.controls.qualifierLiteralString(qual, j).enable();\r\n      //    this.controls.qualifierLiteralValue(qual, j).patchValue(\"\");\r\n      this.isLiteralStringOnQualifier = true;\r\n    }\r\n    else {\r\n      this.controls.literalValue(qual, j).enable();\r\n      this.controls.literalString(qual, j).disable();\r\n      this.isLiteralStringOnQualifier = false;\r\n    }\r\n  }\r\n\r\n  onItemTypeSelect(event: MatSelectChange): void {\r\n    console.log(event.value),\r\n      console.log('Selected itemType:', event.value);\r\n    let i = event.value[0]; // name of the statement \"i\" in the form array \"statements\"\r\n    this.controls.propertyValues(this.statements, i).enable();\r\n    const options$ = this.propertyList.propertiesListBuilding(event.value[3]); // create the list of properties; useless?\r\n    this.filterPropertyMulti(i, options$); // Appeler filterPropertyMulti avec l'observable\r\n    this.selectedItemType.emit(event.value); // output to advanced-search-component (see selectedItemType(itemType))\r\n    this.statements.at(i).get('itemType').setValue(event.value, { emitEvent: false }); // Mettre à jour la valeur du contrôle\r\n    console.log('Updated itemType control value:', this.statements.at(i).get('itemType').value);\r\n    this.changeDetector.detectChanges(); // Forcer la détection des changements\r\n  }\r\n\r\n\r\n  onPropertySelect(event: MatSelectChange): void {\r\n    let propertyValue = [];\r\n    console.log('Event value:', event.value);\r\n    let i = event.value[0][0];\r\n    console.log(i);\r\n\r\n    // Itérer sur chaque élément de event.value\r\n    for (let j = 0; j < event.value.length; j++) {\r\n      if (event.value[j] !== undefined) {\r\n        let propertyType = event.value[j][3];\r\n        console.log(propertyType);\r\n        if (propertyType) {\r\n          this.statementControllerDisplay(propertyType, i); // to display the right control\r\n          this.controls.itemValue(this.statements, i).enable();\r\n        } else {\r\n          console.error('Property type is undefined or invalid:', event.value[j][1].propertyType);\r\n        }\r\n      } else {\r\n        console.error('Event value[' + j + '] is undefined:', event.value);\r\n      }\r\n    }\r\n  }\r\n\r\n \r\n\r\n\r\n  onValueSelect(event: MatSelectChange): void {  // to update the mutator and add the selected value type to the current itemTypes\r\n    let i = event.value[0];\r\n    let label = event.value[1];\r\n    let dataType = event.value[2];\r\n    console.log(event.value);\r\n\r\n    // Mettre à jour la valeur du contrôle itemValue\r\n    const itemValueControl = this.statements.at(i).get('value.itemValue') as FormControl;\r\n  //  itemValueControl.setValue(label, { emitEvent: false });\r\n\r\n    // Déclencher la détection des changements pour mettre à jour le template\r\n    this.changeDetector.detectChanges();\r\n\r\n\r\n\r\n    if (label.charAt(0) === \"?\") {\r\n //    this.selectedValue.emit(event.value); // output to advanced-search-component (see selectedValue(itemType))\r\n    }\r\n    this.isAddQualifier = true;\r\n    this.isAddStatement = true;\r\n    // Appeler resetPreviousItemValues après la mise à jour du contrôle itemValue\r\n    this.resetPreviousItemValues(i);\r\n    console.log(this.resetPreviousItemValues(i))\r\n  };\r\n\r\n  onLiteralValueSelect(event: MatSelectChange): void {\r\n    let i = event.value[0];\r\n    let label = event.value[1];\r\n    this.placeholderForLiteralString = label;\r\n    this.literalControllerDisplay(label, i); // to display and enable the right controls\r\n    if (label.charAt(0) === \"?\") {\r\n      console.log(label);\r\n      //    this.selectedValue.emit(event.value); // output to advanced-search-component (see selectedValueType(itemType)). ?string is not an itemType\r\n    }\r\n    this.isAddStatement = true;\r\n    this.isAddQualifier = true;\r\n  }\r\n\r\n  onQualifierPropertySelect(event: MatSelectChange): void {\r\n    console.log(event.value);\r\n    let i = event.value[0];\r\n    let j = event.value[1];\r\n    let datatype = event.value[3];\r\n    //   this.qualifierPropertyDatatype.emit([i, j, datatype]);\r\n    this.qualifierControllerDisplay(datatype, i, j); // to display the right controls\r\n\r\n  }\r\n\r\n  onQualifierValueSelect(event: MatSelectChange): void {\r\n    console.log(event.value);\r\n    let i = event.value[0];\r\n    let j = event.value[1];\r\n    let dataType = event.value[2];\r\n    let col = event.value[3];\r\n    let id = event.value[4];\r\n    let u = [i, dataType, col, id];\r\n    if (dataType.charAt(0) === \"?\") {\r\n      //      this.selectedQualifierValue.emit(u);\r\n    }\r\n    this.isRemoveQualifier = true;\r\n    let qual = this.controls.qualifiers(this.statements, i);\r\n    let value = this.controls.qualifierValue(qual, j);\r\n    console.log(value);\r\n    this.controls.patchQualifierValue(value, qual, j)\r\n  };\r\n\r\n  onQualifierLiteralValueSelect(event: MatSelectChange): void {\r\n    console.log(event.value);\r\n    let i = event.value[0];\r\n    let label = event.value[2];\r\n    // let dataType = event.value[2];\r\n    if (label.charAt(0) === \"?\") {\r\n      //     this.selectedQualifierValue.emit(event.value);\r\n      this.isLiteralStringOnQualifier = false;\r\n    } else this.isLiteralStringOnQualifier = true;\r\n    this.isRemoveQualifier = true;\r\n  };\r\n\r\n  public items = [];\r\n\r\n  //  public datatype = \"WikibaseItem\";\r\n  public isQualifier2Display: boolean = false;\r\n  //propertiesList: any[];\r\n  selectedPropertiesList: string[];\r\n\r\n\r\n  @ViewChild('matRef') matRef: MatSelect;\r\n\r\n  clear() {\r\n    this.matRef.options.forEach((data: MatOption) => data.deselect());\r\n  }\r\n\r\n\r\n  @ViewChild('singleSelect', { static: true }) singleSelect: MatSelect;\r\n\r\n  @ViewChild('multiSelect', { static: true }) multiSelect: MatSelect;\r\n\r\n  //  @Output() typeSelectionChange: EventEmitter<MatSelectChange> = new EventEmitter<MatSelectChange>();\r\n  @Output() selectionChange: EventEmitter<MatSelectChange> = new EventEmitter<MatSelectChange>();\r\n\r\n  @Output() propertySelectionChange: EventEmitter<MatSelectChange> = new EventEmitter<MatSelectChange>();\r\n\r\n  protected _onDestroy = new Subject<void>();\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    console.log('Initial statements length:', this.statements.length);\r\n\r\n    this.propertyList.qualifierPropertiesListBuilding.subscribe(res => this.qualifierPropertiesToSelect = res);\r\n\r\n    this.itemTypeFilterCtrl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterItemTypes(this.lastStatementIndex);\r\n      });\r\n\r\n    this.propertytMultiFilterCtrl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterPropertyMulti(this.lastStatementIndex, of([]));\r\n      });\r\n\r\n    this.itemValueFilterCtrl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterItemValues(this.lastStatementIndex);\r\n      });\r\n\r\n    this.literalFilterCtrl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterLiteralVariables();\r\n      });\r\n\r\n    this.qualifierPropertyFilterCtrl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterQualifierProperties();\r\n      });\r\n\r\n    this.qualifierValueFilterCtrl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterQualifierValues();\r\n      });\r\n\r\n    this.qualifierLiteralFilterCtrl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterQualifierValues();\r\n      });\r\n\r\n    // Initialiser statementOptions pour l'index 0\r\n    this.statementOptions[0] = new BehaviorSubject<any[]>([]);\r\n\r\n    // Problème 1 et 2: Ajouter le deuxième argument manquant pour filterPropertyMulti\r\n    \r\n\r\n    // Problème 3, 4 et 5: Corriger l'initialisation des ReplaySubject\r\n    this.filteredItemTypesArray.push(new ReplaySubject<any[]>(1));\r\n   this.filteredItemValuesArray.push(new ReplaySubject<any[]>(1));\r\n    this.filteredPropertyMultiArray.push(new ReplaySubject<any[]>(1));\r\n   \r\n\r\n    this.setCurrentItemTypes(this.lastStatementIndex);\r\n    this.filterItemTypes(this.lastStatementIndex);\r\n    this.filterItemValues(this.lastStatementIndex);\r\n    this.filterPropertyMulti(this.lastStatementIndex, of([]));\r\n  }\r\n\r\n\r\n\r\n  ngAfterViewInit() {\r\n\r\n    console.log('Statements length after view init:', this.statements.length);\r\n\r\n //   this.setInitialItemTypeValue();\r\n //   this.setInitialPropertyValue();\r\n//    this.setInitialItemValue();\r\n    this.setInitialLiteralVariable();\r\n    this.setInitialQualifierPropertyValue();\r\n    this.setInitialQualifierValueValue();\r\n    this.setInitialQualifierLiteralVariable();\r\n\r\n  }\r\n\r\n\r\n  protected setInitialItemTypeValue() {\r\n    this.data.itemTypes$.subscribe(res => {\r\n      this.filteredItemTypesArray.forEach((filteredItemTypes, index) => {\r\n        console.log(res);\r\n        filteredItemTypes.next(res);\r\n        this.filterItemTypes(index);\r\n      });\r\n    });\r\n  }\r\n\r\n  protected setInitialPropertyValue() {\r\n    this.filteredPropertyMultiArray.forEach((filteredProperties, index) => {\r\n      filteredProperties\r\n    });\r\n}\r\n\r\n\r\n  protected setInitialItemValue() {\r\n    this.filteredItemValuesArray.forEach((filteredItemValues, index) => {\r\n      filteredItemValues;\r\n  });\r\n}\r\n\r\n  protected setInitialLiteralVariable() {\r\n    this.filteredLiteralVariables;\r\n  }\r\n\r\n  protected setInitialQualifierPropertyValue() {\r\n    this.filteredQualifierProperties;\r\n  }\r\n\r\n  protected setInitialQualifierValueValue() {\r\n    this.filteredQualifierValues;\r\n  }\r\n\r\n  protected setInitialQualifierLiteralVariable() {\r\n    this.filterQualifierLiteralVariables;\r\n  }\r\n\r\n\r\n  protected filterItemTypes(index: number) {\r\n    console.log('Calling setCurrentItemTypes with index:', index);\r\n    this.setCurrentItemTypes(index);\r\n    console.log('currentItemTypes after setCurrentItemTypes:', this.currentItemTypesArray[index]);\r\n\r\n    let search = this.itemTypeFilterCtrl.value;\r\n    if (!search) {\r\n      this.filteredItemTypesArray[index].next(this.currentItemTypesArray[index].slice());\r\n    } else {\r\n      search = search.toLowerCase();\r\n      this.filteredItemTypesArray[index].next(\r\n        this.currentItemTypesArray[index].filter(itemType => itemType.label.toLowerCase().indexOf(search) > -1)\r\n      );\r\n    }\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n * Initialise et met à jour la liste des types d'éléments disponibles pour chaque déclaration.\r\n * Cette fonction est appelée chaque fois qu'une nouvelle déclaration est ajoutée ou qu'une déclaration existante est modifiée.\r\n * Elle s'assure que la liste des types d'éléments est toujours à jour et reflète les sélections actuelles.\r\n * \r\n * @param index L'index de la déclaration pour laquelle les types d'éléments doivent être mis à jour.\r\n */\r\n  protected setCurrentItemTypes(index: number): void {\r\n    console.log('setCurrentItemTypes called with index:', index);\r\n    if (index === 0) {\r\n      if (!ITEMTYPES || ITEMTYPES.length === 0) {\r\n        console.error('ITEMTYPES is undefined or empty');\r\n        this.currentItemTypesArray[index] = [];\r\n      } else {\r\n        this.currentItemTypesArray[index] = ITEMTYPES;\r\n        console.log('Updated currentItemTypes:', this.currentItemTypesArray[index]);\r\n      }\r\n    } else {\r\n      let labels: any[] = [];\r\n\r\n      for (let j = 0; j < index; j++) {\r\n        const itemTypeControl = this.statements.at(j).get('itemType') as FormControl;\r\n        const itemValueControl = this.statements.at(j).get('value.itemValue') as FormControl;\r\n\r\n        console.log('itemTypeControl at index', j, ':', itemTypeControl);\r\n        console.log('itemValueControl at index', j, ':', itemValueControl);\r\n\r\n        if (itemTypeControl && itemTypeControl.value) {\r\n          const itemTypeValue = itemTypeControl.value[1]; // Extraire l'objet unique\r\n          console.log(`itemTypeControl value at index ${j}:`, itemTypeValue);\r\n          labels.push({ label: itemTypeValue });\r\n        }\r\n\r\n        if (itemValueControl && itemValueControl.value) {\r\n          const itemValue = itemValueControl.value[1]; // Extraire l'objet unique\r\n          if (typeof itemValue === 'string' && itemValue.startsWith('?')) {\r\n            labels.push({ label: itemValue });\r\n          }\r\n        }\r\n      }\r\n\r\n      // Supprimer les doublons en comparant les propriétés des objets\r\n      const uniqueLabels = Array.from(new Set(labels.map(label => JSON.stringify(label))))\r\n        .map(str => JSON.parse(str));\r\n\r\n      // Trier les objets par ordre alphabétique selon leurs propriétés\r\n      this.currentItemTypesArray[index] = uniqueLabels.sort((a, b) => a.label.localeCompare(b.label));\r\n      console.log('Updated currentItemTypes:', this.currentItemTypesArray[index]);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  protected filterPropertyMulti(index: number, options$: Observable<any[]>): void {\r\n    options$\r\n      .pipe(\r\n        switchMap(options => {\r\n          if (!options || options.length === 0) {\r\n            console.error(\"Les données ne sont pas correctement chargées dans options.\");\r\n            return of([]);\r\n          }\r\n          console.log(options);\r\n\r\n          let search = this.propertytMultiFilterCtrl.value;\r\n          if (!search) {\r\n            return of(options.slice());\r\n          } else {\r\n            search = search.toLowerCase();\r\n            // filter the projects\r\n            return of(options.filter(entity => entity.value.toLowerCase().indexOf(search) > -1));\r\n          }\r\n        })\r\n      )\r\n      .subscribe(filteredOptions => {\r\n        this.filteredPropertyMultiArray[index].next(filteredOptions);\r\n      });\r\n  }\r\n\r\n\r\n/*  protected filterItemValues(index: number) {\r\n    const initialSearch = this.itemValueFilterCtrl.value ? this.itemValueFilterCtrl.value.toLowerCase() : '';\r\n    this.itemValueFilterCtrl.valueChanges\r\n      .pipe(\r\n        startWith(initialSearch),\r\n        debounceTime(400),\r\n        switchMap(search => {\r\n          search = search ? search.toLowerCase() : '';\r\n          return this.itemValuesList2(search, this.lang.selectedLang, 20).pipe(\r\n            map(filteredItems => {\r\n              const selectedOptions = this.getSelectedOptionsUpToIndex(index); // Utiliser l'index actuel\r\n              const selectedLabels = this.getLabelsFromSelectedOptions(selectedOptions);\r\n              const augmentedItems = [...selectedLabels.map(label => ({ label, col: null, id: null, separator: '' })), ...filteredItems];\r\n\r\n              if (search.startsWith('?')) {\r\n                return augmentedItems.filter(item => item.label.toLowerCase().startsWith(search));\r\n              } else {\r\n                return augmentedItems.filter(item => item.label.toLowerCase().includes(search));\r\n              }\r\n            }),\r\n            map(items => {\r\n              const uniqueItems = items.filter((item, index, self) =>\r\n                index === self.findIndex((t) => (\r\n                  t.label === item.label\r\n                ))\r\n              );\r\n              if (!this.statementOptions[index]) {\r\n                this.statementOptions[index] = new BehaviorSubject<any[]>([]);\r\n              }\r\n              this.statementOptions[index].next(uniqueItems); // Stocker les options dans le BehaviorSubject\r\n              return uniqueItems;\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .subscribe(augmentedItems => {\r\n        console.log(`Augmented Items for statement ${index}:`, augmentedItems);\r\n        if (!this.filteredItemValuesArray[index]) {\r\n          this.filteredItemValuesArray[index] = new ReplaySubject<any[]>(1);\r\n        }\r\n        this.filteredItemValuesArray[index].next(augmentedItems); // Utiliser l'index actuel\r\n        this.resetPreviousItemValues(index); // Réinitialiser les valeurs des statements précédents\r\n      });\r\n\r\n    // Utiliser les options stockées lors des changements\r\n    if (this.statementOptions[index]) {\r\n      this.statementOptions[index].subscribe(options => {\r\n        this.filteredItemValuesArray[index].next(options);\r\n      });\r\n    }\r\n  } */\r\n\r\n\r\n  protected filterItemValues(index: number) {\r\n    // Obtenir les options sélectionnées jusqu'à l'index actuel\r\n    const selectedOptions = this.getSelectedOptionsUpToIndex(index);\r\n\r\n    // Obtenir les labels des options sélectionnées\r\n    const selectedLabels = this.getLabelsFromSelectedOptions(selectedOptions);\r\n\r\n    // Créer les éléments augmentés à partir des labels sélectionnés\r\n    const augmentedItems = selectedLabels.map(label => ({ label, col: null, id: null, separator: '' }));\r\n\r\n    console.log(augmentedItems)\r\n\r\n    // Mettre à jour le BehaviorSubject avec les éléments augmentés\r\n    if (!this.statementOptions[index]) {\r\n      this.statementOptions[index] = new BehaviorSubject<any[]>([]);\r\n    }\r\n    this.statementOptions[index].next(augmentedItems);\r\n\r\n    // Mettre à jour le ReplaySubject avec les éléments augmentés\r\n    if (!this.filteredItemValuesArray[index]) {\r\n      this.filteredItemValuesArray[index] = new ReplaySubject<any[]>(1);\r\n    }\r\n    this.filteredItemValuesArray[index].next(augmentedItems);\r\n\r\n    // Réinitialiser les valeurs des statements précédents\r\n   this.resetPreviousItemValues(index);\r\n  }\r\n\r\n\r\n\r\n\r\n  protected resetPreviousItemValues(currentIndex: number): void {\r\n    for (let i = 0; i < currentIndex; i++) {\r\n      const itemValueControl = this.statements.at(i).get('value.itemValue') as FormControl;\r\n      if (itemValueControl && itemValueControl.value) {\r\n        itemValueControl.setValue(itemValueControl.value, { emitEvent: false });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getSelectedOptionsUpToIndex(i: number): any[] {\r\n    let selectedOptions = [];\r\n    const lastItemTypeControl = this.statements.at(i).get('itemType') as FormControl;\r\n    const lastItemTypeValue = lastItemTypeControl ? lastItemTypeControl.value[1] : null;\r\n\r\n    for (let index = 0; index <= i; index++) {\r\n      const itemTypeControl = this.statements.at(index).get('itemType') as FormControl;\r\n      const itemValueControl = this.statements.at(index).get('value.itemValue') as FormControl;\r\n      if (itemTypeControl && itemTypeControl.value) {\r\n        let itemTypeValue = [...itemTypeControl.value]; // Cloner la valeur pour éviter de modifier l'original\r\n        let label = itemTypeValue[1]; // Supposons que le label soit à l'index 1\r\n\r\n        // Vérifier si itemValue commence par ? et se termine par un nombre\r\n        if (itemValueControl && itemValueControl.value) {\r\n          const itemValue = itemValueControl.value[1];\r\n          const match = itemValue.match(/^\\?(.+?)(\\d+)$/);\r\n          if (match) {\r\n            const baseValue = match[1];\r\n            const number = parseInt(match[2]);\r\n            const itemTypeBase = itemTypeControl.value[1].slice(0, -1);\r\n            if (baseValue === itemTypeBase) {\r\n              label = baseValue + (number + 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Modifier le label selon les règles spécifiées\r\n        const lastChar = label.charAt(label.length - 1);\r\n        if (/[a-zA-Z]$/.test(lastChar)) {\r\n          label += '1';\r\n        } else if (/[0-9]$/.test(lastChar)) {\r\n          const number = parseInt(lastChar);\r\n          label = label.slice(0, -1) + (number + 1);\r\n        }\r\n        itemTypeValue[1] = label; // Mettre à jour le label dans la valeur itemType clonée\r\n\r\n        // Ne pas ajouter au tableau si le label mis à jour est égal à la valeur du contrôle itemType du dernier statement\r\n        if (index < i && label === lastItemTypeValue) {\r\n          continue;\r\n        }\r\n\r\n        // Ajouter la valeur du contrôle du statement i en remplaçant le dernier caractère par ce nombre incrémenté de 1\r\n        if (index < i && itemValueControl && itemValueControl.value) {\r\n          const itemValue = itemValueControl.value[1];\r\n          const match = itemValue.match(/^\\?(.+?)(\\d+)$/);\r\n          if (match) {\r\n            const baseValue = match[1];\r\n            const number = parseInt(match[2]);\r\n            const newLabel = baseValue + (number + 1);\r\n            if (!selectedOptions.some(option => option[1] === newLabel)) {\r\n              selectedOptions.push([itemTypeControl.value[0], newLabel]);\r\n            }\r\n          }\r\n        }\r\n\r\n        selectedOptions.push(itemTypeValue);\r\n      }\r\n    }\r\n    return selectedOptions;\r\n  }\r\n\r\n  getLabelsFromSelectedOptions(options: any[]): string[] {\r\n    return options.map(option => option[1]); // Supposons que le label soit à l'index 1\r\n  }\r\n\r\n\r\n  itemValuesList1(label) { \r\n    return  this.data.mutator$.pipe(map(re => re[0]))\r\n      }\r\n\r\n\r\n  itemValuesList2(label, lang, number) {\r\n   let entityValues:any[] = [];\r\n    return  this.request.searchItem(label, lang).pipe(\r\n      map(res => this.createList(res)),\r\n      switchMap(url => this.request.getItem(url)),\r\n      filter(res => res !== undefined && res !== null),\r\n      filter(res => res.entities !== undefined && res.entities !== null),\r\n      map(res => Object.values(res.entities)),\r\n      map(res => this.setLanguage.item(res, this.lang.selectedLang))\r\n    )\r\n} \r\n\r\n\r\n  protected filterLiteralVariables() {\r\n    if (this.literalVariables === undefined) {\r\n      return;\r\n    }\r\n    // get the search keyword\r\n    let search = this.literalFilterCtrl.value;\r\n    if (!search) {\r\n      this.filteredLiteralVariables.next(this.literalVariables.slice());\r\n      return;\r\n    } else {\r\n      search = search.toLowerCase();\r\n    }\r\n    this.filteredLiteralVariables.next(\r\n      this.literalVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\r\n    );\r\n  }\r\n\r\n  protected filterQualifierProperties() {\r\n\r\n    if (!this.qualifierPropertiesToSelect) {\r\n      return;\r\n    }\r\n    let search = this.qualifierPropertyFilterCtrl.value;\r\n    if (!search) {\r\n      this.filteredQualifierProperties.next(this.qualifierPropertiesToSelect.slice());\r\n      return;\r\n    } else {\r\n      search = search.toLowerCase();\r\n    }\r\n    // filter the \r\n    this.filteredQualifierProperties.next(\r\n      this.qualifierPropertiesToSelect.filter(entity => entity.itemLabel.label.toLowerCase().indexOf(search) > -1)\r\n    );\r\n  }\r\n\r\n  protected filterQualifierValues() {\r\n    let search = this.qualifierValueFilterCtrl.value;\r\n    let firstCharacter = search.charAt(0);\r\n    if (!search) {\r\n      this.filteredQualifierValues.next(this.entityValues.slice());\r\n      return;\r\n    } else {\r\n      if (firstCharacter !== \"?\") {\r\n        search = search.toLowerCase();\r\n        this.qualifierValueFilterCtrl.valueChanges //search engine\r\n          .pipe(\r\n            debounceTime(400),\r\n            switchMap(label => this.request.searchItem(label, this.lang.selectedLang)),\r\n            map(res => this.createList(res)),\r\n            debounceTime(400),\r\n            switchMap(url => this.request.getItem(url)),\r\n            filter(res => res !== undefined && res !== null),\r\n            filter(res => res.entities !== undefined && res.entities !== null),\r\n            map(res => Object.values(res.entities))\r\n          ).subscribe(re => {\r\n            this.entityValues = this.setLanguage.item(re, this.lang.selectedLang);\r\n            this.setSeparator(this.entityValues);\r\n            this.filteredQualifierValues.next(this.entityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\r\n          }\r\n          );\r\n      }\r\n      else {\r\n        this.data.mutator$.subscribe(re => {\r\n          this.entityValues = re[0];\r\n          let qualifierEntityValues = [];\r\n      //    let qualifierTypes: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23];\r\n          qualifierEntityValues = this.entityValues.filter(entityValue => QUALIFIERTYPES.includes(entityValue.col))  // filter the options for the qualifier values\r\n          if (search === '?*') {\r\n            this.filteredQualifierValues.next(qualifierEntityValues);\r\n          } else {\r\n            search = search.slice(1);\r\n            this.filteredQualifierValues.next(qualifierEntityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\r\n          }\r\n        }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  protected filterQualifierLiteralVariables() {\r\n    console.log(this.qualifierLiteralVariables);\r\n    if (this.qualifierLiteralVariables === undefined) {\r\n      return;\r\n    }\r\n    // get the search keyword\r\n    let search = this.qualifierLiteralFilterCtrl.value;\r\n    console.log(search);\r\n    if (!search) {\r\n      console.log(this.qualifierLiteralVariables);\r\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice());\r\n      return;\r\n    } else {\r\n      search = search.toLowerCase();\r\n    }\r\n    this.filteredQualifierLiteralVariables.next(\r\n      this.qualifierLiteralVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\r\n    );\r\n  }\r\n\r\n\r\n\r\n  setSeparator(entityValues: any[]) {\r\n    for (let i = 0; i < entityValues.length; i++) {\r\n      if (entityValues[i].description) { entityValues[i].separator = \", \"; };\r\n    };\r\n  }\r\n\r\n  selectedProperties(property) {\r\n    this.selectedPropertiesList = property.value;\r\n  }\r\n\r\n\r\n\r\n  datatypeValidator(control: AbstractControl): { [key: string]: boolean; } | null {\r\n    if (control.value && control.value.length > 1) {\r\n      const firstType = control.value[0][3]; // Supposons que le type soit à l'index 3\r\n      const allSameType = control.value.every((val: any) => val[3] === firstType);\r\n      if (!allSameType) {\r\n        return { 'differentDatatype': true };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n  notFound(res) {\r\n    res == \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin=*\" ?\r\n      res = \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=Q220375&format=json&origin=*\" : res;\r\n    return res;\r\n  }\r\n\r\n  createList(re) {\r\n    let baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\r\n    let getUrlSuffix = '&format=json&origin=*';\r\n    let list: string = \"\";\r\n    let url: string = \"\";\r\n    let arr = re.search;\r\n    if (arr === undefined) { arr = []; }\r\n    else { arr = arr; };\r\n    for (let i = 0; i < arr.length; i++) {\r\n      list = list + \"|\" + arr[i].id;\r\n    };\r\n    list = list.slice(1);\r\n    url = baseGetURL + list + getUrlSuffix;\r\n    return url;\r\n  }\r\n\r\n \r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this._onDestroy.next(),\r\n      this._onDestroy.complete();\r\n  }\r\n\r\n}\r\n\r\n\r\n","  <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n  <mat-card-content>\r\n\r\n    <div class=\"listStyle\">\r\n      <div>Query:</div>\r\n      @if(query.value.statements){\r\n    \r\n      @for(statement of query.value.statements; track statement.itemType){\r\n      <div class=\"statementStyle\">\r\n        @if(statement.optional) { (optional) }\r\n        @if(statement.itemType) { statement {{ statement.itemType[0] + 1 }} : subject: {{ statement.itemType[1] }} }\r\n        @if(statement.properties) { -> property: @for (property of statement.properties; track property ) {{{ property[3] }}} }\r\n        @if(statement.value) { -> object:\r\n           @if(statement.value.itemValue) { {{ statement.value.itemValue[1] }} }\r\n           @if(statement.value.literalValue) { {{statement.value.literalValue[1] }}  }\r\n           @if(statement.value.literalString) { {{statement.value.literalString }} }\r\n       }\r\n      </div>\r\n\r\n      @if(statement.qualifiers){\r\n      <div class=\"listStyle\">\r\n        @for(qualifier of statement.qualifiers; track qualifier.qualifierProperty[1]){\r\n        <div class=\"statementStyle\">\r\n          @if(qualifier.qualifierProperty) { qualifier {{ qualifier.qualifierProperty[1] + 1 }} :  property: {{ qualifier.qualifierProperty[4] }}}\r\n          @if(qualifier.value){\r\n          @if(qualifier.value.qualifierValue) { -> object: {{ qualifier.value.qualifierValue[2] }}}\r\n          @if(qualifier.value.qualifierLiteralValue) { -> object: {{ qualifier.value.qualifierLiteralValue[2] }}}\r\n          @if(qualifier.value.qualifierLiteralString) { -> object: {{ qualifier.value.qualifierLiteralString }}}\r\n          }\r\n       </div>\r\n       }\r\n      </div>\r\n      }\r\n     }\r\n    }\r\n    </div>\r\n  </mat-card-content>\r\n\r\n  <mat-card-content class=\"whiteBackGround\" id=\"statements\">\r\n    <p class=\"search-center\">Statement:</p>\r\n    <form [formGroup]=\"query\">\r\n      <div class=\"formPadding\">\r\n        <div formArrayName=\"statements\">\r\n\r\n          @for(statement of statements.controls; let i = $index; track statement){  <!---note that track is on statement!-->\r\n\r\n          <div class=\"search-center3 cardGreyBackground\"\r\n               [formGroupName]=\"i\">\r\n\r\n            <!---    @if( i === statements.length -1){     --->\r\n\r\n            <div class=\"listStyle\">Statement {{ i + 1 }} <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<mat-checkbox formControlName=\"optional\">Optional</mat-checkbox></span>:</div>\r\n            <!--- form field for selecting the type of the item with search --->\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-select placeholder=\"subject?\"\r\n                          formControlName=\"itemType\" required\r\n                          (selectionChange)=\"onItemTypeSelect($event)\"\r\n                          #singleSelect>\r\n                <mat-option>\r\n                  <ngx-mat-select-search placeholderLabel=\"Search\"\r\n                                         [formControl]=\"itemTypeFilterCtrl\"\r\n                                         [noEntriesFoundLabel]=noDataFoundLabel></ngx-mat-select-search>\r\n                </mat-option>\r\n                <mat-option *ngFor=\"let itemType of filteredItemTypesArray[i] | async\" [value]=\"[i, itemType.label, itemType.value, itemType.id, itemType.order]\">\r\n                  {{itemType.label}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <!--- form field for multi-selecting the property of the statement with search --->\r\n            <mat-form-field appearance=\"fill\">\r\n              <!---             <mat-select placeholder={{this.propertiesValues[i]}} --->\r\n              <mat-select placeholder=\"properties?\"\r\n                          formControlName=\"properties\" required\r\n                          [multiple]=\"true\"\r\n                          (selectionChange)=\"onPropertySelect($event)\">\r\n                <mat-option>\r\n                  <ngx-mat-select-search placeholderLabel=\"Search\"\r\n                                         [formControl]=\"propertytMultiFilterCtrl\"\r\n                                         noEntriesFoundLabel=\"Not found\"></ngx-mat-select-search>\r\n                </mat-option>\r\n                <mat-option *ngFor=\"let property of filteredPropertyMultiArray[i] | async\" [value]=\"[i, property.value, property.id, property.type]\">\r\n                  {{ property.label }}\r\n                </mat-option>\r\n              </mat-select>\r\n              @if (statements.at(i).get('properties').hasError('differentDatatype')) {\r\n              <div class=\"validatorWarning\">\r\n                Select several properties only if they have the same type\r\n              </div>\r\n              }\r\n            </mat-form-field>\r\n\r\n            <!--- form field for single-selecting the wikibase value of the statement with search --->\r\n            <div class=\"search-center3\" formGroupName=\"value\">\r\n              @if (isWikibaseItemOnStatement === true) {\r\n              <mat-form-field appearance=\"fill\">\r\n                <mat-select placeholder=\"value?\"\r\n                            formControlName=\"itemValue\" required\r\n                            (selectionChange)=\"onValueSelect($event)\"\r\n                            #singleSelect>\r\n                  <mat-option>\r\n                    <ngx-mat-select-search placeholderLabel=\"Search\"\r\n                                           [formControl]=\"itemValueFilterCtrl\"\r\n                                           noEntriesFoundLabel=\"Not found\"></ngx-mat-select-search>\r\n                  </mat-option>\r\n                  <mat-option *ngFor=\"let itemValue of filteredItemValuesArray[i] | async\" [value]=\"[i, itemValue.label, itemValue.col, itemValue.id]\">\r\n                    {{itemValue.label}}{{itemValue.separator}}{{itemValue.description}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              }\r\n\r\n              @if (isLiteralOnStatement === true) {\r\n              <mat-form-field appearance=\"fill\">\r\n                <mat-select placeholder={{placeholderForLiteralValue}}\r\n                            formControlName=\"literalValue\" required\r\n                            (selectionChange)=\"onLiteralValueSelect($event)\"\r\n                            #singleSelect>\r\n                  @for ( literalVariable of literalVariables; track literalVariable ) {\r\n                  <mat-option [value]=\"[i, literalVariable.label, literalVariable.col]\">\r\n                    {{literalVariable.label}}\r\n                  </mat-option>\r\n                  }\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n\r\n\r\n              <!--- form field for input the literal value of the statement with search --->\r\n              <!----        @if (isLiteralStringOnStatement === true){   --->\r\n              <mat-form-field appearance=\"fill\">\r\n                <input matInput placeholder={{placeholderForLiteralString}} formControlName=\"literalString\">\r\n              </mat-form-field>\r\n              <!-----        }  --->\r\n              }\r\n            </div>\r\n\r\n            <!---        <mat-form-field appearance=\"fill\">\r\n  <mat-checkbox formControlName=\"optional\">\r\n    Optional\r\n  </mat-checkbox> -->\r\n            <!----------------------------------------------start of qualifiers------------------------------------------------------->\r\n            @if(isQualifier === true){\r\n            <div formArrayName=\"qualifiers\">\r\n              @for(qualifier of qualifiers(i).controls; let j = $index; track qualifier){  <!---note that track is on qualifier-->\r\n              <div class=\"search-center3 cardGreyBackground\"\r\n                   [formGroupName]=\"j\">\r\n\r\n                @if( j === qualifiers(i).length -1){\r\n\r\n                <div class=\"listStyle\">Qualifier {{ j + 1 }} <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<mat-checkbox formControlName=\"optional\">Optional</mat-checkbox></span>:</div>\r\n                <!--- form field for selecting the property of the qualifier with search --->\r\n                <mat-form-field appearance=\"fill\">\r\n\r\n                  <!---             <mat-select placeholder={{this.propertiesValues[i]}} --->\r\n                  <mat-select placeholder=\"property?\"\r\n                              formControlName=\"qualifierProperty\" required\r\n                              (selectionChange)=\"onQualifierPropertySelect($event)\">\r\n                    <mat-option>\r\n                      <ngx-mat-select-search placeholderLabel=\"Search\"\r\n                                             [formControl]=\"qualifierPropertyFilterCtrl\"\r\n                                             noEntriesFoundLabel=\"Not found\"></ngx-mat-select-search>\r\n                    </mat-option>\r\n\r\n                    <mat-option *ngFor=\"let qualifier of filteredQualifierProperties | async\" [value]=\"[i,j,qualifier.id, qualifier.propertyType.id, qualifier.itemLabel.value]\">\r\n                      {{qualifier.itemLabel.label}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n                <!--- form field for single-selecting the wikibase value of the statement with search --->\r\n                <div class=\"search-center3\" formGroupName=\"value\">\r\n                  @if (isWikibaseItemOnQualifier === true) {\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-select placeholder=\"value?\"\r\n                                formControlName=\"qualifierValue\" required\r\n                                (selectionChange)=\"onQualifierValueSelect($event)\"\r\n                                #singleSelect>\r\n                      <mat-option>\r\n                        <ngx-mat-select-search placeholderLabel=\"Search\"\r\n                                               [formControl]=\"qualifierValueFilterCtrl\"\r\n                                               noEntriesFoundLabel=\"Not found\"></ngx-mat-select-search>\r\n                      </mat-option>\r\n                      <mat-option *ngFor=\"let qualifierValue of filteredQualifierValues | async\" [value]=\"[i, j, qualifierValue.label, qualifierValue.col, qualifierValue.id]\">\r\n                        {{qualifierValue.label}}{{qualifierValue.separator}}{{qualifierValue.description}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  }\r\n                  @if (isLiteralOnQualifier === true) {\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-select placeholder=\"literal value?\"\r\n                                formControlName=\"qualifierLiteralValue\" required\r\n                                (selectionChange)=\"onQualifierLiteralValueSelect($event)\"\r\n                                #singleSelect>\r\n                      @for ( qualifierLiteralVariable of qualifierLiteralVariables; track qualifierLiteralVariable ) {\r\n                      <mat-option [value]=\"[i, j, qualifierLiteralVariable.label, qualifierLiteralVariable.col]\">\r\n                        {{qualifierLiteralVariable.label}}\r\n                      </mat-option>\r\n                      }\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <!--- form field for input the literal value of the statement with search --->\r\n                  @if(isLiteralStringOnQualifier) {\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <input matInput value=\"string?\" formControlName=\"qualifierLiteralString\">\r\n                  </mat-form-field>\r\n                  }\r\n                  }\r\n                </div>\r\n\r\n\r\n\r\n                }\r\n              </div>\r\n              }\r\n\r\n            </div>\r\n\r\n            @if(isRemoveQualifier){\r\n            <div class=\"search-center\">\r\n              <button type=\"button\" (click)=\"removeQualifiers(i,j)\">Remove qualifier</button>\r\n            </div>\r\n            }\r\n\r\n\r\n            }\r\n            @if (isAddQualifier) {\r\n            <div class=\"search-center\">\r\n              <button type=\"button\" (click)=\"addQualifiers(i)\">Add qualifier</button>\r\n            </div>\r\n            }\r\n\r\n            <!---   }     -->\r\n            <!----       @if (isAddQualifier) {\r\n         <div class=\"search-center\">\r\n           <button type=\"button\" (click)=\"addFirstQualifier(i)\">Add first qualifier</button>\r\n         </div>\r\n         }\r\n  -->\r\n            <!-------------------------------------------------end of qualifier-------------------------------------------------------->\r\n\r\n\r\n          </div>\r\n\r\n          @if(isRemoveStatement){\r\n          <div class=\"search-center\">\r\n            <button type=\"button\" (click)=\"removeStatements(i)\">Remove statement</button>\r\n          </div>\r\n          }\r\n\r\n          @if(isAddStatement){\r\n          <div class=\"search-center\">\r\n            <button type=\"button\" (click)=\"addStatements()\">Add Statement</button>\r\n          </div>\r\n          }\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div>\r\n      <p class=\"search-center\">  {{ query.value | json }}</p>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n\r\n\r\n\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { Variable, LITERALS, MUTATOR } from './../variable';\r\nimport { DataService } from '../services/data.service'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MutatorService {\r\n  constructor() { }\r\n\r\n // protected mutator: Variable[][] = MUTATOR;\r\n\r\n  //  transposeMutator = this.transpose(MUTATOR);\r\n\r\n  private data = inject(DataService);\r\n\r\n\r\n  mutator(itemType) {\r\n    console.log(itemType);\r\n    let mutator = [];\r\n    this.data.mutator$.subscribe(res => { mutator = res });\r\n    let transposeMutator = this.transpose(mutator); // transpose of the  mutator\r\n  //  let i = itemType[0]; // statement name (in the formArray \"statements\"); \r\n    let selectedItemType = itemType[1]; // name of the selectedItemType\r\n    let selectedItemId = itemType[3]; // id of the selected ItemTuype\r\n    let selectedCol = itemType[2];  // column of the selectedItemType in the mutator\r\n    let array = transposeMutator[selectedCol]; // list of names for the selected itemType ;\r\n    let permutedArray = this.circularPermutation(array);\r\n    transposeMutator[selectedCol] = permutedArray; // permuted list of names for the selected itemType\r\n    let newMutator = this.transpose(transposeMutator);  // mutator after the selection of the itemType;\r\n   // this.data.updateMutator(newMutator);\r\n    console.log(newMutator);\r\n    return newMutator\r\n\r\n  }\r\n\r\n\r\n transpose(arr) {\r\n    let newArr = arr[0].map((_, colIndex) => arr.map(row => row[colIndex]));\r\n    return newArr\r\n  }\r\n\r\n  circularPermutation(arr) {\r\n    let newArr = [];\r\n    let u = arr[0];\r\n    for (let i = 0; i < arr.length - 1; i++) { newArr[i] = arr[i + 1] };\r\n    newArr[5] = u;\r\n    return newArr\r\n }\r\n\r\n\r\n  circularInversePermutation(arr) {  // useless\r\n    let u = arr[5];\r\n    for (let i = 0; i < arr.length - 1; i++) { arr[5 - i] = arr[5 - (i + 1)] }\r\n    arr[0] = u;\r\n    return arr;\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef, AfterViewInit, ViewChild, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Observable, Subject, ReplaySubject, BehaviorSubject, merge, combineLatest, of } from 'rxjs';\r\nimport { map, switchMap, tap, debounceTime, takeWhile, filter, take, takeUntil, mergeAll } from 'rxjs/operators';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nimport { FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n//import { RouterLinkActive, RouterLink, RouterOutlet } from '@angular/router';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SetLanguageService } from '../../services/set-language.service';\r\nimport { RequestService } from '../../services/request.service';\r\nimport { SelectedLangService } from '../../selected-lang.service';\r\nimport { ProjectsListService } from '../../services/projects-list.service';\r\nimport { PropertiesListService } from '../../services/properties-list.service';\r\nimport { ProjectSelectComponent } from './project-select/project-select.component';\r\n//import { StatementSearchComponent } from './statement-search/StatementSearchComponent';\r\nimport { StatementSearchComponent } from './statement-search/statement-search.component';\r\nimport { Variable, LITERALS, ITEMTYPES, MUTATOR, Selection, Data } from './variable';\r\nimport { DataService } from './services/data.service'\r\nimport { MutatorService } from './services/mutator.service'\r\n\r\n\r\n@Component({\r\n  selector: 'app-advanced-search',\r\n  standalone: true,\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatTableModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        NgxMatSelectSearchModule,\r\n        ProjectSelectComponent,\r\n        StatementSearchComponent,\r\n    ],\r\n    templateUrl: './advanced-search.component.html',\r\n    styleUrls: ['./advanced-search.component.scss']\r\n})\r\n\r\nexport class AdvancedSearchComponent implements OnInit, OnDestroy {\r\n\r\n  private lang = inject(SelectedLangService);\r\n  private projectList = inject(ProjectsListService);\r\n  private propertyList = inject(PropertiesListService);\r\n  private data = inject(DataService);\r\n  private mutator = inject(MutatorService)\r\n\r\n\r\n  title = 'factgrid';\r\n  subtitle: string = \"a database for historians\";\r\n  basic_search: string = \"search\";\r\n  projects: string = \"research projects\";\r\n  fields: string = \"fields of reserach\";\r\n // datatype: string;\r\n  \r\n  \r\n  public selectedItem: Observable<any>;\r\n  public formerSelectedCol: number;\r\n  public isDisplay: boolean = false;\r\n\r\n\r\n  lonos: number[][];\r\n  constructor() {\r\n    // Initialiser lonos avec le premier élément étant les valeurs de la propriété order dans ITEMTYPES\r\n    this.lonos = [ITEMTYPES.map(item => item.order)];\r\n\r\n  }\r\n\r\n  itemTypes: any[] ;\r\n  $currentItemTypes: Observable<string[]>;\r\n\r\n  selections: Selection[][] = [];\r\n  statementSelection: Selection[] = [];\r\n\r\n  formData: Data[] = [{ statement: 0, types: { options: ITEMTYPES, selections: [] }, values: { options: ITEMTYPES, selections: [] } }]\r\n\r\n\r\n\r\n // data$ = new Observable<string[]>();\r\n  // searchQuery$ = new BehaviorSubject<string>('');\r\n\r\n  protected literals: Variable[] = LITERALS;\r\n\r\n  //protected mutator: Variable[][] = MUTATOR;\r\n\r\n  itemTypesAfterSelection: Variable[];\r\n\r\n  protected literalVariables;\r\n  protected qualifierLiteralVariables;\r\n\r\n  projectsList: any[] = [];\r\n  propertiesList: any[] = [];\r\n  selectedStatementList: string[];\r\n\r\n  // public filteredItemTypes: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n  public replay: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n \r\n\r\n  ngOnInit(): void {\r\n\r\n    this.subtitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n\r\n    this.projects = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n\r\n    this.fields = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n\r\n    this.projectList.projectsListBuilding(\"Q11295\").subscribe(res => this.projectsList = res); // list of projects\r\n\r\n    //  this.propertyList.propertiesListBuilding(\"Q12\"); //list of properties;\r\n\r\n    //this.data.currentItemTypesAfterSelection.subscribe(res => console.log(res));\r\n\r\n   \r\n  }\r\n\r\n  selectedItemType(itemType) {\r\n    console.log(itemType);\r\n    let i = itemType[0];\r\n\r\n    let u = ITEMTYPES.findIndex(item => item.id === itemType[3]);\r\n    \r\n    let selection = { label: itemType[1], id: itemType[3] };\r\n\r\n    console.log(itemType[3]);\r\n  //  this.formData[i].types.selections.push(selection);\r\n   // this.formData[i].values.options.push(selection); \r\n\r\n //   let newMutator = [];\r\n //   if (i === 0) {\r\n  //    newMutator = this.mutator.mutator(itemType);  // create the  new mutator;\r\n  //    console.log(newMutator);\r\n //     this.data.updateMutatorForItemValue(newMutator); // update the mutator for itemValue;\r\n      // this.data.mutator$.subscribe(res => console.log(res));\r\n //   }\r\n  //  let selection0: Selection = { variable: [itemType[0], itemType[2], 0], label: itemType[1], id: itemType[3] };\r\n  //  if (!this.statementSelection[0]) { this.statementSelection.push(selection0) } else this.statementSelection.splice(0, 1, selection0);\r\n  //  let newItemType: Variable = { label: itemType[1], col: itemType[2], id: itemType[3] };\r\n  //  let currentItemTypes: Variable[];\r\n  //  if (i === 0) { // update the itemTypes1 only for statement 0;\r\n  //    this.data.updateItemTypes1([newItemType]);\r\n  //  };\r\n    this.propertyList.propertiesListBuilding(itemType[3]).subscribe(res => {  // create the list of properties; useless?\r\n //     this.propertiesList = [itemType[0], this.propertyList.changeList(res)];\r\n      //   console.log(this.propertiesList);\r\n      console.log(res);\r\n      //     this.data.updatePropertiesList([itemType[0], this.propertyList.changeList(res)]);\r\n    })\r\n  }\r\n\r\n  propertyDatatype(u) { //  \r\n    this.literalVariables = this.literals.filter((literal) => ( literal.type === u[1] || literal.type === \"Any\" ) && literal.col === u[0]);\r\n    return this.literalVariables\r\n  }\r\n\r\n  qualifierPropertyDatatype(u) { //\r\n    this.qualifierLiteralVariables = this.literals.filter((literal) => (literal.type === u[2] || literal.type === \"Any\") && literal.col === u[0]);\r\n    return this.qualifierLiteralVariables\r\n  }\r\n\r\n  selectedProjects(projects) {\r\n    console.log(projects.value);\r\n  }\r\n\r\n  selectedValue(value) {\r\n    console.log(value);\r\n    this.data.itemTypes1$.subscribe(res => console.log(res));\r\n    let i = value[0];\r\n    let selection1: Selection = { variable: [value[0], this.updateValue(this.statementSelection[0].variable[2],value[2]), 1], label: value[1], id: value[3] }; //TODO: value[2], which is the order of the unknown, must be updated in a function to take in account value[2] in selection1\r\n    if (!this.statementSelection[1]) { this.statementSelection.push(selection1) } else this.statementSelection.splice(1, 1, selection1);\r\n    this.selections.push(this.statementSelection); // maybe not here;\r\n //   if (value[1] === \"?string\" || value[1] === \"?date\") { value[1] = \"\" };\r\n    let currentItemTypes: any[];\r\n    let newItemType = { label: value[1], col: value[2], id: value[3] };\r\n    let $newItemType = of(newItemType);\r\n      $newItemType.subscribe(res => console.log(res));\r\n      combineLatest([$newItemType, this.data.itemTypes1$]).subscribe(([res1, res2]) => { res2.push(res1); currentItemTypes = res2 });\r\n      this.data.updateItemTypes2(currentItemTypes);\r\n //     this.data.itemTypes2$.subscribe(res => console.log(res));\r\n    //   this.data.itemTypes1$.subscribe(res => console.log(res));\r\n //this.data.updateMutator()\r\n   let newMutator = this.mutator.mutator(value);\r\n    this.data.updateMutatorForNextStatement(newMutator); \r\n\r\n  \r\n    \r\n   /* this.data.itemTypes1$.subscribe(res => {  // get the current itemTypes from the data service\r\n      currentItemTypes = res\r\n    });It:\r\n    console.log(currentItemTypes);\r\n    let newItemType: Variable = { label: value[1], col: value[2], id: value[3] };\r\n    currentItemTypes.push(newItemType);\r\n    console.log(currentItemTypes);\r\n    this.data.updateItemTypes2(currentItemTypes);\r\n    this.data.itemTypes1$.subscribe(res => console.log(res))*/\r\n  }\r\n\r\n  selectedQualifierValue(itemType) {\r\n    let i = itemType[0];\r\n    let qualifierItemType = [itemType[1], itemType[2], itemType[3], \"\"];\r\n    let newMutator = this.mutator.mutator(qualifierItemType);\r\n    console.log(newMutator);\r\n    let newItemType: Variable = { label: itemType[1], id: itemType[2], col: itemType[3] };\r\n    let currentItem: any[];\r\n    this.data.itemTypes$.subscribe(res => {\r\n      currentItem = res;\r\n      if (i === 0) { currentItem = [newItemType] };\r\n      //  if (!currentItem[i + 1]) { currentItem.push(u); } else currentItem.splice(i+1, 1, u);\r\n    });\r\n    this.data.updateItemTypes(currentItem);\r\n    this.data.updateMutator(newMutator);\r\n    this.data.mutator$.subscribe(res => console.log(res));\r\n  }\r\n\r\n  updateValue(value0, value1) {\r\n    let u;\r\n    if (value0 = value1) { \r\n      u = value1 + 1\r\n    } else u = value1;\r\n  return u\r\n  }\r\n\r\n findIndexById(a, id) {\r\n  return a.findIndex(item => item.id === id);\r\n  }\r\n\r\n  incrementElement(a, b) {\r\n    if (a.length !== b.length) {\r\n        throw new Error(\"Les listes a et b doivent avoir la même longueur\");\r\n    }\r\n\r\n    let c = [...b]; // Crée une copie de la liste b\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (a[i] === 1) {\r\n            c[i] = b[i] + 1; // Incrémente l'élément i-ème de b\r\n            break; // Sort de la boucle après avoir trouvé l'élément égal à 1\r\n        }\r\n    }\r\n\r\n    return c;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n \r\n \r\n}\r\n\r\n","<head>\r\n\r\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n        rel=\"stylesheet\">\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n  <div class=\"cardBackground\">\r\n    <div class=\"FactGridTitle\">FactGrid</div>\r\n    <div class=\"subTitle\">{{subtitle}}</div>\r\n  </div>\r\n\r\n  <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n    <mat-card-content class=\"search-container\">\r\n      <div class=\"search-center\">\r\n        <a [routerLink]=\"['']\">FactGrid</a> <span>&nbsp;&nbsp;|&nbsp;&nbsp;</span>\r\n        <a href=\"https://database.factgrid.de/query/#%23model%0A%0ASELECT%20%3Fitem%20%3Fviewer%20%3FitemLabel%20%20WHERE%20%7B%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22%5BAUTO_LANGUAGE%5D%2Cen%22.%20%7D%0A%20%20%3Fitem%20wdt%3AP2%20wd%3AQ7%3B%0A%20%20%20%20%20%20%20%20wdt%3AP247%20wd%3AQ24708.%0A%20%20BIND%28STRAFTER%28STR%28%3Fitem%29%2C%20STR%28wd%3A%29%29%20AS%20%3FitemId%29%0A%20%20BIND%28IRI%28CONCAT%28%22https%3A%2F%2Fdatabase.factgrid.de%2Fviewer%2Fitem%2F%22%2C%20%3FitemId%29%29%20AS%20%3Fviewer%29%0A%7D%0A\">\r\n          sparql query\r\n        </a>\r\n        <span>&nbsp;&nbsp;|&nbsp;&nbsp;</span>\r\n        <a [routerLink]=\"['/harmonia_universalis']\">Harmonia Universalis</a>\r\n      </div>\r\n      <div class=\"search-center\"><mat-icon color=\"primary\">build</mat-icon></div>\r\n\r\n      <app-project-select [data]=\"projectsList\" (selectionChange)=\"selectedProjects($event)\"></app-project-select>\r\n      \r\n      <app-statement-search class=\"child-container\" [qualifierLiteralVariables]=\"qualifierLiteralVariables\" [literalVariables]=\"literalVariables\" \r\n                          \r\n         (propertyDatatype)=\"propertyDatatype($event)\" (selectedQualifierValue)=\"selectedQualifierValue($event)\" (qualifierPropertyDatatype)=\"qualifierPropertyDatatype($event)\" (selectedValue)=\"selectedValue($event)\" (selectedItemType)=\"selectedItemType($event)\"></app-statement-search>\r\n\r\n      <!----   <app-essai></app-essai>-->\r\n\r\n    </mat-card-content>\r\n  \r\n  </mat-card>\r\n\r\n</body>\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAM,MAAM,CAAC,mBAAmB;AAChC,IAAM,MAAM,CAAC,mBAAmB;AAChC,IAAM,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,yCAAyC,CAAC,GAAG,CAAC,CAAC,IAAI,2BAA2B,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,8BAA8B,EAAE,CAAC,CAAC;AAClJ,IAAM,MAAM,CAAC,4CAA4C,6BAA6B,8BAA8B;AACpH,SAAS,gDAAgD,IAAI,KAAK;AAChE,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,2BAAiB;AAChC,IAAG,yBAAe,GAAG,gBAAgB,EAAE;AACvC,IAAG,qBAAW,UAAU,SAAS,+EAA+E,QAAQ;AACtH,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,8BAA8B,OAAO,OAAO,CAAC;AAAA,IAC5E,CAAC;AACD,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,qBAAW,SAAS,OAAO,gBAAgB,OAAO,OAAO,OAAO,aAAa,KAAK,EAAE,WAAW,OAAO,wBAAwB,EAAE,iBAAiB,OAAO,8BAA8B,EAAE,cAAc,OAAO,+BAA+B,EAAE,sBAAsB,OAAO,gCAAgC;AAAA,EAChT;AACF;AACA,SAAS,gDAAgD,IAAI,KAAK;AAChE,MAAI,KAAK,GAAG;AACV,IAAG,oBAAU,GAAG,eAAe,CAAC;AAAA,EAClC;AACF;AACA,SAAS,8DAA8D,IAAI,KAAK;AAC9E,MAAI,KAAK,GAAG;AACV,IAAG,uBAAa,GAAG,CAAC;AAAA,EACtB;AACF;AACA,SAAS,8DAA8D,IAAI,KAAK;AAC9E,MAAI,KAAK,GAAG;AACV,IAAG,oBAAU,GAAG,YAAY,EAAE;AAAA,EAChC;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,qBAAW,WAAW,OAAO,YAAY;AAAA,EAC9C;AACF;AACA,SAAS,8DAA8D,IAAI,KAAK;AAC9E,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,UAAU;AAC/B,IAAG,iBAAO,CAAC;AACX,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,oBAAU;AACb,IAAG,6BAAmB,KAAK,OAAO,WAAW,GAAG;AAAA,EAClD;AACF;AACA,SAAS,gDAAgD,IAAI,KAAK;AAChE,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,2BAAiB;AAChC,IAAG,yBAAe,GAAG,UAAU,EAAE;AACjC,IAAG,qBAAW,SAAS,SAAS,0EAA0E;AACxG,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,OAAO,IAAI,CAAC;AAAA,IAC3C,CAAC;AACD,IAAG,8BAAoB,GAAG,+DAA+D,GAAG,CAAC,EAAE,GAAG,+DAA+D,GAAG,GAAG,YAAY,EAAE,EAAE,GAAG,+DAA+D,GAAG,GAAG,UAAU;AACzQ,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,oBAAU;AACb,IAAG,wBAAc,OAAO,YAAY,IAAI,OAAO,eAAe,IAAI,CAAC;AAAA,EACrE;AACF;AACA,SAAS,+DAA+D,IAAI,KAAK;AAC/E,MAAI,KAAK,GAAG;AACV,IAAG,uBAAa,GAAG,CAAC;AAAA,EACtB;AACF;AACA,SAAS,+DAA+D,IAAI,KAAK;AAC/E,MAAI,KAAK,GAAG;AACV,IAAG,iBAAO,CAAC;AAAA,EACb;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,6BAAmB,KAAK,OAAO,qBAAqB,GAAG;AAAA,EAC5D;AACF;AACA,SAAS,iDAAiD,IAAI,KAAK;AACjE,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,8BAAoB,GAAG,gEAAgE,GAAG,CAAC,EAAE,GAAG,gEAAgE,GAAG,CAAC;AACvK,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,oBAAU;AACb,IAAG,wBAAc,OAAO,iBAAiB,IAAI,CAAC;AAAA,EAChD;AACF;AACA,IAAM,gCAAN,MAAM,+BAA8B;AAAA,EAClC,OAAO,YAAO,SAAS,sCAAsC,mBAAmB;AAC9E,WAAO,KAAK,qBAAqB,gCAA+B;AAAA,EAClE;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,2BAA2B,EAAE,CAAC;AAAA,EACjD,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,+BAA+B,CAAC;AAAA,IACtG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAM,6BAA6B,CAAC,aAAa,oBAAoB,aAAa,gBAAgB,uBAAuB,yCAAyC,8BAA8B,yBAAyB,uBAAuB,oBAAoB,gCAAgC,WAAW;AAkB/S,IAAM,mCAAmC,IAAI,eAAe,kCAAkC;AAW9F,IAAM,mCAAN,MAAM,kCAAiC;AAAA,EACrC,OAAO,YAAO,SAAS,yCAAyC,mBAAmB;AACjF,WAAO,KAAK,qBAAqB,mCAAkC;AAAA,EACrE;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,8BAA8B,EAAE,CAAC;AAAA,EACpD,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kCAAkC,CAAC;AAAA,IACzG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAgFH,IAAM,2BAAN,MAAM,0BAAyB;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA,mBAAmB;AAAA;AAAA,EAEnB,OAAO;AAAA;AAAA,EAEP,YAAY;AAAA;AAAA,EAEZ;AAAA;AAAA,EAEA,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,mBAAmB;AAAA;AAAA,EAEnB,YAAY;AAAA;AAAA,EAEZ,sBAAsB;AAAA;AAAA,EAEtB,6BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7B,+BAA+B;AAAA;AAAA,EAE/B,wCAAwC;AAAA;AAAA,EAExC,YAAY;AAAA;AAAA,EAEZ,wBAAwB;AAAA;AAAA,EAExB,2BAA2B;AAAA;AAAA,EAE3B,iCAAiC;AAAA;AAAA,EAEjC,kCAAkC;AAAA;AAAA,EAElC,mCAAmC;AAAA;AAAA,EAEnC,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxB,oCAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpC,sBAAsB;AAAA;AAAA,EAEtB,YAAY,IAAI,aAAa;AAAA;AAAA,EAE7B;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,IAAI,QAAQ;AACV,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EACA;AAAA,EACA,YAAY,MAAM;AAAA,EAElB;AAAA;AAAA,EAEA,IAAI,SAAS,UAAU;AACrB,SAAK,UAAU,KAAK,QAAQ;AAAA,EAC9B;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,UAAU,SAAS;AAAA,EACjC;AAAA;AAAA,EAEA,YAAY,IAAI,gBAAgB,IAAI;AAAA,EACpC,eAAe,KAAK,UAAU,KAAK,UAAU,cAAY,WAAW,SAAS,QAAQ,KAAK,IAAI,aAAW,QAAQ,QAAQ,CAAC,GAAG,UAAU,SAAS,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AAAA,EACvK,iBAAiB,KAAK,aAAa,KAAK,IAAI,aAAW,UAAU,QAAQ,SAAS,CAAC,CAAC;AAAA;AAAA;AAAA,EAGpF;AAAA,EACA,eAAe,IAAI,YAAY,IAAI;AAAA,IACjC,aAAa;AAAA,EACf,CAAC;AAAA;AAAA,EAED,uBAAuB,cAAc,CAAC,KAAK,aAAa,cAAc,KAAK,cAAc,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,OAAO,aAAa,MAAM,CAAC,EAAE,KAAK,uBAAuB,SAAS,kBAAkB,KAAK,uBAAuB,EAAE,CAAC;AAAA;AAAA,EAE1N,aAAa,IAAI,QAAQ;AAAA;AAAA,EAEzB;AAAA,EACA,YAAY,WAAW,mBAAmB,gBAAgB,WAAW,cAAc,gBAAgB;AACjG,SAAK,YAAY;AACjB,SAAK,oBAAoB;AACzB,SAAK,iBAAiB;AACtB,SAAK,YAAY;AACjB,SAAK,eAAe;AACpB,SAAK,oBAAoB,cAAc;AAAA,EACzC;AAAA,EACA,oBAAoB,gBAAgB;AAClC,QAAI,CAAC,gBAAgB;AACnB;AAAA,IACF;AACA,eAAW,OAAO,4BAA4B;AAC5C,UAAI,OAAO,UAAU,eAAe,KAAK,gBAAgB,GAAG,GAAG;AAE7D,aAAK,GAAG,IAAI,eAAe,GAAG;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW;AAET,QAAI,KAAK,WAAW;AAClB,WAAK,UAAU,WAAW;AAC1B,WAAK,UAAU,gBAAgB,EAAE,UAAU,IAAI,4BAA4B;AAC3E,WAAK,UAAU,gBAAgB,EAAE,aAAa,QAAQ,cAAc;AAAA,IACtE,OAAO;AACL,cAAQ,MAAM,sEAAsE;AAAA,IACtF;AAEA,SAAK,UAAU,aAAa,KAAK,MAAM,CAAC,GAAG,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,YAAU;AACzF,UAAI,QAAQ;AACV,aAAK,iBAAiB;AAEtB,YAAI,CAAC,KAAK,qBAAqB;AAC7B,eAAK,OAAO;AAAA,QACd;AAAA,MACF,OAAO;AAEL,YAAI,KAAK,kBAAkB;AACzB,eAAK,OAAO;AAAA,QACd;AAAA,MACF;AAAA,IACF,CAAC;AAED,SAAK,UAAU,aAAa,KAAK,KAAK,CAAC,GAAG,UAAU,MAAM;AACxD,WAAK,WAAW,KAAK,UAAU;AAW/B,UAAI,sBAAsB,KAAK,SAAS,QAAQ,EAAE,KAAK,uBAAuB,CAAC;AAC/E,aAAO,KAAK,SAAS,QAAQ,KAAK,IAAI,MAAM;AAE1C,mBAAW,MAAM;AAEf,gBAAM,UAAU,KAAK,SAAS,QAAQ;AAEtC,gBAAM,qBAAqB,QAAQ,KAAK,uBAAuB,CAAC;AAChE,gBAAM,aAAa,KAAK,UAAU;AAClC,cAAI,cAAc,KAAK,UAAU,aAAa,oBAAoB;AAGhE,kBAAM,uBAAuB,CAAC,uBAAuB,CAAC,KAAK,UAAU,YAAY,oBAAoB,OAAO,mBAAmB,KAAK;AAGpI,gBAAI,wBAAwB,CAAC,WAAW,cAAc,CAAC,QAAQ,KAAK,YAAU,KAAK,UAAU,YAAY,OAAO,OAAO,WAAW,YAAY,KAAK,CAAC,GAAG;AACrJ,yBAAW,cAAc,KAAK,uBAAuB,CAAC;AAAA,YACxD;AAEA,uBAAW,MAAM;AACf,mBAAK,iBAAiB;AAAA,YACxB,CAAC;AAAA,UACH;AAEA,gCAAsB;AAAA,QACxB,CAAC;AAAA,MACH,CAAC,CAAC;AAAA,IACJ,CAAC,CAAC,EAAE,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU;AAG/C,SAAK,qBAAqB,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,wBAAsB;AAEzF,UAAI,KAAK,WAAW;AAClB,YAAI,oBAAoB;AACtB,eAAK,UAAU,gBAAgB,EAAE,UAAU,IAAI,oCAAoC;AAAA,QACrF,OAAO;AACL,eAAK,UAAU,gBAAgB,EAAE,UAAU,OAAO,oCAAoC;AAAA,QACxF;AAAA,MACF;AAAA,IACF,CAAC;AAED,SAAK,eAAe,OAAO,EAAE,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM;AAC5E,UAAI,KAAK,UAAU,WAAW;AAC5B,aAAK,iBAAiB;AAAA,MACxB;AAAA,IACF,CAAC;AACD,SAAK,qBAAqB;AAC1B,SAAK,aAAa,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM;AAEjE,WAAK,kBAAkB,aAAa;AAAA,IACtC,CAAC;AAAA,EACH;AAAA,EACA,8BAA8B,OAAO;AACnC,SAAK,UAAU,KAAK,KAAK;AAAA,EAC3B;AAAA,EACA,cAAc;AACZ,SAAK,WAAW,KAAK;AACrB,SAAK,WAAW,SAAS;AAAA,EAC3B;AAAA,EACA,8BAA8B;AAC5B,WAAO,KAAK,UAAU,YAAY,KAAK;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,OAAO;AAGpB,QAAI,MAAM,OAAO,MAAM,IAAI,WAAW,KAAK,KAAK,iCAAiC,MAAM,QAAQ,UAAU,MAAM,QAAQ,QAAQ;AAC7H,YAAM,gBAAgB;AAAA,IACxB;AACA,QAAI,KAAK,UAAU,YAAY,MAAM,OAAO,MAAM,QAAQ,SAAS;AAEjE,iBAAW,MAAM,KAAK,OAAO,CAAC;AAAA,IAChC;AAEA,QAAI,KAAK,8BAA8B,MAAM,QAAQ,YAAY,KAAK,OAAO;AAC3E,WAAK,OAAO,IAAI;AAChB,YAAM,gBAAgB;AAAA,IACxB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,OAAO;AAClB,QAAI,MAAM,QAAQ,aAAa,MAAM,QAAQ,aAAa;AACxD,YAAM,yBAAyB,KAAK,UAAU,yBAAyB;AACvE,YAAM,QAAQ,KAAK,SAAS,QAAQ,EAAE,UAAU,UAAQ,KAAK,OAAO,sBAAsB;AAC1F,UAAI,UAAU,IAAI;AAChB,aAAK,yBAAyB;AAC9B,aAAK,mBAAmB,KAAK,SAAS,QAAQ,EAAE,KAAK,EAAE,gBAAgB;AACvE,aAAK,iBAAiB,aAAa,iBAAiB,MAAM;AAC1D,aAAK,kBAAkB,cAAc,aAAa,yBAAyB,sBAAsB;AAAA,MACnG;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW,OAAO;AAChB,SAAK,0BAA0B;AAC/B,SAAK,aAAa,SAAS,KAAK;AAChC,SAAK,kBAAkB,aAAa;AAAA,EACtC;AAAA,EACA,SAAS;AACP,SAAK,yBAAyB;AAC9B,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,iBAAiB,IAAI;AACnB,SAAK,aAAa,aAAa,KAAK,OAAO,WAAS,UAAU,KAAK,uBAAuB,GAAG,IAAI,MAAM,KAAK,0BAA0B,MAAS,GAAG,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,EAAE;AAAA,EAC5L;AAAA,EACA,kBAAkB,IAAI;AACpB,SAAK,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS;AACP,QAAI,CAAC,KAAK,qBAAqB,CAAC,KAAK,UAAU,OAAO;AACpD;AAAA,IACF;AAGA,UAAM,QAAQ,KAAK,UAAU,MAAM;AACnC,UAAM,YAAY,MAAM;AAExB,SAAK,kBAAkB,cAAc,MAAM;AAC3C,UAAM,YAAY;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,OAAO;AACZ,SAAK,aAAa,SAAS,EAAE;AAC7B,QAAI,OAAO;AACT,WAAK,OAAO;AAAA,IACd;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,uBAAuB;AACrB,QAAI,CAAC,KAAK,UAAU,WAAW;AAC7B,UAAI,KAAK,UAAU,UAAU;AAG3B,gBAAQ,MAAM,iHAAiH;AAAA,MACjI;AACA;AAAA,IACF;AAIA,SAAK,yBAAyB,KAAK,UAAU,UAAU;AACvD,QAAI,CAAC,KAAK,UAAU,UAAU,cAAc;AAC1C;AAAA,IACF;AACA,SAAK,UAAU,UAAU,aAAa,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,YAAU;AACzF,UAAI,wBAAwB;AAC5B,UAAI,KAAK,UAAU,UAAU;AAC3B,aAAK,KAAK,qCAAqC,KAAK,aAAa,SAAS,KAAK,aAAa,MAAM,WAAW,KAAK,0BAA0B,MAAM,QAAQ,KAAK,sBAAsB,GAAG;AACtL,cAAI,CAAC,UAAU,CAAC,MAAM,QAAQ,MAAM,GAAG;AACrC,qBAAS,CAAC;AAAA,UACZ;AACA,gBAAM,eAAe,KAAK,UAAU,QAAQ,IAAI,YAAU,OAAO,KAAK;AACtE,eAAK,uBAAuB,QAAQ,mBAAiB;AACnD,gBAAI,CAAC,OAAO,KAAK,OAAK,KAAK,UAAU,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,aAAa,KAAK,OAAK,KAAK,UAAU,YAAY,GAAG,aAAa,CAAC,GAAG;AAG5I,kBAAI,KAAK,qBAAqB;AAC5B,yBAAS,CAAC,GAAG,QAAQ,aAAa;AAAA,cACpC,OAAO;AACL,uBAAO,KAAK,aAAa;AAAA,cAC3B;AACA,sCAAwB;AAAA,YAC1B;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AACA,WAAK,yBAAyB;AAC9B,UAAI,uBAAuB;AACzB,aAAK,UAAU,UAAU,MAAM;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,mBAAmB;AACjB,QAAI,CAAC,KAAK,qBAAqB,CAAC,KAAK,kBAAkB,eAAe;AACpE;AAAA,IACF;AACA,QAAI,UAAU,KAAK,kBAAkB;AACrC,QAAI,eAAe;AACnB,WAAO,WAAW,QAAQ,eAAe;AACvC,gBAAU,QAAQ;AAClB,UAAI,QAAQ,UAAU,SAAS,kBAAkB,GAAG;AAClD,uBAAe;AACf;AAAA,MACF;AAAA,IACF;AACA,QAAI,cAAc;AAChB,WAAK,kBAAkB,cAAc,MAAM,QAAQ,aAAa,cAAc;AAAA,IAChF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,yBAAyB;AACvB,QAAI,KAAK,WAAW;AAClB,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,2BAA2B;AACzB,SAAK,kBAAkB,gBAAgB,eAAe;AACtD,SAAK,kBAAkB,cAAc,gBAAgB,uBAAuB;AAAA,EAC9E;AAAA,EACA,OAAO,YAAO,SAAS,iCAAiC,mBAAmB;AACzE,WAAO,KAAK,qBAAqB,2BAA6B,4BAAkB,SAAS,GAAM,4BAAqB,iBAAiB,GAAM,4BAAqB,aAAa,GAAM,4BAAkB,WAAW,CAAC,GAAM,4BAAkB,cAAc,CAAC,GAAM,4BAAkB,kCAAkC,CAAC,CAAC;AAAA,EACtT;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,uBAAuB,CAAC;AAAA,IACrC,gBAAgB,SAAS,wCAAwC,IAAI,KAAK,UAAU;AAClF,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,UAAU,+BAA+B,CAAC;AAC5D,QAAG,yBAAe,UAAU,kCAAkC,CAAC;AAAA,MACjE;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,YAAY,GAAG;AAChE,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,iBAAiB,GAAG;AAAA,MACvE;AAAA,IACF;AAAA,IACA,WAAW,SAAS,+BAA+B,IAAI,KAAK;AAC1D,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,KAAK,GAAG,UAAU;AACjC,QAAG,sBAAY,KAAK,GAAG,UAAU;AAAA,MACnC;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,oBAAoB,GAAG;AACxE,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,oBAAoB,GAAG;AAAA,MAC1E;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,kBAAkB;AAAA,MAClB,MAAM;AAAA,MACN,WAAW;AAAA,MACX,cAAc;AAAA,MACd,qBAAqB;AAAA,MACrB,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,4BAA4B;AAAA,MAC5B,8BAA8B;AAAA,MAC9B,uCAAuC;AAAA,MACvC,WAAW;AAAA,MACX,uBAAuB;AAAA,MACvB,0BAA0B;AAAA,MAC1B,gCAAgC;AAAA,MAChC,iCAAiC;AAAA,MACjC,kCAAkC;AAAA,MAClC,uBAAuB;AAAA,MACvB,mCAAmC;AAAA,MACnC,qBAAqB;AAAA,IACvB;AAAA,IACA,SAAS;AAAA,MACP,WAAW;AAAA,IACb;AAAA,IACA,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa,WAAW,MAAM,yBAAwB;AAAA,MACtD,OAAO;AAAA,IACT,CAAC,CAAC,CAAC;AAAA,IACH,oBAAoB;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,qBAAqB,EAAE,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,YAAY,IAAI,GAAG,2BAA2B,0BAA0B,GAAG,CAAC,GAAG,2BAA2B,kBAAkB,0BAA0B,gBAAgB,GAAG,CAAC,GAAG,6BAA6B,GAAG,CAAC,mBAAmB,4CAA4C,GAAG,yCAAyC,GAAG,SAAS,WAAW,iBAAiB,cAAc,oBAAoB,GAAG,CAAC,gBAAgB,OAAO,GAAG,2BAA2B,GAAG,WAAW,SAAS,QAAQ,QAAQ,eAAe,aAAa,GAAG,CAAC,YAAY,MAAM,GAAG,2BAA2B,GAAG,CAAC,mBAAmB,IAAI,cAAc,SAAS,GAAG,yBAAyB,GAAG,CAAC,GAAG,oCAAoC,GAAG,CAAC,mBAAmB,4CAA4C,GAAG,yCAAyC,GAAG,UAAU,SAAS,WAAW,iBAAiB,cAAc,oBAAoB,GAAG,CAAC,mBAAmB,IAAI,cAAc,SAAS,GAAG,2BAA2B,GAAG,OAAO,GAAG,CAAC,GAAG,SAAS,CAAC;AAAA,IAC1hC,UAAU,SAAS,kCAAkC,IAAI,KAAK;AAC5D,UAAI,KAAK,GAAG;AACV,cAAM,MAAS,2BAAiB;AAChC,QAAG,0BAAgB,GAAG;AACtB,QAAG,oBAAU,GAAG,SAAS,CAAC;AAC1B,QAAG,yBAAe,GAAG,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC;AAC7C,QAAG,8BAAoB,GAAG,iDAAiD,GAAG,GAAG,gBAAgB,CAAC;AAClG,QAAG,yBAAe,GAAG,SAAS,GAAG,CAAC;AAClC,QAAG,qBAAW,WAAW,SAAS,2DAA2D,QAAQ;AACnG,UAAG,wBAAc,GAAG;AACpB,iBAAU,sBAAY,IAAI,eAAe,MAAM,CAAC;AAAA,QAClD,CAAC,EAAE,SAAS,SAAS,yDAAyD,QAAQ;AACpF,UAAG,wBAAc,GAAG;AACpB,iBAAU,sBAAY,IAAI,aAAa,MAAM,CAAC;AAAA,QAChD,CAAC,EAAE,QAAQ,SAAS,0DAA0D;AAC5E,UAAG,wBAAc,GAAG;AACpB,iBAAU,sBAAY,IAAI,OAAO,CAAC;AAAA,QACpC,CAAC;AACD,QAAG,uBAAa;AAChB,QAAG,8BAAoB,GAAG,iDAAiD,GAAG,GAAG,eAAe,CAAC;AACjG,QAAG,8BAAoB,GAAG,iDAAiD,GAAG,GAAG,UAAU,CAAC;AAC5F,QAAG,uBAAa,CAAC;AACjB,QAAG,uBAAa;AAChB,QAAG,oBAAU,IAAI,aAAa;AAC9B,QAAG,uBAAa;AAChB,QAAG,8BAAoB,IAAI,kDAAkD,GAAG,GAAG,OAAO,CAAC;AAC3F,QAAG,iBAAO,IAAI,OAAO;AAAA,MACvB;AACA,UAAI,KAAK,GAAG;AACV,QAAG,oBAAU;AACb,QAAG,sBAAY,oCAAoC,IAAI,UAAU,QAAQ,EAAE,sCAAsC,IAAI,4BAA4B,CAAC;AAClJ,QAAG,oBAAU,CAAC;AACd,QAAG,wBAAc,IAAI,4BAA4B,IAAI,IAAI,EAAE;AAC3D,QAAG,oBAAU;AACb,QAAG,qBAAW,QAAQ,IAAI,IAAI,EAAE,eAAe,IAAI,YAAY,EAAE,eAAe,IAAI,gBAAgB;AACpG,QAAG,sBAAY,cAAc,IAAI,SAAS;AAC1C,QAAG,oBAAU,CAAC;AACd,QAAG,wBAAc,IAAI,YAAY,IAAI,EAAE;AACvC,QAAG,oBAAU;AACb,QAAG,wBAAc,CAAC,IAAI,yBAAyB,IAAI,SAAS,CAAC,IAAI,YAAY,IAAI,EAAE;AACnF,QAAG,oBAAU,CAAC;AACd,QAAG,wBAAiB,sBAAY,IAAI,IAAI,IAAI,oBAAoB,IAAI,KAAK,EAAE;AAAA,MAC7E;AAAA,IACF;AAAA,IACA,cAAc,CAAC,WAAW,qBAAwB,sBAAyB,iBAAoB,sBAAsB,aAAa,YAAY,YAAY,oBAAoB,SAAS,iBAAoB,aAAa;AAAA,IACxN,QAAQ,CAAC,++EAA++E;AAAA,IACx/E,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,0BAA0B,CAAC;AAAA,IACjG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa,WAAW,MAAM,wBAAwB;AAAA,QACtD,OAAO;AAAA,MACT,CAAC;AAAA,MACD,SAAS,CAAC,WAAW,qBAAqB,aAAa,YAAY,YAAY,oBAAoB,SAAS,eAAe;AAAA,MAC3H,iBAAiB,wBAAwB;AAAA,MACzC,UAAU;AAAA,MACV,QAAQ,CAAC,i5DAAi5D;AAAA,IAC55D,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,SAAS;AAAA,IAClB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,SAAS;AAAA,IAClB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,gCAAgC;AAAA,IACzC,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,4BAA4B,CAAC;AAAA,MAC3B,MAAM;AAAA,IACR,CAAC;AAAA,IACD,8BAA8B,CAAC;AAAA,MAC7B,MAAM;AAAA,IACR,CAAC;AAAA,IACD,uCAAuC,CAAC;AAAA,MACtC,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,uBAAuB,CAAC;AAAA,MACtB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,0BAA0B,CAAC;AAAA,MACzB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gCAAgC,CAAC;AAAA,MAC/B,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iCAAiC,CAAC;AAAA,MAChC,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kCAAkC,CAAC;AAAA,MACjC,MAAM;AAAA,IACR,CAAC;AAAA,IACD,uBAAuB,CAAC;AAAA,MACtB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mCAAmC,CAAC;AAAA,MAClC,MAAM;AAAA,IACR,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC,qBAAqB;AAAA,QAC1B,MAAM;AAAA,QACN,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC,qBAAqB;AAAA,QAC1B,MAAM;AAAA,QACN,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,6BAA6B;AAAA,IACtC,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,gCAAgC;AAAA,IACzC,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AASH,IAAM,2BAAN,MAAM,0BAAyB;AAAA,EAC7B,OAAO,YAAO,SAAS,iCAAiC,mBAAmB;AACzE,WAAO,KAAK,qBAAqB,2BAA0B;AAAA,EAC7D;AAAA,EACA,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,MAAM;AAAA,IACN,SAAS,CAAC,0BAA0B,+BAA+B,gCAAgC;AAAA,IACnG,SAAS,CAAC,0BAA0B,+BAA+B,gCAAgC;AAAA,EACrG,CAAC;AAAA,EACD,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,SAAS,CAAC,wBAAwB;AAAA,EACpC,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,0BAA0B,CAAC;AAAA,IACjG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,0BAA0B,+BAA+B,gCAAgC;AAAA,MACnG,SAAS,CAAC,0BAA0B,+BAA+B,gCAAgC;AAAA,IACrG,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACj5BG,IAAO,uBAAP,MAAO,qBAAmB;EAHhC,cAAA;AAIU,SAAA,UAAU,OAAO,cAAc;AAC/B,SAAA,OAAO,OAAO,mBAAmB;AAGzC,SAAA,cAAsB,wFAAwF,KAAK,KAAK,eAAe;;EAEvI,qBAAqB,IAAE;AACrB,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,UAAU;AACd,QAAI,IAAI,KAAK,iBAAiB,SAAS,KAAK,cAAc,SAAS,KAAK,OAAO;AAC/E,WAAO,KAAK,QAAQ,QAAQ,CAAC,EAAE,KAAK,IAAI,SAAO,KAAK,eAAe,GAAG,CAAC,CAAC;EAC1E;EAEA,eAAe,KAAG;AAChB,QAAI,QAAQ,QAAW;AACrB,UAAI,IAAI,YAAY,QAAW;AAC7B,YAAI,IAAI,IAAI,QAAQ;AACpB,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,YAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,QACnC,wCAAwC,EAAE;QAC9C;AAAC;AAEH,UAAE,KAAK,CAAC,GAAG,MAAK;AACZ,cAAG,EAAE,UAAU,MAAM,YAAW,IAAG,EAAE,UAAU,MAAM,YAAW,GAAI;AAAE,mBAAO;UAAI;AAChF,cAAG,EAAE,UAAU,MAAM,YAAW,IAAG,EAAE,UAAU,MAAM,YAAW,GAAI;AAAE,mBAAO;UAAG;AACjF,iBAAO;QACT,CAAC;MAEH;IACF;AACA,WAAO,IAAI,QAAQ;EACrB;EAEA,iBAAiB,SAAe;AAC9B,UAAM,YAAY;AAClB,QAAI,YAAY;AAChB,QAAI,QAAQ,SAAS,YAAY,GAAG;AAAE,kBAAY;IAAiD;AAAC;AACpG,QAAI,YAAY;AAAW,gBAAU,QAAQ,QAAQ,WAAW,SAAS;AACzE,WAAO;EACT;;;mCAzCW,sBAAmB;AAAA;wFAAnB,sBAAmB,SAAnB,qBAAmB,WAAA,YAFlB,OAAM,CAAA;AAEd,IAAO,sBAAP;;sEAAO,qBAAmB,CAAA;UAH/B;WAAW;MACV,YAAY;KACb;;;;;ACCK,IAAO,yBAAP,MAAO,uBAAqB;EAHlC,cAAA;AAIU,SAAA,UAAU,OAAO,cAAc;AAC/B,SAAA,OAAO,OAAO,mBAAmB;AAGzC,SAAA,cAAsB,wFAAwF,KAAK,KAAK,eAAe;;EAGvI,uBAAuB,IAAE;AACvB,QAAI,SAAS;AACb,QAAI,UAAU;AACd,QAAI,SAAS;AACb,QAAI,UAAU,SAAS,KAAK,cAAc,UAAU,KAAK;AACzD,YAAQ,IAAI,OAAO;AACnB,QAAI,IAAI,KAAK,iBAAiB,OAAO;AACrC,YAAQ,IAAI,CAAC;AACb,WAAO,KAAK,QAAQ,QAAQ,CAAC,EAAE,KAAK,IAAI,SAAO,KAAK,wBAAwB,GAAG,CAAC,CAAC;EACnF;EAEA,wBAAwB,IAAE;AACxB,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,UAAU;AACd,YAAQ,IAAI,SAAS,KAAK,cAAc,SAAS,KAAK,OAAO;AAC7D,QAAI,IAAI,KAAK,iBAAiB,SAAS,KAAK,cAAc,SAAS,KAAK,OAAO;AAC/E,WAAO,KAAK,QAAQ,QAAQ,CAAC,EAAE,KAAK,IAAI,SAAO,KAAK,eAAe,GAAG,CAAC,CAAC;EAC1E;EAEA,IAAI,kCAA+B;AACjC,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI;AACJ,QAAI,IAAI,KAAK,iBAAiB,SAAS,KAAK,cAAc,MAAM;AAEhE,WAAO,KAAK,QAAQ,QAAQ,CAAC,EAAE,KAAK,IAAI,SAAO,KAAK,eAAe,GAAG,CAAC,GAAG,IAAI,SAAO,KAAK,wBAAwB,GAAG,CAAC,CAAC;EACzH;EAIA,eAAe,KAAG;AAChB,QAAI,QAAQ,QAAW;AACrB,UAAI,IAAI,YAAY,QAAW;AAC7B,YAAI,IAAI,IAAI,QAAQ;AACpB,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,YAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,QACnC,wCAAwC,EAAE;QAC9C;AAAC;AAED,UAAE,KAAK,CAAC,GAAG,MAAK;AACd,cAAI,EAAE,UAAU,MAAM,YAAW,IAAK,EAAE,UAAU,MAAM,YAAW,GAAI;AAAE,mBAAO;UAAI;AACpF,cAAI,EAAE,UAAU,MAAM,YAAW,IAAK,EAAE,UAAU,MAAM,YAAW,GAAI;AAAE,mBAAO;UAAG;AACnF,iBAAO;QACT,CAAC;MAEH;IACF;AACA,WAAO,IAAI,QAAQ;EACrB;EAEA,iBAAiB,SAAe;AAC9B,UAAM,YAAY;AAClB,QAAI,YAAY;AAChB,QAAI,QAAQ,SAAS,YAAY,GAAG;AAAE,kBAAY;IAAiD;AAAC;AACpG,QAAI,YAAY;AAAW,gBAAU,QAAQ,QAAQ,WAAW,SAAS;AACzE,WAAO;EACT;EAEA,eAAY;AACV,QAAI,IAAI;AACR,QAAI,KAAK,KAAK,iBAAiB,MAAM;AAAE,UAAI;IAA+B;AAAC;AAC3E,QAAI,KAAK,KAAK,iBAAiB,MAAM;AAAE,UAAI;IAA8C;AAAC;AAC1F,QAAI,KAAK,KAAK,iBAAiB,MAAM;AAAE,UAAI;IAA8C;AAAC;AAC1F,QAAI,KAAK,KAAK,iBAAiB,MAAM;AAAE,UAAI;IAA2B;AAAC;AACvE,WAAO;EACT;EAEA,WAAW,MAAI;AACb,QAAI,SAAS,QAAW;AACtB,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAI,OAAO,KAAK,gBAAgB,KAAK,CAAC,EAAE,cAAc,EAAE,OAAO,4BAA4B;AAC3F,aAAK,CAAC,EAAE,WAAW,EAAE,QAAQ,KAAK,CAAC,EAAE,WAAW,EAAE,QAAQ,OAAO,OAAO;MAC1E;AAAC;IACH;AACA,WAAO;EACT;EAEA,wBAAwB,KAAG;AACzB,QAAI,QAAQ,UAAa,IAAI,YAAY,QAAW;AAClD,UAAI,IAAI,IAAI,QAAQ;AACpB,aAAO,EAAE,IAAI,UAAO;AAClB,cAAM,QAAQ,KAAK,UAAU;AAC7B,cAAM,OAAO,KAAK,aAAa,MAAM,QAAQ,8BAA8B,EAAE;AAC7E,eAAO;UACL;UACA,IAAI,KAAK,KAAK,MAAM,QAAQ,wCAAwC,EAAE;UACtE;UACA,OAAO,GAAG,KAAK,KAAK,IAAI;;;MAE5B,CAAC,EAAE,KAAK,CAAC,GAAG,MAAK;AACf,YAAI,EAAE,MAAM,YAAW,IAAK,EAAE,MAAM,YAAW,GAAI;AAAE,iBAAO;QAAI;AAChE,YAAI,EAAE,MAAM,YAAW,IAAK,EAAE,MAAM,YAAW,GAAI;AAAE,iBAAO;QAAG;AAC/D,eAAO;MACT,CAAC;IACH;AACA,WAAO,CAAA;EACT;EAGD,gBAAgB,KAAK,WAAS;AAC7B,UAAM,QAAQ,IAAI,OAAO,WAAW,GAAG;AACvC,WAAO,IAAI,QAAQ,OAAO,EAAE;EAC9B;;;mCA/Ga,wBAAqB;AAAA;0FAArB,wBAAqB,SAArB,uBAAqB,WAAA,YAFpB,OAAM,CAAA;AAEd,IAAO,wBAAP;;sEAAO,uBAAqB,CAAA;UAHjC;WAAW;MACV,YAAY;KACb;;;;;;;;AEKO,IAAA,yBAAA,GAAA,cAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFiE,IAAA,qBAAA,SAAA,WAAA,KAAA,EAAA;AAC/D,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,UAAA,OAAA,GAAA;;;ADoBJ,IAAO,0BAAP,MAAO,wBAAsB;EApBnC,cAAA;AAsBU,SAAA,cAAc,OAAO,kBAAkB;AACvC,SAAA,OAAO,OAAO,mBAAmB;AACjC,SAAA,cAAc,OAAO,WAAW;AAG/B,SAAA,mBAAmB;AAarB,SAAA,qBAAqB,IAAI,YAAW;AAGpC,SAAA,yBAA8C,IAAI,YAAoB,EAAE;AAGxE,SAAA,uBAA2C,IAAI,cAAmB,CAAC;AAKhE,SAAA,kBAAiD,IAAI,aAAY;AAEjE,SAAA,aAAa,IAAI,QAAO;;EAxBlC,IAAa,KAAK,MAAW;AAC3B,SAAK,QAAQ;AAEb,SAAK,qBAAqB,KAAK,KAAK,KAAK,MAAK,CAAE;EAClD;EACA,IAAI,OAAI;AACN,WAAO,KAAK;EACd;EAmBA,WAAQ;AAEN,SAAK,uBAAuB,aACzB,KAAK,UAAU,KAAK,UAAU,CAAC,EAC/B,UAAU,MAAK;AACd,WAAK,mBAAkB;IACzB,CAAC;EAEL;EAEA,kBAAe;AACb,SAAK,gBAAe;EACtB;EAEU,kBAAe;AACvB,SAAK;EACP;EAEA,eAAe,QAAM;EACrB;EAEU,qBAAkB;AAC1B,QAAI,CAAC,KAAK,MAAM;AACd;IACF;AAEA,QAAI,SAAS,KAAK,uBAAuB;AACzC,QAAI,CAAC,QAAQ;AACX,WAAK,qBAAqB,KAAK,KAAK,KAAK,MAAK,CAAE;AAChD;IACF,OAAO;AACL,eAAS,OAAO,YAAW;IAC7B;AAEA,SAAK,qBAAqB,KACxB,KAAK,KAAK,OAAO,YAAU,OAAO,UAAU,MAAM,YAAW,EAAG,QAAQ,MAAM,IAAI,EAAE,CAAC;EAEzF;EAEA,YAAY,OAAsB;AAChC,SAAK,gBAAgB,KAAK,IAAI,gBAAgB,KAAK,aAAa,MAAM,KAAK,CAAC;EAC9E;EAEA,cAAW;EAEX;;;mCAhFW,yBAAsB;AAAA;wFAAtB,yBAAsB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,WAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;;;;;;;;;AClCnC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA4B,GAAA,OAAA,CAAA,EACgB,GAAA,gBAAA,EACxB,GAAA,cAAA,GAAA,CAAA;AAKF,IAAA,qBAAA,mBAAA,SAAA,sEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAmB,IAAA,YAAA,MAAA,CAAmB;IAAA,CAAA;AAChD,IAAA,yBAAA,GAAA,YAAA;AACE,IAAA,oBAAA,GAAA,yBAAA,CAAA;AAGF,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,8CAAA,GAAA,GAAA,cAAA,CAAA;;AAGF,IAAA,uBAAA,EAAa,EACE,EACb;;;AAfU,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,IAAA,kBAAA,EAAkC,YAAA,IAAA;AAMnB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,IAAA,sBAAA;AAIO,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,sBAAA,GAAA,GAAA,IAAA,oBAAA,CAAA;;;EDMpC;EAAY;EAAA;EACZ;EAAmB;EAAA;EACnB;EACA;EACA;EACA;EACA;EAAe;EAAA;EAAA;EACf;EAEA;EAAwB;AAAA,GAAA,QAAA,CAAA,iYAAA,EAAA,CAAA;AAMtB,IAAO,yBAAP;;sEAAO,wBAAsB,CAAA;UApBlC;uBAEW,sBAAoB,YAClB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UAAA,62BAAA,QAAA,CAAA,+WAAA,EAAA,CAAA;cAYQ,kBAAgB,CAAA;UAAxB;MAEY,MAAI,CAAA;UAAhB;MAoB2C,aAAW,CAAA;UAAtD;WAAU,eAAe,EAAE,QAAQ,KAAI,CAAE;MAEhC,iBAAe,CAAA;UAAxB;;;;6EA/BU,wBAAsB,EAAA,WAAA,0BAAA,UAAA,6EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEzB7B,IAAO,uBAAP,MAAO,qBAAmB;EAHhC,cAAA;AAIU,SAAA,UAAU,OAAO,cAAc;AAC/B,SAAA,OAAO,OAAO,mBAAmB;AAKjC,SAAA,aAAa;AACb,SAAA,eAAe;;EAEvB,MAAM,IAAkB;AACvB,OAAG;MACF,aAAa,GAAG;MAChB,UAAU,WAAS,KAAK,QAAQ,WAAW,OAAO,KAAK,KAAK,YAAY,CAAC;MACzE,IAAI,SAAO,KAAK,WAAW,GAAG,CAAC;MAC/B,IAAI,SAAO,OAAO,2FAChB,kGAAkG,GAAG;MACvG,aAAa,GAAG;MAChB,UAAU,SAAO,KAAK,QAAQ,QAAQ,GAAG,CAAC;;;MAG1C,OAAO,SAAO,QAAQ,MAAS;IAAC;EAElC;EAGA,WAAW,IAAE;AACX,QAAI,OAAO;AACX,QAAI,MAAM;AACV,QAAI,MAAM,GAAG;AACb,QAAI,QAAQ,QAAW;AAAE,YAAM,CAAA;IAAG,OAC7B;AAAE,YAAM;IAAI;AAAC;AAClB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,aAAO,OAAO,MAAM,IAAI,CAAC,EAAE;IAC7B;AAAC;AACD,WAAO,KAAK,MAAM,CAAC;AACnB,UAAM,KAAK,aAAa,OAAO,KAAK;AACpC,WAAO;EACT;;;mCAtCW,sBAAmB;AAAA;wFAAnB,sBAAmB,SAAnB,qBAAmB,WAAA,YAFlB,OAAM,CAAA;AAEd,IAAO,sBAAP;;sEAAO,qBAAmB,CAAA;UAH/B;WAAW;MACV,YAAY;KACb;;;;;AC0BM,IAAM,YAAwB;EACnC,EAAE,OAAO,aAAa,IAAI,WAAW,OAAM,EAAC;EAC5C,EAAE,OAAO,YAAY,IAAI,UAAU,OAAO,EAAC;EAC3C,EAAE,OAAO,aAAa,IAAI,WAAW,OAAO,EAAC;EAC7C,EAAE,OAAO,SAAS,IAAI,WAAW,OAAO,EAAC;EACzC,EAAE,OAAO,WAAW,IAAI,UAAU,OAAO,EAAC;EAC1C,EAAE,OAAO,SAAS,IAAI,UAAU,OAAO,EAAC;EACxC,EAAE,OAAO,YAAY,IAAI,UAAU,OAAO,EAAC;EAC3C,EAAE,OAAO,YAAY,IAAI,UAAU,OAAO,EAAC;EAC3C,EAAE,OAAO,SAAS,IAAI,UAAU,OAAO,EAAC;EACxC,EAAE,OAAO,aAAa,IAAI,UAAU,OAAO,EAAC;EAC5C,EAAE,OAAO,cAAc,IAAI,WAAW,OAAO,EAAC;EAC9C,EAAE,OAAO,UAAU,IAAI,UAAU,OAAO,EAAC;EACzC,EAAE,OAAO,gBAAgB,IAAI,UAAU,OAAO,EAAC;EAC/C,EAAE,OAAO,UAAU,IAAI,UAAU,OAAO,EAAC;EACzC,EAAE,OAAO,UAAU,IAAI,UAAU,OAAO,EAAC;EACzC,EAAE,OAAO,eAAe,IAAI,UAAU,OAAO,EAAC;EAC9C,EAAE,OAAO,SAAS,IAAI,UAAU,OAAO,EAAC;EACxC,EAAE,OAAO,WAAW,IAAI,WAAW,OAAO,EAAC;EAC3C,EAAE,OAAO,iBAAiB,IAAI,UAAU,OAAO,EAAC;EAChD,EAAE,OAAO,WAAW,IAAI,UAAW,OAAO,EAAC;EAC3C,EAAE,OAAO,WAAW,IAAI,UAAW,OAAO,EAAC;EAC7C,EAAE,OAAO,UAAU,IAAI,UAAU,OAAO,EAAC;EACzC,EAAE,OAAO,qBAAqB,IAAI,WAAW,OAAO,EAAC;EACrD,EAAE,OAAO,eAAe,IAAI,WAAW,OAAO,EAAC;EAC7C,EAAE,OAAO,gBAAgB,IAAI,UAAU,OAAO,EAAC;;AAM1C,IAAM,WAAuB;EAClC,EAAE,OAAO,wBAAwB,MAAM,UAAU,KAAK,EAAC;EACvD,EAAE,OAAO,2BAA2B,MAAM,QAAQ,KAAK,EAAC;EACxD,EAAE,OAAO,gBAAgB,MAAK,YAAY,KAAI,EAAC;EAC/C,EAAE,OAAO,QAAQ,MAAM,OAAO,KAAK,EAAC;EACpC,EAAE,OAAO,QAAQ,MAAM,OAAO,KAAK,EAAC;EACpC,EAAE,OAAO,QAAQ,MAAM,OAAO,KAAK,EAAC;EACpC,EAAE,OAAO,SAAS,MAAM,QAAQ,KAAK,EAAC;EACtC,EAAE,OAAO,UAAU,MAAM,QAAQ,KAAK,EAAC;EACvC,EAAE,OAAO,UAAU,MAAM,QAAQ,KAAK,EAAC;EACvC,EAAE,OAAO,UAAU,MAAM,QAAQ,KAAK,EAAC;EACvC,EAAE,OAAO,UAAU,MAAM,QAAQ,KAAK,EAAC;EACvC,EAAE,OAAO,UAAU,MAAM,QAAQ,KAAK,EAAC;EACvC,EAAE,OAAO,WAAW,MAAM,UAAU,KAAK,EAAC;EAC1C,EAAE,OAAO,YAAY,MAAM,UAAU,KAAK,EAAC;EAC3C,EAAE,OAAO,YAAY,MAAM,UAAU,KAAK,EAAC;EAC3C,EAAE,OAAO,YAAY,MAAM,UAAU,KAAK,EAAC;EAC3C,EAAE,OAAO,YAAY,MAAM,UAAU,KAAK,EAAC;;;;;;EAM3C,EAAE,OAAO,WAAW,MAAM,YAAY,KAAK,EAAC;EAC5C,EAAE,OAAO,YAAY,MAAM,YAAY,KAAK,EAAC;EAC7C,EAAE,OAAO,YAAY,MAAM,YAAY,KAAK,EAAC;EAC7C,EAAE,OAAO,YAAY,MAAM,YAAY,KAAK,EAAC;EAC7C,EAAE,OAAO,WAAW,MAAM,YAAY,KAAK,EAAC;EAC5C,EAAE,OAAO,YAAY,MAAM,YAAY,KAAK,EAAC;EAC7C,EAAE,OAAO,YAAY,MAAM,YAAY,KAAK,EAAC;EAC7C,EAAE,OAAO,YAAY,MAAM,YAAY,KAAK,EAAC;;AAGxC,IAAM,iBAA2B,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAE5E,IAAM,UAAwB;EACnC,CAAC,EAAE,OAAO,aAAa,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,SAAS,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,SAAS,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,SAAS,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,eAAe,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,SAAS,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,qBAAqB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,eAAe,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,UAAU,KAAK,GAAE,CAAE;EACrlC,CAAC,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,eAAe,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,kBAAkB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,sBAAsB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAI,GAAE,CAAC;EAC3mC,CAAC,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,eAAe,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,kBAAkB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,sBAAsB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAI,GAAE,CAAC;EAC3mC,CAAC,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,eAAe,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,kBAAkB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,sBAAsB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAI,GAAE,CAAC;EAC3mC,CAAC,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,eAAe,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,kBAAkB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,sBAAsB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAI,GAAE,CAAC;EAC3mC,CAAC,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,aAAa,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,cAAc,IAAI,UAAU,KAAK,EAAC,GAAI,EAAE,OAAO,eAAe,IAAI,WAAW,KAAK,EAAC,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,UAAU,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,kBAAkB,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,YAAY,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,WAAW,IAAI,UAAU,KAAK,GAAE,GAAI,EAAE,OAAO,sBAAsB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,gBAAgB,IAAI,WAAW,KAAK,GAAE,GAAI,EAAE,OAAO,iBAAiB,IAAI,UAAU,KAAI,GAAE,CAAC;;;;ACnGvmC,IAAO,eAAP,MAAO,aAAW;EACtB,cAAA;AAEA,SAAA,UAAwC,IAAI,gBAAgB,OAAO;AAEnE,SAAA,WAAqC,KAAK,QAAQ,aAAY;AAE9D,SAAA,sBAAqD,IAAI,gBAAgB,OAAO;AAEhF,SAAA,uBAAiD,KAAK,QAAQ,aAAY;AAE1E,SAAA,0BAAwD,IAAI,gBAAgB,OAAO;AAEnF,SAAA,2BAAoD,KAAK,wBAAwB,aAAY;AAa7F,SAAA,YAAyC,IAAI,gBAAgB,SAAS;AAEtE,SAAA,aAAoC,KAAK,UAAU,aAAY;AAE/D,SAAA,aAA0C,IAAI,gBAAgB,CAAA,CAAE;AAEhE,SAAA,cAAsC,KAAK,WAAW,aAAY;AAElE,SAAA,aAA0C,IAAI,gBAAgB,CAAA,CAAE;AAEhE,SAAA,cAAsC,KAAK,WAAW,aAAY;AAElE,SAAA,kBAAiD,IAAI,gBAAgB,CAAC,SAAS,CAAC;AAEhF,SAAA,mBAA6C,KAAK,gBAAgB,aAAY;AAiB9E,SAAA,iBAAwC,IAAI,gBAAgB,CAAA,CAAE;AAE9D,SAAA,kBAAkB,KAAK,eAAe,aAAY;AAIlD,SAAA,mBAA4C,IAAI,gBAAgB,CAAC;AAEjE,SAAA,oBAAwC,KAAK,iBAAiB,aAAY;EAhE1D;EAehB,cAAc,SAAqB;AAAI,SAAK,QAAQ,KAAK,OAAO;EAAE;EAElE,0BAA0B,SAAqB;AAAI,SAAK,oBAAoB,KAAK,OAAO;EAAE;EAE1F,8BAA8B,SAAqB;AAAI,SAAK,wBAAwB,KAAK,OAAO;EAAE;EAwBlG,eAAe,IAA2B;AACxC,WAAO,GAAG,KAAK,IAAI,SAAO,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;EAChD;EAGA,gBAAgB,MAAI;AAAI,SAAK,UAAU,KAAK,IAAI;EAAE;EAElD,iBAAiB,MAAI;AAAI,SAAK,WAAW,KAAK,IAAI;EAAE;EAEpD,iBAAiB,MAAI;AAAI,SAAK,WAAW,KAAK,IAAI;EAAE;EAEpD,sBAAsB,WAAS;AAAI,SAAK,gBAAgB,KAAK,SAAS;EAAE;EAMxE,qBAAqB,MAAI;AAAI,SAAK,eAAe,KAAK,IAAI;EAAE;EAM5D,uBAAuB,GAAC;AAAI,SAAK,iBAAiB,KAAK,CAAC;EAAE;;;mCAnE/C,cAAW;AAAA;gFAAX,cAAW,SAAX,aAAW,WAAA,YAFV,OAAM,CAAA;AAEd,IAAO,cAAP;;sEAAO,aAAW,CAAA;UAHvB;WAAW;MACV,YAAY;KACb;;;;;ACDK,IAAO,6BAAP,MAAO,2BAAyB;EAEpC,cAAA;EAAgB;EAEhB,SAAS,YAAuB,GAAS;AACvC,QAAI,cAAc,WAAW,SAAS,GAAG;AACvC,aAAO,WAAW,GAAG,CAAC,EAAE,IAAI,gBAAgB;IAC9C;AACA,WAAO;EACT;EAGA,UAAU,YAAY,GAAS;AAAI,WAAO,WAAW,GAAG,CAAC,EAAE,IAAI,iBAAiB;EAAE;EAElF,eAAe,YAAY,GAAS;AAAI,WAAO,WAAW,GAAG,CAAC,EAAE,IAAI,YAAY;EAAiB;EAEjG,aAAa,YAAY,GAAS;AAAI,WAAO,WAAW,GAAG,CAAC,EAAE,IAAI,oBAAoB;EAAE;EAExF,cAAc,YAAY,GAAS;AAAI,WAAO,WAAW,GAAG,CAAC,EAAE,IAAI,qBAAqB;EAAE;EAE1F,WAAW,YAAY,GAAS;AAAI,WAAO,WAAW,GAAG,CAAC,EAAE,IAAI,YAAY;EAAe;EAE3F,kBAAkB,YAAY,GAAS;AAAI,WAAO,WAAW,GAAG,CAAC,EAAE,IAAI,mBAAmB;EAAE;EAE5F,eAAe,YAAY,GAAC;AAAK,WAAO,WAAW,GAAG,CAAC,EAAE,SAAS,OAAO,EAAE,IAAI,gBAAgB;EAAE;EAEjG,sBAAsB,YAAY,GAAC;AAAK,WAAO,WAAW,GAAG,CAAC,EAAE,SAAS,OAAO,EAAE,IAAI,uBAAuB;EAAE;EAE/G,uBAAuB,YAAY,GAAS;AAAI,WAAO,WAAW,GAAG,CAAC,EAAE,SAAS,OAAO,EAAE,IAAI,wBAAwB;EAAE;EAExH,oBAAoB,OAAO,YAAY,GAAC;AAAI,QAAI,UAAU,KAAK,eAAe,YAAY,CAAC;AAAG,WAAO,QAAQ,WAAW,OAAO;EAAE;;;mCA9BtH,4BAAyB;AAAA;8FAAzB,4BAAyB,SAAzB,2BAAyB,WAAA,YAFxB,OAAM,CAAA;AAEd,IAAO,4BAAP;;sEAAO,2BAAyB,CAAA;UAHrC;WAAW;MACV,YAAY;KACb;;;;;;;;;;;;4DEgBmC,CAAC;;;AAZH,IAAA,iBAAA,GAAA,cAAA;;;;;AACA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,eAAA,aAAA,SAAA,CAAA,IAAA,GAAA,gBAAA,aAAA,SAAA,CAAA,GAAA,GAAA;;;;;AACyE,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,4BAAA,YAAA,CAAA,CAAA;;;;;AAAvE,IAAA,iBAAA,GAAA,gBAAA;AAAa,IAAA,2BAAA,GAAA,2EAAA,GAAA,GAAA,MAAA,MAAA,mCAAA;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,UAAA;;;;;AAEL,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,aAAA,MAAA,UAAA,CAAA,GAAA,GAAA;;;;;AACG,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,aAAA,MAAA,aAAA,CAAA,GAAA,GAAA;;;;;AACC,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,aAAA,MAAA,eAAA,GAAA;;;;;AAHjB,IAAA,iBAAA,GAAA,cAAA;AACpB,IAAA,8BAAA,GAAA,mFAAA,GAAA,CAAA;AACA,IAAA,8BAAA,GAAA,mFAAA,GAAA,CAAA;AACA,IAAA,8BAAA,GAAA,mFAAA,GAAA,CAAA;;;;AAFA,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,MAAA,YAAA,IAAA,EAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,MAAA,eAAA,IAAA,EAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,MAAA,gBAAA,IAAA,EAAA;;;;;AAQkC,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,eAAA,aAAA,kBAAA,CAAA,IAAA,GAAA,iBAAA,aAAA,kBAAA,CAAA,CAAA;;;;;AAEG,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,gBAAA,aAAA,MAAA,eAAA,CAAA,CAAA;;;;;AACO,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,gBAAA,aAAA,MAAA,sBAAA,CAAA,CAAA;;;;;AACC,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,gBAAA,aAAA,MAAA,sBAAA;;;;;AAF9C,IAAA,8BAAA,GAAA,uGAAA,GAAA,CAAA;AACA,IAAA,8BAAA,GAAA,uGAAA,GAAA,CAAA;AACA,IAAA,8BAAA,GAAA,uGAAA,GAAA,CAAA;;;;AAFA,IAAA,wBAAA,aAAA,MAAA,iBAAA,IAAA,EAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,MAAA,wBAAA,IAAA,EAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,MAAA,yBAAA,IAAA,EAAA;;;;;AALF,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,8BAAA,GAAA,yFAAA,GAAA,CAAA;AACA,IAAA,8BAAA,GAAA,yFAAA,GAAA,CAAA;AAKH,IAAA,uBAAA;;;;AANG,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,oBAAA,IAAA,EAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,QAAA,IAAA,EAAA;;;;;AAJJ,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,2BAAA,GAAA,2EAAA,GAAA,GAAA,OAAA,GAAA,UAAA;AAUF,IAAA,uBAAA;;;;AAVE,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,UAAA;;;;;AAbF,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,8BAAA,GAAA,qEAAA,GAAA,CAAA;AACA,IAAA,8BAAA,GAAA,qEAAA,GAAA,CAAA;AACA,IAAA,8BAAA,GAAA,qEAAA,GAAA,CAAA;AACA,IAAA,8BAAA,GAAA,qEAAA,GAAA,CAAA;AAKF,IAAA,uBAAA;AAEA,IAAA,8BAAA,GAAA,qEAAA,GAAA,GAAA,OAAA,CAAA;;;;AAVE,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,WAAA,IAAA,EAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,WAAA,IAAA,EAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,aAAA,IAAA,EAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,QAAA,IAAA,EAAA;AAOF,IAAA,oBAAA;AAAA,IAAA,wBAAA,aAAA,aAAA,IAAA,EAAA;;;;;AAZA,IAAA,2BAAA,GAAA,uDAAA,GAAA,GAAA,MAAA,MAAA,UAAA;;;;AAAA,IAAA,qBAAA,OAAA,MAAA,MAAA,UAAA;;;;;AAwDU,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFuE,IAAA,qBAAA,SAAA,0BAAA,GAAAA,MAAA,oBAAA,YAAA,OAAA,YAAA,OAAA,YAAA,IAAA,YAAA,KAAA,CAAA;AACrE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,OAAA,GAAA;;;;;AAiBF,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAF2E,IAAA,qBAAA,SAAA,0BAAA,GAAA,KAAA,oBAAA,YAAA,OAAA,YAAA,IAAA,YAAA,IAAA,CAAA;AACzE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,OAAA,GAAA;;;;;AAIJ,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,GAAA,6DAAA;AACF,IAAA,uBAAA;;;;;AAiBI,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFyE,IAAA,qBAAA,SAAA,0BAAA,GAAA,KAAA,oBAAA,cAAA,OAAA,cAAA,KAAA,cAAA,EAAA,CAAA;AACvE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,cAAA,OAAA,IAAA,cAAA,WAAA,IAAA,cAAA,aAAA,GAAA;;;;;;AAXN,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAkC,GAAA,cAAA,IAAA,CAAA;AAGpB,IAAA,qBAAA,mBAAA,SAAA,8FAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAmB,OAAA,cAAA,MAAA,CAAqB;IAAA,CAAA;AAElD,IAAA,yBAAA,GAAA,YAAA;AACE,IAAA,oBAAA,GAAA,yBAAA,EAAA;AAGF,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,sEAAA,GAAA,GAAA,cAAA,EAAA;;AAGF,IAAA,uBAAA,EAAa;;;;;AANc,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,mBAAA;AAGS,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,sBAAA,GAAA,GAAA,OAAA,wBAAA,kBAAA,CAAA,CAAA;;;;;AAclC,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFY,IAAA,qBAAA,SAAA,0BAAA,GAAA,KAAA,oBAAA,oBAAA,OAAA,oBAAA,GAAA,CAAA;AACV,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,oBAAA,OAAA,GAAA;;;;;;AAPN,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAkC,GAAA,cAAA,IAAA,CAAA;AAGpB,IAAA,qBAAA,mBAAA,SAAA,8FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAmB,OAAA,qBAAA,MAAA,CAA4B;IAAA,CAAA;AAEzD,IAAA,2BAAA,GAAA,+DAAA,GAAA,GAAA,cAAA,IAAA,mCAAA;AAKF,IAAA,uBAAA,EAAa;AAOf,IAAA,yBAAA,GAAA,kBAAA,EAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;AACF,IAAA,uBAAA;;;;AAlBc,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,wBAAA,OAAA,0BAAA,CAA0C;AAIpD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,gBAAA;AAac,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,wBAAA,OAAA,2BAAA,CAA2C;;;;;AAiCvD,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;;AAF0E,IAAA,qBAAA,SAAA,0BAAA,GAAAA,MAAA,oBAAA,sBAAA,cAAA,IAAA,cAAA,aAAA,IAAA,cAAA,UAAA,KAAA,CAAA;AACxE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,cAAA,UAAA,OAAA,GAAA;;;;;AAkBA,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;;AAF2E,IAAA,qBAAA,SAAA,0BAAA,GAAAA,MAAA,oBAAA,sBAAA,mBAAA,OAAA,mBAAA,KAAA,mBAAA,EAAA,CAAA;AACzE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,mBAAA,OAAA,IAAA,mBAAA,WAAA,IAAA,mBAAA,aAAA,GAAA;;;;;;AAXN,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAkC,GAAA,cAAA,IAAA,CAAA;AAGpB,IAAA,qBAAA,mBAAA,SAAA,iIAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAmB,OAAA,uBAAA,MAAA,CAA8B;IAAA,CAAA;AAE3D,IAAA,yBAAA,GAAA,YAAA;AACE,IAAA,oBAAA,GAAA,yBAAA,EAAA;AAGF,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,yGAAA,GAAA,IAAA,cAAA,EAAA;;AAGF,IAAA,uBAAA,EAAa;;;;AANc,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,wBAAA;AAGc,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,sBAAA,GAAA,GAAA,OAAA,uBAAA,CAAA;;;;;AAavC,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;;AAFY,IAAA,qBAAA,SAAA,0BAAA,GAAA,KAAA,oBAAA,sBAAA,6BAAA,OAAA,6BAAA,GAAA,CAAA;AACV,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,6BAAA,OAAA,GAAA;;;;;AAON,IAAA,yBAAA,GAAA,kBAAA,EAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;AACF,IAAA,uBAAA;;;;;;AAhBA,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAkC,GAAA,cAAA,IAAA,CAAA;AAGpB,IAAA,qBAAA,mBAAA,SAAA,iIAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAmB,OAAA,8BAAA,MAAA,CAAqC;IAAA,CAAA;AAElE,IAAA,2BAAA,GAAA,kGAAA,GAAA,GAAA,cAAA,IAAA,mCAAA;AAKF,IAAA,uBAAA,EAAa;AAGf,IAAA,8BAAA,GAAA,0GAAA,GAAA,GAAA,kBAAA,EAAA;;;;AARI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,yBAAA;AAQJ,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,6BAAA,IAAA,EAAA;;;;;;AArDF,IAAA,yBAAA,GAAA,OAAA,CAAA;AAAuB,IAAA,iBAAA,CAAA;AAAsB,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,GAAA,0BAAA;AAAoC,IAAA,yBAAA,GAAA,gBAAA,EAAA;AAAyC,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA,EAAe;AAAO,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;AAE/J,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAkC,GAAA,cAAA,EAAA;AAKpB,IAAA,qBAAA,mBAAA,SAAA,kHAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAmB,OAAA,0BAAA,MAAA,CAAiC;IAAA,CAAA;AAC9D,IAAA,yBAAA,GAAA,YAAA;AACE,IAAA,oBAAA,IAAA,yBAAA,EAAA;AAGF,IAAA,uBAAA;AAEA,IAAA,qBAAA,IAAA,2FAAA,GAAA,GAAA,cAAA,EAAA;;AAGF,IAAA,uBAAA,EAAa;AAIf,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,8BAAA,IAAA,4FAAA,GAAA,GAAA,kBAAA,EAAA;AAiBA,IAAA,8BAAA,IAAA,4FAAA,GAAA,CAAA;AAoBF,IAAA,uBAAA;;;;;AA3DuB,IAAA,oBAAA;AAAA,IAAA,6BAAA,cAAA,uBAAA,GAAA,GAAA;AAUM,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,2BAAA;AAIS,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,sBAAA,IAAA,GAAA,OAAA,2BAAA,CAAA;AAQpC,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,8BAAA,OAAA,KAAA,EAAA;AAiBA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,yBAAA,OAAA,KAAA,EAAA;;;;;AA5CJ,IAAA,yBAAA,GAAA,OAAA,CAAA;AAGE,IAAA,8BAAA,GAAA,6EAAA,IAAA,CAAA;AAkEF,IAAA,uBAAA;;;;;;AApEK,IAAA,qBAAA,iBAAA,oBAAA;AAEH,IAAA,oBAAA;AAAA,IAAA,wBAAA,yBAAA,OAAA,WAAA,kBAAA,EAAA,SAAA,IAAA,IAAA,EAAA;;;;;;AAwEJ,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,UAAA,EAAA;AACH,IAAA,qBAAA,SAAA,SAAA,gGAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,qBAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,oBAAA,OAAA,CAAA,CAAqB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAS;;;;;AA9EjF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,2BAAA,GAAA,+DAAA,GAAA,GAAA,OAAA,GAAA,mCAAA;AAyEF,IAAA,uBAAA;AAEA,IAAA,8BAAA,GAAA,uEAAA,GAAA,GAAA,OAAA,CAAA;;;;;AA3EE,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,WAAA,kBAAA,EAAa,QAAA;AA2Ef,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,oBAAA,IAAA,EAAA;;;;;;AASA,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,UAAA,EAAA;AACH,IAAA,qBAAA,SAAA,SAAA,kFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,qBAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,kBAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,eAAA;AAAa,IAAA,uBAAA,EAAS;;;;;;AAiB3E,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,UAAA,EAAA;AACH,IAAA,qBAAA,SAAA,SAAA,kFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,qBAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,kBAAA,CAAmB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAS;;;;;;AAK/E,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,UAAA,EAAA;AACH,IAAA,qBAAA,SAAA,SAAA,kFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,CAAe;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,eAAA;AAAa,IAAA,uBAAA,EAAS;;;;;;AA/MxE,IAAA,yBAAA,GAAA,OAAA,CAAA,EACyB,GAAA,OAAA,CAAA;AAIA,IAAA,iBAAA,CAAA;AAAsB,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,GAAA,0BAAA;AAAoC,IAAA,yBAAA,GAAA,gBAAA,EAAA;AAAyC,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA,EAAe;AAAO,IAAA,iBAAA,GAAA,GAAA;AAAC,IAAA,uBAAA;AAE/J,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAkC,GAAA,cAAA,IAAA,CAAA;AAGpB,IAAA,qBAAA,mBAAA,SAAA,+EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAmB,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA;AAErD,IAAA,yBAAA,IAAA,YAAA;AACE,IAAA,oBAAA,IAAA,yBAAA,EAAA;AAGF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,wDAAA,GAAA,GAAA,cAAA,EAAA;;AAGF,IAAA,uBAAA,EAAa;AAIf,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAAkC,IAAA,cAAA,EAAA;AAKpB,IAAA,qBAAA,mBAAA,SAAA,gFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAmB,OAAA,iBAAA,MAAA,CAAwB;IAAA,CAAA;AACrD,IAAA,yBAAA,IAAA,YAAA;AACE,IAAA,oBAAA,IAAA,yBAAA,EAAA;AAGF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,wDAAA,GAAA,GAAA,cAAA,EAAA;;AAGF,IAAA,uBAAA;AACA,IAAA,8BAAA,IAAA,yDAAA,GAAA,GAAA,OAAA,EAAA;AAKF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,8BAAA,IAAA,yDAAA,GAAA,GAAA,kBAAA,EAAA;AAkBA,IAAA,8BAAA,IAAA,yDAAA,GAAA,CAAA;AAuBF,IAAA,uBAAA;AAOA,IAAA,8BAAA,IAAA,yDAAA,GAAA,CAAA;AAqFA,IAAA,8BAAA,IAAA,yDAAA,GAAA,GAAA,OAAA,CAAA;AAgBF,IAAA,uBAAA;AAEA,IAAA,8BAAA,IAAA,yDAAA,GAAA,GAAA,OAAA,CAAA;AAMA,IAAA,8BAAA,IAAA,yDAAA,GAAA,GAAA,OAAA,CAAA;;;;;AA5MK,IAAA,qBAAA,iBAAA,kBAAA;AAIoB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,cAAA,qBAAA,GAAA,GAAA;AASM,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,kBAAA,EAAkC,uBAAA,OAAA,gBAAA;AAG1B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,sBAAA,IAAA,IAAA,OAAA,uBAAA,kBAAA,CAAA,CAAA;AAWvB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA;AAIe,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,wBAAA;AAGQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,sBAAA,IAAA,IAAA,OAAA,2BAAA,kBAAA,CAAA,CAAA;AAInC,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,WAAA,GAAA,kBAAA,EAAA,IAAA,YAAA,EAAA,SAAA,mBAAA,IAAA,KAAA,EAAA;AASA,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,8BAAA,OAAA,KAAA,EAAA;AAkBA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,yBAAA,OAAA,KAAA,EAAA;AA8BF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,gBAAA,OAAA,KAAA,EAAA;AAqFA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,iBAAA,KAAA,EAAA;AAkBF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,oBAAA,KAAA,EAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,iBAAA,KAAA,EAAA;;;ADhMJ,IAAO,4BAAP,MAAO,0BAAwB;EAtBrC,cAAA;AAyBU,SAAA,iBAAiB,OAAO,iBAAiB;AACzC,SAAA,UAAU,OAAO,cAAc;AAC/B,SAAA,cAAc,OAAO,kBAAkB;AACvC,SAAA,OAAO,OAAO,mBAAmB;AACjC,SAAA,eAAe,OAAO,qBAAqB;AAC3C,SAAA,KAAK,OAAO,WAAW;AACvB,SAAA,eAAe,OAAO,mBAAmB;AACzC,SAAA,OAAO,OAAO,WAAW;AACzB,SAAA,WAAW,OAAO,yBAAyB;AA4BzC,SAAA,mBAA2C,IAAI,aAAY;AAG3D,SAAA,mBAA0B,CAAA;AAC1B,SAAA,wBAAiC,CAAA;AAEpC,SAAA,mBAA6C,CAAA;AAY1C,SAAA,eAAsB,CAAA;AACtB,SAAA,iBAA+B;AAE/B,SAAA,2BAAuC,CAAA;AAEjD,SAAA,4BAAqC;AACrC,SAAA,uBAAgC;AAChC,SAAA,6BAAsC;AAGtC,SAAA,4BAAqC;AACrC,SAAA,uBAAgC;AAChC,SAAA,6BAAsC;AAEtC,SAAA,kBAA2B;AAC3B,SAAA,iBAA0B;AAC1B,SAAA,oBAA6B;AAE7B,SAAA,iBAA0B;AAC1B,SAAA,oBAA6B;AAC7B,SAAA,cAAuB;AAEvB,SAAA,cAAuB;AAGvB,SAAA,4BAAqC;AAErC,SAAA,oBAA2B,CAAA;AAI3B,SAAA,6BAAqC;AACrC,SAAA,8BAAsC;AAEtC,SAAA,QAAQ,KAAK,GAAG,MAAM;MACpB,YAAY,KAAK,GAAG,MAAM,CAAC,KAAK,SAAS,CAAC;KAC3C;AA6DM,SAAA,qBAAiD,IAAI,YAAoB,EAAE;AAE3E,SAAA,yBAAiD,CAAA;AAKjD,SAAA,2BAAgD,IAAI,YAAoB,EAAE;AAE1E,SAAA,6BAAqD,CAAA;AAKrD,SAAA,sBAA2C,IAAI,YAAoB,EAAE;AAGrE,SAAA,0BAAkD,CAAA;AAGlD,SAAA,oBAAgD,IAAI,YAAoB,EAAE;AAG1E,SAAA,2BAA+C,IAAI,cAAmB,CAAC;AAGvE,SAAA,8BAA0D,IAAI,YAAoB,EAAE;AAGpF,SAAA,8BAAkD,IAAI,cAAmB,CAAC;AAG1E,SAAA,2BAAgD,IAAI,YAAoB,EAAE;AAG1E,SAAA,0BAA8C,IAAI,cAAmB,CAAC;AAGtE,SAAA,6BAAkD,IAAI,YAAoB,EAAE;AAG5E,SAAA,oCAAwD,IAAI,cAAmB,CAAC;AAuPhF,SAAA,QAAQ,CAAA;AAGR,SAAA,sBAA+B;AAiB5B,SAAA,kBAAiD,IAAI,aAAY;AAEjE,SAAA,0BAAyD,IAAI,aAAY;AAEzE,SAAA,aAAa,IAAI,QAAO;;;EAnclC,IAAa,iBAAiB,kBAAuB;AACnD,SAAK,oBAAoB;AACzB,QAAI,KAAK,kBAAkB;AACzB,WAAK,yBAAyB,KAAK,KAAK,iBAAiB,MAAK,CAAE;IAClE;EACF;EAEA,IAAa,0BAA0B,2BAAgC;AACrE,SAAK,6BAA6B;AAClC,QAAI,KAAK,2BAA2B;AAClC,WAAK,kCAAkC,KAAK,KAAK,0BAA0B,MAAK,CAAE;IACpF;EACF;EACA,IAAI,mBAAgB;AAClB,WAAO,KAAK;EACd;EAEA,IAAI,4BAAyB;AAC3B,WAAO,KAAK;EACd;EA6DA,IAAI,aAAU;AAA2B,WAAO,KAAK,MAAM,IAAI,YAAY;EAAgB;;;EAI3F,WAAW,GAAS;AAA0B,WAAO,KAAK,WAAW,GAAG,CAAC,EAAE,IAAI,YAAY;EAAgB;EAE3G,IAAI,qBAAkB;AACpB,UAAM,QAAQ,KAAK,WAAW,SAAS,IAAI,KAAK,WAAW,SAAS,IAAI;AACxE,YAAQ,IAAI,uBAAuB,KAAK;AACxC,WAAO;EACT;EAGA,IAAI,YAAS;AACX,WAAO,KAAK,GAAG,MACb;MACE,UAAU,IAAI,YAAY,EAAE,OAAO,IAAI,UAAU,MAAK,CAAE;MACxD,YAAY,IAAI,YAAY,EAAE,OAAO,CAAA,GAAI,UAAU,KAAI,GAAI,CAAC,WAAW,UAAU,KAAK,iBAAiB,CAAC;MACxG,OAAO,KAAK;MACZ,UAAU,IAAI,YAAY,EAAE,OAAO,OAAO,UAAU,MAAK,CAAE;MAC3D,YAAY,KAAK,GAAG,MAAM,CAAC,KAAK,SAAS,CAAC;KAC3C;EAEL;EAEA,IAAI,QAAK;AACP,WAAO,KAAK,GAAG,MAAM;MACnB,WAAW,IAAI,YAAY,EAAE,OAAO,IAAI,UAAU,KAAI,CAAE;MACxD,cAAc,IAAI,YAAY,EAAE,OAAO,IAAI,UAAU,KAAI,CAAE;MAC3D,eAAe,IAAI,YAAY,EAAE,OAAO,IAAI,UAAU,KAAI,CAAE;KAC7D;EAEH;EAEA,IAAI,YAAS;AACX,WAAO,KAAK,GAAG,MAAM;MACnB,mBAAmB,IAAI,YAAY,EAAE,OAAO,IAAI,UAAU,MAAK,CAAE;MACjE,OAAO,KAAK;MACZ,UAAU,IAAI,YAAY,EAAE,OAAO,OAAO,UAAU,MAAK,CAAE;KAC5D;EAEH;EAEA,IAAI,iBAAc;AAChB,WAAO,KAAK,GAAG,MAAM;MACnB,gBAAgB,IAAI,YAAY,EAAE,OAAO,IAAI,UAAU,KAAI,CAAE;MAC7D,uBAAuB,IAAI,YAAY,EAAE,OAAO,IAAI,UAAU,KAAI,CAAE;MACpE,wBAAwB,IAAI,YAAY,EAAE,OAAO,IAAI,UAAU,KAAI,CAAE;KACtE;EAEH;EAEA,oBAAoB,OAAa;AAC/B,UAAM,iBAAiB,KAAK,WAAW,GAAG,KAAK;AAC/C,UAAM,oBAAoB,eAAe,IAAI,YAAY;AACzD,WAAO,kBAAkB;EAE3B;EA8CA,gBAAa;AACX,SAAK,WAAW,KAAK,KAAK,SAAS;AACnC,YAAQ,IAAI,2CAA2C,KAAK,WAAW,MAAM;AAC7E,SAAK,oBAAoB;AACzB,SAAK,uBAAuB,KAAK,IAAI,cAAqB,CAAC,CAAC;AAC5D,SAAK,wBAAwB,KAAK,IAAI,cAAqB,CAAC,CAAC;AAC7D,SAAK,2BAA2B,KAAK,IAAI,cAAqB,CAAC,CAAC;AAChE,SAAK,iBAAiB,KAAK,IAAI,gBAAuB,CAAA,CAAE,CAAC;AAIzD,SAAK,uBAAuB,KAAK,kBAAkB,EAAE,KAAK,CAAA,CAAE;AAC5D,SAAK,wBAAwB,KAAK,kBAAkB,EAAE,KAAK,CAAA,CAAE;AAC7D,SAAK,2BAA2B,KAAK,kBAAkB,EAAE,KAAK,CAAA,CAAE;AAGhE,SAAK,oBAAoB,KAAK,kBAAkB;AAChD,SAAK,gBAAgB,KAAK,kBAAkB;AAC5C,SAAK,iBAAiB,KAAK,kBAAkB;AAC7C,SAAK,oBAAoB,KAAK,oBAAoB,GAAG,CAAA,CAAE,CAAC;EAC1D;EAGA,iBAAiB,GAAS;AACxB,SAAK,WAAW,SAAS,CAAC;AAC1B,YAAQ,IAAI,8BAA8B,GAAG,0BAA0B,KAAK,WAAW,MAAM;AAC7F,SAAK,sBAAsB,OAAO,GAAG,CAAC;AACtC,SAAK,uBAAuB,OAAO,GAAG,CAAC;AACvC,SAAK,oBAAoB,KAAK,kBAAkB;AAChD,SAAK,gBAAgB,KAAK,kBAAkB;EAC9C;EAEA,cAAc,GAAS;AACrB,QAAI,IAAI,KAAK,WAAW,CAAC,EAAE,SAAS,SAAS;AAC7C,QAAI,KAAK,WAAW,CAAC,EAAE,UAAU;AAAE,WAAK,WAAW,CAAC,EAAE,SAAS,CAAC;IAAE;AAAC;AACnE,SAAK,cAAc;AACnB,SAAK,WAAW,CAAC,EAAE,KAAK,KAAK,SAAS;AACtC,QAAI,OAAO,KAAK,SAAS,WAAW,KAAK,YAAY,CAAC;AACtD,SAAK,cAAc;EAErB;EAEA,kBAAkB,GAAC;AACjB,SAAK,SAAS,WAAW,KAAK,YAAY,CAAC,EAAE,OAAM;AACnD,QAAI,MAAM,GAAG;AAAE,WAAK,cAAc;IAAM;EAC1C;EAEA,iBAAiB,GAAW,GAAS;AACnC,SAAK,WAAW,CAAC,EAAE,SAAS,CAAC;EAC/B;EAEA,2BAA2B,GAAG,GAAC;AAC7B,UAAM,YAAY,KAAK,WAAW,GAAG,CAAC;AACtC,UAAM,mBAAmB,UAAU,IAAI,iBAAiB;AAExD,QAAI,MAAM,gBAAgB;AACxB,WAAK,4BAA4B;AACjC,WAAK,uBAAuB;AAC5B,uBAAiB,OAAM;AACvB,gBAAU,IAAI,oBAAoB,EAAE,QAAO;AAC3C,gBAAU,IAAI,qBAAqB,EAAE,QAAO;IAC9C,OAAO;AACL,UAAI,MAAM,YAAY,MAAM,qBAAqB,MAAM,UAAU,MAAM,YAAY;AACjF,gBAAQ,IAAI,CAAC;AACb,yBAAiB,QAAO;AACxB,kBAAU,IAAI,oBAAoB,EAAE,OAAM;AAC1C,kBAAU,IAAI,qBAAqB,EAAE,OAAM;AAC3C,aAAK,4BAA4B;AACjC,aAAK,6BAA6B;AAClC,aAAK,uBAAuB;MAC9B;IACF;EACF;EAGA,yBAAyB,OAAO,GAAC;AAC/B,QAAI,UAAU,0BAA0B,UAAU,6BAA6B,UAAU,gBAAgB;AACvG,WAAK,SAAS,aAAa,KAAK,YAAY,CAAC,EAAE,OAAM;AAAI,WAAK,SAAS,cAAc,KAAK,YAAY,CAAC,EAAE,OAAM;AAC/G,WAAK,SAAS,aAAa,KAAK,YAAY,CAAC,EAAE,WAAW,EAAE;AAC5D,WAAK,6BAA6B;AAClC,WAAK,8BAA8B;IACrC,OACK;AACH,WAAK,SAAS,aAAa,KAAK,YAAY,CAAC,EAAE,OAAM;AACrD,WAAK,SAAS,cAAc,KAAK,YAAY,CAAC,EAAE,QAAO;AACvD,WAAK,6BAA6B;AAClC,WAAK,8BAA8B;IACrC;EACF;EAEA,2BAA2B,GAAG,GAAG,GAAC;AAChC,YAAQ,IAAI,CAAC;AACb,QAAI,OAAO,KAAK,SAAS,WAAW,KAAK,YAAY,CAAC;AACtD,QAAI,MAAM,gBAAgB;AACxB,UAAI,QAAQ,KAAK,SAAS,eAAe,MAAM,CAAC;AAChD,cAAQ,IAAI,KAAK;AACjB,WAAK,4BAA4B;AACjC,WAAK,uBAAuB;AAC5B,WAAK,SAAS,eAAe,MAAM,CAAC,EAAE,OAAM;AAC5C,WAAK,SAAS,sBAAsB,MAAM,CAAC,EAAE,QAAO;AACpD,WAAK,SAAS,uBAAuB,MAAM,CAAC,EAAE,QAAO;IAEvD,OAAO;AACL,UAAI,MAAM,YAAY,MAAM,qBAAqB,MAAM,UAAU,MAAM,YAAY;AACjF,aAAK,SAAS,sBAAsB,MAAM,CAAC,EAAE,OAAM;AACnD,aAAK,SAAS,uBAAuB,MAAM,CAAC,EAAE,OAAM;AACpD,aAAK,4BAA4B;AACjC,aAAK,uBAAuB;MAC9B;IACF;EACF;EAEA,kCAAkC,OAAO,GAAG,GAAC;AAC3C,QAAI,OAAO,KAAK,SAAS,WAAW,KAAK,YAAY,CAAC;AACtD,QAAI,UAAU,0BAA0B,UAAU,6BAA6B,UAAU,gBAAgB;AACvG,WAAK,SAAS,sBAAsB,MAAM,CAAC,EAAE,OAAM;AAAI,WAAK,SAAS,uBAAuB,MAAM,CAAC,EAAE,OAAM;AAE3G,WAAK,6BAA6B;IACpC,OACK;AACH,WAAK,SAAS,aAAa,MAAM,CAAC,EAAE,OAAM;AAC1C,WAAK,SAAS,cAAc,MAAM,CAAC,EAAE,QAAO;AAC5C,WAAK,6BAA6B;IACpC;EACF;EAEA,iBAAiB,OAAsB;AACrC,YAAQ,IAAI,MAAM,KAAK,GACrB,QAAQ,IAAI,sBAAsB,MAAM,KAAK;AAC/C,QAAI,IAAI,MAAM,MAAM,CAAC;AACrB,SAAK,SAAS,eAAe,KAAK,YAAY,CAAC,EAAE,OAAM;AACvD,UAAM,WAAW,KAAK,aAAa,uBAAuB,MAAM,MAAM,CAAC,CAAC;AACxE,SAAK,oBAAoB,GAAG,QAAQ;AACpC,SAAK,iBAAiB,KAAK,MAAM,KAAK;AACtC,SAAK,WAAW,GAAG,CAAC,EAAE,IAAI,UAAU,EAAE,SAAS,MAAM,OAAO,EAAE,WAAW,MAAK,CAAE;AAChF,YAAQ,IAAI,mCAAmC,KAAK,WAAW,GAAG,CAAC,EAAE,IAAI,UAAU,EAAE,KAAK;AAC1F,SAAK,eAAe,cAAa;EACnC;EAGA,iBAAiB,OAAsB;AACrC,QAAI,gBAAgB,CAAA;AACpB,YAAQ,IAAI,gBAAgB,MAAM,KAAK;AACvC,QAAI,IAAI,MAAM,MAAM,CAAC,EAAE,CAAC;AACxB,YAAQ,IAAI,CAAC;AAGb,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,UAAI,MAAM,MAAM,CAAC,MAAM,QAAW;AAChC,YAAI,eAAe,MAAM,MAAM,CAAC,EAAE,CAAC;AACnC,gBAAQ,IAAI,YAAY;AACxB,YAAI,cAAc;AAChB,eAAK,2BAA2B,cAAc,CAAC;AAC/C,eAAK,SAAS,UAAU,KAAK,YAAY,CAAC,EAAE,OAAM;QACpD,OAAO;AACL,kBAAQ,MAAM,0CAA0C,MAAM,MAAM,CAAC,EAAE,CAAC,EAAE,YAAY;QACxF;MACF,OAAO;AACL,gBAAQ,MAAM,iBAAiB,IAAI,mBAAmB,MAAM,KAAK;MACnE;IACF;EACF;EAKA,cAAc,OAAsB;AAClC,QAAI,IAAI,MAAM,MAAM,CAAC;AACrB,QAAI,QAAQ,MAAM,MAAM,CAAC;AACzB,QAAI,WAAW,MAAM,MAAM,CAAC;AAC5B,YAAQ,IAAI,MAAM,KAAK;AAGvB,UAAM,mBAAmB,KAAK,WAAW,GAAG,CAAC,EAAE,IAAI,iBAAiB;AAIpE,SAAK,eAAe,cAAa;AAIjC,QAAI,MAAM,OAAO,CAAC,MAAM,KAAK;IAE7B;AACA,SAAK,iBAAiB;AACtB,SAAK,iBAAiB;AAEtB,SAAK,wBAAwB,CAAC;AAC9B,YAAQ,IAAI,KAAK,wBAAwB,CAAC,CAAC;EAC7C;EAEA,qBAAqB,OAAsB;AACzC,QAAI,IAAI,MAAM,MAAM,CAAC;AACrB,QAAI,QAAQ,MAAM,MAAM,CAAC;AACzB,SAAK,8BAA8B;AACnC,SAAK,yBAAyB,OAAO,CAAC;AACtC,QAAI,MAAM,OAAO,CAAC,MAAM,KAAK;AAC3B,cAAQ,IAAI,KAAK;IAEnB;AACA,SAAK,iBAAiB;AACtB,SAAK,iBAAiB;EACxB;EAEA,0BAA0B,OAAsB;AAC9C,YAAQ,IAAI,MAAM,KAAK;AACvB,QAAI,IAAI,MAAM,MAAM,CAAC;AACrB,QAAI,IAAI,MAAM,MAAM,CAAC;AACrB,QAAI,WAAW,MAAM,MAAM,CAAC;AAE5B,SAAK,2BAA2B,UAAU,GAAG,CAAC;EAEhD;EAEA,uBAAuB,OAAsB;AAC3C,YAAQ,IAAI,MAAM,KAAK;AACvB,QAAI,IAAI,MAAM,MAAM,CAAC;AACrB,QAAI,IAAI,MAAM,MAAM,CAAC;AACrB,QAAI,WAAW,MAAM,MAAM,CAAC;AAC5B,QAAI,MAAM,MAAM,MAAM,CAAC;AACvB,QAAI,KAAK,MAAM,MAAM,CAAC;AACtB,QAAI,IAAI,CAAC,GAAG,UAAU,KAAK,EAAE;AAC7B,QAAI,SAAS,OAAO,CAAC,MAAM,KAAK;IAEhC;AACA,SAAK,oBAAoB;AACzB,QAAI,OAAO,KAAK,SAAS,WAAW,KAAK,YAAY,CAAC;AACtD,QAAI,QAAQ,KAAK,SAAS,eAAe,MAAM,CAAC;AAChD,YAAQ,IAAI,KAAK;AACjB,SAAK,SAAS,oBAAoB,OAAO,MAAM,CAAC;EAClD;EAEA,8BAA8B,OAAsB;AAClD,YAAQ,IAAI,MAAM,KAAK;AACvB,QAAI,IAAI,MAAM,MAAM,CAAC;AACrB,QAAI,QAAQ,MAAM,MAAM,CAAC;AAEzB,QAAI,MAAM,OAAO,CAAC,MAAM,KAAK;AAE3B,WAAK,6BAA6B;IACpC;AAAO,WAAK,6BAA6B;AACzC,SAAK,oBAAoB;EAC3B;EAYA,QAAK;AACH,SAAK,OAAO,QAAQ,QAAQ,CAAC,SAAoB,KAAK,SAAQ,CAAE;EAClE;EAgBA,WAAQ;AACN,YAAQ,IAAI,8BAA8B,KAAK,WAAW,MAAM;AAEhE,SAAK,aAAa,gCAAgC,UAAU,SAAO,KAAK,8BAA8B,GAAG;AAEzG,SAAK,mBAAmB,aACrB,KAAK,UAAU,KAAK,UAAU,CAAC,EAC/B,UAAU,MAAK;AACd,WAAK,gBAAgB,KAAK,kBAAkB;IAC9C,CAAC;AAEH,SAAK,yBAAyB,aAC3B,KAAK,UAAU,KAAK,UAAU,CAAC,EAC/B,UAAU,MAAK;AACd,WAAK,oBAAoB,KAAK,oBAAoB,GAAG,CAAA,CAAE,CAAC;IAC1D,CAAC;AAEH,SAAK,oBAAoB,aACtB,KAAK,UAAU,KAAK,UAAU,CAAC,EAC/B,UAAU,MAAK;AACd,WAAK,iBAAiB,KAAK,kBAAkB;IAC/C,CAAC;AAEH,SAAK,kBAAkB,aACpB,KAAK,UAAU,KAAK,UAAU,CAAC,EAC/B,UAAU,MAAK;AACd,WAAK,uBAAsB;IAC7B,CAAC;AAEH,SAAK,4BAA4B,aAC9B,KAAK,UAAU,KAAK,UAAU,CAAC,EAC/B,UAAU,MAAK;AACd,WAAK,0BAAyB;IAChC,CAAC;AAEH,SAAK,yBAAyB,aAC3B,KAAK,UAAU,KAAK,UAAU,CAAC,EAC/B,UAAU,MAAK;AACd,WAAK,sBAAqB;IAC5B,CAAC;AAEH,SAAK,2BAA2B,aAC7B,KAAK,UAAU,KAAK,UAAU,CAAC,EAC/B,UAAU,MAAK;AACd,WAAK,sBAAqB;IAC5B,CAAC;AAGH,SAAK,iBAAiB,CAAC,IAAI,IAAI,gBAAuB,CAAA,CAAE;AAMxD,SAAK,uBAAuB,KAAK,IAAI,cAAqB,CAAC,CAAC;AAC7D,SAAK,wBAAwB,KAAK,IAAI,cAAqB,CAAC,CAAC;AAC5D,SAAK,2BAA2B,KAAK,IAAI,cAAqB,CAAC,CAAC;AAGhE,SAAK,oBAAoB,KAAK,kBAAkB;AAChD,SAAK,gBAAgB,KAAK,kBAAkB;AAC5C,SAAK,iBAAiB,KAAK,kBAAkB;AAC7C,SAAK,oBAAoB,KAAK,oBAAoB,GAAG,CAAA,CAAE,CAAC;EAC1D;EAIA,kBAAe;AAEb,YAAQ,IAAI,sCAAsC,KAAK,WAAW,MAAM;AAKxE,SAAK,0BAAyB;AAC9B,SAAK,iCAAgC;AACrC,SAAK,8BAA6B;AAClC,SAAK,mCAAkC;EAEzC;EAGU,0BAAuB;AAC/B,SAAK,KAAK,WAAW,UAAU,SAAM;AACnC,WAAK,uBAAuB,QAAQ,CAAC,mBAAmB,UAAS;AAC/D,gBAAQ,IAAI,GAAG;AACf,0BAAkB,KAAK,GAAG;AAC1B,aAAK,gBAAgB,KAAK;MAC5B,CAAC;IACH,CAAC;EACH;EAEU,0BAAuB;AAC/B,SAAK,2BAA2B,QAAQ,CAAC,oBAAoB,UAAS;AACpE;IACF,CAAC;EACL;EAGY,sBAAmB;AAC3B,SAAK,wBAAwB,QAAQ,CAAC,oBAAoB,UAAS;AACjE;IACJ,CAAC;EACH;EAEY,4BAAyB;AACjC,SAAK;EACP;EAEU,mCAAgC;AACxC,SAAK;EACP;EAEU,gCAA6B;AACrC,SAAK;EACP;EAEU,qCAAkC;AAC1C,SAAK;EACP;EAGU,gBAAgB,OAAa;AACrC,YAAQ,IAAI,2CAA2C,KAAK;AAC5D,SAAK,oBAAoB,KAAK;AAC9B,YAAQ,IAAI,+CAA+C,KAAK,sBAAsB,KAAK,CAAC;AAE5F,QAAI,SAAS,KAAK,mBAAmB;AACrC,QAAI,CAAC,QAAQ;AACX,WAAK,uBAAuB,KAAK,EAAE,KAAK,KAAK,sBAAsB,KAAK,EAAE,MAAK,CAAE;IACnF,OAAO;AACL,eAAS,OAAO,YAAW;AAC3B,WAAK,uBAAuB,KAAK,EAAE,KACjC,KAAK,sBAAsB,KAAK,EAAE,OAAO,cAAY,SAAS,MAAM,YAAW,EAAG,QAAQ,MAAM,IAAI,EAAE,CAAC;IAE3G;AAEA,SAAK,eAAe,cAAa;EACnC;;;;;;;;EAWU,oBAAoB,OAAa;AACzC,YAAQ,IAAI,0CAA0C,KAAK;AAC3D,QAAI,UAAU,GAAG;AACf,UAAI,CAAC,aAAa,UAAU,WAAW,GAAG;AACxC,gBAAQ,MAAM,iCAAiC;AAC/C,aAAK,sBAAsB,KAAK,IAAI,CAAA;MACtC,OAAO;AACL,aAAK,sBAAsB,KAAK,IAAI;AACpC,gBAAQ,IAAI,6BAA6B,KAAK,sBAAsB,KAAK,CAAC;MAC5E;IACF,OAAO;AACL,UAAI,SAAgB,CAAA;AAEpB,eAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,cAAM,kBAAkB,KAAK,WAAW,GAAG,CAAC,EAAE,IAAI,UAAU;AAC5D,cAAM,mBAAmB,KAAK,WAAW,GAAG,CAAC,EAAE,IAAI,iBAAiB;AAEpE,gBAAQ,IAAI,4BAA4B,GAAG,KAAK,eAAe;AAC/D,gBAAQ,IAAI,6BAA6B,GAAG,KAAK,gBAAgB;AAEjE,YAAI,mBAAmB,gBAAgB,OAAO;AAC5C,gBAAM,gBAAgB,gBAAgB,MAAM,CAAC;AAC7C,kBAAQ,IAAI,kCAAkC,CAAC,KAAK,aAAa;AACjE,iBAAO,KAAK,EAAE,OAAO,cAAa,CAAE;QACtC;AAEA,YAAI,oBAAoB,iBAAiB,OAAO;AAC9C,gBAAM,YAAY,iBAAiB,MAAM,CAAC;AAC1C,cAAI,OAAO,cAAc,YAAY,UAAU,WAAW,GAAG,GAAG;AAC9D,mBAAO,KAAK,EAAE,OAAO,UAAS,CAAE;UAClC;QACF;MACF;AAGA,YAAM,eAAe,MAAM,KAAK,IAAI,IAAI,OAAO,IAAI,WAAS,KAAK,UAAU,KAAK,CAAC,CAAC,CAAC,EAChF,IAAI,SAAO,KAAK,MAAM,GAAG,CAAC;AAG7B,WAAK,sBAAsB,KAAK,IAAI,aAAa,KAAK,CAAC,GAAG,MAAM,EAAE,MAAM,cAAc,EAAE,KAAK,CAAC;AAC9F,cAAQ,IAAI,6BAA6B,KAAK,sBAAsB,KAAK,CAAC;IAC5E;EACF;EAIU,oBAAoB,OAAe,UAA2B;AACtE,aACG,KACC,UAAU,aAAU;AAClB,UAAI,CAAC,WAAW,QAAQ,WAAW,GAAG;AACpC,gBAAQ,MAAM,mEAA6D;AAC3E,eAAO,GAAG,CAAA,CAAE;MACd;AACA,cAAQ,IAAI,OAAO;AAEnB,UAAI,SAAS,KAAK,yBAAyB;AAC3C,UAAI,CAAC,QAAQ;AACX,eAAO,GAAG,QAAQ,MAAK,CAAE;MAC3B,OAAO;AACL,iBAAS,OAAO,YAAW;AAE3B,eAAO,GAAG,QAAQ,OAAO,YAAU,OAAO,MAAM,YAAW,EAAG,QAAQ,MAAM,IAAI,EAAE,CAAC;MACrF;IACF,CAAC,CAAC,EAEH,UAAU,qBAAkB;AAC3B,WAAK,2BAA2B,KAAK,EAAE,KAAK,eAAe;IAC7D,CAAC;EACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAwDU,iBAAiB,OAAa;AAEtC,UAAM,kBAAkB,KAAK,4BAA4B,KAAK;AAG9D,UAAM,iBAAiB,KAAK,6BAA6B,eAAe;AAGxE,UAAM,iBAAiB,eAAe,IAAI,YAAU,EAAE,OAAO,KAAK,MAAM,IAAI,MAAM,WAAW,GAAE,EAAG;AAElG,YAAQ,IAAI,cAAc;AAG1B,QAAI,CAAC,KAAK,iBAAiB,KAAK,GAAG;AACjC,WAAK,iBAAiB,KAAK,IAAI,IAAI,gBAAuB,CAAA,CAAE;IAC9D;AACA,SAAK,iBAAiB,KAAK,EAAE,KAAK,cAAc;AAGhD,QAAI,CAAC,KAAK,wBAAwB,KAAK,GAAG;AACxC,WAAK,wBAAwB,KAAK,IAAI,IAAI,cAAqB,CAAC;IAClE;AACA,SAAK,wBAAwB,KAAK,EAAE,KAAK,cAAc;AAGxD,SAAK,wBAAwB,KAAK;EACnC;EAKU,wBAAwB,cAAoB;AACpD,aAAS,IAAI,GAAG,IAAI,cAAc,KAAK;AACrC,YAAM,mBAAmB,KAAK,WAAW,GAAG,CAAC,EAAE,IAAI,iBAAiB;AACpE,UAAI,oBAAoB,iBAAiB,OAAO;AAC9C,yBAAiB,SAAS,iBAAiB,OAAO,EAAE,WAAW,MAAK,CAAE;MACxE;IACF;EACF;EAIA,4BAA4B,GAAS;AACnC,QAAI,kBAAkB,CAAA;AACtB,UAAM,sBAAsB,KAAK,WAAW,GAAG,CAAC,EAAE,IAAI,UAAU;AAChE,UAAM,oBAAoB,sBAAsB,oBAAoB,MAAM,CAAC,IAAI;AAE/E,aAAS,QAAQ,GAAG,SAAS,GAAG,SAAS;AACvC,YAAM,kBAAkB,KAAK,WAAW,GAAG,KAAK,EAAE,IAAI,UAAU;AAChE,YAAM,mBAAmB,KAAK,WAAW,GAAG,KAAK,EAAE,IAAI,iBAAiB;AACxE,UAAI,mBAAmB,gBAAgB,OAAO;AAC5C,YAAI,gBAAgB,CAAC,GAAG,gBAAgB,KAAK;AAC7C,YAAI,QAAQ,cAAc,CAAC;AAG3B,YAAI,oBAAoB,iBAAiB,OAAO;AAC9C,gBAAM,YAAY,iBAAiB,MAAM,CAAC;AAC1C,gBAAM,QAAQ,UAAU,MAAM,gBAAgB;AAC9C,cAAI,OAAO;AACT,kBAAM,YAAY,MAAM,CAAC;AACzB,kBAAM,SAAS,SAAS,MAAM,CAAC,CAAC;AAChC,kBAAM,eAAe,gBAAgB,MAAM,CAAC,EAAE,MAAM,GAAG,EAAE;AACzD,gBAAI,cAAc,cAAc;AAC9B,sBAAQ,aAAa,SAAS;YAChC;UACF;QACF;AAGA,cAAM,WAAW,MAAM,OAAO,MAAM,SAAS,CAAC;AAC9C,YAAI,YAAY,KAAK,QAAQ,GAAG;AAC9B,mBAAS;QACX,WAAW,SAAS,KAAK,QAAQ,GAAG;AAClC,gBAAM,SAAS,SAAS,QAAQ;AAChC,kBAAQ,MAAM,MAAM,GAAG,EAAE,KAAK,SAAS;QACzC;AACA,sBAAc,CAAC,IAAI;AAGnB,YAAI,QAAQ,KAAK,UAAU,mBAAmB;AAC5C;QACF;AAGA,YAAI,QAAQ,KAAK,oBAAoB,iBAAiB,OAAO;AAC3D,gBAAM,YAAY,iBAAiB,MAAM,CAAC;AAC1C,gBAAM,QAAQ,UAAU,MAAM,gBAAgB;AAC9C,cAAI,OAAO;AACT,kBAAM,YAAY,MAAM,CAAC;AACzB,kBAAM,SAAS,SAAS,MAAM,CAAC,CAAC;AAChC,kBAAM,WAAW,aAAa,SAAS;AACvC,gBAAI,CAAC,gBAAgB,KAAK,YAAU,OAAO,CAAC,MAAM,QAAQ,GAAG;AAC3D,8BAAgB,KAAK,CAAC,gBAAgB,MAAM,CAAC,GAAG,QAAQ,CAAC;YAC3D;UACF;QACF;AAEA,wBAAgB,KAAK,aAAa;MACpC;IACF;AACA,WAAO;EACT;EAEA,6BAA6B,SAAc;AACzC,WAAO,QAAQ,IAAI,YAAU,OAAO,CAAC,CAAC;EACxC;EAGA,gBAAgB,OAAK;AACnB,WAAQ,KAAK,KAAK,SAAS,KAAK,IAAI,QAAM,GAAG,CAAC,CAAC,CAAC;EAC9C;EAGJ,gBAAgB,OAAO,MAAM,QAAM;AAClC,QAAI,eAAqB,CAAA;AACxB,WAAQ,KAAK,QAAQ,WAAW,OAAO,IAAI,EAAE,KAC3C,IAAI,SAAO,KAAK,WAAW,GAAG,CAAC,GAC/B,UAAU,SAAO,KAAK,QAAQ,QAAQ,GAAG,CAAC,GAC1C,OAAO,SAAO,QAAQ,UAAa,QAAQ,IAAI,GAC/C,OAAO,SAAO,IAAI,aAAa,UAAa,IAAI,aAAa,IAAI,GACjE,IAAI,SAAO,OAAO,OAAO,IAAI,QAAQ,CAAC,GACtC,IAAI,SAAO,KAAK,YAAY,KAAK,KAAK,KAAK,KAAK,YAAY,CAAC,CAAC;EAEpE;EAGY,yBAAsB;AAC9B,QAAI,KAAK,qBAAqB,QAAW;AACvC;IACF;AAEA,QAAI,SAAS,KAAK,kBAAkB;AACpC,QAAI,CAAC,QAAQ;AACX,WAAK,yBAAyB,KAAK,KAAK,iBAAiB,MAAK,CAAE;AAChE;IACF,OAAO;AACL,eAAS,OAAO,YAAW;IAC7B;AACA,SAAK,yBAAyB,KAC5B,KAAK,iBAAiB,OAAO,cAAY,SAAS,MAAM,YAAW,EAAG,QAAQ,MAAM,IAAI,EAAE,CAAC;EAE/F;EAEU,4BAAyB;AAEjC,QAAI,CAAC,KAAK,6BAA6B;AACrC;IACF;AACA,QAAI,SAAS,KAAK,4BAA4B;AAC9C,QAAI,CAAC,QAAQ;AACX,WAAK,4BAA4B,KAAK,KAAK,4BAA4B,MAAK,CAAE;AAC9E;IACF,OAAO;AACL,eAAS,OAAO,YAAW;IAC7B;AAEA,SAAK,4BAA4B,KAC/B,KAAK,4BAA4B,OAAO,YAAU,OAAO,UAAU,MAAM,YAAW,EAAG,QAAQ,MAAM,IAAI,EAAE,CAAC;EAEhH;EAEU,wBAAqB;AAC7B,QAAI,SAAS,KAAK,yBAAyB;AAC3C,QAAI,iBAAiB,OAAO,OAAO,CAAC;AACpC,QAAI,CAAC,QAAQ;AACX,WAAK,wBAAwB,KAAK,KAAK,aAAa,MAAK,CAAE;AAC3D;IACF,OAAO;AACL,UAAI,mBAAmB,KAAK;AAC1B,iBAAS,OAAO,YAAW;AAC3B,aAAK,yBAAyB,aAC3B,KACC,aAAa,GAAG,GAChB,UAAU,WAAS,KAAK,QAAQ,WAAW,OAAO,KAAK,KAAK,YAAY,CAAC,GACzE,IAAI,SAAO,KAAK,WAAW,GAAG,CAAC,GAC/B,aAAa,GAAG,GAChB,UAAU,SAAO,KAAK,QAAQ,QAAQ,GAAG,CAAC,GAC1C,OAAO,SAAO,QAAQ,UAAa,QAAQ,IAAI,GAC/C,OAAO,SAAO,IAAI,aAAa,UAAa,IAAI,aAAa,IAAI,GACjE,IAAI,SAAO,OAAO,OAAO,IAAI,QAAQ,CAAC,CAAC,EACvC,UAAU,QAAK;AACf,eAAK,eAAe,KAAK,YAAY,KAAK,IAAI,KAAK,KAAK,YAAY;AACpE,eAAK,aAAa,KAAK,YAAY;AACnC,eAAK,wBAAwB,KAAK,KAAK,aAAa,OAAO,WAAS,MAAM,MAAM,YAAW,EAAG,QAAQ,MAAM,IAAI,EAAE,CAAC;QACrH,CAAC;MAEL,OACK;AACH,aAAK,KAAK,SAAS,UAAU,QAAK;AAChC,eAAK,eAAe,GAAG,CAAC;AACxB,cAAI,wBAAwB,CAAA;AAE5B,kCAAwB,KAAK,aAAa,OAAO,iBAAe,eAAe,SAAS,YAAY,GAAG,CAAC;AACxG,cAAI,WAAW,MAAM;AACnB,iBAAK,wBAAwB,KAAK,qBAAqB;UACzD,OAAO;AACL,qBAAS,OAAO,MAAM,CAAC;AACvB,iBAAK,wBAAwB,KAAK,sBAAsB,OAAO,WAAS,MAAM,MAAM,YAAW,EAAG,QAAQ,MAAM,IAAI,EAAE,CAAC;UACzH;QACF,CAAC;MAEH;IACF;EACF;EAEU,kCAA+B;AACvC,YAAQ,IAAI,KAAK,yBAAyB;AAC1C,QAAI,KAAK,8BAA8B,QAAW;AAChD;IACF;AAEA,QAAI,SAAS,KAAK,2BAA2B;AAC7C,YAAQ,IAAI,MAAM;AAClB,QAAI,CAAC,QAAQ;AACX,cAAQ,IAAI,KAAK,yBAAyB;AAC1C,WAAK,kCAAkC,KAAK,KAAK,0BAA0B,MAAK,CAAE;AAClF;IACF,OAAO;AACL,eAAS,OAAO,YAAW;IAC7B;AACA,SAAK,kCAAkC,KACrC,KAAK,0BAA0B,OAAO,cAAY,SAAS,MAAM,YAAW,EAAG,QAAQ,MAAM,IAAI,EAAE,CAAC;EAExG;EAIA,aAAa,cAAmB;AAC9B,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,UAAI,aAAa,CAAC,EAAE,aAAa;AAAE,qBAAa,CAAC,EAAE,YAAY;MAAM;AAAC;IACxE;AAAC;EACH;EAEA,mBAAmB,UAAQ;AACzB,SAAK,yBAAyB,SAAS;EACzC;EAIA,kBAAkB,SAAwB;AACxC,QAAI,QAAQ,SAAS,QAAQ,MAAM,SAAS,GAAG;AAC7C,YAAM,YAAY,QAAQ,MAAM,CAAC,EAAE,CAAC;AACpC,YAAM,cAAc,QAAQ,MAAM,MAAM,CAAC,QAAa,IAAI,CAAC,MAAM,SAAS;AAC1E,UAAI,CAAC,aAAa;AAChB,eAAO,EAAE,qBAAqB,KAAI;MACpC;IACF;AACA,WAAO;EACT;EAIA,SAAS,KAAG;AACV,WAAO,2FACL,MAAM,kGAAkG;AAC1G,WAAO;EACT;EAEA,WAAW,IAAE;AACX,QAAI,aAAa;AACjB,QAAI,eAAe;AACnB,QAAI,OAAe;AACnB,QAAI,MAAc;AAClB,QAAI,MAAM,GAAG;AACb,QAAI,QAAQ,QAAW;AAAE,YAAM,CAAA;IAAI,OAC9B;AAAE,YAAM;IAAK;AAAC;AACnB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,aAAO,OAAO,MAAM,IAAI,CAAC,EAAE;IAC7B;AAAC;AACD,WAAO,KAAK,MAAM,CAAC;AACnB,UAAM,aAAa,OAAO;AAC1B,WAAO;EACT;EAKA,cAAW;AACT,SAAK,WAAW,KAAI,GAClB,KAAK,WAAW,SAAQ;EAC5B;;;mCAhgCW,2BAAwB;AAAA;0FAAxB,2BAAwB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,WAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;;;;;;;;;;;;AC3DnC,IAAA,yBAAA,GAAA,YAAA,CAAA,EAAwD,GAAA,kBAAA,EACtC,GAAA,OAAA,CAAA,EAEO,GAAA,KAAA;AAChB,IAAA,iBAAA,GAAA,QAAA;AAAM,IAAA,uBAAA;AACX,IAAA,8BAAA,GAAA,iDAAA,GAAA,CAAA;AA8BF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,GAAA,oBAAA,CAAA,EAA0D,GAAA,KAAA,CAAA;AAC/B,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA;AACnC,IAAA,yBAAA,GAAA,QAAA,CAAA,EAA0B,IAAA,OAAA,CAAA,EACC,IAAA,OAAA,CAAA;AAGrB,IAAA,2BAAA,IAAA,0CAAA,IAAA,IAAA,MAAA,MAAA,mCAAA;AAsNF,IAAA,uBAAA,EAAM,EACF;AAER,IAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,KAAA,CAAA;AACwB,IAAA,iBAAA,EAAA;;AAAwB,IAAA,uBAAA,EAAI,EACnD,EACW;;;AAnQf,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,IAAA,MAAA,MAAA,aAAA,IAAA,EAAA;AAmCI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,KAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,IAAA,WAAA,QAAA;AA0NuB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,IAAA,GAAA,IAAA,MAAA,KAAA,CAAA;;;ED7N7B;EAAY;EAAA;EAAA;EACZ;EAAmB;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EACnB;EACA;EAAc;EAAA;EACd;EAAa;EAAA;EACb;EACA;EACA;EACA;EAAwB;EACxB;EACA;EAAiB;EACjB;EACA;AAAoB,GAAA,QAAA,CAAA,0sGAAA,EAAA,CAAA;AAMlB,IAAO,2BAAP;;sEAAO,0BAAwB,CAAA;UAtBpC;uBACW,wBAAsB,YACpB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,QAAA,CAAA,2gFAAA,EAAA,CAAA;cAoBY,kBAAgB,CAAA;UAA5B;MAOY,2BAAyB,CAAA;UAArC;MAcS,UAAQ,CAAA;UAAjB;MAGS,kBAAgB,CAAA;UAAzB;MA2ZoB,QAAM,CAAA;UAA1B;WAAU,QAAQ;MAO0B,cAAY,CAAA;UAAxD;WAAU,gBAAgB,EAAE,QAAQ,KAAI,CAAE;MAEC,aAAW,CAAA;UAAtD;WAAU,eAAe,EAAE,QAAQ,KAAI,CAAE;MAGhC,iBAAe,CAAA;UAAxB;MAES,yBAAuB,CAAA;UAAhC;;;;6EAhdU,0BAAwB,EAAA,WAAA,4BAAA,UAAA,iFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEpD/B,IAAO,kBAAP,MAAO,gBAAc;EACzB,cAAA;AAMQ,SAAA,OAAO,OAAO,WAAW;EANjB;EAShB,QAAQ,UAAQ;AACd,YAAQ,IAAI,QAAQ;AACpB,QAAI,UAAU,CAAA;AACd,SAAK,KAAK,SAAS,UAAU,SAAM;AAAG,gBAAU;IAAI,CAAC;AACrD,QAAI,mBAAmB,KAAK,UAAU,OAAO;AAE7C,QAAI,mBAAmB,SAAS,CAAC;AACjC,QAAI,iBAAiB,SAAS,CAAC;AAC/B,QAAI,cAAc,SAAS,CAAC;AAC5B,QAAI,QAAQ,iBAAiB,WAAW;AACxC,QAAI,gBAAgB,KAAK,oBAAoB,KAAK;AAClD,qBAAiB,WAAW,IAAI;AAChC,QAAI,aAAa,KAAK,UAAU,gBAAgB;AAEhD,YAAQ,IAAI,UAAU;AACtB,WAAO;EAET;EAGD,UAAU,KAAG;AACV,QAAI,SAAS,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,aAAa,IAAI,IAAI,SAAO,IAAI,QAAQ,CAAC,CAAC;AACtE,WAAO;EACT;EAEA,oBAAoB,KAAG;AACrB,QAAI,SAAS,CAAA;AACb,QAAI,IAAI,IAAI,CAAC;AACb,aAAS,IAAI,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK;AAAE,aAAO,CAAC,IAAI,IAAI,IAAI,CAAC;IAAE;AAAC;AACnE,WAAO,CAAC,IAAI;AACZ,WAAO;EACV;EAGC,2BAA2B,KAAG;AAC5B,QAAI,IAAI,IAAI,CAAC;AACb,aAAS,IAAI,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK;AAAE,UAAI,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;IAAE;AACzE,QAAI,CAAC,IAAI;AACT,WAAO;EACT;;;mCAjDW,iBAAc;AAAA;mFAAd,iBAAc,SAAd,gBAAc,WAAA,YAFb,OAAM,CAAA;AAEd,IAAO,iBAAP;;sEAAO,gBAAc,CAAA;UAH1B;WAAW;MACV,YAAY;KACb;;;;;;;AC6CK,IAAO,2BAAP,MAAO,yBAAuB;EAuBlC,cAAA;AArBQ,SAAA,OAAO,OAAO,mBAAmB;AACjC,SAAA,cAAc,OAAO,mBAAmB;AACxC,SAAA,eAAe,OAAO,qBAAqB;AAC3C,SAAA,OAAO,OAAO,WAAW;AACzB,SAAA,UAAU,OAAO,cAAc;AAGvC,SAAA,QAAQ;AACR,SAAA,WAAmB;AACnB,SAAA,eAAuB;AACvB,SAAA,WAAmB;AACnB,SAAA,SAAiB;AAMV,SAAA,YAAqB;AAa5B,SAAA,aAA4B,CAAA;AAC5B,SAAA,qBAAkC,CAAA;AAElC,SAAA,WAAmB,CAAC,EAAE,WAAW,GAAG,OAAO,EAAE,SAAS,WAAW,YAAY,CAAA,EAAE,GAAI,QAAQ,EAAE,SAAS,WAAW,YAAY,CAAA,EAAE,EAAE,CAAE;AAOzH,SAAA,WAAuB;AASjC,SAAA,eAAsB,CAAA;AACtB,SAAA,iBAAwB,CAAA;AAIjB,SAAA,SAA6B,IAAI,cAAmB,CAAC;AA/B1D,SAAK,QAAQ,CAAC,UAAU,IAAI,UAAQ,KAAK,KAAK,CAAC;EAEjD;EAgCA,WAAQ;AAEN,SAAK,WAAW,KAAK,KAAK,eAAe,MAAM,KAAK,KAAK,YAAY;AAErE,SAAK,WAAW,KAAK,KAAK,eAAe,MAAM,KAAK,KAAK,YAAY;AAErE,SAAK,SAAS,KAAK,KAAK,eAAe,MAAM,KAAK,KAAK,YAAY;AAEnE,SAAK,YAAY,qBAAqB,QAAQ,EAAE,UAAU,SAAO,KAAK,eAAe,GAAG;EAO1F;EAEA,iBAAiB,UAAQ;AACvB,YAAQ,IAAI,QAAQ;AACpB,QAAI,IAAI,SAAS,CAAC;AAElB,QAAI,IAAI,UAAU,UAAU,UAAQ,KAAK,OAAO,SAAS,CAAC,CAAC;AAE3D,QAAI,YAAY,EAAE,OAAO,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,EAAC;AAErD,YAAQ,IAAI,SAAS,CAAC,CAAC;AAkBvB,SAAK,aAAa,uBAAuB,SAAS,CAAC,CAAC,EAAE,UAAU,SAAM;AAGpE,cAAQ,IAAI,GAAG;IAEjB,CAAC;EACH;EAEA,iBAAiB,GAAC;AAChB,SAAK,mBAAmB,KAAK,SAAS,OAAO,CAAC,aAAc,QAAQ,SAAS,EAAE,CAAC,KAAK,QAAQ,SAAS,UAAW,QAAQ,QAAQ,EAAE,CAAC,CAAC;AACrI,WAAO,KAAK;EACd;EAEA,0BAA0B,GAAC;AACzB,SAAK,4BAA4B,KAAK,SAAS,OAAO,CAAC,aAAa,QAAQ,SAAS,EAAE,CAAC,KAAK,QAAQ,SAAS,UAAU,QAAQ,QAAQ,EAAE,CAAC,CAAC;AAC5I,WAAO,KAAK;EACd;EAEA,iBAAiB,UAAQ;AACvB,YAAQ,IAAI,SAAS,KAAK;EAC5B;EAEA,cAAc,OAAK;AACjB,YAAQ,IAAI,KAAK;AACjB,SAAK,KAAK,YAAY,UAAU,SAAO,QAAQ,IAAI,GAAG,CAAC;AACvD,QAAI,IAAI,MAAM,CAAC;AACf,QAAI,aAAwB,EAAE,UAAU,CAAC,MAAM,CAAC,GAAG,KAAK,YAAY,KAAK,mBAAmB,CAAC,EAAE,SAAS,CAAC,GAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,EAAC;AACvJ,QAAI,CAAC,KAAK,mBAAmB,CAAC,GAAG;AAAE,WAAK,mBAAmB,KAAK,UAAU;IAAE;AAAO,WAAK,mBAAmB,OAAO,GAAG,GAAG,UAAU;AAClI,SAAK,WAAW,KAAK,KAAK,kBAAkB;AAE5C,QAAI;AACJ,QAAI,cAAc,EAAE,OAAO,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,EAAC;AAChE,QAAI,eAAe,GAAG,WAAW;AAC/B,iBAAa,UAAU,SAAO,QAAQ,IAAI,GAAG,CAAC;AAC9C,kBAAc,CAAC,cAAc,KAAK,KAAK,WAAW,CAAC,EAAE,UAAU,CAAC,CAAC,MAAM,IAAI,MAAK;AAAG,WAAK,KAAK,IAAI;AAAG,yBAAmB;IAAK,CAAC;AAC7H,SAAK,KAAK,iBAAiB,gBAAgB;AAI9C,QAAI,aAAa,KAAK,QAAQ,QAAQ,KAAK;AAC1C,SAAK,KAAK,8BAA8B,UAAU;EAapD;EAEA,uBAAuB,UAAQ;AAC7B,QAAI,IAAI,SAAS,CAAC;AAClB,QAAI,oBAAoB,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC,GAAG,EAAE;AAClE,QAAI,aAAa,KAAK,QAAQ,QAAQ,iBAAiB;AACvD,YAAQ,IAAI,UAAU;AACtB,QAAI,cAAwB,EAAE,OAAO,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,KAAK,SAAS,CAAC,EAAC;AACnF,QAAI;AACJ,SAAK,KAAK,WAAW,UAAU,SAAM;AACnC,oBAAc;AACd,UAAI,MAAM,GAAG;AAAE,sBAAc,CAAC,WAAW;MAAE;AAAC;IAE9C,CAAC;AACD,SAAK,KAAK,gBAAgB,WAAW;AACrC,SAAK,KAAK,cAAc,UAAU;AAClC,SAAK,KAAK,SAAS,UAAU,SAAO,QAAQ,IAAI,GAAG,CAAC;EACtD;EAEA,YAAY,QAAQ,QAAM;AACxB,QAAI;AACJ,QAAI,SAAS,QAAQ;AACnB,UAAI,SAAS;IACf;AAAO,UAAI;AACb,WAAO;EACP;EAED,cAAc,GAAG,IAAE;AAClB,WAAO,EAAE,UAAU,UAAQ,KAAK,OAAO,EAAE;EACzC;EAEA,iBAAiB,GAAG,GAAC;AACnB,QAAI,EAAE,WAAW,EAAE,QAAQ;AACvB,YAAM,IAAI,MAAM,qDAAkD;IACtE;AAEA,QAAI,IAAI,CAAC,GAAG,CAAC;AACb,aAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AAC/B,UAAI,EAAE,CAAC,MAAM,GAAG;AACZ,UAAE,CAAC,IAAI,EAAE,CAAC,IAAI;AACd;MACJ;IACJ;AAEA,WAAO;EACX;EAME,cAAW;EAEX;;;mCAhNW,0BAAuB;AAAA;yFAAvB,0BAAuB,WAAA,CAAA,CAAA,qBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,QAAA,+FAAA,OAAA,YAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,cAAA,YAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,QAAA,yiBAAA,GAAA,CAAA,SAAA,SAAA,GAAA,CAAA,GAAA,mBAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,oBAAA,0BAAA,6BAAA,iBAAA,oBAAA,6BAAA,kBAAA,CAAA,GAAA,UAAA,SAAA,iCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACnDpC,IAAA,yBAAA,GAAA,MAAA;AAEE,IAAA,oBAAA,GAAA,QAAA,CAAA;AAGF,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,MAAA,EAAM,GAAA,OAAA,CAAA,EAEwB,GAAA,OAAA,CAAA;AACC,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;AACnC,IAAA,yBAAA,GAAA,OAAA,CAAA;AAAsB,IAAA,iBAAA,CAAA;AAAY,IAAA,uBAAA,EAAM;AAG1C,IAAA,yBAAA,GAAA,YAAA,CAAA,EAAwD,GAAA,oBAAA,CAAA,EACX,IAAA,OAAA,CAAA,EACd,IAAA,KAAA,CAAA;AACF,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAAK,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,mBAAA;AAAyB,IAAA,uBAAA;AACnE,IAAA,yBAAA,IAAA,KAAA,CAAA;AACE,IAAA,iBAAA,IAAA,gBAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,mBAAA;AAAyB,IAAA,uBAAA;AAC/B,IAAA,yBAAA,IAAA,KAAA,CAAA;AAA4C,IAAA,iBAAA,IAAA,sBAAA;AAAoB,IAAA,uBAAA,EAAI;AAEtE,IAAA,yBAAA,IAAA,OAAA,CAAA,EAA2B,IAAA,YAAA,CAAA;AAA0B,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA,EAAW;AAErE,IAAA,yBAAA,IAAA,sBAAA,EAAA;AAA0C,IAAA,qBAAA,mBAAA,SAAA,gFAAA,QAAA;AAAA,aAAmB,IAAA,iBAAA,MAAA;IAAwB,CAAA;AAAE,IAAA,uBAAA;AAEvF,IAAA,yBAAA,IAAA,wBAAA,EAAA;AAEG,IAAA,qBAAA,oBAAA,SAAA,mFAAA,QAAA;AAAA,aAAoB,IAAA,iBAAA,MAAA;IAAwB,CAAA,EAAC,0BAAA,SAAA,yFAAA,QAAA;AAAA,aAA2B,IAAA,uBAAA,MAAA;IAA8B,CAAA,EAAC,6BAAA,SAAA,4FAAA,QAAA;AAAA,aAA8B,IAAA,0BAAA,MAAA;IAAiC,CAAA,EAAC,iBAAA,SAAA,gFAAA,QAAA;AAAA,aAAkB,IAAA,cAAA,MAAA;IAAqB,CAAA,EAAC,oBAAA,SAAA,mFAAA,QAAA;AAAA,aAAqB,IAAA,iBAAA,MAAA;IAAwB,CAAA;AAAE,IAAA,uBAAA,EAAuB,EAIvQ,EAEV;;;AAzBa,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,IAAA,QAAA;AAMf,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,0BAAA,GAAAC,IAAA,CAAA;AAKA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,0BAAA,GAAAC,IAAA,CAAA;AAIe,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,YAAA;AAE0B,IAAA,oBAAA;AAAA,IAAA,qBAAA,6BAAA,IAAA,yBAAA,EAAuD,oBAAA,IAAA,gBAAA;;;EDInG;EACA;EAAY;EACZ;EACA;EACA;EACA;EACA;EACA;EAAa;EACb;EACA;EAAa;EAAA;EACb;EACA;EACA;EACA;AAAwB,GAAA,QAAA,CAAA,itCAAA,EAAA,CAAA;AAM1B,IAAO,0BAAP;;sEAAO,yBAAuB,CAAA;UAvBnC;uBACW,uBAAqB,YACnB,MAAI,SACL;MACL;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACH,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,QAAA,CAAA,sgCAAA,EAAA,CAAA;;;;6EAKQ,yBAAuB,EAAA,WAAA,2BAAA,UAAA,+DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;","names":["_c3","_c0","_c1"],"x_google_ignoreList":[0]}