{"version":3,"sources":["src/app/harmonia-universalis/services/hu-database.service.ts","node_modules/@angular/material/fesm2022/sort.mjs","node_modules/@angular/material/fesm2022/paginator.mjs","src/app/sortingAccessor.ts","src/app/harmonia-universalis/harmonia-universalis.component.ts","src/app/harmonia-universalis/harmonia-universalis.component.html"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\r\nimport { RequestService } from '../../services/request.service';\r\nimport { switchMap, map, tap } from 'rxjs/operators';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HuDatabaseService {\r\n  private request = inject(RequestService);\r\n\r\n\r\n\r\n  sparqlBuilding(lang){   // this is the sparql query\r\n    let u = \"https://database.factgrid.de/query/#%23biblio%0ASELECT%20%3Ftitle%20%3FtitleLabel%20%3Fauthor%20%3FauthorLabel%20%3Fdate%20%3Flocation%20%3FlocationLabel%20%3Fcountry%20%3FcountryLabel%0AWITH%20%7B%0A%20%20SELECT%20%3Ftitle%20%3FtitleLabel%20%3Fauthor%20%3FauthorLabel%20%3Fdate%20%3Flocation%20%3FlocationLabel%20WHERE%20%7B%0A%20%20%20%20%20%3Ftitle%20wdt%3AP2%20wd%3AQ20%3B%0A%20%20%20%20%20%20%20%20wdt%3AP243%20wd%3AQ172203%3B%0A%20%20%20%20%20%20%20%20wdt%3AP21%20%3Fauthor%3B%0A%20%20%20%20%20%20%20%20wdt%3AP222%20%3Fdate%3B%0A%20%20%20%20%20%20%20%20wdt%3AP241%20%3Flocation%20.%20%0A%20%20%7D%0A%7D%20AS%20%25results%20%0A%0AWHERE%20%7B%0A%20%20INCLUDE%20%25results.%0AOPTIONAL%20%7B%20%20%3Fcountry%20%5Ewdt%3AP297%20%3Flocation%3B%0A%20%20%20%20%20%20%20%20%20%20wdt%3AP2%20%20%20wd%3AQ21925%20%20.%20%7D%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22en%22%2C%22en%22.%20%7D%0A%7D%0A\";\r\n    console.log(u);\r\n    return u\r\n  }\r\n\r\n  listFromSparql(res) {  // create the qid in the results.bindings\r\n    if (res !== undefined) {\r\n      if (res.results !== undefined) {\r\n\r\n        for (let i = 0; i < res.results.bindings.length; i++) {\r\n          res.results.bindings[i][\"author\"].id = res.results.bindings[i][\"author\"].value.replace(\r\n            \"https://database.factgrid.de/entity/\", \"\");\r\n          res.results.bindings[i][\"author\"].label = res.results.bindings[i][\"authorLabel\"].value;\r\n          res.results.bindings[i][\"title\"].id = res.results.bindings[i][\"title\"].value.replace(\r\n            \"https://database.factgrid.de/entity/\", \"\");\r\n          res.results.bindings[i][\"title\"].label = res.results.bindings[i][\"titleLabel\"].value;\r\n          res.results.bindings[i][\"location\"].id = res.results.bindings[i][\"location\"].value.replace(\r\n            \"https://database.factgrid.de/entity/\", \"\");\r\n          res.results.bindings[i][\"location\"].label = res.results.bindings[i][\"locationLabel\"].value;\r\n          if (res.results.bindings[i][\"country\"]) {\r\n            res.results.bindings[i][\"country\"].id = res.results.bindings[i][\"country\"].value.replace(\r\n              \"https://database.factgrid.de/entity/\", \"\");\r\n          }\r\n          if (res.results.bindings[i][\"countryLabel\"]) {\r\n            res.results.bindings[i][\"country\"].label = res.results.bindings[i][\"countryLabel\"].value;\r\n          }\r\n          res.results.bindings[i][\"date\"].value = res.results.bindings[i][\"date\"].value.slice(0, 4);\r\n        };\r\n      };\r\n    }\r\n    return res.results.bindings\r\n  }\r\n\r\n  databaseToDisplay(sparql){\r\n     let sparqlResult:Observable<any> | undefined;\r\n    let selectedSparql = this.newSparqlAdress(sparql); // this.newSparqlAdress(sparql,this.selectedLang); //handle sparql queries 1. create the address \r\n    sparqlResult = this.request.getList(selectedSparql); \r\n      //handle sparql queries 2. list ready to display  \r\n    return sparqlResult    \r\n  }\r\n\r\n  newSparqlAdress(address:string) : string {  // create a query of the API\r\n      const newPrefix = \"https://database.factgrid.de/sparql?query=\";\r\n      let oldPrefix = \"https://database.factgrid.de/query/#\";\r\n      if (address.includes('embed.html')){oldPrefix =\"https://database.factgrid.de/query/embed.html#\"};\r\n      if (address !== undefined) address = address.replace(oldPrefix, newPrefix);\r\n      return address\r\n      }\r\n\r\n  databaseToDownload(data){\r\n      let dataToDownload:any[][] = [ [\"author\",\"author.id\",\"title\",\"title.id\",\"location\",\"location.id\",\"country\",\"country.id\",\"date\" ] ];\r\n      for (let i=0; i<data.length; i++){ dataToDownload[i+1] = [data[i].author.label, data[i].author.id, data[i].title.label, data[i].author.id, data[i].location.label, data[i].location.id, data[i].country.label, data[i].country.id, data[i].date.value] } \r\n       console.log(dataToDownload);\r\n      return dataToDownload\r\n     } \r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { ReplaySubject, Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\n\n/** @docs-private */\nconst _c0 = [\"mat-sort-header\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatSortHeader_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_start_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._disableViewStateAnimation = true);\n    })(\"@arrowPosition.done\", function MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_done_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._disableViewStateAnimation = false);\n    });\n    i0.ɵɵelement(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵelement(3, \"div\", 5)(4, \"div\", 6)(5, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@arrowOpacity\", ctx_r1._getArrowViewState())(\"@arrowPosition\", ctx_r1._getArrowViewState())(\"@allowChildren\", ctx_r1._getArrowDirectionState());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"@indicator\", ctx_r1._getArrowDirectionState());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@leftPointer\", ctx_r1._getArrowDirectionState());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@rightPointer\", ctx_r1._getArrowDirectionState());\n  }\n}\nfunction getSortDuplicateSortableIdError(id) {\n  return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n  return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n  return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n  return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort {\n  /** The sort direction of the currently active MatSortable. */\n  get direction() {\n    return this._direction;\n  }\n  set direction(direction) {\n    if (direction && direction !== 'asc' && direction !== 'desc' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  constructor(_defaultOptions) {\n    this._defaultOptions = _defaultOptions;\n    this._initializedStream = new ReplaySubject(1);\n    /** Collection of all registered sortables that this directive manages. */\n    this.sortables = new Map();\n    /** Used to notify any child components listening to state changes. */\n    this._stateChanges = new Subject();\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overridden by the MatSortable's sort start.\n     */\n    this.start = 'asc';\n    this._direction = '';\n    /** Whether the sortable is disabled. */\n    this.disabled = false;\n    /** Event emitted when the user changes either the active sort or sort direction. */\n    this.sortChange = new EventEmitter();\n    /** Emits when the paginator is initialized. */\n    this.initialized = this._initializedStream;\n  }\n  /**\n   * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n   * collection of MatSortables.\n   */\n  register(sortable) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!sortable.id) {\n        throw getSortHeaderMissingIdError();\n      }\n      if (this.sortables.has(sortable.id)) {\n        throw getSortDuplicateSortableIdError(sortable.id);\n      }\n    }\n    this.sortables.set(sortable.id, sortable);\n  }\n  /**\n   * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n   * collection of contained MatSortables.\n   */\n  deregister(sortable) {\n    this.sortables.delete(sortable.id);\n  }\n  /** Sets the active sort id and determines the new sort direction. */\n  sort(sortable) {\n    if (this.active != sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n    this.sortChange.emit({\n      active: this.active,\n      direction: this.direction\n    });\n  }\n  /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n  getNextSortDirection(sortable) {\n    if (!sortable) {\n      return '';\n    }\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n    let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n  ngOnInit() {\n    this._initializedStream.next();\n  }\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._initializedStream.complete();\n  }\n  static {\n    this.ɵfac = function MatSort_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSort)(i0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSort,\n      selectors: [[\"\", \"matSort\", \"\"]],\n      hostAttrs: [1, \"mat-sort\"],\n      inputs: {\n        active: [0, \"matSortActive\", \"active\"],\n        start: [0, \"matSortStart\", \"start\"],\n        direction: [0, \"matSortDirection\", \"direction\"],\n        disableClear: [2, \"matSortDisableClear\", \"disableClear\", booleanAttribute],\n        disabled: [2, \"matSortDisabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        sortChange: \"matSortChange\"\n      },\n      exportAs: [\"matSort\"],\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSort, [{\n    type: Directive,\n    args: [{\n      selector: '[matSort]',\n      exportAs: 'matSort',\n      host: {\n        'class': 'mat-sort'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_SORT_DEFAULT_OPTIONS]\n    }]\n  }], {\n    active: [{\n      type: Input,\n      args: ['matSortActive']\n    }],\n    start: [{\n      type: Input,\n      args: ['matSortStart']\n    }],\n    direction: [{\n      type: Input,\n      args: ['matSortDirection']\n    }],\n    disableClear: [{\n      type: Input,\n      args: [{\n        alias: 'matSortDisableClear',\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'matSortDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    sortChange: [{\n      type: Output,\n      args: ['matSortChange']\n    }]\n  });\n})();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n  let sortOrder = ['asc', 'desc'];\n  if (start == 'desc') {\n    sortOrder.reverse();\n  }\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n  return sortOrder;\n}\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n  /** Animation that moves the sort indicator. */\n  indicator: trigger('indicator', [state('active-asc, asc', style({\n    transform: 'translateY(0px)'\n  })),\n  // 10px is the height of the sort indicator, minus the width of the pointers\n  state('active-desc, desc', style({\n    transform: 'translateY(10px)'\n  })), transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))]),\n  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n  leftPointer: trigger('leftPointer', [state('active-asc, asc', style({\n    transform: 'rotate(-45deg)'\n  })), state('active-desc, desc', style({\n    transform: 'rotate(45deg)'\n  })), transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))]),\n  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n  rightPointer: trigger('rightPointer', [state('active-asc, asc', style({\n    transform: 'rotate(45deg)'\n  })), state('active-desc, desc', style({\n    transform: 'rotate(-45deg)'\n  })), transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))]),\n  /** Animation that controls the arrow opacity. */\n  arrowOpacity: trigger('arrowOpacity', [state('desc-to-active, asc-to-active, active', style({\n    opacity: 1\n  })), state('desc-to-hint, asc-to-hint, hint', style({\n    opacity: 0.54\n  })), state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({\n    opacity: 0\n  })),\n  // Transition between all states except for immediate transitions\n  transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')), transition('* <=> *', animate(SORT_ANIMATION_TRANSITION))]),\n  /**\n   * Animation for the translation of the arrow as a whole. States are separated into two\n   * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n   * peek, and active. The other states define a specific animation (source-to-destination)\n   * and are determined as a function of their prev user-perceived state and what the next state\n   * should be.\n   */\n  arrowPosition: trigger('arrowPosition', [\n  // Hidden Above => Hint Center\n  transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({\n    transform: 'translateY(-25%)'\n  }), style({\n    transform: 'translateY(0)'\n  })]))),\n  // Hint Center => Hidden Below\n  transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({\n    transform: 'translateY(0)'\n  }), style({\n    transform: 'translateY(25%)'\n  })]))),\n  // Hidden Below => Hint Center\n  transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({\n    transform: 'translateY(25%)'\n  }), style({\n    transform: 'translateY(0)'\n  })]))),\n  // Hint Center => Hidden Above\n  transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({\n    transform: 'translateY(0)'\n  }), style({\n    transform: 'translateY(-25%)'\n  })]))), state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({\n    transform: 'translateY(0)'\n  })), state('hint-to-desc, active-to-desc, desc', style({\n    transform: 'translateY(-25%)'\n  })), state('hint-to-asc, active-to-asc, asc', style({\n    transform: 'translateY(25%)'\n  }))]),\n  /** Necessary trigger that calls animate on children animations. */\n  allowChildren: trigger('allowChildren', [transition('* <=> *', [query('@*', animateChild(), {\n    optional: true\n  })])])\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n  constructor() {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    this.changes = new Subject();\n  }\n  static {\n    this.ɵfac = function MatSortHeaderIntl_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSortHeaderIntl)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MatSortHeaderIntl,\n      factory: MatSortHeaderIntl.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: MatSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader {\n  /**\n   * Description applied to MatSortHeader's button element with aria-describedby. This text should\n   * describe the action that will occur when the user clicks the sort header.\n   */\n  get sortActionDescription() {\n    return this._sortActionDescription;\n  }\n  set sortActionDescription(value) {\n    this._updateSortActionDescription(value);\n  }\n  constructor(\n  /**\n   * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n   * @breaking-change 13.0.0\n   */\n  _intl, _changeDetectorRef,\n  // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n  // tslint:disable-next-line: lightweight-tokens\n  _sort, _columnDef, _focusMonitor, _elementRef, /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n  _ariaDescriber, defaultOptions) {\n    this._intl = _intl;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._sort = _sort;\n    this._columnDef = _columnDef;\n    this._focusMonitor = _focusMonitor;\n    this._elementRef = _elementRef;\n    this._ariaDescriber = _ariaDescriber;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     */\n    this._showIndicatorHint = false;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     */\n    this._viewState = {};\n    /** The direction the arrow should be facing according to the current state. */\n    this._arrowDirection = '';\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     */\n    this._disableViewStateAnimation = false;\n    /** Sets the position of the arrow that displays when sorted. */\n    this.arrowPosition = 'after';\n    /** whether the sort header is disabled. */\n    this.disabled = false;\n    // Default the action description to \"Sort\" because it's better than nothing.\n    // Without a description, the button's label comes from the sort header text content,\n    // which doesn't give any indication that it performs a sorting operation.\n    this._sortActionDescription = 'Sort';\n    // Note that we use a string token for the `_columnDef`, because the value is provided both by\n    // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n    // and we want to avoid having the sort header depending on the CDK table because\n    // of this single reference.\n    if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n    if (defaultOptions?.arrowPosition) {\n      this.arrowPosition = defaultOptions?.arrowPosition;\n    }\n    this._handleStateChanges();\n  }\n  ngOnInit() {\n    if (!this.id && this._columnDef) {\n      this.id = this._columnDef.name;\n    }\n    // Initialize the direction of the arrow and set the view state to be immediately that state.\n    this._updateArrowDirection();\n    this._setAnimationTransitionState({\n      toState: this._isSorted() ? 'active' : this._arrowDirection\n    });\n    this._sort.register(this);\n    this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n    this._updateSortActionDescription(this._sortActionDescription);\n  }\n  ngAfterViewInit() {\n    // We use the focus monitor because we also want to style\n    // things differently based on the focus origin.\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const newState = !!origin;\n      if (newState !== this._showIndicatorHint) {\n        this._setIndicatorHintVisible(newState);\n        this._changeDetectorRef.markForCheck();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._sort.deregister(this);\n    this._rerenderSubscription.unsubscribe();\n    if (this._sortButton) {\n      this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n    }\n  }\n  /**\n   * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n   * user showing what the active sort will become. If set to false, the arrow will fade away.\n   */\n  _setIndicatorHintVisible(visible) {\n    // No-op if the sort header is disabled - should not make the hint visible.\n    if (this._isDisabled() && visible) {\n      return;\n    }\n    this._showIndicatorHint = visible;\n    if (!this._isSorted()) {\n      this._updateArrowDirection();\n      if (this._showIndicatorHint) {\n        this._setAnimationTransitionState({\n          fromState: this._arrowDirection,\n          toState: 'hint'\n        });\n      } else {\n        this._setAnimationTransitionState({\n          fromState: 'hint',\n          toState: this._arrowDirection\n        });\n      }\n    }\n  }\n  /**\n   * Sets the animation transition view state for the arrow's position and opacity. If the\n   * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n   * no animation appears.\n   */\n  _setAnimationTransitionState(viewState) {\n    this._viewState = viewState || {};\n    // If the animation for arrow position state (opacity/translation) should be disabled,\n    // remove the fromState so that it jumps right to the toState.\n    if (this._disableViewStateAnimation) {\n      this._viewState = {\n        toState: viewState.toState\n      };\n    }\n  }\n  /** Triggers the sort on this sort header and removes the indicator hint. */\n  _toggleOnInteraction() {\n    this._sort.sort(this);\n    // Do not show the animation if the header was already shown in the right position.\n    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n      this._disableViewStateAnimation = true;\n    }\n  }\n  _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n  _handleKeydown(event) {\n    if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n      event.preventDefault();\n      this._toggleOnInteraction();\n    }\n  }\n  /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n  _isSorted() {\n    return this._sort.active == this.id && (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n  /** Returns the animation state for the arrow direction (indicator and pointers). */\n  _getArrowDirectionState() {\n    return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n  }\n  /** Returns the arrow position state (opacity, translation). */\n  _getArrowViewState() {\n    const fromState = this._viewState.fromState;\n    return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n  }\n  /**\n   * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n   * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n   * active sorted direction. The reason this is updated through a function is because the direction\n   * should only be changed at specific times - when deactivated but the hint is displayed and when\n   * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n   * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n   * preserving its direction, even though the next sort direction is actually different and should\n   * only be changed once the arrow displays again (hint or activation).\n   */\n  _updateArrowDirection() {\n    this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n  }\n  _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n  /**\n   * Gets the aria-sort attribute that should be applied to this sort header. If this header\n   * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n   * says that the aria-sort property should only be present on one header at a time, so removing\n   * ensures this is true.\n   */\n  _getAriaSortAttribute() {\n    if (!this._isSorted()) {\n      return 'none';\n    }\n    return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n  }\n  /** Whether the arrow inside the sort header should be rendered. */\n  _renderArrow() {\n    return !this._isDisabled() || this._isSorted();\n  }\n  _updateSortActionDescription(newDescription) {\n    // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n    // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n    // for every *cell* in the table, creating a lot of unnecessary noise.\n    // If _sortButton is undefined, the component hasn't been initialized yet so there's\n    // nothing to update in the DOM.\n    if (this._sortButton) {\n      // removeDescription will no-op if there is no existing message.\n      // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n      this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n      this._ariaDescriber?.describe(this._sortButton, newDescription);\n    }\n    this._sortActionDescription = newDescription;\n  }\n  /** Handles changes in the sorting state. */\n  _handleStateChanges() {\n    this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n      if (this._isSorted()) {\n        this._updateArrowDirection();\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n          this._disableViewStateAnimation = true;\n        }\n        this._setAnimationTransitionState({\n          fromState: this._arrowDirection,\n          toState: 'active'\n        });\n        this._showIndicatorHint = false;\n      }\n      // If this header was recently active and now no longer sorted, animate away the arrow.\n      if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n        this._disableViewStateAnimation = false;\n        this._setAnimationTransitionState({\n          fromState: 'active',\n          toState: this._arrowDirection\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  static {\n    this.ɵfac = function MatSortHeader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSortHeader)(i0.ɵɵdirectiveInject(MatSortHeaderIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MatSort, 8), i0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), i0.ɵɵdirectiveInject(i3.FocusMonitor), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.AriaDescriber, 8), i0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSortHeader,\n      selectors: [[\"\", \"mat-sort-header\", \"\"]],\n      hostAttrs: [1, \"mat-sort-header\"],\n      hostVars: 3,\n      hostBindings: function MatSortHeader_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() {\n            return ctx._handleClick();\n          })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() {\n            return ctx._setIndicatorHintVisible(true);\n          })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() {\n            return ctx._setIndicatorHintVisible(false);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n          i0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n        }\n      },\n      inputs: {\n        id: [0, \"mat-sort-header\", \"id\"],\n        arrowPosition: \"arrowPosition\",\n        start: \"start\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        sortActionDescription: \"sortActionDescription\",\n        disableClear: [2, \"disableClear\", \"disableClear\", booleanAttribute]\n      },\n      exportAs: [\"matSortHeader\"],\n      features: [i0.ɵɵInputTransformsFeature],\n      attrs: _c0,\n      ngContentSelectors: _c1,\n      decls: 4,\n      vars: 7,\n      consts: [[1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]],\n      template: function MatSortHeader_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, MatSortHeader_Conditional_3_Template, 6, 6, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition === \"before\");\n          i0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0)(\"role\", ctx._isDisabled() ? null : \"button\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(ctx._renderArrow() ? 3 : -1);\n        }\n      },\n      styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color, var(--mat-app-on-surface));opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matSortAnimations.indicator, matSortAnimations.leftPointer, matSortAnimations.rightPointer, matSortAnimations.arrowOpacity, matSortAnimations.arrowPosition, matSortAnimations.allowChildren]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSortHeader, [{\n    type: Component,\n    args: [{\n      selector: '[mat-sort-header]',\n      exportAs: 'matSortHeader',\n      host: {\n        'class': 'mat-sort-header',\n        '(click)': '_handleClick()',\n        '(keydown)': '_handleKeydown($event)',\n        '(mouseenter)': '_setIndicatorHintVisible(true)',\n        '(mouseleave)': '_setIndicatorHintVisible(false)',\n        '[attr.aria-sort]': '_getAriaSortAttribute()',\n        '[class.mat-sort-header-disabled]': '_isDisabled()'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matSortAnimations.indicator, matSortAnimations.leftPointer, matSortAnimations.rightPointer, matSortAnimations.arrowOpacity, matSortAnimations.arrowPosition, matSortAnimations.allowChildren],\n      standalone: true,\n      template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\",\n      styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color, var(--mat-app-on-surface));opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"]\n    }]\n  }], () => [{\n    type: MatSortHeaderIntl\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: MatSort,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: ['MAT_SORT_HEADER_COLUMN_DEF']\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: i3.FocusMonitor\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i3.AriaDescriber,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_SORT_DEFAULT_OPTIONS]\n    }]\n  }], {\n    id: [{\n      type: Input,\n      args: ['mat-sort-header']\n    }],\n    arrowPosition: [{\n      type: Input\n    }],\n    start: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    sortActionDescription: [{\n      type: Input\n    }],\n    disableClear: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatSortModule {\n  static {\n    this.ɵfac = function MatSortModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSortModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSortModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n      imports: [MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSortModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatSort, MatSortHeader],\n      exports: [MatSort, MatSortHeader],\n      providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nfunction MatPaginator_Conditional_2_Conditional_3_For_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pageSizeOption_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pageSizeOption_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", pageSizeOption_r3, \" \");\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 14)(1, \"mat-select\", 16, 0);\n    i0.ɵɵlistener(\"selectionChange\", function MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1._changePageSize($event.value));\n    });\n    i0.ɵɵrepeaterCreate(3, MatPaginator_Conditional_2_Conditional_3_For_4_Template, 2, 2, \"mat-option\", 17, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_2_Conditional_3_Template_div_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const selectRef_r4 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(selectRef_r4.open());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r1._formFieldAppearance)(\"color\", ctx_r1.color);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r1.pageSize)(\"disabled\", ctx_r1.disabled)(\"aria-labelledby\", ctx_r1._pageSizeLabelId)(\"panelClass\", ctx_r1.selectConfig.panelClass || \"\")(\"disableOptionCentering\", ctx_r1.selectConfig.disableOptionCentering);\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx_r1._displayedPageSizeOptions);\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.pageSize);\n  }\n}\nfunction MatPaginator_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MatPaginator_Conditional_2_Conditional_3_Template, 6, 7, \"mat-form-field\", 14)(4, MatPaginator_Conditional_2_Conditional_4_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"id\", ctx_r1._pageSizeLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1._intl.itemsPerPageLabel, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1._displayedPageSizeOptions.length > 1 ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1._displayedPageSizeOptions.length <= 1 ? 4 : -1);\n  }\n}\nfunction MatPaginator_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.firstPage());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 8);\n    i0.ɵɵelement(2, \"path\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n  }\n}\nfunction MatPaginator_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.lastPage());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 8);\n    i0.ɵɵelement(2, \"path\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r1._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._nextButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.lastPageLabel);\n  }\n}\nclass MatPaginatorIntl {\n  constructor() {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     */\n    this.changes = new Subject();\n    /** A label for the page size selector. */\n    this.itemsPerPageLabel = 'Items per page:';\n    /** A label for the button that increments the current page. */\n    this.nextPageLabel = 'Next page';\n    /** A label for the button that decrements the current page. */\n    this.previousPageLabel = 'Previous page';\n    /** A label for the button that moves to the first page. */\n    this.firstPageLabel = 'First page';\n    /** A label for the button that moves to the last page. */\n    this.lastPageLabel = 'Last page';\n    /** A label for the range of items within the current page and the length of the whole list. */\n    this.getRangeLabel = (page, pageSize, length) => {\n      if (length == 0 || pageSize == 0) {\n        return `0 of ${length}`;\n      }\n      length = Math.max(length, 0);\n      const startIndex = page * pageSize;\n      // If the start index exceeds the list length, do not try and fix the end index to the end.\n      const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n      return `${startIndex + 1} – ${endIndex} of ${length}`;\n    };\n  }\n  static {\n    this.ɵfac = function MatPaginatorIntl_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatPaginatorIntl)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MatPaginatorIntl,\n      factory: MatPaginatorIntl.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatorIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  get pageIndex() {\n    return this._pageIndex;\n  }\n  set pageIndex(value) {\n    this._pageIndex = Math.max(value || 0, 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  get length() {\n    return this._length;\n  }\n  set length(value) {\n    this._length = value || 0;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Number of items to display on a page. By default set to 50. */\n  get pageSize() {\n    return this._pageSize;\n  }\n  set pageSize(value) {\n    this._pageSize = Math.max(value || 0, 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  /** The set of provided page size options to display to the user. */\n  get pageSizeOptions() {\n    return this._pageSizeOptions;\n  }\n  set pageSizeOptions(value) {\n    this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n    this._updateDisplayedPageSizeOptions();\n  }\n  constructor(_intl, _changeDetectorRef, defaults) {\n    this._intl = _intl;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** ID for the DOM node containing the paginator's items per page label. */\n    this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n    this._isInitialized = false;\n    this._initializedStream = new ReplaySubject(1);\n    this._pageIndex = 0;\n    this._length = 0;\n    this._pageSizeOptions = [];\n    /** Whether to hide the page size selection UI from the user. */\n    this.hidePageSize = false;\n    /** Whether to show the first/last buttons UI to the user. */\n    this.showFirstLastButtons = false;\n    /** Used to configure the underlying `MatSelect` inside the paginator. */\n    this.selectConfig = {};\n    /** Whether the paginator is disabled. */\n    this.disabled = false;\n    /** Event emitted when the paginator changes the page size or page index. */\n    this.page = new EventEmitter();\n    /** Emits when the paginator is initialized. */\n    this.initialized = this._initializedStream;\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n    if (defaults) {\n      const {\n        pageSize,\n        pageSizeOptions,\n        hidePageSize,\n        showFirstLastButtons\n      } = defaults;\n      if (pageSize != null) {\n        this._pageSize = pageSize;\n      }\n      if (pageSizeOptions != null) {\n        this._pageSizeOptions = pageSizeOptions;\n      }\n      if (hidePageSize != null) {\n        this.hidePageSize = hidePageSize;\n      }\n      if (showFirstLastButtons != null) {\n        this.showFirstLastButtons = showFirstLastButtons;\n      }\n    }\n    this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n  }\n  ngOnInit() {\n    this._isInitialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._initializedStream.next();\n  }\n  ngOnDestroy() {\n    this._initializedStream.complete();\n    this._intlChanges.unsubscribe();\n  }\n  /** Advances to the next page if it exists. */\n  nextPage() {\n    if (!this.hasNextPage()) {\n      return;\n    }\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex + 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Move back to the previous page if it exists. */\n  previousPage() {\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Move to the first page if not already there. */\n  firstPage() {\n    // hasPreviousPage being false implies at the start\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Move to the last page if not already there. */\n  lastPage() {\n    // hasNextPage being false implies at the end\n    if (!this.hasNextPage()) {\n      return;\n    }\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.getNumberOfPages() - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Whether there is a previous page. */\n  hasPreviousPage() {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n  /** Whether there is a next page. */\n  hasNextPage() {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n  /** Calculate the number of pages */\n  getNumberOfPages() {\n    if (!this.pageSize) {\n      return 0;\n    }\n    return Math.ceil(this.length / this.pageSize);\n  }\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  _updateDisplayedPageSizeOptions() {\n    if (!this._isInitialized) {\n      return;\n    }\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n    }\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  _emitPageEvent(previousPageIndex) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\n  static {\n    this.ɵfac = function MatPaginator_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatPaginator)(i0.ɵɵdirectiveInject(MatPaginatorIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatPaginator,\n      selectors: [[\"mat-paginator\"]],\n      hostAttrs: [\"role\", \"group\", 1, \"mat-mdc-paginator\"],\n      inputs: {\n        color: \"color\",\n        pageIndex: [2, \"pageIndex\", \"pageIndex\", numberAttribute],\n        length: [2, \"length\", \"length\", numberAttribute],\n        pageSize: [2, \"pageSize\", \"pageSize\", numberAttribute],\n        pageSizeOptions: \"pageSizeOptions\",\n        hidePageSize: [2, \"hidePageSize\", \"hidePageSize\", booleanAttribute],\n        showFirstLastButtons: [2, \"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute],\n        selectConfig: \"selectConfig\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        page: \"page\"\n      },\n      exportAs: [\"matPaginator\"],\n      features: [i0.ɵɵInputTransformsFeature],\n      decls: 14,\n      vars: 14,\n      consts: [[\"selectRef\", \"\"], [1, \"mat-mdc-paginator-outer-container\"], [1, \"mat-mdc-paginator-container\"], [1, \"mat-mdc-paginator-page-size\"], [1, \"mat-mdc-paginator-range-actions\"], [\"aria-live\", \"polite\", 1, \"mat-mdc-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-previous\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-next\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [1, \"mat-mdc-paginator-page-size-label\"], [1, \"mat-mdc-paginator-page-size-select\", 3, \"appearance\", \"color\"], [1, \"mat-mdc-paginator-page-size-value\"], [\"hideSingleSelectionIndicator\", \"\", 3, \"selectionChange\", \"value\", \"disabled\", \"aria-labelledby\", \"panelClass\", \"disableOptionCentering\"], [3, \"value\"], [1, \"mat-mdc-paginator-touch-target\", 3, \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]],\n      template: function MatPaginator_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n          i0.ɵɵtemplate(2, MatPaginator_Conditional_2_Template, 5, 4, \"div\", 3);\n          i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, MatPaginator_Conditional_6_Template, 3, 5, \"button\", 6);\n          i0.ɵɵelementStart(7, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() {\n            return ctx.previousPage();\n          });\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(8, \"svg\", 8);\n          i0.ɵɵelement(9, \"path\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(10, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() {\n            return ctx.nextPage();\n          });\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(11, \"svg\", 8);\n          i0.ɵɵelement(12, \"path\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(13, MatPaginator_Conditional_13_Template, 3, 5, \"button\", 12);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(!ctx.hidePageSize ? 2 : -1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.showFirstLastButtons ? 6 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n          i0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n          i0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(ctx.showFirstLastButtons ? 13 : -1);\n        }\n      },\n      dependencies: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n      styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-app-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-app-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-app-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-app-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-app-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-app-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-app-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginator, [{\n    type: Component,\n    args: [{\n      selector: 'mat-paginator',\n      exportAs: 'matPaginator',\n      host: {\n        'class': 'mat-mdc-paginator',\n        'role': 'group'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n      template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-app-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-app-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-app-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-app-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-app-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-app-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-app-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"]\n    }]\n  }], () => [{\n    type: MatPaginatorIntl\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n    }]\n  }], {\n    color: [{\n      type: Input\n    }],\n    pageIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    length: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    pageSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    pageSizeOptions: [{\n      type: Input\n    }],\n    hidePageSize: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showFirstLastButtons: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectConfig: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    page: [{\n      type: Output\n    }]\n  });\n})();\nclass MatPaginatorModule {\n  static {\n    this.ɵfac = function MatPaginatorModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatPaginatorModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatPaginatorModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_PAGINATOR_INTL_PROVIDER],\n      imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n      exports: [MatPaginator],\n      providers: [MAT_PAGINATOR_INTL_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","// this is needed to allow sorting on nested properties\r\nconst nestedProperty = (data: any, sortHeaderId: string): string | number => { \r\nreturn sortHeaderId\r\n    .split('.')\r\n    .reduce((accumulator, key) => accumulator && accumulator[key], data) as\r\n    | string\r\n    | number;\r\n};\r\n\r\n// this is needed to have caseInsensitive sorting\r\nconst caseInsensitive = (data: any, sortHeaderId: string): string | number => {\r\n  const value = data[sortHeaderId];\r\n  return typeof value === 'string' ? value.toUpperCase() : value;\r\n};\r\n\r\nconst nestedCaseInsensitive = (\r\n  data: any,\r\n  sortHeaderId: string\r\n): string | number => {\r\n  const value = sortHeaderId\r\n    .split('.')\r\n    .reduce((accumulator, key) => accumulator && accumulator[key], data) as\r\n    | string\r\n    | number;\r\n  return typeof value === 'string' ? value.toUpperCase() : value;\r\n};\r\n\r\n// ... other sorting data accessors\r\n\r\nconst sortingDataAccessor = {\r\n  nestedProperty,\r\n  caseInsensitive,\r\n  nestedCaseInsensitive,\r\n};\r\n\r\nexport default sortingDataAccessor;\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { AfterViewInit, Component, OnInit, OnDestroy, ViewChild, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { SetDataService } from '../services/set-data.service';\r\nimport { ArrayToCsvService} from '../services/array-to-csv.service';\r\nimport { HuDatabaseService } from './services/hu-database.service';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSort, Sort, MatSortModule } from '@angular/material/sort';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map, switchMap, tap, startWith } from 'rxjs/operators';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { PageEvent, MatPaginatorModule } from '@angular/material/paginator';\r\nimport sortingAccessor from '../sortingAccessor';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\n\r\n\r\n\r\nexport interface HU {\r\n  author:{ label:string, id:string };\r\n  title:{ label:string, id:string  };\r\n  location:{ label:string, id:string };\r\n  date:{ value:string };\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'app-harmonia-universalis',\r\n    imports: [\r\n        CommonModule,\r\n        MatTableModule,\r\n        MatSortModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        RouterModule,\r\n        MatPaginatorModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatSlideToggleModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n    templateUrl: './harmonia-universalis.component.html',\r\n    styleUrl: './harmonia-universalis.component.scss'\r\n})\r\n\r\nexport class HarmoniaUniversalisComponent implements OnInit, AfterViewInit {\r\n  private database = inject(HuDatabaseService);\r\n  private _liveAnnouncer = inject(LiveAnnouncer);\r\n  private csv = inject(ArrayToCsvService);\r\n  private lang = inject(SelectedLangService);\r\n\r\n\r\n  //sessionStorage['selectedPage'] = JSON.stringify([{name:'Harmonia Universalis', address:\"harmonia_universalis\"}]);\r\n\r\n\r\n  public readonly displayedColumns:string[] = ['author','title','place','date'];\r\n\r\n  dataSource: MatTableDataSource<HU> = new MatTableDataSource;\r\n  dataSource$: Observable<any>;\r\n\r\n  filtered;\r\n\r\n  biblioHU:string = \"Bibliography Harmonia Universalis\";\r\n\r\n  authorHeader:string =\"Author\";\r\n  titleHeader:string = \"Title\";\r\n  locationHeader:string =\"Place\";\r\n  dateHeader:string =\"Date\";\r\n\r\n\r\n  behavior$ = new BehaviorSubject<string>('');\r\n\r\n  length = 50;\r\n  pageSize = 10;\r\n  pageIndex = 0;\r\n  pageSizeOptions = [10, 25, 100, 500, 1000];\r\n  hidePageSize = false;\r\n  showPageSizeOptions = true;\r\n  showFirstLastButtons = true;\r\n  disabled = false;\r\n\r\n  pageEvent:PageEvent;\r\n\r\n  isSpinner: boolean = false;\r\n\r\n  //selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\r\n  myLang:string = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\";\r\n\r\n\r\n  constructor() {\r\n\r\n    this.dataSource.sortingDataAccessor = (data, sortHeaderId) => { return sortingAccessor.nestedCaseInsensitive(data, sortHeaderId); }\r\n    this.dataSource.filterPredicate = (data, filter: string) => {\r\n      return data.author.label.toLocaleLowerCase().includes(filter) ||\r\n         //    data.author.id.toLocaleLowerCase().includes(filter) ||\r\n             data.title.label.toLocaleLowerCase().includes(filter) ||\r\n        //    data.title.id.toLocaleLowerCase().includes(filter)||\r\n           data.location.label.toLocaleLowerCase().includes(filter) ||\r\n        //     data.location.id.toLocaleLowerCase().includes(filter) ||\r\n            data.date.value.toLocaleLowerCase().includes(filter)\r\n    }    \r\n    };\r\n\r\n@ViewChild(MatSort)\r\nsort: MatSort;\r\n\r\n@ViewChild(\"paginator\")\r\npaginator ;\r\n\r\nngOnInit() {\r\n\r\n\r\n\r\n  this.biblioHU = this.lang.biblioHU(this.biblioHU);\r\n\r\n  this.authorHeader = this.lang.authorHeader(this.authorHeader);\r\n  this.titleHeader = this.lang.titleHeader(this.titleHeader);\r\n  this.locationHeader = this.lang.locationHeader(this.locationHeader);\r\n  this.dateHeader = this.lang.dateHeader(this.dateHeader);\r\n  \r\n\r\n/*\r\n\r\n\r\n this.authorHeader = \"Author\"\r\n    if (this.selectedLang === \"de\") { this.authorHeader = \"Autor\" };\r\n    if (this.selectedLang === \"fr\") { this.authorHeader = \"Auteur\" };\r\n    if (this.selectedLang === \"es\") { this.authorHeader = \"Autor\" };\r\n    if (this.selectedLang === \"hu\") { this.authorHeader = \"Szerző\" };\r\n    if (this.selectedLang === \"it\") { this.authorHeader = \"Autore\" };\r\n\r\n this.titleHeader = \"Title\"\r\n    if (this.selectedLang === \"de\") { this.titleHeader = \"Titel\" };\r\n    if (this.selectedLang === \"fr\") { this.titleHeader = \"Titre\" };\r\n    if (this.selectedLang === \"es\") { this.titleHeader = \"Título\" };\r\n    if (this.selectedLang === \"hu\") { this.titleHeader = \"Cím\" };\r\n    if (this.selectedLang === \"it\") { this.titleHeader = \"Titolo\" };\r\n\r\nthis.locationHeader = \"Place\"\r\n    if (this.selectedLang === \"de\") { this.locationHeader = \"Ort\" };\r\n    if (this.selectedLang === \"fr\") { this.locationHeader = \"Lieu\" };\r\n    if (this.selectedLang === \"es\") { this.locationHeader = \"Lugar\" };\r\n    if (this.selectedLang === \"hu\") { this.locationHeader = \"Közzététel helye\" };\r\n    if (this.selectedLang === \"it\") { this.locationHeader = \"Luogo\" };\r\n\r\nthis.dateHeader = \"Date\"\r\n    if (this.selectedLang === \"de\") { this.dateHeader = \"Datum\" };\r\n    if (this.selectedLang === \"fr\") { this.dateHeader = \"Date\" };\r\n    if (this.selectedLang === \"es\") { this.dateHeader = \"Fecha\" };\r\n    if (this.selectedLang === \"hu\") { this.dateHeader = \"Dátuma\" };\r\n    if (this.selectedLang === \"it\") { this.dateHeader = \"Data\" };\r\n\r\n*/\r\n\r\n//this.isSpinner = true;\r\n\r\n // this.myLang = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\";\r\n\r\n  let u =this.database.sparqlBuilding(this.myLang);\r\n  let dataService = this.database.databaseToDisplay(u);\r\n  let v$ = dataService.pipe(map(res => this.database.listFromSparql(res)));\r\n\r\n  v$.subscribe(res => console.log(res));\r\n\r\n  this.dataSource$ = combineLatest([this.behavior$, v$]).pipe(map(res => {\r\n                     this.dataSource.filter = res[0]; this.dataSource.data = res[1];\r\n                     return this.dataSource })); \r\n\r\n  this.dataSource$.subscribe(res => { console.log(res.filteredData[0]) });\r\n\r\n}\r\n\r\n\r\nngAfterViewInit() {\r\n\r\nthis.dataSource.sort=this.sort;\r\nthis.dataSource.paginator=this.paginator;\r\n//console.log(this.dataSource.filteredData)\r\n\r\n}\r\n\r\nonClick(query){ //handling click for downlooding the filtered data\r\n //console.log( query );\r\n let u= query;\r\n u = this.database.databaseToDownload(query);\r\n console.log(u);//setData: setDataService\r\n let v= this.csv.arrayToCsv(u);\r\n console.log(v);\r\n this.csv.downloadBlob(v, \"biblio_harmonia_universalis\", \"text/csv;charset=utf-8;\")\r\n    }\r\n\r\napplyFilter(event) {\r\n const filterValue = event.target.value.trim().toLowerCase();\r\n this.dataSource.filter = filterValue;\r\n  this.dataSource.filteredData;\r\n  console.log(this.dataSource.filteredData);\r\n console.log(this.dataSource.filteredData[0].author.label);\r\n console.log(this.dataSource.filteredData[0].title.label);\r\n this.filtered = this.dataSource.filteredData[0].author.label\r\n// title: this.dataSource.filteredData[0].title.label }\r\n}\r\n\r\nhandlePageEvent(e: PageEvent) {\r\n    this.pageEvent = e;\r\n    this.length = e.length;\r\n    this.pageSize = e.pageSize;\r\n    this.pageIndex = e.pageIndex;\r\n  }\r\n\r\nsetPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n    }\r\n  }\r\n\r\n  /*\r\n\r\nannounceSortChange(sortState: Sort){  \r\n      if (sortState.direction){\r\n        this._liveAnnouncer.announce('Sorted ${sortState.direction}ending');\r\n        console.log(this._liveAnnouncer.announce('Sorted ${sortState.direction}ending'));\r\n        console.log(sortState);\r\n      } else {\r\n        this._liveAnnouncer.announce('Sorting cleared');\r\n        console.log(sortState);\r\n      }\r\n    }\r\n    */\r\n}  \r\n","<head>\r\n\r\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n        rel=\"stylesheet\">\r\n\r\n</head>\r\n\r\n<body>\r\n \r\n      <div class=\"cardBackground\">\r\n        <div class=\"bigTitle\">{{biblioHU}}</div>\r\n           <div class=\"search-center\">\r\n                    <a href=\"https://database.factgrid.de/query/#%23model%0A%0ASELECT%20%3Fitem%20%3Fviewer%20%3FitemLabel%20%20WHERE%20%7B%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22%5BAUTO_LANGUAGE%5D%2Cen%22.%20%7D%0A%20%20%3Fitem%20wdt%3AP2%20wd%3AQ7%3B%0A%20%20%20%20%20%20%20%20wdt%3AP247%20wd%3AQ24708.%0A%20%20BIND%28STRAFTER%28STR%28%3Fitem%29%2C%20STR%28wd%3A%29%29%20AS%20%3FitemId%29%0A%20%20BIND%28IRI%28CONCAT%28%22https%3A%2F%2Fdatabase.factgrid.de%2Fviewer%2Fitem%2F%22%2C%20%3FitemId%29%29%20AS%20%3Fviewer%29%0A%7D%0A\">\r\n                    sparql query</a>\r\n                     <span>&nbsp;&nbsp;|&nbsp;&nbsp;</span>            \r\n                    <a [routerLink]=\"['']\">FactGrid</a>  <!-- new route -->\r\n           </div>\r\n       </div>\r\n     \r\n\r\n    <mat-card  appearance=\"outlined\" class=mat-elevation-z12>\r\n       <mat-card-content  class=\"cardBackground\">\r\n\r\n    <div  class=\"labelTitlePadding\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n      </mat-form-field>\r\n    </div>\r\n    \r\n\r\n\r\n   <div class=\"mat-elevation-z2\"> \r\n\r\n     <table\r\n      class=\"user-table\"\r\n      mat-table\r\n      [dataSource]=\"dataSource$ | async\" \r\n      matSort\r\n      matSortActive=\"title\"\r\n      matSortDirection=\"asc\"\r\n      >\r\n\r\n     <ng-container matColumnDef=\"author\">\r\n        <th mat-header-cell\r\n        *matHeaderCellDef\r\n        mat-sort-header=\"author.label\">\r\n        {{authorHeader}}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let biblio\" class=\"text\">\r\n       {{biblio.author.label}}\r\n        <mat-icon-button class=\"internalLink\" [routerLink]=\"'/item/' + biblio.author.id\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>\r\n       </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"title\">\r\n       <th mat-header-cell\r\n       *matHeaderCellDef\r\n       mat-sort-header=\"title.label\">\r\n       {{titleHeader}}\r\n       </th>\r\n       <td mat-cell *matCellDef=\"let biblio\">\r\n       {{biblio.title.label}}\r\n         <mat-icon-button class=\"internalLink\" [routerLink]=\"'/item/' + biblio.title.id\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button> \r\n       </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"place\">\r\n        <th mat-header-cell\r\n        *matHeaderCellDef\r\n        mat-sort-header=\"location.label\">\r\n       {{locationHeader}}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let biblio\">\r\n       {{biblio.location.label}}\r\n         <mat-icon-button class=\"internalLink\" [routerLink]=\"'/item/' + biblio.location.id\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>\r\n         </td>\r\n       </ng-container>a\r\n\r\n        <ng-container matColumnDef=\"date\">\r\n         <th mat-header-cell\r\n         *matHeaderCellDef\r\n         mat-sort-header=\"date.value\">\r\n         {{dateHeader}}\r\n         </th>\r\n         <td mat-cell  *matCellDef=\"let biblio\">\r\n        {{biblio.date.value}}\r\n         </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let biblio; columns: displayedColumns\"></tr>\r\n      </table>\r\n\r\n         <mat-paginator #paginator\r\n               class=\"demo-paginator\"\r\n               (page)=\"handlePageEvent($event)\"\r\n               [length]=\"length\"\r\n               [pageSize]=\"pageSize\"\r\n               [disabled]=\"disabled\"\r\n               [showFirstLastButtons]=\"showFirstLastButtons\"\r\n               [pageSizeOptions]=\"showPageSizeOptions ? pageSizeOptions : []\"\r\n               [hidePageSize]=\"hidePageSize\"\r\n               [pageIndex]=\"pageIndex\"\r\n               aria-label=\"Select page\">\r\n          </mat-paginator>\r\n\r\n          </div>\r\n\r\n           <div>\r\n              <span><button mat-icon-button color=\"primary\" class=\"internalLink\" #content (click)=\"onClick(this.dataSource.filteredData)\"><mat-icon color =\"primary\" [inline]=\"true\">download</mat-icon></button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n         </div>\r\n\r\n          </mat-card-content>\r\n\r\n      </mat-card>\r\n\r\n\r\n      <!--\r\n      <span><mat-icon-button color=\"primary\" class=\"internalLink\" #content (click)=\"onClick2(M.mainsnak.datavalue.value)\"><mat-icon color =\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                      <span>{{clickToDownload}}</span>\r\n      -->\r\n\r\n   \r\n\r\n\r\n\r\n      </body>\r\n\r\n\r\n\r\n\r\n<!--\r\n\r\n   <mat-table\r\n      mat-table\r\n      [dataSource]=\"dataSource$ | async\" \r\n      matSort\r\n      matSortActive=\"title\"\r\n      matSortDirection=\"asc\"\r\n    >\r\n\r\n\r\n     <ng-container matColumnDef=\"author\">\r\n        <mat-header-cell\r\n        *matHeaderCellDef\r\n        mat-sort-header=\"author.label\">\r\n        {{ authorHeader }}\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let biblio\" class=\"text\">\r\n\t\t<span class=\"mobile-label\">{{ biblio.author.label }}</span>\r\n        <mat-icon-button class=\"internalLink\" [routerLink]=\"'/item/' + biblio.author.id\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>\r\n       \r\n       </mat-cell>\r\n      </ng-container>\r\n\r\n\r\n      <ng-container matColumnDef=\"title\">\r\n       <mat-header-cell\r\n       *matHeaderCellDef\r\n       mat-sort-header=\"title.label\">\r\n       {{ titleHeader }}\r\n       </mat-header-cell>\r\n       <mat-cell *matCellDef=\"let biblio\">\r\n\t   <span class=\"mobile-label\">{{biblio.title.label}}</span>\r\n         <mat-icon-button class=\"internalLink\" [routerLink]=\"'/item/' + biblio.title.id\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>\r\n       \r\n       </mat-cell>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"place\">\r\n        <mat-header-cell\r\n        *matHeaderCellDef\r\n        mat-sort-header=\"location.label\">\r\n        {{ locationHeader }}\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let biblio\">\r\n\t\t<span class=\"mobile-label\">{{biblio.location.label}}</span>\r\n         <mat-icon-button class=\"internalLink\" [routerLink]=\"'/item/' + biblio.location.id\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>\r\n        \r\n         </mat-cell>\r\n       </ng-container>a\r\n\r\n        <ng-container matColumnDef=\"date\">\r\n         <mat-header-cell\r\n         *matHeaderCellDef\r\n         mat-sort-header=\"date.value\">\r\n         {{ dateHeader }}\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let biblio\">\r\n\t\t <span class=\"mobile-label\">{{biblio.date.value}}</span>\r\n         </mat-cell>\r\n        </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let biblio; columns: displayedColumns\"></mat-row>\r\n    </mat-table>\r\n    \r\n    -->\r\n   \r\n"],"mappings":"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","names":["query","_c1"],"x_google_ignoreList":[1,2]}