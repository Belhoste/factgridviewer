var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdvancedSearchListComponent.html",[0,0.707,1,1.507]],["body/components/AdvancedSearchListComponent.html",[0,1.169,1,2.647,2,2.298,3,0.075,4,0.063,5,1.801,6,1.801,7,1.801,8,0.051,9,3.182,10,6.87,11,2.601,12,7.553,13,4.276,14,1.941,15,4.207,16,1.438,17,2.813,18,2.737,19,2.814,20,1.672,21,1.696,22,1.652,23,1.994,24,2.99,25,1.994,26,6.388,27,2.593,28,6.388,29,0.201,30,0.354,31,4.66,32,7.867,33,7.867,34,7.867,35,0.573,36,3.768,37,6.388,38,2.86,39,7.133,40,7.133,41,7.133,42,7.133,43,0.548,44,0.011,45,0.809,46,0.69,47,0.51,48,0.653,49,4.863,50,4.863,51,4.863,52,4.863,53,3.768,54,4.468,55,4.863,56,0.616,57,0.376,58,0.43,59,2.869,60,0.573,61,1.268,62,6.388,63,4.863,64,4.863,65,4.863,66,4.863,67,4.863,68,0.264,69,2.106,70,2.749,71,0.188,72,1.518,73,0.075,74,0.201,75,4.863,76,4.863,77,4.863,78,4.863,79,4.863,80,4.863,81,4.863,82,4.863,83,4.863,84,4.863,85,4.863,86,1.102,87,1.914,88,4.863,89,2.106,90,0.843,91,5.616,92,2.566,93,1.81,94,1.749,95,2.366,96,2.366,97,1.801,98,2.5,99,1.801,100,1.749,101,2.914,102,1.801,103,1.651,104,1.801,105,1.699,106,1.438,107,3.22,108,1.699,109,1.699,110,1.399,111,1.651,112,1.801,113,1.651,114,1.699,115,1.801,116,1.699,117,1.699,118,1.749,119,1.651,120,1.699,121,0.797,122,1.801,123,1.699,124,1.801,125,1.651,126,1.801,127,1.651,128,1.699,129,1.699,130,1.801,131,1.651,132,1.699,133,1.651,134,1.699,135,1.651,136,1.699,137,1.801,138,1.699,139,1.801,140,1.699,141,1.801,142,1.699,143,1.801,144,1.699,145,1.801,146,2.05,147,1.699,148,1.699,149,1.438,150,1.801,151,1.801,152,0.007,153,0.007]],["title/components/AppComponent.html",[0,0.707,103,1.464]],["body/components/AppComponent.html",[0,0.905,1,1.065,2,1.651,3,0.085,4,0.04,5,1.129,6,1.129,7,1.129,8,0.032,11,0.877,14,1.395,16,0.901,17,2.707,18,2.646,19,1.515,21,1.219,22,1.59,23,1.433,25,1.433,29,0.126,30,0.254,35,0.412,43,0.53,44,0.011,45,0.761,46,1.152,47,0.658,48,0.662,56,0.533,57,0.44,58,0.372,60,0.591,61,1.309,68,0.34,69,2.392,71,0.118,72,0.951,73,0.071,74,0.126,86,1.252,90,1.065,92,1.096,93,1.097,94,1.096,95,2.046,96,1.701,97,1.129,98,2.029,99,1.129,100,1.096,101,2.443,102,1.129,103,2.088,104,1.129,105,1.065,106,0.901,107,2.977,108,1.065,109,1.065,110,0.877,111,2.088,112,1.129,113,1.035,114,2.776,115,1.129,116,1.065,117,1.065,118,1.096,119,1.035,120,1.065,121,0.905,122,1.129,123,1.065,124,1.701,125,1.035,126,1.129,127,1.035,128,2.835,129,1.065,130,1.129,131,1.035,132,1.065,133,1.035,134,1.065,135,1.035,136,1.065,137,1.129,138,1.065,139,1.129,140,1.065,141,1.129,142,1.065,143,1.129,144,1.065,145,1.129,146,1.474,147,1.065,148,1.065,149,1.633,150,1.129,151,1.129,152,0.005,153,0.005,154,1.797,155,2.437,156,0.856,157,4.856,158,2.392,159,4.856,160,1.93,161,3.608,162,3.608,163,3.422,164,2.392,165,3.258,166,2.587,167,4.856,168,4.036,169,3.593,170,4.856,171,3.827,172,1.823,173,3.258,174,5.799,175,4.089,176,4.856,177,0.784,178,4.916,179,4.089,180,4.856,181,4.089,182,4.856,183,2.863,184,4.856,185,4.856,186,4.856,187,4.856,188,3.113,189,3.422,190,4.591,191,4.591,192,5.406,193,2.85,194,4.591,195,3.398,196,5.799,197,1.773,198,4.591,199,4.036,200,3.047,201,6.894,202,2.419,203,4.036,204,3.047,205,1.996,206,3.047,207,3.047,208,4.036,209,3.047,210,3.047,211,3.047,212,3.047,213,3.18,214,5.347,215,2.493,216,4.036,217,1.868,218,4.036,219,2.479,220,4.036,221,2.206,222,4.036,223,4.036,224,2.587,225,4.036,226,4.036,227,3.047,228,3.047,229,1.748,230,4.036,231,4.036,232,4.036,233,4.036,234,4.036,235,4.036,236,4.036,237,4.036,238,2.844,239,4.036,240,4.036,241,4.036,242,4.036,243,4.036,244,5.432,245,4.036,246,3.047,247,3.671,248,3.047,249,0.911,250,2.754,251,3.047,252,3.047,253,1.547,254,3.047,255,3.047,256,3.331,257,1.386,258,3.047,259,4.551,260,5.406,261,2.905,262,3.743,263,3.047,264,3.047,265,5.799,266,3.047,267,3.671,268,3.047,269,3.047,270,3.047,271,3.047,272,3.047,273,3.047,274,0.514,275,1.237,276,1.717,277,1.277,278,0.767,279,1.52,280,1.888,281,0.809,282,0.788,283,1.991,284,1.888,285,1.096,286,1.58,287,1.199,288,0.926,289,1.645,290,3.671,291,2.679,292,2.437,293,2.679,294,1.129,295,1.065,296,2.679,297,1.319,298,2.679,299,2.679,300,1.797,301,0.514,302,2.679,303,2.679,304,2.679,305,2.679,306,4.036,307,1.515,308,2.679,309,2.679,310,2.679,311,3.18,312,2.679,313,1.036,314,4.036,315,6.095,316,2.679,317,4.036,318,4.856,319,1.633,320,4.882,321,2.654,322,2.679,323,4.856,324,4.036,325,5.406,326,4.036,327,1.237,328,2.111,329,3.398,330,2.256,331,1.277,332,1.464,333,0.75,334,2.679,335,2.437,336,2.679,337,2.256,338,2.679,339,2.679,340,2.256,341,5.406,342,6.095,343,3.18,344,2.679,345,2.679,346,1.888,347,1.991,348,2.844,349,2.679,350,2.679,351,2.679,352,2.679,353,2.679,354,1.701,355,2.679,356,2.679,357,2.679,358,2.437,359,2.111,360,1.645,361,2.679,362,2.679,363,4.086,364,2.85,365,4.591,366,6.148,367,4.591,368,3.047,369,4.591,370,5.325,371,2.679,372,2.679,373,3.827,374,2.437,375,2.437,376,3.047,377,5.799,378,3.047,379,3.047,380,1.725,381,3.398,382,7.945,383,4.173,384,4.591,385,4.591,386,2.999,387,3.18,388,3.671,389,4.591,390,4.591,391,4.591,392,3.608,393,3.671,394,4.036,395,4.591,396,3.827,397,3.18,398,2.437,399,2.111,400,2.679,401,3.047,402,1.991,403,4.036,404,3.047]],["title/modules/AppRoutingModule.html",[405,3.791,406,3.448]],["body/modules/AppRoutingModule.html",[0,1.015,3,0.095,4,0.08,8,0.065,10,4.95,23,1.933,44,0.011,68,0.354,71,0.239,73,0.123,74,0.256,108,2.598,125,2.102,127,2.102,128,2.598,131,2.102,152,0.009,153,0.009,163,4.605,267,4.95,294,2.293,313,1.343,406,5.945,407,4.95,408,5.443,409,5.443,410,7.434,411,7.968,412,7.434,413,6.19,414,6.19,415,6.19,416,5.945,417,6.19,418,6.536,419,6.19,420,6.19,421,8.754,422,6.19,423,7.434,424,7.434,425,7.434,426,7.434,427,8.265,428,6.19,429,6.19,430,6.19,431,7.434,432,6.19,433,6.19,434,4.582,435,6.19,436,6.19,437,5.443,438,6.19,439,6.19,440,5.443,441,7.434,442,6.19,443,6.19,444,5.443]],["title/injectables/ArrayToCsvService.html",[445,0.046,446,2.328]],["body/injectables/ArrayToCsvService.html",[3,0.096,4,0.081,8,0.066,29,0.257,35,0.669,43,0.48,44,0.011,45,0.58,47,0.497,48,0.612,56,0.72,57,0.371,58,0.502,60,0.669,61,1.237,68,0.257,71,0.24,73,0.096,74,0.257,89,2.7,98,2.638,152,0.009,153,0.009,156,0.966,197,2.566,249,1.482,333,0.76,372,5.481,402,4.877,445,0.079,446,4.031,447,1.204,448,7.284,449,5.481,450,7.466,451,7.466,452,6.234,453,7.466,454,6.234,455,1.947,456,7.466,457,8.284,458,8.284,459,6.234,460,1.022,461,6.234,462,6.234,463,6.234,464,7.466,465,6.234,466,6.234,467,6.234,468,6.234,469,6.234,470,4.985,471,6.234,472,6.234,473,6.234,474,6.234,475,6.234,476,6.234,477,3.587,478,6.564,479,6.234,480,3.031,481,6.234,482,6.234,483,3.677,484,6.234,485,6.234,486,6.234,487,6.234,488,6.234,489,5.481,490,3.677,491,2.058]],["title/injectables/BackListDetailsService.html",[445,0.046,492,3.192]],["body/injectables/BackListDetailsService.html",[3,0.104,4,0.088,8,0.071,20,1.876,29,0.279,35,0.701,43,0.434,44,0.01,48,0.599,56,0.651,57,0.335,58,0.454,60,0.605,68,0.279,71,0.26,73,0.104,74,0.279,152,0.009,153,0.009,156,1.046,197,2.652,445,0.083,447,1.304,460,1.106,492,5.792,493,6.607,494,4.677,495,7.824,496,5.935,497,6.751,498,5.398,499,6.751,500,6.751,501,5.935]],["title/pipes/BackListIdPipe.html",[502,1.423,503,3.448]],["body/pipes/BackListIdPipe.html",[3,0.103,4,0.087,8,0.071,14,2.037,16,1.982,20,1.72,21,2.07,22,2.016,35,0.601,43,0.431,44,0.01,45,0.803,48,0.514,56,0.647,57,0.409,58,0.451,60,0.601,68,0.277,71,0.259,73,0.103,74,0.277,152,0.009,153,0.009,229,1.403,333,0.818,502,2.573,503,6.232,504,3.955,505,6.853,506,5.895,507,7.794,508,4.154,509,7.794,510,6.705,511,4.828,512,7.794,513,6.705]],["title/injectables/BackListService.html",[445,0.046,514,3.448]],["body/injectables/BackListService.html",[3,0.097,4,0.082,8,0.067,20,1.396,29,0.261,30,0.417,35,0.675,43,0.406,44,0.011,46,1.142,47,0.642,48,0.651,56,0.61,57,0.314,58,0.425,60,0.567,68,0.344,71,0.244,73,0.097,74,0.261,121,1.036,152,0.009,153,0.009,156,0.98,177,1.255,205,1.947,274,1.066,288,2.529,313,1.066,319,1.87,333,0.771,445,0.08,447,1.222,460,1.036,492,4.681,493,6.899,514,6.022,515,3.918,516,8.041,517,5.952,518,8.041,519,8.041,520,7.53,521,5.057,522,7.53,523,5.56,524,2.631,525,5.057,526,6.324,527,2.631,528,5.057,529,2.832,530,6.324,531,5.057,532,2.147,533,2.21,534,6.324,535,6.324]],["title/interfaces/Bank.html",[301,0.727,536,3.448]],["body/interfaces/Bank.html",[3,0.093,4,0.078,8,0.063,9,2.224,29,0.248,30,0.404,43,0.469,44,0.011,45,0.793,57,0.45,73,0.112,152,0.008,153,0.008,229,1.9,301,1.012,313,1.012,358,5.837,536,7.251,537,2.039,538,5.279,539,5.279,540,7.299,541,5.057,542,5.837,543,7.864,544,4.305,545,5.403,546,7.299,547,8.383,548,5.057,549,7.299,550,4.305,551,6.005,552,6.005,553,6.005,554,6.005,555,6.005,556,4.768,557,8.627,558,3.784,559,4.521,560,3.941,561,4.305,562,7.299]],["title/injectables/BlockDisplayService.html",[445,0.046,563,2.987]],["body/injectables/BlockDisplayService.html",[3,0.064,4,0.054,8,0.044,29,0.172,30,0.438,35,0.516,43,0.559,44,0.011,45,0.662,47,0.333,48,0.662,56,0.833,57,0.429,58,0.581,60,0.774,61,1.412,68,0.238,71,0.161,73,0.064,74,0.172,110,2.048,121,1.416,152,0.007,153,0.007,156,0.646,177,1.096,217,2.004,221,2.768,229,0.873,257,1.498,313,1.301,327,1.693,331,2.765,332,2.004,333,1.049,354,2.134,380,1.799,445,0.061,447,0.806,460,0.684,480,2.679,560,3.562,563,3.991,564,7.628,565,2.351,566,5.76,567,5.76,568,5.76,569,5.76,570,5.76,571,5.76,572,5.76,573,5.76,574,5.76,575,5.76,576,5.76,577,5.76,578,5.76,579,5.76,580,5.065,581,5.76,582,5.76,583,7.116,584,2.67,585,4.171,586,5.76,587,5.76,588,5.76,589,2.494,590,3.246,591,3.246,592,5.76,593,5.76,594,3.17,595,5.76,596,7.116,597,3.668,598,5.76,599,6.256,600,4.171,601,5.76,602,7.116,603,4.171,604,5.76,605,3.668,606,5.76,607,7.116,608,4.171,609,5.76,610,8.064,611,4.171,612,5.76,613,6.256,614,4.171,615,5.76,616,5.276,617,4.171,618,5.76,619,7.116,620,4.171,621,5.76,622,7.116,623,4.171,624,5.76,625,7.116,626,4.171,627,5.76,628,6.256,629,4.171,630,5.76,631,6.256,632,4.171,633,5.76,634,4.171,635,5.76,636,4.171,637,5.065,638,5.065,639,5.065,640,5.065,641,5.065,642,5.065,643,5.065,644,5.065,645,5.065,646,5.065,647,5.065,648,3.668,649,4.171,650,2.67,651,4.171,652,4.171,653,4.171,654,8.368,655,2.89,656,4.171,657,3.336,658,4.171,659,4.171,660,3.336,661,4.171,662,4.171,663,3.336,664,4.171,665,4.171,666,3.336,667,4.171,668,4.171,669,4.171,670,4.171,671,4.01,672,4.171,673,5.76,674,3.398,675,4.171,676,4.171,677,3.548,678,4.171,679,4.171,680,2.162,681,4.171,682,2.08,683,3.088,684,4.171,685,4.171,686,4.171,687,4.171,688,3.336,689,4.171,690,4.171,691,4.171,692,2.725,693,1.868,694,4.171,695,4.171,696,4.171,697,4.171,698,4.171,699,4.171,700,4.171,701,4.171,702,4.171,703,4.171,704,4.171,705,4.171,706,4.171,707,4.171,708,4.171,709,4.171,710,4.171,711,4.171,712,4.171,713,4.171,714,4.171,715,2.89,716,4.171,717,4.171,718,4.171,719,4.171,720,4.171,721,4.171,722,5.76,723,4.171,724,2.004,725,5.76,726,4.171,727,2.08,728,5.76,729,4.171,730,2.584,731,4.171,732,2.89,733,4.171,734,4.171,735,4.171,736,4.171,737,4.171,738,4.171,739,3.668,740,4.171,741,3.668,742,3.668,743,4.171,744,4.171,745,4.171,746,4.171,747,4.171,748,4.171,749,4.171,750,4.171,751,4.171]],["title/components/CareerDisplayComponent.html",[0,0.707,105,1.507]],["body/components/CareerDisplayComponent.html",[0,1.023,1,1.314,2,1.927,3,0.058,4,0.049,5,1.394,6,1.394,7,1.394,8,0.04,11,1.082,16,1.112,17,2.76,18,2.685,19,1.768,21,1.423,22,1.386,23,1.673,24,2.615,25,1.673,27,2.175,29,0.155,30,0.297,35,0.48,38,2.399,43,0.344,44,0.011,45,0.498,46,0.534,47,0.3,48,0.55,56,0.363,57,0.31,58,0.253,60,0.48,61,1.063,68,0.317,70,2.18,71,0.145,72,1.175,73,0.058,74,0.155,90,0.928,92,1.353,93,1.28,94,1.353,95,1.985,96,1.985,97,1.394,98,2.245,99,1.394,100,1.353,101,2.662,102,1.394,103,1.277,104,1.394,105,2.376,106,2.45,107,3.096,108,1.314,109,1.314,110,1.082,111,1.277,112,1.394,113,1.277,114,1.314,115,1.394,116,1.314,117,1.314,118,1.353,119,1.277,120,1.314,121,1.26,122,1.394,123,1.314,124,1.394,125,1.277,126,1.394,127,1.277,128,1.314,129,1.314,130,1.394,131,1.277,132,1.314,133,1.277,134,1.314,135,1.277,136,1.314,137,1.394,138,1.314,139,1.394,140,1.314,141,1.394,142,1.314,143,1.394,144,1.314,145,1.394,146,1.72,147,1.314,148,1.314,149,1.845,150,1.394,151,1.394,152,0.006,153,0.006,160,2.18,164,2.702,165,3.681,229,1.423,249,0.746,294,1.394,295,1.314,300,2.219,364,3.903,480,3.033,544,4.011,558,3.525,559,4.212,560,4.6,561,4.011,599,6.319,680,3.525,752,6.568,753,6.568,754,1.807,755,2.244,756,3.369,757,2.672,758,2.672,759,4.695,760,3.5,761,4.442,762,2.606,763,2.785,764,3.5,765,3.762,766,2.458,767,3.008,768,1.819,769,2.33,770,1.353,771,2.33,772,2.458,773,1.95,774,2.458,775,3.5,776,1.807,777,1.807,778,2.458,779,2.458,780,2.458,781,2.458,782,4.212,783,5.133,784,2.76,785,3.5,786,4.442,787,4.442,788,4.442,789,3.77,790,4.761,791,4.442,792,4.442,793,2.458,794,3.5,795,3.5,796,4.442,797,3.5,798,3.5,799,3.5,800,3.319,801,3.5,802,3.319,803,3.5,804,2.458,805,2.458,806,3.5,807,3.5,808,2.458,809,2.458,810,2.458,811,2.458,812,1.927,813,3.5,814,2.458,815,3.5,816,5.794,817,4.867,818,4.88,819,3.5,820,4.442,821,2.458,822,4.88,823,5.36,824,2.458,825,3.5,826,3.5,827,4.076,828,2.458,829,3.019,830,2.458,831,2.458,832,3.319,833,3.5,834,3.5,835,2.458,836,4.076,837,2.458,838,2.672,839,4.88,840,3.5,841,3.5,842,4.88,843,2.108,844,3.5,845,2.458,846,2.458,847,3.319,848,2.458,849,2.458,850,2.458,851,2.458,852,2.458,853,2.458,854,2.458,855,2.458,856,2.458,857,2.458,858,2.33,859,2.458,860,2.458,861,4.076,862,2.458,863,2.458,864,2.458]],["title/pipes/ChangeUndefinedItemPipe.html",[502,1.423,865,3.448]],["body/pipes/ChangeUndefinedItemPipe.html",[3,0.104,4,0.087,8,0.071,14,2.043,16,1.988,21,2.073,22,2.019,35,0.603,43,0.432,44,0.01,47,0.658,48,0.515,56,0.649,57,0.409,58,0.452,60,0.603,68,0.278,71,0.259,73,0.104,74,0.278,152,0.009,153,0.009,257,1.429,333,0.82,502,2.577,504,3.967,508,4.166,511,4.836,865,6.243,866,6.864,867,5.912,868,7.807,869,5.779,870,6.725,871,6.725,872,4.659]],["title/interfaces/Claim.html",[301,0.727,677,2.15]],["body/interfaces/Claim.html",[3,0.063,4,0.053,8,0.043,20,0.901,29,0.169,30,0.39,43,0.493,44,0.011,45,0.813,47,0.326,58,0.516,68,0.306,71,0.157,73,0.063,74,0.169,86,1.783,87,2.234,90,0.983,121,1.069,152,0.007,153,0.007,156,0.633,172,2.597,177,0.806,215,1.469,217,2.475,229,0.855,249,1.126,253,2.076,257,0.747,274,0.688,278,1.029,281,1.085,282,1.056,285,1.469,287,1.607,288,1.724,301,1.249,313,1.489,321,3.135,327,3.194,331,3.297,332,3.685,333,1.006,354,2.103,445,0.06,460,0.669,491,2.328,527,1.427,529,1.829,537,1.927,584,2.631,589,3.407,590,3.974,591,2.302,594,3.56,650,2.631,671,3.199,674,2.409,677,3.923,682,2.037,693,3.593,812,2.967,838,3.516,843,1.607,873,2.53,874,4.368,875,3.765,876,3.807,877,4.521,878,3.807,879,1.712,880,4.262,881,2.668,882,2.668,883,1.962,884,2.668,885,4.841,886,3.199,887,3.348,888,4.159,889,2.037,890,2.037,891,1.712,892,1.712,893,4.641,894,3.348,895,2.668,896,2.668,897,2.668,898,2.53,899,4.524,900,3.522,901,4.262,902,4.331,903,4.262,904,4.841,905,4.262,906,4.262,907,4.042,908,4.262,909,3.556,910,3.158,911,2.53,912,2.53,913,4.606,914,4.606,915,2.668,916,2.668,917,4.371,918,3.708,919,3.708,920,3.516,921,2.668,922,2.668,923,2.53,924,2.668,925,3.708,926,3.708,927,3.708,928,3.388,929,2.409,930,2.668,931,3.708,932,2.668,933,3.516,934,3.516,935,2.668,936,2.53,937,2.668,938,2.668,939,2.668,940,2.668,941,3.708,942,2.668,943,2.668,944,3.708,945,2.668,946,2.668,947,2.668,948,2.668,949,2.668,950,2.668,951,2.409,952,2.668,953,2.668,954,2.302,955,2.668,956,2.53,957,2.668,958,3.348,959,2.668,960,2.302,961,2.668,962,2.302,963,2.53,964,2.668,965,2.668,966,2.668,967,2.668,968,2.668,969,2.668,970,1.427,971,2.668,972,3.199,973,3.708,974,2.668,975,2.668,976,2.668,977,2.53,978,2.759,979,3.708,980,3.685,981,2.668,982,2.668,983,3.708,984,3.516,985,2.53,986,2.668,987,2.53,988,2.668,989,2.302,990,2.668,991,2.409,992,2.668,993,2.668,994,2.037,995,2.302,996,3.516,997,2.668,998,2.668,999,2.668,1000,2.409,1001,4.59,1002,2.668,1003,2.668,1004,2.668,1005,2.668,1006,2.409,1007,2.53,1008,2.53,1009,2.53,1010,3.708,1011,2.668,1012,2.668,1013,2.668,1014,2.668]],["title/interfaces/ClaimsObject.html",[301,0.727,887,2.543]],["body/interfaces/ClaimsObject.html",[3,0.064,4,0.054,8,0.044,20,0.921,30,0.319,44,0.011,45,0.813,47,0.333,48,0.32,68,0.308,71,0.161,73,0.064,74,0.172,86,1.793,87,2.267,90,0.998,121,1.081,152,0.007,153,0.007,156,0.646,172,2.612,177,0.818,215,1.5,217,2.487,229,0.873,249,1.143,253,2.092,257,0.763,274,0.703,278,1.051,281,1.108,282,1.079,285,1.5,287,1.642,288,1.75,301,1.258,313,1.492,321,3.17,327,3.213,331,3.317,332,3.71,333,1.01,354,2.134,445,0.061,460,0.684,491,2.349,527,1.458,529,1.868,537,1.956,589,3.427,590,4.01,591,2.351,594,3.588,650,3.059,671,3.246,674,2.461,677,3.946,682,2.08,693,3.611,812,2.846,838,3.548,843,1.642,873,2.584,874,2.584,875,3.457,876,2.252,877,4.351,878,3.11,879,1.748,880,4.31,881,2.725,882,2.725,883,2.004,884,2.725,885,4.878,886,3.246,887,3.892,888,4.197,889,2.08,890,2.08,891,1.748,892,1.748,893,4.668,894,3.398,895,2.725,896,2.725,897,2.725,898,2.584,899,4.554,900,3.562,901,4.31,902,4.354,903,4.31,904,4.878,905,4.31,906,4.31,907,4.087,908,4.31,909,3.579,910,3.186,911,2.584,912,2.584,913,4.648,914,4.648,915,2.725,916,2.725,917,4.404,918,3.763,919,3.763,920,3.568,921,2.725,922,2.725,923,2.584,924,2.725,925,3.763,926,3.763,927,3.763,928,3.419,929,2.461,930,2.725,931,3.763,932,2.725,933,3.568,934,3.568,935,2.725,936,2.584,937,2.725,938,2.725,939,2.725,940,2.725,941,3.763,942,2.725,943,2.725,944,3.763,945,2.725,946,2.725,947,2.725,948,2.725,949,2.725,950,2.725,951,2.461,952,2.725,953,2.725,954,2.351,955,2.725,956,2.584,957,2.725,958,3.398,959,2.725,960,2.351,961,2.725,962,2.351,963,2.584,964,2.725,965,2.725,966,2.725,967,2.725,968,2.725,969,2.725,970,1.458,971,2.725,972,3.246,973,3.763,974,2.725,975,2.725,976,2.725,977,2.584,978,2.777,979,3.763,980,3.71,981,2.725,982,2.725,983,3.763,984,3.568,985,2.584,986,2.725,987,2.584,988,2.725,989,2.351,990,2.725,991,2.461,992,2.725,993,2.725,994,2.08,995,2.351,996,3.568,997,2.725,998,2.725,999,2.725,1000,2.461,1001,4.625,1002,2.725,1003,2.725,1004,2.725,1005,2.725,1006,2.461,1007,2.584,1008,2.584,1009,2.584,1010,3.763,1011,2.725,1012,2.725,1013,2.725,1014,2.725,1015,4.171,1016,4.171]],["title/pipes/CommaJoinPipe.html",[502,1.423,1017,3.448]],["body/pipes/CommaJoinPipe.html",[3,0.103,4,0.086,8,0.07,14,2.022,16,1.967,21,2.061,22,2.007,35,0.597,43,0.427,44,0.01,45,0.787,46,0.945,47,0.531,48,0.51,56,0.642,57,0.408,58,0.448,60,0.597,68,0.275,70,2.711,71,0.257,73,0.103,74,0.275,152,0.009,153,0.009,257,1.218,333,0.811,502,2.561,504,3.925,508,4.122,511,4.807,1017,6.205,1018,6.822,1019,5.851,1020,7.759,1021,6.822,1022,3.947,1023,7.222,1024,6.654,1025,5.851]],["title/injectables/CreateCompleteItemService.html",[445,0.046,1026,3.192]],["body/injectables/CreateCompleteItemService.html",[3,0.093,4,0.078,8,0.063,29,0.248,30,0.404,35,0.654,44,0.011,46,1.19,47,0.669,48,0.653,56,0.579,57,0.298,58,0.404,60,0.538,68,0.359,71,0.232,73,0.093,74,0.248,86,1.654,121,1.289,152,0.008,153,0.008,156,0.93,177,1.274,205,2.034,253,1.682,274,1.012,277,2.517,278,1.512,280,3.72,281,1.595,282,1.553,285,2.16,287,2.363,319,1.775,333,0.732,445,0.077,447,1.16,460,0.984,477,2.885,524,2.55,532,2.039,533,2.098,879,2.517,891,3.296,892,3.059,970,2.098,1026,5.403,1027,6.899,1028,6.899,1029,5.279,1030,6.914,1031,6.914,1032,7.864,1033,6.417,1034,7.299,1035,6.005,1036,6.417,1037,6.005,1038,6.417,1039,6.005,1040,7.299,1041,6.005,1042,6.005,1043,6.005,1044,4.16,1045,4.445,1046,4.16,1047,5.279,1048,5.279,1049,5.279,1050,2.517,1051,6.005,1052,2.994,1053,6.005,1054,4.16,1055,6.005,1056,3.242,1057,6.005,1058,6.005]],["title/injectables/CreateItemToDisplayService.html",[445,0.046,1044,2.987]],["body/injectables/CreateItemToDisplayService.html",[3,0.076,4,0.064,8,0.052,16,1.457,29,0.203,30,0.397,35,0.578,43,0.317,44,0.011,46,1.081,47,0.608,48,0.632,56,0.692,57,0.356,58,0.483,60,0.644,61,1.279,68,0.341,71,0.19,73,0.076,74,0.203,90,0.854,93,1.715,121,1.434,152,0.007,153,0.007,156,0.763,172,1.627,177,1.259,183,4.491,274,0.831,278,1.241,281,1.309,282,1.275,285,1.773,287,1.939,307,2.726,313,1.44,319,1.457,333,0.875,363,3.053,445,0.068,447,0.952,460,0.808,470,3.941,502,1.627,531,5.741,565,2.777,597,4.333,650,3.328,671,2.777,674,2.907,677,3.213,832,3.053,878,2.661,879,2.065,889,3.58,890,2.457,891,3.009,892,2.701,899,3.801,917,3.801,1027,6.697,1044,4.464,1052,3.213,1059,7.179,1060,7.179,1061,6.089,1062,6.443,1063,6.443,1064,6.443,1065,6.443,1066,4.928,1067,4.491,1068,6.443,1069,7.901,1070,7.901,1071,7.024,1072,4.928,1073,6.443,1074,6.443,1075,6.443,1076,6.443,1077,6.443,1078,6.443,1079,7.126,1080,7.179,1081,6.443,1082,6.443,1083,3.658,1084,6.443,1085,4.928,1086,6.443,1087,4.928,1088,5.665,1089,4.928,1090,4.928,1091,3.648,1092,3.648,1093,4.928,1094,4.928,1095,4.928,1096,2.368,1097,4.928,1098,4.928,1099,4.928,1100,4.928,1101,4.333,1102,4.928,1103,4.928,1104,4.928,1105,4.928,1106,4.928,1107,4.333,1108,6.443,1109,4.928,1110,4.928,1111,4.333,1112,4.928,1113,4.928,1114,4.928,1115,4.928,1116,4.928,1117,4.928,1118,4.928,1119,4.928,1120,4.928,1121,4.928,1122,4.928,1123,4.333,1124,4.928,1125,4.928,1126,6.312,1127,4.928,1128,6.443,1129,4.928,1130,6.443,1131,6.443,1132,4.928,1133,3.941,1134,4.928,1135,4.928,1136,7.901,1137,4.928,1138,4.928,1139,4.928,1140,4.928,1141,7.179,1142,3.053,1143,4.928,1144,4.928,1145,6.443,1146,4.928,1147,4.928]],["title/pipes/CustomDatePipe.html",[502,1.423,1148,3.448]],["body/pipes/CustomDatePipe.html",[3,0.098,4,0.083,8,0.067,14,1.937,16,1.885,30,0.353,35,0.572,43,0.41,44,0.011,46,0.905,47,0.68,48,0.58,56,0.615,57,0.4,58,0.429,60,0.572,68,0.333,71,0.246,72,1.991,73,0.098,74,0.263,152,0.009,153,0.009,177,0.905,256,3.636,257,1.167,261,2.672,333,0.923,502,2.664,504,3.761,508,4.687,511,4.687,768,2.165,812,2.293,869,5.601,1148,6.051,1149,7.094,1150,5.606,1151,7.567,1152,6.376,1153,7.567,1154,6.376,1155,6.376,1156,6.376,1157,3.95,1158,5.606,1159,6.376,1160,3.494,1161,6.653,1162,6.376,1163,5.606,1164,5.099,1165,6.376,1166,6.376,1167,6.376,1168,6.376,1169,7.567,1170,3.593,1171,6.376,1172,3.442,1173,5.606,1174,6.376,1175,6.376,1176,6.376,1177,6.376,1178,6.376,1179,6.376]],["title/interfaces/Data.html",[301,0.727,455,1.346]],["body/interfaces/Data.html",[3,0.02,4,0.016,8,0.013,9,0.47,20,0.28,29,0.052,30,0.124,43,0.579,44,0.011,45,0.696,57,0.179,58,0.242,73,0.088,87,1.418,90,1.428,93,1.411,106,1.066,110,1.037,152,0.003,153,0.003,229,1.922,238,2.233,301,0.607,307,3.033,313,0.763,380,2.299,455,0.698,491,2.066,537,0.431,584,0.589,715,3.138,724,3.538,727,3.525,730,4.265,732,4.77,784,2.541,812,2.671,843,3.507,1083,0.61,1160,1.961,1170,3.934,1172,3.717,1180,0.88,1181,2.683,1182,2.366,1183,0.749,1184,2.625,1185,0.83,1186,5.416,1187,0.94,1188,0.61,1189,0.633,1190,2.031,1191,5.526,1192,0.94,1193,2.497,1194,5.526,1195,2.497,1196,5.526,1197,2.497,1198,5.526,1199,4.836,1200,2.497,1201,5.866,1202,2.073,1203,2.497,1204,4.089,1205,3.065,1206,4.836,1207,1.614,1208,4.836,1209,4.836,1210,2.497,1211,4.836,1212,5.055,1213,5.802,1214,2.497,1215,4.836,1216,4.836,1217,1.868,1218,2.233,1219,4.836,1220,2.126,1221,2.355,1222,1.946,1223,4.836,1224,2.497,1225,2.233,1226,4.836,1227,0.749,1228,1.765,1229,0.749,1230,0.749,1231,0.749,1232,0.94,1233,0.94,1234,1.955,1235,4.561,1236,4.476,1237,2.355,1238,2.355,1239,2.355,1240,2.355,1241,2.355,1242,1.548,1243,1.548,1244,1.548,1245,1.654,1246,1.654,1247,1.654,1248,1.654,1249,1.654,1250,1.46,1251,3.612,1252,1.548,1253,1.548,1254,1.548,1255,0.94,1256,0.94,1257,0.94,1258,0.716,1259,3.934,1260,3.354,1261,4.117,1262,4.117,1263,4.117,1264,4.117,1265,4.117,1266,3.78,1267,0.94,1268,0.633,1269,5.096,1270,5.096,1271,4.77,1272,5.096,1273,4.77,1274,2.073,1275,2.073,1276,2.073,1277,2.073,1278,2.073,1279,2.073,1280,2.073,1281,3.138,1282,2.073,1283,2.073,1284,2.073,1285,2.073,1286,2.073,1287,2.073,1288,2.073,1289,2.073,1290,2.073,1291,2.073,1292,2.073,1293,2.073,1294,2.073,1295,2.073,1296,3.04,1297,2.073,1298,2.073,1299,2.073,1300,2.073,1301,2.073,1302,2.073,1303,2.073,1304,3.138,1305,2.073,1306,2.073,1307,2.073,1308,2.073,1309,2.073,1310,2.073,1311,2.073,1312,2.073,1313,2.073,1314,2.073,1315,2.073,1316,2.073,1317,2.073,1318,2.073,1319,2.073,1320,2.073,1321,2.073,1322,2.073,1323,2.073,1324,2.073,1325,2.073,1326,3.138,1327,2.073,1328,2.073,1329,2.073,1330,2.073,1331,2.073,1332,2.073,1333,2.073,1334,2.073,1335,2.073,1336,2.073,1337,2.073,1338,2.073,1339,2.073,1340,2.073,1341,2.073,1342,2.073,1343,2.073,1344,2.073,1345,2.073,1346,2.073,1347,2.073,1348,3.138,1349,2.073,1350,2.073,1351,2.073,1352,2.073,1353,2.073,1354,2.073,1355,2.073,1356,2.073,1357,2.073,1358,2.073,1359,2.073,1360,2.073,1361,2.073,1362,2.073,1363,2.073,1364,2.073,1365,2.073,1366,2.073,1367,2.073,1368,2.073,1369,2.073,1370,3.138,1371,2.073,1372,2.073,1373,2.073,1374,2.073,1375,2.073,1376,2.073,1377,2.073,1378,2.073,1379,2.073,1380,2.073,1381,2.073,1382,2.073,1383,2.073,1384,2.073,1385,0.88,1386,3.353,1387,2.806,1388,3.138,1389,0.94,1390,0.94,1391,0.94,1392,0.94,1393,0.88]],["title/injectables/DataService.html",[445,0.046,1394,2.072]],["body/injectables/DataService.html",[3,0.07,4,0.059,8,0.048,9,3.329,20,0.999,29,0.187,30,0.337,35,0.546,43,0.569,44,0.011,46,1.248,47,0.701,48,0.688,56,0.812,57,0.418,58,0.566,60,0.754,61,1.652,68,0.304,71,0.174,73,0.07,74,0.187,86,1.025,121,1.128,152,0.007,153,0.007,156,0.701,197,2.209,249,1.749,253,2.462,277,1.896,278,1.139,282,1.17,333,0.552,380,1.413,445,0.064,447,0.874,460,0.741,1184,4.079,1189,4.098,1227,2.669,1268,4.152,1394,2.925,1395,3.978,1396,6.956,1397,5.856,1398,7.911,1399,7.911,1400,6.956,1401,7.36,1402,5.018,1403,5.353,1404,5.353,1405,5.353,1406,6.088,1407,6.088,1408,6.088,1409,5.353,1410,5.353,1411,6.088,1412,5.353,1413,4.524,1414,3.978,1415,4.524,1416,5.353,1417,4.524,1418,5.353,1419,4.524,1420,6.088,1421,4.524,1422,6.088,1423,4.524,1424,6.088,1425,4.524,1426,5.353,1427,4.524,1428,5.353,1429,4.524,1430,6.088,1431,4.524,1432,5.353,1433,4.524,1434,3.984,1435,5.353,1436,4.524,1437,5.353,1438,4.524,1439,6.05,1440,4.524,1441,5.353,1442,4.524,1443,4.507,1444,4.524,1445,6.05,1446,4.524,1447,4.524,1448,6.088,1449,4.524,1450,4.524,1451,6.088,1452,4.524,1453,6.956,1454,4.524,1455,6.471,1456,4.524,1457,4.524,1458,4.524,1459,4.524,1460,6.088,1461,4.524,1462,4.524,1463,5.353,1464,4.524,1465,3.978,1466,3.978,1467,2.345,1468,3.978,1469,3.978,1470,3.978,1471,3.978,1472,4.524,1473,4.524,1474,3.978,1475,3.978,1476,4.524,1477,2.956,1478,4.524,1479,3.978,1480,3.978,1481,3.978,1482,4.524,1483,4.524,1484,4.524,1485,3.978,1486,3.978,1487,3.978,1488,3.978]],["title/injectables/DataService-1.html",[380,1.123,445,0.038,1394,1.728]],["body/injectables/DataService-1.html",[3,0.071,4,0.06,8,0.049,9,3.322,20,1.018,29,0.19,30,0.341,35,0.553,43,0.566,44,0.011,46,1.242,47,0.698,48,0.686,56,0.806,57,0.415,58,0.562,60,0.749,61,1.638,68,0.306,71,0.178,73,0.071,74,0.19,86,1.046,121,1.139,152,0.007,153,0.007,156,0.715,197,2.231,249,1.742,253,2.451,277,1.934,278,1.162,282,1.193,333,0.563,380,1.441,445,0.065,447,0.891,460,0.756,1184,3.903,1189,3.465,1227,2.721,1268,4.051,1394,2.964,1396,6.995,1397,5.889,1400,6.523,1402,5.051,1403,5.423,1404,5.423,1405,5.423,1409,5.423,1410,5.423,1412,5.423,1414,4.056,1416,5.423,1418,5.423,1426,4.056,1428,5.423,1432,5.423,1434,3.974,1435,5.423,1437,5.423,1439,6.11,1441,5.423,1443,4.566,1445,4.056,1453,6.523,1455,5.423,1463,5.423,1465,4.056,1466,4.056,1467,2.392,1468,4.056,1469,4.056,1470,4.056,1471,4.056,1474,4.056,1475,4.056,1477,3.014,1479,4.056,1480,4.056,1481,4.056,1485,4.056,1486,4.056,1487,4.056,1488,4.056,1489,7.884,1490,3.689,1491,7.956,1492,7.956,1493,7.956,1494,6.168,1495,6.168,1496,6.168,1497,4.613,1498,4.613,1499,4.056,1500,4.613,1501,4.613,1502,4.056,1503,6.168,1504,4.613,1505,6.168,1506,4.613,1507,4.613,1508,6.168,1509,4.613,1510,4.613,1511,6.168,1512,4.056,1513,4.613,1514,4.613,1515,4.613,1516,4.613,1517,4.613,1518,4.613,1519,4.056,1520,4.613,1521,6.168,1522,4.613,1523,4.613,1524,6.168,1525,4.613,1526,4.056,1527,4.056,1528,6.168,1529,4.613,1530,4.613,1531,4.613,1532,4.613,1533,4.613,1534,4.613,1535,4.613,1536,4.613]],["title/injectables/DetailsService.html",[445,0.046,890,2.15]],["body/injectables/DetailsService.html",[3,0.071,4,0.06,8,0.049,29,0.19,30,0.428,35,0.553,43,0.542,44,0.011,45,0.756,46,0.875,47,0.492,48,0.657,56,0.814,57,0.419,58,0.568,60,0.757,68,0.306,71,0.178,73,0.071,74,0.19,86,1.574,87,3.042,90,0.799,121,1.011,152,0.007,153,0.007,156,0.714,172,2.293,177,1.129,257,1.128,274,0.777,278,1.161,281,1.224,285,1.658,287,1.814,288,2.253,313,1.341,333,1.058,335,3.687,445,0.065,447,0.891,460,0.756,502,2.035,527,2.154,529,2.065,812,2.781,843,1.814,879,1.932,890,3.075,891,2.911,892,2.584,898,3.819,899,4.692,900,3.751,902,3.329,907,3.819,910,2.761,912,3.819,917,4.375,920,2.856,923,2.856,928,2.215,929,2.72,933,3.819,934,3.819,936,3.819,951,2.72,954,3.475,963,3.819,970,1.611,977,3.819,978,3.037,980,3.563,984,2.856,985,3.819,987,2.856,995,3.475,996,2.856,1008,3.819,1009,2.856,1096,3.563,1537,7.586,1538,4.054,1539,3.819,1540,5.421,1541,5.421,1542,5.421,1543,5.421,1544,4.564,1545,5.421,1546,5.421,1547,5.421,1548,4.564,1549,4.61,1550,4.61,1551,4.61,1552,4.61,1553,4.61,1554,4.61,1555,4.61,1556,4.61,1557,4.61,1558,6.166,1559,4.61,1560,4.61,1561,4.61,1562,6.947,1563,7.73,1564,7.417,1565,7.417,1566,6.947,1567,4.61,1568,6.166,1569,4.61,1570,4.61,1571,6.166,1572,4.61,1573,6.166,1574,6.166,1575,4.61,1576,4.61,1577,4.61,1578,4.61,1579,4.61,1580,4.61,1581,4.61,1582,4.61,1583,4.61,1584,4.61,1585,4.61,1586,4.61,1587,4.61,1588,4.61,1589,4.61,1590,4.61,1591,6.166,1592,6.166,1593,4.61,1594,4.61,1595,4.61,1596,4.61,1597,4.61,1598,4.61,1599,4.61,1600,4.61,1601,4.61,1602,3.687,1603,4.61]],["title/injectables/DetailsService-1.html",[380,1.123,445,0.038,890,1.794]],["body/injectables/DetailsService-1.html",[3,0.055,4,0.046,8,0.037,20,0.782,29,0.146,30,0.366,35,0.46,43,0.526,44,0.011,45,0.819,46,0.728,47,0.481,48,0.628,56,0.79,57,0.397,58,0.538,60,0.717,68,0.29,71,0.137,73,0.055,74,0.146,86,1.813,87,2.603,90,0.889,121,0.989,152,0.006,153,0.006,156,0.548,172,2.675,177,1.039,215,1.845,217,2.489,229,0.741,249,1.018,253,2.207,257,0.648,274,0.597,278,0.892,281,0.94,282,0.916,285,1.274,287,1.394,288,2.009,301,1.183,313,1.468,321,3.517,327,3.357,331,3.466,332,3.937,333,0.976,354,2.235,445,0.054,447,0.684,460,0.58,491,2.183,527,1.792,529,1.586,537,1.202,589,3.581,590,4.357,591,2.891,594,3.786,650,2.378,671,2.891,674,2.089,677,3.99,682,1.766,693,3.782,812,2.715,838,3.856,843,1.394,873,2.194,874,2.194,875,3.583,876,1.912,877,4.125,878,2.77,879,1.484,880,3.941,881,2.314,882,2.314,883,1.702,884,2.314,885,4.586,886,2.891,887,3.026,888,4.72,889,1.766,890,2.558,891,2.528,892,2.15,893,4.917,894,3.901,895,3.351,896,3.351,897,3.351,898,3.178,899,4.317,900,3.257,901,3.941,902,4.174,903,3.941,904,4.586,905,3.941,906,3.941,907,3.737,908,4.782,909,3.798,910,3.278,911,3.178,912,3.178,913,4.321,914,4.321,915,2.314,916,2.314,917,4.141,918,3.351,919,3.351,920,3.178,921,2.314,922,2.314,923,2.194,924,2.314,925,3.351,926,3.351,927,3.351,928,3.373,929,2.089,930,2.314,931,3.351,932,2.314,933,3.178,934,3.178,935,3.351,936,3.178,937,2.314,938,2.314,939,2.314,940,2.314,941,3.351,942,2.314,943,2.314,944,3.351,945,2.314,946,2.314,947,2.314,948,2.314,949,2.314,950,2.314,951,2.089,952,2.314,953,2.314,954,2.891,955,2.314,956,2.194,957,3.351,958,3.558,959,3.351,960,2.891,961,3.351,962,2.891,963,3.178,964,2.314,965,2.314,966,2.314,967,2.314,968,2.314,969,2.314,970,1.792,971,2.314,972,2.891,973,3.351,974,2.314,975,2.314,976,2.314,977,3.178,978,2.974,979,3.351,980,3.517,981,2.314,982,2.314,983,3.351,984,3.178,985,3.178,986,2.314,987,2.194,988,2.314,989,2.891,990,3.351,991,3.026,992,3.351,993,3.351,994,2.558,995,2.891,996,3.178,997,2.314,998,3.351,999,3.351,1000,3.026,1001,5.075,1002,2.314,1003,3.351,1004,3.351,1005,3.351,1006,3.026,1007,3.178,1008,3.178,1009,2.194,1010,3.351,1011,2.314,1012,2.314,1013,2.314,1014,2.314,1539,3.178,1540,4.51,1541,4.51,1542,4.51,1543,4.51,1544,3.797,1545,4.51,1546,4.51,1547,4.51,1548,3.797,1604,3.541,1605,3.541,1606,3.541,1607,3.541,1608,3.541,1609,3.541,1610,3.541,1611,3.541,1612,3.541,1613,3.541,1614,3.541,1615,3.541]],["title/interfaces/DisplayFlags.html",[301,0.727,1616,3.192]],["body/interfaces/DisplayFlags.html",[3,0.089,4,0.055,8,0.045,29,0.174,30,0.321,43,0.553,44,0.011,68,0.309,71,0.163,73,0.089,74,0.174,90,1.52,106,1.247,110,1.214,117,1.474,119,1.971,121,0.691,133,1.433,135,1.433,149,1.247,152,0.007,153,0.007,156,0.653,177,1.015,202,3.566,214,2.756,217,1.282,257,1.558,274,0.711,301,0.711,313,0.711,327,2.357,328,2.923,329,3.123,330,3.123,331,1.768,333,0.514,354,2.151,445,0.061,460,0.691,537,1.433,563,2.923,594,2.027,616,4.643,655,2.923,657,3.374,660,3.374,663,3.374,666,3.374,680,2.187,683,3.123,692,2.756,768,2.909,889,2.104,893,2.489,894,2.489,909,1.956,994,2.104,1045,5.293,1190,2.378,1205,2.489,1207,1.889,1220,2.489,1222,2.278,1616,4.913,1617,3.374,1618,3.374,1619,6.979,1620,7.109,1621,6.979,1622,6.979,1623,6.979,1624,6.979,1625,6.812,1626,6.979,1627,6.979,1628,6.812,1629,6.979,1630,7.109,1631,6.979,1632,7.109,1633,6.979,1634,3.123,1635,2.614,1636,2.923,1637,5.55,1638,2.923,1639,3.71,1640,3.123,1641,3.71,1642,3.71,1643,3.71,1644,3.71,1645,3.71,1646,3.71,1647,3.71,1648,3.71,1649,3.71,1650,3.71,1651,5.104,1652,3.71,1653,5.836,1654,3.71,1655,3.71,1656,3.71,1657,5.836,1658,3.71,1659,3.71,1660,5.104,1661,3.71,1662,3.71,1663,3.71,1664,3.71,1665,3.71,1666,5.104,1667,3.71,1668,3.71,1669,3.71,1670,3.71,1671,3.71,1672,5.104,1673,3.71,1674,3.71,1675,3.71,1676,3.71,1677,3.71,1678,3.71,1679,5.836,1680,3.71,1681,3.71,1682,3.71,1683,5.836,1684,3.71,1685,3.71,1686,3.71,1687,5.836,1688,3.71,1689,3.71,1690,3.71,1691,5.836,1692,3.71,1693,3.71,1694,3.71,1695,5.104,1696,3.71,1697,3.71,1698,3.71,1699,3.71,1700,3.71,1701,5.104,1702,3.71,1703,3.71,1704,5.104,1705,3.71,1706,3.71,1707,4.643,1708,5.836,1709,5.104,1710,3.71,1711,3.71,1712,3.71,1713,3.71,1714,3.71,1715,3.71,1716,3.71,1717,3.71,1718,3.71,1719,3.71,1720,3.71,1721,3.71,1722,3.123,1723,5.104,1724,3.71,1725,3.71,1726,3.71,1727,3.71,1728,3.71,1729,3.71,1730,3.71,1731,3.71,1732,3.71,1733,3.374,1734,3.71,1735,3.71,1736,3.71,1737,3.71,1738,3.71,1739,3.71,1740,3.71,1741,3.71,1742,3.71,1743,3.71,1744,3.374,1745,5.104,1746,3.71,1747,3.71,1748,3.71,1749,3.71,1750,3.71,1751,3.71]],["title/components/EducationDisplayComponent.html",[0,0.707,109,1.507]],["body/components/EducationDisplayComponent.html",[0,1.008,1,1.28,2,1.891,3,0.056,4,0.048,5,1.357,6,1.357,7,1.357,8,0.039,11,1.054,16,1.083,17,2.754,18,2.679,19,1.735,21,1.396,22,1.36,23,1.641,24,2.577,25,1.641,27,2.134,29,0.151,30,0.291,35,0.471,38,2.354,43,0.338,44,0.011,45,0.489,46,0.52,47,0.292,48,0.567,56,0.353,57,0.305,58,0.246,60,0.551,61,1.22,68,0.315,69,1.586,70,2.148,71,0.141,72,1.144,73,0.056,74,0.151,90,0.911,92,1.318,93,1.256,94,1.318,95,1.947,96,1.947,97,1.357,98,2.218,99,1.357,100,1.318,101,2.635,102,1.357,103,1.244,104,1.357,105,1.28,106,1.083,107,3.082,108,1.28,109,2.347,110,2.373,111,1.244,112,1.357,113,1.244,114,1.28,115,1.357,116,1.28,117,1.28,118,1.318,119,1.244,120,1.28,121,1.25,122,1.357,123,1.28,124,1.357,125,1.244,126,1.357,127,1.244,128,1.28,129,1.28,130,1.357,131,1.244,132,1.28,133,1.244,134,1.28,135,1.244,136,1.28,137,1.357,138,1.28,139,1.357,140,1.28,141,1.357,142,1.28,143,1.357,144,1.28,145,1.357,146,1.688,147,1.28,148,1.28,149,1.818,150,1.357,151,1.357,152,0.006,153,0.006,160,2.148,164,2.662,165,3.627,193,3.114,229,1.406,249,0.727,294,1.357,295,1.28,300,2.161,327,1.487,354,1.357,364,3.886,480,3.006,544,3.963,558,3.483,559,4.162,560,4.582,561,3.963,680,3.483,742,3.221,754,1.76,755,2.212,756,3.32,757,2.622,758,2.622,759,4.647,760,3.434,761,4.389,762,2.538,764,3.434,766,2.393,768,1.785,770,1.318,771,2.269,772,2.393,773,1.899,774,2.393,775,3.434,776,1.76,777,1.76,778,2.393,779,2.393,780,2.393,781,2.393,782,4.162,783,5.097,784,2.727,785,3.434,786,4.389,787,4.389,788,4.389,789,3.754,790,4.724,791,4.389,792,4.389,793,2.393,794,3.434,795,3.434,796,4.389,797,3.434,798,3.434,799,3.434,800,3.257,801,3.434,802,3.257,803,3.434,804,2.393,805,2.393,806,3.434,807,3.434,808,2.393,809,2.393,810,2.393,811,2.393,812,2.559,813,4.389,814,2.393,815,4.017,816,5.782,817,4.833,818,4.837,819,3.434,820,4.389,821,2.393,822,4.837,823,5.332,824,2.393,825,3.434,826,3.434,827,4.017,828,2.393,829,2.963,830,2.393,831,2.393,832,3.257,833,3.434,834,3.434,835,2.393,836,4.017,837,2.393,838,2.622,839,4.837,840,3.434,841,3.434,842,4.837,843,2.069,844,3.434,845,2.393,846,2.393,847,3.257,848,2.393,849,2.393,850,2.393,851,2.393,852,2.393,853,2.393,854,2.393,855,2.393,856,2.393,857,2.393,858,2.269,859,2.393,860,2.393,861,4.017,862,2.393,863,2.393,864,2.393,1752,6.706,1753,6.706,1754,7.114,1755,2.93,1756,2.393,1757,3.221,1758,2.93,1759,2.393,1760,3.664,1761,3.664,1762,2.393,1763,3.664,1764,2.93,1765,3.664,1766,3.664,1767,5.257,1768,3.221,1769,3.221,1770,3.664,1771,3.664]],["title/interfaces/Entity.html",[301,0.727,888,2.543]],["body/interfaces/Entity.html",[3,0.064,4,0.054,8,0.044,20,0.918,29,0.172,30,0.394,43,0.267,44,0.011,45,0.81,47,0.332,68,0.308,71,0.16,73,0.064,74,0.172,86,1.792,87,2.263,90,0.996,121,1.08,152,0.007,153,0.007,156,0.645,172,2.61,177,0.817,215,1.497,217,2.485,229,0.871,249,1.141,253,2.09,257,0.762,274,0.701,278,1.048,281,1.105,282,1.076,285,1.497,287,1.638,288,1.747,301,1.257,313,1.491,321,3.166,327,3.211,331,3.314,332,3.707,333,1.01,354,2.13,445,0.061,460,0.682,491,2.346,527,1.454,529,1.864,537,1.953,589,3.424,590,4.006,591,2.345,594,3.585,650,2.666,671,3.241,674,2.455,677,3.847,682,2.075,693,3.609,812,2.844,838,3.545,843,1.638,873,2.578,874,2.578,875,3.455,876,2.247,877,4.348,878,3.105,879,1.744,880,4.305,881,2.719,882,2.719,883,2,884,2.719,885,4.874,886,3.241,887,4.193,888,4.401,889,3.545,890,2.075,891,1.744,892,1.744,893,4.665,894,3.392,895,2.719,896,2.719,897,2.719,898,2.578,899,4.551,900,3.558,901,4.305,902,4.351,903,4.305,904,4.874,905,4.305,906,4.305,907,4.082,908,4.305,909,3.577,910,3.183,911,2.578,912,2.578,913,4.644,914,4.644,915,2.719,916,2.719,917,4.401,918,3.757,919,3.757,920,3.562,921,2.719,922,2.719,923,2.578,924,2.719,925,3.757,926,3.757,927,3.757,928,3.415,929,2.455,930,2.719,931,3.757,932,2.719,933,3.562,934,3.562,935,2.719,936,2.578,937,2.719,938,2.719,939,2.719,940,2.719,941,3.757,942,2.719,943,2.719,944,3.757,945,2.719,946,2.719,947,2.719,948,2.719,949,2.719,950,2.719,951,2.455,952,2.719,953,2.719,954,2.345,955,2.719,956,2.578,957,2.719,958,3.392,959,2.719,960,2.345,961,2.719,962,2.345,963,2.578,964,2.719,965,2.719,966,2.719,967,2.719,968,2.719,969,2.719,970,1.454,971,2.719,972,3.241,973,3.757,974,2.719,975,2.719,976,2.719,977,2.578,978,2.775,979,3.757,980,3.707,981,2.719,982,2.719,983,3.757,984,3.562,985,2.578,986,2.719,987,2.578,988,2.719,989,2.345,990,2.719,991,2.455,992,2.719,993,2.719,994,2.075,995,2.345,996,3.562,997,2.719,998,2.719,999,2.719,1000,2.455,1001,4.621,1002,2.719,1003,2.719,1004,2.719,1005,2.719,1006,2.455,1007,2.578,1008,2.578,1009,2.578,1010,3.757,1011,2.719,1012,2.719,1013,2.719,1014,2.719]],["title/injectables/FactgridSubtitlesService.html",[445,0.046,1772,3.192]],["body/injectables/FactgridSubtitlesService.html",[3,0.053,4,0.045,8,0.037,20,0.764,29,0.143,30,0.279,35,0.452,44,0.011,46,0.492,47,0.403,48,0.456,56,0.487,57,0.25,58,0.339,60,0.452,61,1.002,68,0.208,71,0.134,73,0.053,74,0.143,106,1.024,110,0.996,133,1.176,135,1.714,152,0.006,153,0.006,156,0.536,177,0.846,188,2.844,205,2.369,215,3.027,217,2.616,219,4.57,221,4.044,224,4.743,257,1.434,261,1.451,274,0.584,319,1.024,321,2.861,328,2.399,332,1.664,445,0.053,447,0.669,460,0.568,489,3.044,524,1.763,532,1.714,533,1.21,545,4.408,550,2.042,650,2.761,693,1.551,962,1.951,1067,2.616,1182,2.579,1188,1.664,1190,3.356,1205,4.422,1207,2.667,1217,3.087,1218,3.689,1220,3.513,1222,3.921,1225,4.31,1772,3.736,1773,5.754,1774,3.044,1775,5.047,1776,5.047,1777,3.463,1778,6.957,1779,3.463,1780,3.463,1781,3.463,1782,3.463,1783,2.769,1784,3.463,1785,3.463,1786,3.297,1787,5.047,1788,3.463,1789,7.262,1790,3.044,1791,3.463,1792,3.463,1793,3.463,1794,3.463,1795,3.463,1796,3.463,1797,3.463,1798,3.463,1799,3.463,1800,7.262,1801,3.044,1802,3.463,1803,3.463,1804,4.437,1805,3.463,1806,3.463,1807,6.957,1808,5.047,1809,5.047,1810,7.262,1811,3.463,1812,3.463,1813,3.463,1814,3.463,1815,3.463,1816,3.044,1817,8.716,1818,5.047,1819,5.047,1820,9.054,1821,3.463,1822,3.044,1823,3.463,1824,5.955,1825,3.463,1826,3.463,1827,3.463,1828,3.463,1829,5.955,1830,3.463,1831,3.463,1832,3.463,1833,5.955,1834,3.463,1835,7.497,1836,3.463,1837,3.463,1838,3.463,1839,3.463,1840,3.463,1841,7.497,1842,3.463,1843,3.463,1844,3.463,1845,3.463,1846,3.463,1847,3.463,1848,3.463,1849,3.463,1850,5.047,1851,3.463,1852,3.463,1853,7.497,1854,5.047,1855,3.463,1856,3.463,1857,5.047,1858,3.463,1859,5.047,1860,3.463,1861,3.463,1862,3.463,1863,5.955,1864,3.463,1865,6.117,1866,3.463,1867,3.463,1868,3.463,1869,3.463,1870,3.463,1871,2.399,1872,3.463,1873,2.563,1874,3.044,1875,3.463,1876,3.463,1877,4.036,1878,3.463,1879,3.463,1880,3.463,1881,3.463,1882,3.463,1883,3.463,1884,5.047,1885,3.463,1886,3.463,1887,5.047,1888,3.463,1889,3.463,1890,3.044,1891,5.047,1892,3.463,1893,3.463,1894,3.463,1895,5.047,1896,3.463,1897,3.463,1898,3.463,1899,5.047,1900,3.463,1901,6.957,1902,3.463,1903,3.463,1904,3.463,1905,3.463,1906,3.463,1907,3.463,1908,3.463,1909,3.463,1910,3.463,1911,3.463,1912,3.463,1913,3.044,1914,3.463,1915,3.463,1916,3.463,1917,3.463,1918,3.463,1919,5.047,1920,5.047,1921,5.047,1922,6.544,1923,5.047,1924,1.499]],["title/components/FooterComponent.html",[0,0.707,111,1.464]],["body/components/FooterComponent.html",[0,1.269,1,2.027,2,2.57,3,0.089,4,0.075,5,2.149,6,2.149,7,2.149,8,0.061,11,1.669,16,1.715,17,2.844,18,2.767,19,2.359,21,1.898,22,1.848,23,1.811,25,2.231,27,2.901,29,0.239,30,0.396,44,0.01,46,0.824,47,0.463,48,0.444,57,0.355,68,0.239,71,0.224,73,0.089,74,0.239,92,2.086,93,1.707,94,2.086,95,2.647,96,2.647,97,2.149,98,2.668,99,2.149,100,2.086,101,3.075,102,2.149,103,1.97,104,2.149,105,2.027,106,1.715,107,3.294,108,2.027,109,2.027,110,1.669,111,2.745,112,2.149,113,1.97,114,2.027,115,2.149,116,2.027,117,2.027,118,2.086,119,1.97,120,2.027,121,0.951,122,2.149,123,2.027,124,2.149,125,1.97,126,2.149,127,1.97,128,2.027,129,2.027,130,2.149,131,1.97,132,2.027,133,1.97,134,2.027,135,1.97,136,2.027,137,2.149,138,2.027,139,2.149,140,2.027,141,2.149,142,2.027,143,2.149,144,2.027,145,2.149,146,2.294,147,2.027,148,2.027,149,1.715,150,2.149,151,2.149,152,0.008,153,0.008,249,1.418,261,2.995,403,6.283,1925,5.1,1926,7.146,1927,7.146,1928,8.302,1929,7.146,1930,5.801,1931,7.146,1932,7.146]],["title/injectables/GregorianToJulianCalendarService.html",[445,0.046,1933,3.448]],["body/injectables/GregorianToJulianCalendarService.html",[3,0.106,4,0.089,8,0.073,44,0.01,48,0.528,68,0.285,71,0.266,73,0.106,74,0.285,152,0.009,153,0.009,156,1.068,197,2.675,445,0.084,447,1.332,460,1.13,1933,6.335,1934,6.965,1935,6.965,1936,6.064,1937,6.897]],["title/interfaces/HU.html",[224,2.43,301,0.727]],["body/interfaces/HU.html",[0,1.025,3,0.073,4,0.061,8,0.05,14,1.432,17,1.472,18,1.432,21,1.252,22,1.935,23,1.472,24,2.622,25,1.472,27,1.913,29,0.195,30,0.346,43,0.553,44,0.011,45,0.653,68,0.369,69,2.709,71,0.241,72,1.954,73,0.096,74,0.195,86,1.592,89,2.709,90,0.817,113,1.6,114,2.614,152,0.007,153,0.007,158,2.709,160,2.186,163,3.876,169,2.443,177,1.062,183,2.443,189,4.824,193,2.185,197,1.513,202,1.855,205,1.219,215,1.695,224,3.526,244,4.866,249,1.242,250,2.35,253,1.753,256,3.006,257,0.862,259,3.489,274,0.794,275,1.913,277,1.975,278,1.187,279,2.35,281,1.252,282,1.219,286,2.443,294,1.746,295,1.647,297,2.041,301,0.794,313,0.794,319,1.393,333,0.856,397,3.265,434,3.489,445,0.05,446,2.544,455,2.193,490,2.78,491,1.556,524,1.647,532,1.6,533,1.647,537,1.6,545,3.489,584,3.845,755,2.25,768,2.385,770,1.695,776,2.264,777,2.264,928,3.006,1050,1.975,1160,3.372,1222,2.544,1260,2.264,1387,3.876,1394,2.264,1434,2.802,1467,2.443,1871,3.265,1924,2.041,1938,3.489,1939,3.769,1940,6.227,1941,5.538,1942,4.144,1943,4.144,1944,3.876,1945,2.35,1946,2.919,1947,3.265,1948,4.144,1949,2.919,1950,2.919,1951,3.265,1952,4.144,1953,3.769,1954,5.199,1955,4.631,1956,3.489,1957,5.501,1958,5.501,1959,5.501,1960,4.144,1961,3.079,1962,5.501,1963,4.144,1964,4.144,1965,3.378,1966,2.802,1967,3.006,1968,2.264,1969,2.9,1970,2.185,1971,2.11,1972,4.144,1973,4.087,1974,3.079,1975,3.079,1976,5.501,1977,5.501,1978,4.144,1979,5.501,1980,5.616,1981,5.616,1982,4.144,1983,4.144,1984,4.144,1985,4.144,1986,4.144,1987,4.144,1988,2.919,1989,2.919,1990,4.144,1991,4.144,1992,4.144,1993,4.144,1994,4.144,1995,5.501,1996,3.12,1997,4.144,1998,4.144,1999,4.144,2000,4.144,2001,4.144,2002,4.144,2003,4.144,2004,3.489,2005,4.144,2006,4.144,2007,4.144,2008,3.769,2009,4.144,2010,4.144,2011,4.144,2012,4.144,2013,3.079,2014,4.144,2015,4.144,2016,4.144,2017,5.003,2018,4.144,2019,5.003,2020,4.144,2021,4.144,2022,4.144,2023,4.144,2024,4.144,2025,4.144,2026,4.144,2027,4.144,2028,4.144,2029,4.144,2030,4.144,2031,4.144,2032,4.144,2033,4.144,2034,4.144,2035,4.144,2036,4.144,2037,4.144,2038,4.144,2039,4.144,2040,4.144,2041,4.144,2042,4.144,2043,4.144,2044,4.144,2045,4.144,2046,4.144,2047,4.144,2048,5.501,2049,4.144,2050,4.144,2051,5.501,2052,4.144,2053,4.144,2054,3.489,2055,2.919,2056,4.144,2057,4.144,2058,2.919,2059,2.919,2060,4.144,2061,2.919,2062,2.919,2063,4.144,2064,2.919,2065,5.501,2066,2.919,2067,4.144,2068,4.144,2069,4.144,2070,4.144,2071,4.144,2072,4.144,2073,4.144,2074,4.144,2075,4.144,2076,4.144,2077,4.144,2078,4.144,2079,4.144,2080,4.144,2081,4.144,2082,3.489]],["title/components/HarmoniaUniversalisComponent.html",[0,0.707,113,1.464]],["body/components/HarmoniaUniversalisComponent.html",[0,0.958,1,1.172,2,1.774,3,0.052,4,0.044,5,1.243,6,1.243,7,1.243,8,0.035,11,0.965,14,1.498,16,0.992,17,2.732,18,2.658,19,1.628,21,1.31,22,1.92,23,1.54,24,2.451,25,1.54,27,2.002,29,0.138,30,0.273,35,0.442,43,0.544,44,0.011,45,0.754,46,1.223,47,0.687,48,0.677,56,0.622,57,0.356,58,0.434,60,0.644,61,1.425,68,0.358,69,2.532,71,0.19,72,1.54,73,0.076,74,0.138,86,1.325,89,2.135,90,0.854,92,1.207,93,1.178,94,1.207,95,1.827,96,1.827,97,1.243,98,2.128,99,1.243,100,1.207,101,2.544,102,1.243,103,1.139,104,1.243,105,1.172,106,0.992,107,3.033,108,1.172,109,1.172,110,0.965,111,1.139,112,1.243,113,2.189,114,2.716,115,1.243,116,1.172,117,1.172,118,1.207,119,1.139,120,1.172,121,0.55,122,1.243,123,1.172,124,1.243,125,1.139,126,1.243,127,1.139,128,1.172,129,1.172,130,1.243,131,1.139,132,1.172,133,1.139,134,1.172,135,1.139,136,1.172,137,1.243,138,1.172,139,1.243,140,1.172,141,1.243,142,1.172,143,1.243,144,1.172,145,1.243,146,1.583,147,1.172,148,1.172,149,0.992,150,1.243,151,1.243,152,0.006,153,0.006,158,2.532,160,2.043,163,3.622,169,3.031,177,1.151,183,1.739,189,3.622,193,2.988,197,1.877,202,1.941,205,1.512,215,1.207,224,1.891,244,4.758,249,1.279,250,1.673,253,1.638,256,2.369,257,0.614,259,2.483,261,2.067,274,0.565,275,1.362,277,1.406,278,0.845,279,1.673,281,0.891,282,0.868,286,1.739,294,1.243,295,1.172,297,1.453,301,0.565,313,0.565,319,0.992,333,0.713,397,3.417,434,6.555,445,0.035,446,1.811,455,1.826,483,1.979,490,1.979,491,1.107,524,1.723,532,1.139,533,1.172,545,3.651,755,2.103,768,2.439,770,1.207,776,1.612,777,1.612,789,3.216,928,3.097,1050,1.406,1160,2.532,1182,2.532,1207,1.502,1222,2.663,1260,2.369,1387,3.993,1394,1.612,1434,2.619,1467,1.739,1871,4.051,1924,2.791,1938,6.555,1939,2.683,1940,4.676,1941,2.483,1942,2.95,1943,2.95,1944,3.622,1945,1.673,1946,2.078,1947,2.324,1948,2.95,1949,2.078,1950,2.078,1951,2.324,1952,2.95,1953,2.683,1954,5.084,1955,4.329,1956,2.483,1957,5.141,1958,5.668,1959,5.141,1960,2.95,1961,2.192,1962,5.141,1963,2.95,1964,2.95,1965,3.157,1966,2.619,1967,2.81,1968,1.612,1969,2.711,1970,1.555,1971,1.502,1972,2.95,1973,3.82,1974,2.192,1975,2.192,1976,6.527,1977,5.141,1978,2.95,1979,4.336,1980,4.676,1981,4.676,1982,2.95,1983,4.336,1984,4.336,1985,4.336,1986,5.141,1987,4.336,1988,3.622,1989,3.055,1990,2.95,1991,2.95,1992,5.141,1993,2.95,1994,4.336,1995,6.314,1996,3.215,1997,2.95,1998,4.336,1999,2.95,2000,2.95,2001,2.95,2002,2.95,2003,5.141,2004,4.329,2005,5.141,2006,5.141,2007,5.141,2008,3.944,2009,4.336,2010,5.141,2011,5.141,2012,5.141,2013,3.82,2014,2.95,2015,5.141,2016,2.95,2017,4.676,2018,2.95,2019,3.944,2020,2.95,2021,2.95,2022,2.95,2023,2.95,2024,2.95,2025,2.95,2026,2.95,2027,2.95,2028,2.95,2029,4.336,2030,2.95,2031,5.141,2032,2.95,2033,2.95,2034,2.95,2035,2.95,2036,2.95,2037,2.95,2038,2.95,2039,2.95,2040,2.95,2041,2.95,2042,2.95,2043,2.95,2044,2.95,2045,2.95,2046,2.95,2047,2.95,2048,4.336,2049,2.95,2050,2.95,2051,4.336,2052,2.95,2053,2.95,2054,2.483,2055,3.993,2056,2.95,2057,2.95,2058,3.055,2059,2.078,2060,2.95,2061,2.078,2062,2.078,2063,2.95,2064,3.055,2065,4.336,2066,2.078,2067,2.95,2068,2.95,2069,2.95,2070,4.336,2071,2.95,2072,2.95,2073,2.95,2074,2.95,2075,2.95,2076,2.95,2077,2.95,2078,4.336,2079,4.336,2080,2.95,2081,2.95,2082,2.483,2083,6.446,2084,6.446,2085,6.446,2086,4.932,2087,6.446,2088,4.932,2089,6.446,2090,3.222,2091,4.932,2092,3.222,2093,4.932,2094,4.932,2095,3.355,2096,3.355,2097,3.355,2098,3.355,2099,3.355,2100,3.355,2101,3.355,2102,3.355,2103,3.355,2104,3.355,2105,3.355,2106,3.355,2107,3.355,2108,3.355,2109,3.355,2110,3.355,2111,3.355,2112,3.355,2113,3.355,2114,3.355,2115,3.355,2116,3.355,2117,3.355,2118,3.355,2119,3.355,2120,3.355,2121,3.355,2122,4.336,2123,3.355,2124,3.355,2125,3.355,2126,3.355,2127,3.355,2128,3.355,2129,3.055,2130,2.683,2131,4.932,2132,4.932,2133,4.932,2134,4.932,2135,3.355]],["title/components/HeaderDisplayComponent.html",[0,0.707,116,1.507]],["body/components/HeaderDisplayComponent.html",[0,1.033,1,1.34,2,1.953,3,0.059,4,0.05,5,1.42,6,1.42,7,1.42,8,0.04,11,1.103,16,1.133,17,2.764,18,2.69,19,1.792,21,1.442,22,1.404,23,1.696,24,2.643,25,1.696,27,2.204,29,0.158,30,0.301,35,0.487,38,2.432,43,0.246,44,0.011,45,0.505,46,0.544,47,0.306,48,0.483,57,0.269,60,0.344,61,0.761,68,0.319,70,1.897,71,0.148,72,1.197,73,0.059,74,0.158,90,0.941,92,1.379,93,1.297,94,1.379,95,2.012,96,2.012,97,1.42,98,2.264,99,1.42,100,1.379,101,2.681,102,1.42,103,1.302,104,1.42,105,1.34,106,1.133,107,3.106,108,1.34,109,1.34,110,1.103,111,1.302,112,1.42,113,1.302,114,1.34,115,1.42,116,2.396,117,2.701,118,1.379,119,1.302,120,1.34,121,1.267,122,1.42,123,1.34,124,1.42,125,1.302,126,1.42,127,1.302,128,1.34,129,1.34,130,1.42,131,1.302,132,1.34,133,1.302,134,1.34,135,1.302,136,1.34,137,1.42,138,1.34,139,1.42,140,1.34,141,1.42,142,1.34,143,1.42,144,1.34,145,1.42,146,1.743,147,1.34,148,1.34,149,1.864,150,1.42,151,1.42,152,0.006,153,0.006,160,2.203,164,2.73,165,3.719,229,1.435,294,1.42,295,1.34,300,2.261,364,3.914,480,3.052,544,4.045,558,3.555,559,4.248,560,4.612,561,4.045,613,6.364,680,3.555,754,1.842,755,2.268,756,3.404,757,2.708,758,2.708,759,4.729,761,4.48,762,2.656,768,1.844,769,2.375,770,1.379,771,2.375,772,2.505,773,1.987,774,2.505,775,3.547,782,4.248,783,5.158,784,2.784,785,3.547,786,4.48,787,4.48,788,4.48,789,3.781,790,4.788,791,4.48,792,4.48,793,2.505,794,3.547,795,3.547,796,4.48,797,3.547,798,3.547,799,3.547,800,3.364,801,3.547,802,3.364,803,3.547,804,2.505,805,2.505,806,3.547,807,3.547,808,2.505,809,2.505,810,2.505,811,2.505,812,1.953,813,3.547,814,2.505,815,3.547,816,5.802,817,4.891,818,4.911,819,3.547,820,4.48,821,2.505,822,4.911,823,5.38,824,2.505,825,3.547,826,3.547,827,4.119,828,2.505,829,3.06,830,2.505,831,2.505,832,3.364,833,3.547,834,3.547,835,2.505,836,4.119,837,2.505,838,2.708,839,4.911,840,3.547,841,3.547,842,4.911,843,2.137,844,3.547,845,2.505,846,2.505,847,3.364,848,2.505,849,2.505,850,2.505,851,2.505,852,2.505,853,2.505,854,2.505,855,2.505,856,2.505,857,2.505,858,2.375,859,2.505,860,2.505,861,4.119,862,2.505,863,2.505,864,2.505,1756,2.505,2136,6.03,2137,6.03]],["title/injectables/HuDatabaseService.html",[445,0.046,1951,2.987]],["body/injectables/HuDatabaseService.html",[3,0.089,4,0.075,8,0.061,20,1.269,29,0.237,30,0.393,35,0.637,43,0.369,44,0.011,45,0.77,46,0.816,47,0.459,48,0.646,56,0.799,57,0.411,58,0.557,60,0.742,68,0.333,71,0.222,73,0.089,74,0.237,86,1.61,90,0.996,149,1.699,152,0.008,153,0.008,156,0.89,177,1.095,205,1.838,253,1.61,257,1.475,262,4.47,274,0.969,277,2.409,278,1.448,281,1.527,282,1.487,288,1.746,289,3.104,313,0.969,333,0.941,380,1.795,445,0.075,447,1.111,455,1.795,460,0.942,477,3.706,527,2.483,724,2.762,970,2.483,1050,2.409,1434,2.574,1924,3.077,1938,6.328,1951,4.923,2129,4.992,2138,7.516,2139,4.597,2140,3.34,2141,7.106,2142,4.643,2143,5.26,2144,6.248,2145,7.106,2146,5.749,2147,5.749,2148,4.643,2149,5.749,2150,5.26,2151,5.054,2152,5.054,2153,5.749,2154,7.106,2155,5.749,2156,5.749,2157,5.749,2158,5.749,2159,5.749,2160,5.749,2161,5.749,2162,4.255,2163,5.054,2164,5.054,2165,5.054,2166,5.749,2167,6.248,2168,6.248,2169,6.248,2170,5.054,2171,5.054,2172,5.054,2173,5.749,2174,4.923,2175,3.983,2176,3.983,2177,3.983,2178,5.054,2179,4.255,2180,3.983,2181,5.054,2182,5.749,2183,3.24]],["title/injectables/IframesDisplayService.html",[445,0.046,1635,2.671]],["body/injectables/IframesDisplayService.html",[3,0.107,4,0.09,8,0.073,44,0.01,48,0.529,68,0.285,71,0.266,73,0.107,74,0.285,152,0.009,153,0.009,156,1.07,197,2.677,445,0.084,447,1.335,460,1.133,565,3.894,1635,4.913,2184,6.973,2185,6.076]],["title/injectables/IframesDisplayService-1.html",[380,1.123,445,0.038,1635,2.228]],["body/injectables/IframesDisplayService-1.html",[3,0.103,4,0.087,8,0.071,29,0.276,35,0.697,44,0.01,48,0.596,56,0.75,57,0.386,58,0.523,60,0.697,61,1.327,68,0.276,71,0.258,73,0.103,74,0.276,119,2.795,121,1.096,152,0.009,153,0.009,156,1.036,257,1.224,261,2.802,274,1.127,445,0.082,447,1.292,460,1.096,565,3.768,605,5.879,970,2.336,1635,4.82,2183,3.768,2186,7.236,2187,7.781,2188,7.781,2189,6.686,2190,7.781,2191,5.879,2192,6.686,2193,5.347,2194,6.686,2195,6.686,2196,6.686]],["title/injectables/ItemDetailsService.html",[445,0.046,1092,3.192]],["body/injectables/ItemDetailsService.html",[3,0.068,4,0.058,8,0.047,29,0.183,30,0.333,35,0.539,43,0.469,44,0.011,45,0.634,46,1.117,47,0.689,48,0.664,56,0.789,57,0.406,58,0.55,60,0.734,61,1.449,68,0.325,71,0.171,73,0.068,74,0.183,86,1.006,90,1.322,93,1.061,121,0.985,149,2.015,152,0.007,153,0.007,156,0.688,172,2.597,173,3.546,177,1.245,205,2.145,217,1.827,229,1.529,257,0.813,261,3.061,274,0.748,307,2.25,313,0.748,331,1.861,333,0.831,348,3.724,354,2.227,359,3.077,380,1.877,445,0.064,447,0.858,460,0.728,491,1.466,494,3.077,541,3.077,548,3.077,560,3.246,580,5.286,589,2.952,671,2.503,680,3.117,682,2.215,683,3.287,693,1.989,773,2.302,784,2.767,829,2.503,843,1.748,876,2.398,879,1.861,883,3.932,909,2.059,910,1.989,962,2.503,1001,2.751,1031,5.993,1038,5.286,1046,3.077,1047,3.905,1067,4.473,1071,6.706,1083,2.889,1092,4.451,1160,2.603,1250,2.901,1251,3.841,1260,2.134,1762,3.928,1764,6.104,1772,3.287,1786,3.928,1816,5.286,2197,6.964,2198,6.816,2199,6.816,2200,5.993,2201,6.816,2202,6.012,2203,6.012,2204,6.012,2205,6.012,2206,6.012,2207,6.012,2208,6.012,2209,6.012,2210,4.441,2211,4.441,2212,4.441,2213,6.012,2214,4.441,2215,4.441,2216,4.441,2217,4.441,2218,2.901,2219,5.286,2220,5.286,2221,4.722,2222,6.104,2223,4.441,2224,3.077,2225,6.012,2226,6.012,2227,3.551,2228,6.816,2229,5.451,2230,4.441,2231,4.441,2232,4.441,2233,6.012,2234,4.441,2235,4.441,2236,4.441,2237,4.441,2238,4.441,2239,6.012,2240,4.441,2241,6.012,2242,3.905,2243,4.441,2244,6.012,2245,4.441,2246,4.441,2247,6.012,2248,4.441,2249,6.012,2250,3.905,2251,3.287,2252,4.441,2253,4.441,2254,3.287,2255,4.441,2256,3.287,2257,3.905,2258,4.441,2259,4.441,2260,4.441,2261,3.905,2262,3.077,2263,4.441,2264,6.816,2265,8.184,2266,4.441,2267,4.441,2268,4.441,2269,4.441,2270,4.441,2271,4.441,2272,8.046,2273,6.012,2274,8.046,2275,4.441,2276,7.633,2277,4.441,2278,4.441,2279,4.441,2280,4.441,2281,4.441,2282,4.441,2283,7.305,2284,5.286,2285,4.441,2286,4.441,2287,4.441,2288,4.441,2289,4.441,2290,4.441,2291,4.441,2292,4.441,2293,4.165,2294,4.441,2295,3.287,2296,4.441,2297,4.441,2298,4.441,2299,4.441,2300,4.441,2301,4.441,2302,4.441,2303,4.441,2304,3.905]],["title/injectables/ItemDisplayDispatcherService.html",[445,0.046,1640,3.192]],["body/injectables/ItemDisplayDispatcherService.html",[3,0.091,4,0.056,8,0.046,29,0.179,30,0.328,35,0.531,43,0.279,44,0.011,46,0.957,47,0.538,48,0.555,56,0.419,57,0.216,58,0.292,60,0.39,68,0.313,71,0.168,73,0.091,74,0.179,90,1.525,106,1.285,110,1.251,117,1.519,119,2.012,121,0.971,133,1.476,135,1.476,149,2.24,152,0.007,153,0.007,156,0.673,177,1.186,202,3.403,214,2.84,217,1.321,257,1.565,274,0.733,301,0.733,313,0.733,327,2.406,328,3.012,329,3.218,330,3.218,331,1.822,333,0.53,354,2.195,445,0.063,447,0.84,460,0.713,563,3.012,594,2.089,616,5.79,655,3.012,657,3.476,660,3.476,663,3.476,666,3.476,680,2.254,683,3.218,692,2.84,768,2.921,889,2.168,893,2.564,894,2.564,909,2.015,994,2.168,1045,5.36,1190,2.45,1205,2.564,1207,1.947,1220,2.564,1222,2.347,1616,4.991,1617,6.059,1618,3.476,1619,6.366,1620,6.661,1621,6.366,1622,6.366,1623,6.366,1624,6.366,1625,5.928,1626,6.366,1627,6.366,1628,5.928,1629,6.366,1630,6.661,1631,6.366,1632,6.661,1633,6.366,1634,3.218,1635,2.693,1636,3.012,1637,5.608,1638,3.012,1639,3.822,1640,4.387,1641,5.928,1642,5.21,1643,5.928,1644,5.21,1645,3.822,1646,3.822,1647,5.928,1648,5.21,1649,5.21,1650,3.822,1651,5.21,1652,3.822,1653,5.928,1654,3.822,1655,3.822,1656,3.822,1657,5.928,1658,3.822,1659,3.822,1660,5.21,1661,3.822,1662,3.822,1663,3.822,1664,3.822,1665,3.822,1666,5.21,1667,3.822,1668,3.822,1669,3.822,1670,3.822,1671,3.822,1672,5.21,1673,3.822,1674,3.822,1675,3.822,1676,3.822,1677,3.822,1678,3.822,1679,5.928,1680,3.822,1681,3.822,1682,3.822,1683,5.928,1684,3.822,1685,3.822,1686,3.822,1687,5.928,1688,3.822,1689,3.822,1690,3.822,1691,5.928,1692,3.822,1693,3.822,1694,3.822,1695,5.21,1696,3.822,1697,3.822,1698,3.822,1699,3.822,1700,3.822,1701,5.21,1702,3.822,1703,3.822,1704,5.21,1705,3.822,1706,3.822,1707,4.739,1708,5.928,1709,5.21,1710,3.822,1711,3.822,1712,3.822,1713,3.822,1714,3.822,1715,3.822,1716,3.822,1717,3.822,1718,3.822,1719,3.822,1720,3.822,1721,3.822,1722,3.218,1723,5.21,1724,3.822,1725,3.822,1726,3.822,1727,3.822,1728,3.822,1729,3.822,1730,3.822,1731,3.822,1732,3.822,1733,3.476,1734,3.822,1735,3.822,1736,3.822,1737,3.822,1738,3.822,1739,3.822,1740,3.822,1741,3.822,1742,3.822,1743,3.822,1744,3.476,1745,5.21,1746,3.822,1747,3.822,1748,3.822,1749,3.822,1750,3.822,1751,3.822,2305,5.926,2306,4.347,2307,4.347,2308,4.347,2309,4.347]],["title/components/ItemInfoComponent.html",[0,0.707,120,1.507]],["body/components/ItemInfoComponent.html",[0,0.977,1,1.212,2,1.818,3,0.092,4,0.045,5,1.285,6,1.285,7,1.285,8,0.037,11,0.998,14,1.535,15,3.517,16,1.026,17,2.741,18,2.666,19,1.668,21,1.342,22,1.307,23,1.578,24,2.499,25,1.578,29,0.143,30,0.28,35,0.453,36,2.981,38,2.263,43,0.553,44,0.011,45,0.751,46,1.219,47,0.685,48,0.672,53,2.981,54,3.864,56,0.487,57,0.325,58,0.34,59,2.046,60,0.453,61,1.183,68,0.317,70,1.766,71,0.134,72,1.578,73,0.053,74,0.324,90,1.3,92,1.248,93,1.207,94,1.248,95,1.872,96,1.872,97,1.285,98,2.162,99,1.285,100,1.248,101,2.579,102,1.285,103,1.178,104,1.285,105,1.212,106,1.026,107,3.052,108,1.212,109,1.212,110,0.998,111,1.178,112,1.285,113,1.178,114,1.212,115,1.285,116,1.212,117,1.212,118,1.248,119,1.178,120,2.289,121,1.38,122,1.285,123,1.212,124,1.285,125,1.178,126,1.285,127,1.178,128,1.212,129,1.212,130,1.285,131,1.178,132,1.212,133,1.178,134,1.212,135,1.178,136,1.212,137,1.285,138,1.212,139,1.285,140,1.212,141,1.285,142,1.212,143,1.285,144,1.212,145,1.285,146,1.622,147,1.212,148,1.212,149,1.763,150,1.285,151,1.285,152,0.006,153,0.006,154,2.046,160,2.083,161,3.895,162,3.895,164,2.582,166,2.848,172,1.145,177,0.847,183,3.091,189,2.149,202,2.74,205,1.542,215,1.818,249,0.688,256,3.147,257,0.925,274,0.585,294,1.285,295,1.212,319,1.026,373,2.404,377,3.05,381,2.568,383,1.955,386,3.895,387,2.404,392,4.549,393,4.042,396,2.404,402,2.267,524,1.766,532,1.178,533,1.212,561,4.535,655,4.538,693,1.554,727,1.73,755,2.144,756,3.219,760,3.302,764,3.302,766,2.267,768,2.704,770,1.248,771,2.149,776,1.667,777,1.667,778,2.267,779,2.267,780,2.267,781,2.267,782,3.131,789,3.443,847,3.131,1234,2.267,1634,2.568,1637,5.154,2310,7.732,2311,7.732,2312,3.05,2313,3.693,2314,5.962,2315,5.054,2316,6.55,2317,6.963,2318,5.054,2319,5.054,2320,5.054,2321,5.054,2322,5.054,2323,5.054,2324,6.963,2325,5.054,2326,6.963,2327,5.054,2328,6.963,2329,5.962,2330,6.963,2331,6.55,2332,6.55,2333,5.759,2334,5.568,2335,6.55,2336,6.963,2337,5.962,2338,3.469,2339,3.469,2340,3.469,2341,6.55,2342,3.469,2343,4.042,2344,3.469,2345,3.469,2346,3.469,2347,3.469,2348,3.469,2349,3.469,2350,3.469,2351,3.469,2352,3.469,2353,3.469,2354,3.469,2355,3.469,2356,3.469,2357,3.469,2358,3.469,2359,4.042,2360,3.469,2361,6.55,2362,5.054,2363,3.469,2364,3.469,2365,3.469,2366,4.042,2367,3.469,2368,5.054,2369,3.469,2370,3.469,2371,3.469,2372,3.469,2373,3.469,2374,3.469,2375,3.469,2376,3.469,2377,3.469,2378,3.469,2379,3.469,2380,3.469,2381,3.469,2382,3.469,2383,3.469,2384,3.469,2385,3.469,2386,3.469,2387,3.469,2388,3.469,2389,3.05,2390,3.469,2391,3.469,2392,3.469,2393,3.469,2394,3.469,2395,3.469,2396,3.469,2397,3.469,2398,3.469,2399,3.469,2400,3.469,2401,3.469,2402,3.469,2403,3.05,2404,3.469,2405,3.469,2406,3.469,2407,3.469,2408,3.469,2409,3.469,2410,3.469,2411,3.469,2412,3.469,2413,3.469,2414,3.469,2415,5.054,2416,5.054,2417,5.054,2418,5.054,2419,5.054,2420,5.054,2421,5.054,2422,5.054,2423,5.054,2424,3.469,2425,3.469,2426,3.469,2427,3.469,2428,3.469,2429,3.469,2430,5.023,2431,5.023,2432,3.05,2433,3.05,2434,3.05,2435,3.05,2436,4.444,2437,2.774,2438,3.05,2439,2.774,2440,2.568,2441,3.05,2442,4.444,2443,3.05,2444,3.05,2445,4.444,2446,3.469,2447,3.05,2448,3.05,2449,2.774,2450,2.568,2451,3.469,2452,3.05,2453,3.469,2454,3.469,2455,5.242,2456,2.774]],["title/injectables/ItemInfoService.html",[445,0.046,1046,2.987]],["body/injectables/ItemInfoService.html",[3,0.078,4,0.066,8,0.054,29,0.209,30,0.363,35,0.588,43,0.422,44,0.011,45,0.742,46,1.033,47,0.581,48,0.658,56,0.802,57,0.413,58,0.559,60,0.745,61,1.006,68,0.329,71,0.196,73,0.078,74,0.209,86,1.909,90,0.879,121,0.831,152,0.008,153,0.008,156,0.785,177,1.16,183,2.629,205,1.882,215,1.824,229,1.782,253,1.42,256,3.154,257,1.495,262,2.738,274,0.855,278,1.277,281,1.347,282,1.311,288,1.54,319,1.499,333,1.047,346,3.141,354,1.878,445,0.069,447,0.98,460,0.831,517,4.859,524,2.294,527,2.294,529,2.271,532,1.722,533,1.772,589,2.196,655,4.548,970,2.543,980,3.154,1046,4.548,1052,2.529,1101,4.458,1434,2.271,2017,5.249,2140,3.152,2143,4.859,2150,4.859,2162,3.754,2197,6.915,2457,4.458,2458,6.564,2459,6.564,2460,6.564,2461,6.564,2462,4.859,2463,6.564,2464,6.564,2465,5.071,2466,6.564,2467,5.071,2468,6.564,2469,5.071,2470,5.071,2471,6.564,2472,5.071,2473,3.754,2474,5.071,2475,6.564,2476,5.071,2477,5.071,2478,5.071,2479,5.071,2480,5.071,2481,2.991,2482,6.564,2483,5.071,2484,5.071,2485,5.071,2486,5.071,2487,5.071,2488,5.071,2489,5.071,2490,5.071,2491,5.071,2492,5.071,2493,5.071,2494,5.071,2495,5.071,2496,4.458,2497,6.564,2498,5.071,2499,3.513,2500,5.071,2501,5.071,2502,4.458,2503,5.071,2504,5.071,2505,5.071,2506,6.237,2507,5.071,2508,6.531,2509,7.279,2510,5.249,2511,5.071,2512,5.071,2513,6.737,2514,6.737,2515,6.155,2516,5.071,2517,6.564,2518,5.071,2519,5.071,2520,5.071]],["title/interfaces/ItemType.html",[301,0.727,2521,2.43]],["body/interfaces/ItemType.html",[3,0.073,4,0.061,8,0.05,9,1.75,29,0.195,30,0.347,43,0.525,44,0.011,45,0.827,57,0.235,73,0.097,106,1.397,110,1.36,148,1.651,152,0.007,153,0.007,229,1.885,238,2.927,301,0.796,307,2.972,313,0.796,537,1.605,1160,2.046,1189,2.356,1190,2.663,1191,4.342,1193,3.274,1194,4.342,1195,3.274,1196,4.342,1197,3.274,1198,4.342,1199,3.274,1200,3.274,1201,4.872,1203,3.274,1204,3.087,1205,3.697,1206,3.274,1207,2.116,1208,4.342,1209,3.274,1210,3.274,1211,3.274,1212,5.662,1213,4.872,1214,3.274,1215,3.274,1216,3.274,1217,2.45,1218,2.927,1219,3.274,1220,2.787,1221,3.087,1222,2.551,1223,5.55,1224,3.274,1225,2.927,1226,3.274,1237,3.087,1238,3.087,1239,3.087,1240,3.087,1241,3.087,1274,3.274,1275,3.274,1276,3.274,1277,3.274,1278,3.274,1279,3.274,1280,3.274,1281,4.342,1282,3.274,1283,3.274,1284,3.274,1285,3.274,1286,3.274,1287,3.274,1288,3.274,1289,3.274,1290,3.274,1291,3.274,1292,3.274,1293,3.274,1294,3.274,1295,3.274,1297,3.274,1298,3.274,1299,3.274,1300,3.274,1301,3.274,1302,3.274,1303,3.274,1304,4.342,1305,3.274,1306,3.274,1307,3.274,1308,3.274,1309,3.274,1310,3.274,1311,3.274,1312,3.274,1313,3.274,1314,3.274,1315,3.274,1316,3.274,1317,3.274,1318,3.274,1319,3.274,1320,3.274,1321,3.274,1322,3.274,1323,3.274,1324,3.274,1325,3.274,1326,4.342,1327,3.274,1328,3.274,1329,3.274,1330,3.274,1331,3.274,1332,3.274,1333,3.274,1334,3.274,1335,3.274,1336,3.274,1337,3.274,1338,3.274,1339,3.274,1340,3.274,1341,3.274,1342,3.274,1343,3.274,1344,3.274,1345,3.274,1346,3.274,1347,3.274,1348,4.342,1349,3.274,1350,3.274,1351,3.274,1352,3.274,1353,3.274,1354,3.274,1355,3.274,1356,3.274,1357,3.274,1358,3.274,1359,3.274,1360,3.274,1361,3.274,1362,3.274,1363,3.274,1364,3.274,1365,3.274,1366,3.274,1367,3.274,1368,3.274,1369,3.274,1370,4.342,1371,3.274,1372,3.274,1373,3.274,1374,3.274,1375,3.274,1376,3.274,1377,3.274,1378,3.274,1379,3.274,1380,3.274,1381,3.274,1382,3.274,1383,3.274,1384,3.274,2521,3.963,2522,4.155,2523,4.155,2524,9.004,2525,9.004,2526,9.004,2527,9.004,2528,9.004,2529,4.725,2530,4.725,2531,4.725,2532,4.725,2533,4.725]],["title/pipes/JoinPipe.html",[502,1.423,2534,3.448]],["body/pipes/JoinPipe.html",[3,0.102,4,0.086,8,0.07,14,2.018,16,1.964,21,2.058,22,2.005,35,0.595,43,0.427,44,0.01,45,0.787,46,0.943,47,0.53,48,0.509,56,0.641,57,0.407,58,0.447,60,0.595,68,0.274,70,2.708,71,0.256,73,0.102,74,0.274,152,0.009,153,0.009,257,1.216,333,0.81,470,6.198,502,2.558,504,3.918,508,4.114,511,4.801,1021,6.815,1022,3.944,1023,7.216,1025,5.84,2534,6.198,2535,5.84,2536,6.642]],["title/interfaces/Lang.html",[205,1.115,301,0.727]],["body/interfaces/Lang.html",[0,0.982,3,0.068,4,0.057,8,0.047,14,1.343,17,1.381,18,1.343,21,1.174,22,1.55,23,1.381,25,1.381,29,0.183,30,0.332,43,0.385,44,0.011,45,0.793,47,0.478,57,0.44,61,0.877,68,0.359,69,2.596,71,0.171,72,1.381,73,0.092,74,0.183,86,1.002,103,1.501,111,2.035,114,2.896,128,2.928,152,0.007,153,0.007,155,3.536,156,0.685,157,5.27,158,2.596,159,5.27,160,2.094,161,3.916,162,3.916,163,3.713,164,2.596,165,3.536,166,2.492,167,3.887,168,3.887,169,3.107,170,3.887,171,3.063,172,1.459,173,2.608,174,3.887,175,3.273,176,3.887,177,0.628,178,4.793,179,3.273,180,3.887,181,3.273,182,3.887,183,2.292,184,3.887,185,3.887,186,3.887,187,3.887,188,2.492,189,2.739,192,3.887,193,2.05,196,3.887,197,1.419,199,3.887,201,5.979,202,2.359,203,3.887,205,1.886,208,3.887,213,3.063,214,5.524,215,2.623,216,3.887,217,2.066,218,3.887,219,2.387,220,3.887,221,2.124,222,3.887,223,3.887,224,2.492,225,3.887,226,3.887,229,1.754,230,3.887,231,3.887,232,3.887,233,3.887,234,3.887,235,3.887,236,3.887,237,3.887,238,2.739,239,3.887,240,3.887,241,3.887,242,3.887,243,3.887,244,5.741,245,3.887,247,3.536,249,0.877,250,2.989,253,1.679,256,3.503,257,1.471,259,4.437,260,5.979,261,3.056,262,3.672,265,6.411,267,3.536,274,0.745,275,1.795,276,2.492,277,1.853,278,1.114,279,2.205,280,2.739,281,1.174,282,1.143,283,2.888,284,2.739,285,1.59,286,2.292,287,1.74,288,1.343,289,2.387,290,4.793,291,3.887,292,3.536,293,3.887,294,1.638,295,1.545,296,3.887,297,1.915,298,3.887,299,3.887,300,2.608,301,0.745,302,3.887,303,3.887,304,3.887,305,3.887,306,5.27,307,1.979,308,3.887,309,3.887,310,3.887,311,4.153,312,3.887,313,1.229,314,5.27,315,6.909,316,3.887,317,5.27,318,5.979,319,2.011,320,5.641,321,3.268,322,3.887,323,5.979,324,5.27,325,6.411,326,5.27,327,1.795,328,3.063,329,4.437,330,3.273,331,1.853,332,2.124,333,0.889,334,3.887,335,3.536,336,3.887,337,3.273,338,3.887,339,3.887,340,3.273,341,5.27,342,6.411,343,4.153,344,3.887,345,3.887,346,2.739,347,2.888,348,3.713,349,3.887,350,3.887,351,3.887,352,3.887,353,3.887,354,2.221,355,3.887,356,3.887,357,3.887,358,3.536,359,3.063,360,2.387,361,3.887,362,3.887,537,1.501]],["title/injectables/ListDetailsService.html",[445,0.046,2537,3.448]],["body/injectables/ListDetailsService.html",[3,0.097,4,0.081,8,0.066,20,1.873,29,0.259,30,0.415,35,0.672,43,0.482,44,0.011,46,1.065,47,0.598,48,0.636,56,0.606,57,0.312,58,0.422,60,0.563,61,1.246,68,0.331,71,0.242,73,0.097,74,0.259,152,0.009,153,0.009,156,0.973,177,1.138,274,1.058,278,1.581,281,1.668,288,1.907,333,0.914,445,0.079,447,1.213,460,1.029,494,4.35,498,5.021,501,5.521,502,2.073,527,2.62,529,2.812,1050,2.632,1096,3.603,1217,3.887,2140,3.471,2183,3.539,2242,5.521,2250,5.521,2537,5.996,2538,7.462,2539,7.498,2540,7.498,2541,6.279,2542,6.279,2543,6.279,2544,8.017,2545,6.279,2546,6.279,2547,7.498,2548,7.498,2549,5.996,2550,7.498,2551,6.279,2552,3.131,2553,6.279]],["title/injectables/LongestWordService.html",[445,0.046,2256,3.192]],["body/injectables/LongestWordService.html",[3,0.103,4,0.086,8,0.07,29,0.275,35,0.696,44,0.01,48,0.595,56,0.642,57,0.331,58,0.448,60,0.597,68,0.275,71,0.257,73,0.103,74,0.275,98,2.199,152,0.009,153,0.009,156,1.032,197,2.638,333,0.947,445,0.082,447,1.287,460,1.092,2082,4.931,2256,5.747,2257,5.856,2554,7.225,2555,5.856,2556,7.764,2557,6.661,2558,7.764,2559,6.661,2560,6.661,2561,6.661,2562,6.661,2563,7.764,2564,6.661,2565,6.661,2566,6.661]],["title/components/MainDisplayComponent.html",[0,0.707,123,1.507]],["body/components/MainDisplayComponent.html",[0,1.018,1,1.304,2,1.916,3,0.058,4,0.048,5,1.382,6,1.382,7,1.382,8,0.039,11,1.074,16,1.103,17,2.758,18,2.683,19,1.758,20,1.371,21,1.415,22,1.378,23,1.663,24,2.604,25,1.663,27,2.163,29,0.154,30,0.295,35,0.478,38,2.385,43,0.399,44,0.011,45,0.496,46,0.53,47,0.298,48,0.571,56,0.36,57,0.308,58,0.251,60,0.478,61,1.057,68,0.317,69,1.616,70,2.367,71,0.144,72,1.165,73,0.058,74,0.154,90,0.923,92,1.342,93,1.273,94,1.342,95,1.973,96,1.973,97,1.382,98,2.236,99,1.382,100,1.342,101,2.654,102,1.382,103,1.267,104,1.382,105,1.304,106,1.103,107,3.092,108,1.304,109,1.304,110,1.074,111,1.267,112,1.382,113,1.267,114,1.304,115,1.382,116,1.304,117,1.304,118,1.342,119,1.267,120,1.304,121,1.257,122,1.382,123,2.367,124,2.841,125,1.267,126,1.382,127,1.267,128,1.304,129,1.304,130,1.382,131,1.267,132,1.304,133,1.267,134,1.304,135,1.267,136,1.304,137,1.382,138,1.304,139,1.382,140,1.304,141,1.382,142,1.304,143,1.382,144,1.304,145,1.382,146,1.71,147,1.304,148,1.304,149,1.837,150,1.382,151,1.382,152,0.006,153,0.006,160,2.171,164,2.69,165,3.664,229,1.418,249,0.741,294,1.382,295,1.304,300,2.201,364,3.898,480,3.025,544,3.996,558,3.512,559,4.197,560,4.539,561,3.996,680,3.512,754,1.793,755,2.234,756,3.354,757,2.656,758,2.656,759,4.681,760,3.48,761,4.426,763,2.762,764,3.48,766,2.438,767,2.984,768,1.809,770,1.342,771,2.312,772,2.438,773,1.934,774,2.438,775,3.48,776,1.793,777,1.793,778,2.438,779,2.438,780,2.438,781,2.438,782,4.197,783,5.122,784,2.75,785,3.48,786,4.426,787,4.426,788,4.426,789,3.765,790,4.75,791,4.426,792,4.426,793,2.438,794,3.48,795,3.48,796,4.426,797,3.48,798,3.48,799,3.48,800,3.3,801,3.48,802,3.3,803,3.48,804,2.438,805,2.438,806,3.48,807,3.48,808,2.438,809,2.438,810,2.438,811,2.438,812,1.916,813,3.48,814,2.438,815,3.48,816,5.79,817,4.857,818,4.867,819,3.48,820,4.426,821,2.438,822,4.867,823,5.352,824,2.438,825,3.48,826,3.48,827,4.058,828,2.438,829,3.002,830,2.438,831,2.438,832,3.3,833,3.48,834,3.48,835,2.438,836,4.058,837,2.438,838,2.656,839,4.867,840,3.48,841,3.48,842,4.867,843,2.096,844,3.48,845,2.438,846,2.438,847,3.3,848,2.438,849,2.438,850,2.438,851,2.438,852,2.438,853,2.438,854,2.438,855,2.438,856,2.438,857,2.438,858,2.312,859,2.438,860,2.438,861,4.058,862,2.438,863,2.438,864,2.438,1707,5.729,1755,2.984,1756,2.438,2567,6.742,2568,6.742,2569,4.968,2570,7.165,2571,2.312,2572,2.312,2573,4.684]],["title/components/MapComponent.html",[0,0.707,125,1.464]],["body/components/MapComponent.html",[0,1.201,1,1.798,2,2.383,3,0.079,4,0.067,5,1.906,6,1.906,7,1.906,8,0.054,11,1.481,14,2.013,16,1.521,17,2.824,18,2.747,19,2.187,21,1.76,22,1.714,25,2.069,29,0.212,30,0.367,35,0.594,43,0.527,44,0.011,45,0.745,46,0.941,47,0.529,48,0.659,57,0.329,60,0.594,61,1.536,68,0.32,69,3.174,70,1.798,71,0.198,73,0.079,74,0.212,92,1.851,93,1.583,94,1.851,95,2.455,96,2.455,97,1.906,98,2.555,99,1.906,100,1.851,101,2.967,102,1.906,103,1.747,104,1.906,105,1.798,106,1.521,107,3.245,108,1.798,109,1.798,110,1.481,111,1.747,112,1.906,113,1.747,114,1.798,115,1.906,116,1.798,117,1.798,118,1.851,119,1.747,120,1.798,121,0.843,122,1.906,123,1.798,124,1.906,125,2.628,126,1.906,127,1.747,128,1.798,129,1.798,130,1.906,131,1.747,132,1.798,133,1.747,134,1.798,135,1.747,136,1.798,137,1.906,138,1.798,139,1.906,140,1.798,141,1.906,142,1.798,143,1.906,144,1.798,145,1.906,146,2.127,147,1.798,148,1.798,149,1.521,150,1.906,151,1.906,152,0.008,153,0.008,154,3.035,166,3.734,177,1.164,193,3.588,249,1.021,274,0.867,277,2.156,278,1.949,281,1.366,294,1.906,313,0.867,396,4.591,397,4.591,800,4.54,802,4.795,1182,3.551,2574,4.524,2575,7.329,2576,6.626,2577,4.323,2578,6.444,2579,6.444,2580,7.329,2581,7.329,2582,6.805,2583,4.362,2584,5.145,2585,5.145,2586,3.908,2587,5.145,2588,5.145,2589,5.145,2590,5.145,2591,5.145,2592,5.145,2593,6.626,2594,5.145,2595,5.145,2596,2.472,2597,5.145,2598,5.145,2599,5.299,2600,5.145,2601,5.145,2602,3.361,2603,4.114,2604,5.145,2605,5.145,2606,5.145,2607,5.145,2608,5.145,2609,6.626,2610,5.145,2611,5.145,2612,5.145,2613,4.524,2614,4.524,2615,5.145,2616,5.145,2617,4.524,2618,4.524,2619,4.524,2620,5.145,2621,5.145,2622,4.524,2623,4.524,2624,5.145,2625,4.524,2626,5.145]],["title/injectables/MapService.html",[445,0.046,2627,3.448]],["body/injectables/MapService.html",[3,0.102,4,0.085,8,0.07,29,0.272,35,0.691,44,0.01,48,0.591,56,0.635,57,0.327,58,0.443,60,0.59,68,0.318,71,0.254,73,0.102,74,0.272,152,0.009,153,0.009,156,1.02,197,2.625,249,1.307,278,1.659,313,1.11,333,0.803,445,0.081,447,1.272,460,1.079,2578,5.79,2579,6.781,2599,6.167,2613,6.781,2614,7.191,2617,5.79,2618,5.79,2619,5.79,2622,5.79,2623,5.79,2627,6.167,2628,5.79,2629,7.712,2630,6.586,2631,7.712,2632,6.586,2633,6.586,2634,6.586,2635,6.586,2636,6.586,2637,6.586,2638,6.586,2639,6.586]],["title/injectables/MutatorService.html",[445,0.046,2640,3.448]],["body/injectables/MutatorService.html",[3,0.089,4,0.075,8,0.061,9,3.17,20,1.573,29,0.238,30,0.395,35,0.639,44,0.011,46,0.82,47,0.461,48,0.647,56,0.779,57,0.419,58,0.543,60,0.724,68,0.319,71,0.223,73,0.089,74,0.238,86,1.309,90,1.001,93,1.38,152,0.008,153,0.008,156,0.895,177,1.098,197,2.482,229,1.209,274,0.974,319,2.286,333,0.869,399,4.002,445,0.075,447,1.116,455,2.414,460,0.947,910,2.587,970,2.019,978,2.781,1022,2.776,1184,3.714,1188,2.776,1227,3.408,1268,4.373,1394,2.776,2521,4.549,2640,5.7,2641,5.079,2642,7.128,2643,7.128,2644,7.731,2645,5.777,2646,5.777,2647,5.777,2648,7.128,2649,5.777,2650,7.128,2651,5.777,2652,7.128,2653,5.777,2654,4.938,2655,5.777,2656,4.002,2657,3.774,2658,7.128,2659,7.128,2660,5.777,2661,4.62,2662,5.777,2663,3.579,2664,5.356,2665,5.777,2666,5.777,2667,5.777,2668,5.777,2669,5.777,2670,5.777,2671,7.128,2672,7.128,2673,7.128,2674,5.777,2675,5.777,2676,7.128,2677,5.777,2678,5.777,2679,5.777,2680,7.731,2681,5.777,2682,5.777,2683,5.777,2684,5.777,2685,5.777]],["title/injectables/ParisDatabaseService.html",[445,0.046,2686,3.192]],["body/injectables/ParisDatabaseService.html",[3,0.096,4,0.081,8,0.066,29,0.256,30,0.412,35,0.667,43,0.478,44,0.011,45,0.742,46,1.133,47,0.636,48,0.648,56,0.599,57,0.308,58,0.417,60,0.556,61,1.232,68,0.307,71,0.239,73,0.096,74,0.256,152,0.009,153,0.009,156,0.961,177,1.22,197,2.561,249,1.478,253,2.086,282,1.605,313,1.046,445,0.079,447,1.199,455,2.712,460,1.017,1434,2.779,2139,4.963,2151,5.457,2552,3.095,2686,5.512,2687,6.869,2688,7.552,2689,8.272,2690,7.446,2691,6.207,2692,7.446,2693,6.207,2694,7.446,2695,6.207,2696,7.446,2697,6.207,2698,7.446,2699,7.446,2700,7.446,2701,7.446,2702,7.446,2703,7.446,2704,6.207,2705,6.207,2706,6.207,2707,4.963,2708,6.207,2709,6.207,2710,6.207,2711,6.207,2712,6.207,2713,6.207,2714,6.207]],["title/components/ParisSearchComponent.html",[0,0.707,127,1.464]],["body/components/ParisSearchComponent.html",[0,0.957,1,1.169,2,1.771,3,0.052,4,0.043,5,1.24,6,1.24,7,1.24,8,0.035,11,2.273,14,1.496,16,0.989,17,2.732,18,2.658,19,1.625,20,0.739,21,1.307,22,1.775,23,1.537,24,2.447,25,1.537,29,0.203,30,0.273,35,0.441,43,0.507,44,0.011,45,0.667,46,1.181,47,0.664,48,0.665,56,0.621,57,0.356,58,0.433,60,0.643,61,1.362,68,0.35,69,2.529,71,0.129,72,1.045,73,0.052,74,0.138,90,0.853,92,1.204,93,1.176,94,1.204,95,1.824,96,1.824,97,1.24,98,2.125,99,1.24,100,1.204,101,2.542,102,1.24,103,1.136,104,1.24,105,1.169,106,0.989,107,3.032,108,1.169,109,1.169,110,0.963,111,1.136,112,1.24,113,1.136,114,1.169,115,1.24,116,1.169,117,1.72,118,1.204,119,1.136,120,1.169,121,1.313,122,1.24,123,1.169,124,1.24,125,1.136,126,1.24,127,2.186,128,2.859,129,1.169,130,1.24,131,1.136,132,1.169,133,1.136,134,1.169,135,1.136,136,1.169,137,1.24,138,1.169,139,1.24,140,1.169,141,1.24,142,1.169,143,1.24,144,1.169,145,1.24,146,1.58,147,1.169,148,1.169,149,1.904,150,1.24,151,1.24,152,0.006,153,0.006,154,1.974,158,2.529,160,2.04,163,3.617,164,1.449,166,2.774,169,3.72,171,3.411,172,2.449,173,3.798,175,4.323,177,1.23,178,5.149,179,4.323,181,5.312,183,1.735,193,2.985,202,1.317,205,1.51,213,2.319,215,1.204,217,1.017,219,1.807,221,1.608,247,3.937,249,1.424,250,2.912,253,1.804,256,1.608,257,1.178,261,2.699,274,0.564,275,1.359,276,1.886,277,1.403,278,1.471,279,3.211,280,3.05,281,0.889,282,0.866,285,1.204,286,1.735,287,1.317,288,1.017,289,1.807,294,2.163,295,1.169,297,1.449,307,1.105,319,1.726,320,2.477,343,3.411,360,2.658,363,2.073,364,2.985,370,4.766,373,2.319,374,3.937,375,2.676,381,2.477,383,2.774,386,3.815,387,2.319,388,2.676,392,3.815,394,2.943,396,3.411,397,2.319,398,2.676,399,2.319,400,4.328,402,3.216,416,6.964,455,1.823,477,1.608,480,1.999,502,1.105,524,1.72,527,1.72,532,1.136,533,1.169,755,2.1,768,2.33,770,1.204,789,2.615,790,2.073,891,2.447,892,2.063,970,2.798,978,2.468,1022,1.608,1050,1.403,1056,2.658,1067,2.552,1096,2.365,1182,2.132,1394,2.806,1434,2.615,1467,1.735,1539,3.05,1924,2.132,1953,2.676,1954,2.477,1955,4.323,1956,2.477,1965,3.153,1966,2.615,1967,2.806,1968,1.608,1969,2.707,1970,1.552,1971,2.205,2129,3.05,2130,2.676,2140,2.529,2193,2.676,2440,3.644,2450,4.323,2481,1.974,2552,1.669,2569,2.676,2577,3.445,2583,3.291,2586,2.904,2596,1.608,2625,4.328,2686,2.477,2687,6.964,2715,2.477,2716,3.815,2717,3.216,2718,2.912,2719,5.661,2720,2.912,2721,6.309,2722,5.134,2723,6.862,2724,4.328,2725,4.923,2726,4.923,2727,2.943,2728,3.347,2729,3.05,2730,3.347,2731,3.347,2732,3.347,2733,4.923,2734,3.347,2735,3.347,2736,3.347,2737,2.455,2738,3.347,2739,3.347,2740,3.347,2741,4.923,2742,3.347,2743,5.134,2744,3.347,2745,2.774,2746,3.347,2747,3.347,2748,3.347,2749,3.347,2750,3.347,2751,3.347,2752,3.347,2753,3.347,2754,3.347,2755,3.347,2756,3.347,2757,3.347,2758,3.937,2759,4.923,2760,4.923,2761,4.923,2762,3.347,2763,3.347,2764,3.347,2765,2.943,2766,2.676,2767,2.676,2768,2.676,2769,2.943,2770,2.943,2771,3.347,2772,2.943,2773,3.347,2774,2.319,2775,3.347,2776,3.347,2777,3.347,2778,6.309,2779,5.661,2780,2.943,2781,2.943,2782,2.943,2783,2.943,2784,2.943,2785,2.943,2786,2.943,2787,2.943,2788,2.943,2789,2.943,2790,3.347,2791,3.347,2792,2.943,2793,2.943,2794,2.073,2795,2.073,2796,2.943,2797,3.05,2798,3.05,2799,2.073,2800,2.073,2801,2.073,2802,2.676,2803,2.073,2804,2.073,2805,3.815,2806,2.073,2807,2.186,2808,5.134,2809,3.216,2810,2.943,2811,4.328,2812,2.943,2813,2.943,2814,2.186,2815,2.319,2816,2.319,2817,2.073,2818,2.943,2819,4.207,2820,4.923,2821,2.943,2822,2.943,2823,4.923,2824,2.943,2825,3.347,2826,3.347,2827,3.347,2828,2.319,2829,4.328,2830,3.347,2831,2.943,2832,3.347,2833,4.328,2834,3.347,2835,3.347,2836,2.943,2837,2.943,2838,2.943,2839,2.943,2840,2.943,2841,1.886,2842,2.943]],["title/components/ProjectSelectComponent.html",[0,0.707,129,1.507]],["body/components/ProjectSelectComponent.html",[0,1.055,1,1.391,2,2.005,3,0.061,4,0.052,5,1.474,6,1.474,7,1.474,8,0.042,9,3.249,11,2.361,14,1.694,16,1.177,17,2.773,18,2.698,19,1.84,20,1.42,21,1.481,22,1.803,23,1.741,24,2.697,25,1.741,27,2.263,29,0.164,30,0.309,35,0.5,38,2.496,43,0.52,44,0.011,45,0.37,46,1.132,47,0.636,48,0.67,56,0.621,57,0.364,58,0.433,60,0.715,61,1.646,68,0.351,69,2.786,70,2.248,71,0.153,72,1.243,73,0.061,74,0.164,92,2.867,93,1.332,94,1.431,95,2.065,96,2.065,97,1.474,98,2.301,99,1.474,100,1.431,101,2.719,102,1.474,103,1.351,104,1.474,105,1.391,106,1.177,107,3.125,108,1.391,109,1.391,110,1.145,111,1.351,112,1.474,113,1.351,114,1.391,115,1.474,116,1.391,117,1.391,118,1.431,119,1.351,120,1.391,121,0.652,122,1.474,123,1.391,124,1.474,125,1.351,126,1.474,127,1.351,128,1.391,129,2.436,130,1.474,131,1.351,132,1.391,133,1.351,134,1.391,135,1.351,136,1.391,137,1.474,138,1.391,139,1.474,140,1.391,141,1.474,142,1.391,143,1.474,144,1.391,145,1.474,146,1.79,147,1.391,148,1.391,149,1.177,150,1.474,151,1.474,152,0.006,153,0.006,158,2.786,160,2.248,169,4.199,177,1.189,193,3.232,195,4.127,205,1.664,249,1.607,250,3.895,274,0.671,275,1.616,279,3.209,281,1.057,282,1.029,285,1.431,286,2.063,287,1.566,295,1.391,297,1.723,319,1.177,333,0.785,380,1.243,383,2.243,455,2.439,524,1.948,532,1.351,533,1.391,755,2.314,770,1.431,879,1.668,891,2.697,892,2.336,1157,2.465,1188,2.679,1207,2.496,1944,3.986,1945,3.209,1946,2.465,1965,3.474,1966,2.881,1969,2.983,1970,1.845,1971,1.782,1996,2.78,2055,4.319,2122,3.499,2583,3.929,2602,2.6,2657,5.292,2663,2.465,2843,7.712,2844,7.712,2845,3.499,2846,4.204,2847,4.458,2848,5.412,2849,4.458,2850,5.575,2851,5.575,2852,6.435,2853,4.458,2854,6.435,2855,4.555,2856,4.458,2857,6.435,2858,6.435,2859,6.972,2860,5.575,2861,5.575,2862,6.972,2863,6.435,2864,5.575,2865,4.458,2866,5.575,2867,3.98,2868,4.83,2869,3.98,2870,3.98,2871,3.98,2872,3.98,2873,3.98,2874,5.575,2875,3.98,2876,5.575,2877,4.83,2878,3.98,2879,3.98,2880,3.98,2881,4.204,2882,3.98,2883,4.204,2884,3.862,2885,3.98,2886,4.204,2887,4.795,2888,3.862,2889,3.98,2890,3.98,2891,3.862,2892,3.862,2893,3.98,2894,3.98,2895,3.642,2896,3.862,2897,3.98,2898,3.98,2899,3.98,2900,3.98,2901,3.98,2902,3.862,2903,2.6,2904,2.6,2905,3.862,2906,2.757,2907,3.98,2908,5.575,2909,3.98,2910,3.499,2911,5.575,2912,3.98,2913,2.757,2914,3.98,2915,3.98,2916,3.98,2917,3.98,2918,3.98,2919,2.757,2920,3.98,2921,3.98,2922,3.98,2923,3.98,2924,3.98,2925,2.757,2926,5.575]],["title/injectables/ProjectsListService.html",[445,0.046,2927,3.448]],["body/injectables/ProjectsListService.html",[3,0.089,4,0.075,8,0.061,29,0.238,30,0.394,35,0.638,43,0.457,44,0.011,45,0.796,46,1.097,47,0.616,48,0.647,56,0.745,57,0.383,58,0.52,60,0.692,68,0.342,71,0.222,73,0.089,74,0.238,86,1.307,89,2.497,90,1.234,152,0.008,153,0.008,156,0.893,177,1.199,205,1.998,229,1.49,253,1.616,257,1.414,262,4.356,274,0.972,278,1.453,281,1.532,282,1.492,288,1.752,313,0.972,319,1.705,333,1.011,380,1.801,445,0.075,447,1.114,460,0.945,515,3.573,517,5.718,521,4.612,524,2.488,525,4.612,527,2.488,529,2.583,532,1.958,533,2.015,970,2.488,1050,2.417,1052,2.876,1056,3.845,2140,3.345,2143,5.271,2150,5.271,2162,4.269,2174,4.933,2175,3.996,2176,4.933,2177,3.996,2179,4.269,2180,3.996,2462,5.271,2473,5.271,2506,4.269,2508,5.694,2510,5.694,2513,4.612,2514,4.612,2515,4.612,2549,5.694,2927,5.694,2928,7.522,2929,7.121,2930,5.767,2931,5.767,2932,7.121,2933,5.767,2934,4.269,2935,6.261,2936,6.261,2937,5.071,2938,5.071,2939,5.071,2940,5.071,2941,5.767,2942,5.071]],["title/injectables/PropertiesListService.html",[445,0.046,2943,2.671]],["body/injectables/PropertiesListService.html",[3,0.073,4,0.061,8,0.05,11,1.362,29,0.195,30,0.347,35,0.562,43,0.515,44,0.011,45,0.772,46,0.999,47,0.652,48,0.66,56,0.789,57,0.406,58,0.55,60,0.744,68,0.322,71,0.182,73,0.073,74,0.195,86,1.904,89,2.716,90,1.298,152,0.007,153,0.007,156,0.733,177,1.138,195,4.644,205,1.82,215,1.702,217,2.138,219,2.555,221,2.274,229,1.677,249,0.939,253,1.326,257,1.371,262,4.21,274,0.797,278,1.192,281,1.257,282,1.224,288,1.438,307,2.071,313,1.263,319,1.399,331,1.983,333,1.056,380,1.959,445,0.066,447,0.914,455,1.959,460,0.776,515,2.931,517,5.209,521,3.784,524,2.192,525,3.784,527,2.192,529,2.119,532,1.607,533,1.653,541,3.278,548,3.278,682,2.36,692,3.091,970,2.459,1050,1.983,1052,2.36,1056,4.327,1096,3.014,2082,3.503,2140,3.047,2143,4.644,2150,4.644,2162,3.503,2174,4.346,2175,3.278,2176,4.346,2177,3.278,2179,3.503,2180,3.278,2333,5.516,2359,3.784,2462,4.644,2473,4.644,2506,5.547,2508,6.538,2510,5.628,2513,5.993,2514,5.628,2515,5.993,2549,5.017,2552,2.36,2934,3.503,2935,5.516,2936,5.516,2937,4.16,2938,4.16,2939,4.16,2940,5.516,2942,4.16,2943,3.886,2944,7.615,2945,6.273,2946,7.494,2947,6.273,2948,6.273,2949,6.273,2950,6.273,2951,7.038,2952,6.273,2953,4.732,2954,4.732,2955,4.732,2956,4.732,2957,6.273,2958,4.732,2959,6.273,2960,4.732,2961,6.273,2962,7.038,2963,4.16,2964,4.732,2965,4.732,2966,4.732,2967,4.732,2968,4.732,2969,4.732,2970,4.732,2971,4.732,2972,4.732,2973,3.091,2974,6.273,2975,4.732,2976,4.732,2977,4.732,2978,4.732,2979,4.732,2980,4.732,2981,4.732,2982,4.732,2983,4.732,2984,4.732,2985,4.16,2986,4.732,2987,4.732,2988,3.503,2989,4.732,2990,4.732,2991,4.16,2992,4.732,2993,4.16,2994,4.732,2995,4.732,2996,4.732,2997,4.732,2998,4.732,2999,4.732,3000,4.732,3001,4.16,3002,4.732,3003,4.732]],["title/injectables/PropertyDetailsService.html",[445,0.046,1091,3.192]],["body/injectables/PropertyDetailsService.html",[3,0.086,4,0.072,8,0.059,29,0.23,30,0.47,35,0.626,44,0.011,45,0.519,47,0.446,48,0.641,56,0.792,57,0.407,58,0.552,60,0.736,68,0.23,71,0.215,73,0.086,74,0.23,90,1.209,93,1.334,121,1.144,152,0.008,153,0.008,156,0.865,173,4.117,197,2.444,215,2.008,217,1.696,229,1.594,257,1.555,307,2.633,311,3.868,313,0.941,327,2.267,332,3.353,333,0.681,354,2.068,445,0.074,447,1.079,460,0.915,494,3.868,496,4.909,498,4.465,589,3.022,590,3.147,594,3.658,693,3.409,741,4.909,784,2.267,812,2.51,875,3.125,876,3.015,909,2.588,911,3.459,960,3.147,962,3.147,1067,4.588,1071,7.049,1091,5.166,1126,4.909,1762,4.559,1764,4.465,1768,4.909,1769,4.909,1786,4.559,2218,4.559,2219,4.909,2220,6.136,2221,5.688,2222,6.565,2261,4.909,2262,3.868,2295,5.166,2304,4.909,2573,4.909,3004,7.47,3005,6.979,3006,6.979,3007,6.979,3008,6.979,3009,6.979,3010,6.979,3011,5.584,3012,5.584,3013,5.584,3014,6.136,3015,5.584,3016,4.465,3017,5.584,3018,5.584,3019,5.584,3020,5.584,3021,5.584,3022,4.909,3023,5.584,3024,5.584,3025,5.584,3026,5.584,3027,6.979,3028,5.584,3029,7.613,3030,5.584,3031,5.584,3032,5.584,3033,8.21,3034,5.584,3035,5.584,3036,5.584,3037,5.584,3038,5.584,3039,5.584,3040,5.584,3041,5.584]],["title/interfaces/Qualifier.html",[301,0.727,1083,2.072]],["body/interfaces/Qualifier.html",[0,0.914,3,0.029,4,0.024,8,0.02,9,0.687,11,2.422,14,0.564,17,0.579,18,0.564,19,1.533,20,0.683,21,0.493,22,2.165,23,0.579,24,1.297,25,0.579,27,0.753,29,0.213,30,0.286,31,4.204,43,0.256,44,0.011,45,0.692,47,0.662,57,0.092,58,0.347,61,1.317,68,0.327,69,1.34,70,1.803,71,0.072,72,0.579,73,0.061,74,0.077,86,1.724,87,0.73,89,1.723,90,1.181,93,1.413,98,1.021,121,0.304,146,0.596,149,1.177,152,0.004,153,0.004,158,1.34,160,1.081,169,4.079,172,0.613,177,1.1,193,0.86,202,3.049,205,0.8,217,1.568,229,0.648,249,1.682,250,4.174,253,1.446,257,1.276,274,0.313,275,0.753,276,1.046,277,0.778,278,0.467,279,3.399,281,0.493,282,0.48,285,0.667,286,0.962,287,0.73,288,0.564,289,1.002,295,0.648,297,0.804,301,0.521,307,2.423,313,1.295,319,0.915,321,1.912,327,2.515,331,2.336,333,1.055,346,2.465,347,2.6,348,3.197,354,1.912,360,3.345,380,2.323,383,1.046,455,0.966,477,0.892,480,0.753,491,0.613,502,1.021,524,0.648,527,0.648,532,0.63,533,0.648,537,0.63,550,4.021,558,0.962,584,1.845,589,0.804,650,0.86,682,1.543,693,1.782,724,1.912,727,0.925,755,1.113,768,2.786,770,0.667,773,1.604,784,1.256,812,0.667,872,2.144,875,1.386,879,1.297,883,2.977,886,1.744,891,0.778,892,0.778,909,0.86,910,2.311,970,2.484,972,2.243,978,1.856,991,1.095,994,0.925,1022,1.487,1050,0.778,1052,0.925,1054,1.286,1056,2.507,1067,0.962,1083,2.231,1096,2.48,1157,1.15,1160,1.723,1170,1.046,1182,3.131,1183,1.095,1184,3.092,1185,1.212,1186,1.825,1188,3.19,1189,3.545,1217,1.604,1228,3.655,1229,1.825,1230,1.825,1231,1.825,1251,1.744,1258,1.744,1259,1.046,1260,0.892,1261,1.095,1262,1.095,1263,1.095,1264,1.825,1265,1.095,1266,1.095,1268,2.574,1394,0.892,1397,1.374,1402,2.021,1434,2.08,1443,1.374,1467,0.962,1477,1.212,1722,1.374,1783,2.474,1786,1.212,1924,0.804,1944,1.917,1945,1.543,1946,1.15,1961,1.212,1965,1.671,1966,1.386,1967,1.487,1968,0.892,1969,1.434,1970,0.86,1971,0.831,1973,2.021,1974,1.212,1975,1.212,1996,2.78,2013,4.555,2054,1.374,2055,1.15,2140,0.804,2218,2.021,2224,1.286,2229,1.484,2293,2.144,2295,2.946,2456,3.182,2499,1.286,2521,3.626,2552,0.925,2577,1.095,2586,1.095,2596,0.892,2602,4.048,2654,2.144,2656,1.286,2657,4.97,2661,1.484,2663,3.663,2664,2.144,2707,1.484,2716,1.212,2717,1.212,2718,1.543,2720,1.543,2729,1.15,2737,1.543,2745,1.744,2774,2.144,2794,1.15,2795,2.465,2797,1.917,2798,1.917,2799,1.917,2800,1.15,2801,1.15,2803,1.917,2804,1.917,2805,3.034,2806,1.917,2807,1.212,2809,1.212,2814,2.021,2817,1.15,2828,2.144,2846,1.212,2847,1.286,2848,4.723,2849,2.144,2853,1.286,2855,1.212,2856,1.286,2865,1.286,2868,5.215,2877,4.458,2881,2.6,2883,4.204,2884,4.292,2886,1.212,2887,4.724,2888,1.286,2891,1.286,2892,2.144,2895,3.863,2896,1.286,2902,5.01,2903,4.453,2904,1.212,2905,1.286,2906,2.144,2913,4.292,2919,4.097,2925,1.286,2943,1.15,2973,2.021,2988,1.374,3016,3.182,3042,2.144,3043,1.484,3044,3.862,3045,1.374,3046,2.144,3047,2.29,3048,1.374,3049,2.946,3050,1.374,3051,1.374,3052,1.374,3053,1.374,3054,1.374,3055,1.15,3056,1.374,3057,1.374,3058,1.15,3059,1.374,3060,1.374,3061,1.374,3062,1.374,3063,1.374,3064,1.374,3065,1.374,3066,3.438,3067,1.374,3068,1.632,3069,2.721,3070,1.632,3071,1.632,3072,1.632,3073,1.632,3074,4.902,3075,1.632,3076,2.721,3077,2.29,3078,1.632,3079,3.499,3080,1.632,3081,1.374,3082,1.374,3083,1.632,3084,1.632,3085,1.632,3086,1.374,3087,2.29,3088,2.29,3089,2.29,3090,2.29,3091,1.374,3092,2.29,3093,2.29,3094,2.29,3095,2.29,3096,1.632,3097,1.374,3098,1.374,3099,1.374,3100,1.374,3101,1.374,3102,1.374,3103,1.374,3104,1.374,3105,1.374,3106,2.946,3107,1.374,3108,1.374,3109,1.374,3110,1.374,3111,1.374,3112,1.374,3113,1.374,3114,1.374,3115,1.374,3116,1.374,3117,1.374,3118,1.374,3119,1.374,3120,1.632,3121,1.374,3122,1.632,3123,1.374,3124,1.632,3125,1.632,3126,4.127,3127,1.374,3128,1.374,3129,1.374,3130,1.374,3131,1.374,3132,1.374,3133,1.374,3134,1.374,3135,1.374,3136,3.438,3137,1.374,3138,1.374,3139,1.374,3140,1.374,3141,1.286,3142,1.286,3143,1.374,3144,2.757,3145,1.286,3146,1.286,3147,1.374,3148,1.374,3149,1.374,3150,1.374,3151,1.374,3152,1.374,3153,1.374,3154,1.374,3155,1.374,3156,1.374,3157,1.632,3158,1.374,3159,3.82,3160,1.374,3161,1.374,3162,1.374,3163,1.374,3164,1.374,3165,1.374,3166,1.374,3167,1.374,3168,1.374,3169,1.374,3170,1.374,3171,1.632,3172,1.632,3173,1.632,3174,1.374,3175,1.374,3176,2.946,3177,1.374,3178,1.374,3179,3.499,3180,4.083,3181,3.499,3182,2.721,3183,4.083,3184,1.632,3185,2.721,3186,1.632,3187,1.632,3188,2.721,3189,1.632,3190,1.632,3191,1.632,3192,2.721,3193,1.374,3194,1.374,3195,3.499,3196,2.721,3197,1.632,3198,1.632,3199,1.632,3200,1.632,3201,1.632,3202,2.721,3203,1.632,3204,1.374,3205,1.374,3206,1.374,3207,1.374,3208,2.946,3209,1.374,3210,3.82,3211,3.82,3212,1.374,3213,4.763,3214,1.374,3215,1.374,3216,1.374,3217,2.946,3218,2.29,3219,2.29,3220,3.499,3221,3.82,3222,3.438,3223,3.438,3224,2.946,3225,1.374,3226,1.374,3227,1.632,3228,1.374,3229,2.29,3230,1.374,3231,3.438,3232,2.29,3233,2.29,3234,4.127,3235,3.438,3236,2.946,3237,2.946,3238,1.374,3239,1.374,3240,1.374,3241,3.438,3242,1.374,3243,1.374,3244,1.374,3245,1.374,3246,4.377,3247,2.29,3248,1.374,3249,3.576,3250,1.374,3251,1.374,3252,2.29,3253,2.29,3254,1.374,3255,1.374,3256,1.374,3257,2.29,3258,2.29,3259,2.946,3260,1.374,3261,1.632,3262,1.484,3263,1.632,3264,1.632,3265,1.632,3266,1.632,3267,1.374,3268,1.374,3269,2.721,3270,1.632,3271,1.632,3272,1.632,3273,1.632,3274,1.632,3275,1.632,3276,1.632,3277,1.484,3278,4.083,3279,4.083,3280,3.82,3281,3.499,3282,2.721,3283,1.632,3284,2.721,3285,2.721,3286,1.632,3287,1.632,3288,1.632,3289,1.632,3290,1.632,3291,2.721,3292,1.632,3293,1.632,3294,1.632,3295,1.632,3296,1.632,3297,1.632,3298,2.721,3299,1.632,3300,1.632,3301,1.632,3302,1.632,3303,1.632,3304,1.632,3305,1.632,3306,1.632,3307,1.632,3308,1.632,3309,1.374,3310,1.374,3311,1.374,3312,1.374,3313,1.374,3314,1.632,3315,2.721,3316,1.632,3317,3.82,3318,1.632,3319,1.632,3320,1.632,3321,1.632,3322,1.632,3323,1.374,3324,2.29,3325,1.632,3326,1.632,3327,1.632,3328,1.632,3329,1.374,3330,1.632,3331,1.374,3332,1.632,3333,2.29,3334,1.632,3335,1.374,3336,1.374,3337,1.374,3338,1.374,3339,2.29,3340,2.29,3341,1.374,3342,1.632,3343,2.721,3344,2.474,3345,1.632,3346,1.632,3347,1.632,3348,1.632,3349,1.632,3350,1.632,3351,2.946,3352,2.721,3353,1.632,3354,1.632,3355,1.374,3356,1.374,3357,1.632,3358,1.374,3359,1.374,3360,1.374,3361,1.374,3362,2.721,3363,2.946,3364,1.374,3365,1.632,3366,1.374,3367,1.374,3368,1.632,3369,1.632,3370,1.632,3371,1.374,3372,1.632,3373,1.632,3374,1.632,3375,1.374,3376,1.374,3377,1.374,3378,1.374,3379,1.374,3380,1.374,3381,1.374,3382,1.374,3383,1.632,3384,2.721,3385,2.721,3386,1.632,3387,3.499,3388,4.083,3389,4.083,3390,3.499,3391,2.721,3392,2.721,3393,1.632,3394,1.374,3395,3.499,3396,2.721,3397,1.632,3398,3.499,3399,1.632,3400,1.632,3401,1.632,3402,1.632,3403,1.632,3404,2.721,3405,2.946,3406,2.721,3407,1.632,3408,1.632,3409,1.632,3410,2.721,3411,2.721,3412,1.632,3413,1.632,3414,1.632,3415,1.632,3416,1.632,3417,1.632,3418,1.632,3419,1.632,3420,1.632,3421,1.632,3422,1.374,3423,1.374,3424,1.632,3425,1.632,3426,2.721,3427,1.632,3428,1.632,3429,1.632,3430,1.632,3431,1.632,3432,1.374,3433,1.632,3434,1.374,3435,1.632,3436,1.632,3437,1.632,3438,1.632,3439,1.632,3440,2.721,3441,1.632,3442,2.721,3443,1.632,3444,2.721,3445,1.632,3446,1.632,3447,1.632,3448,1.632,3449,1.632,3450,1.632,3451,1.374,3452,1.632,3453,2.721,3454,1.632,3455,1.374,3456,1.632,3457,1.632,3458,1.632,3459,2.29,3460,1.632,3461,1.374,3462,1.632,3463,3.438,3464,1.632,3465,1.632,3466,1.632,3467,2.29,3468,1.632,3469,1.632,3470,1.632,3471,1.632,3472,1.632,3473,1.374,3474,1.374,3475,2.29,3476,1.374,3477,1.374,3478,1.374,3479,3.034,3480,1.374,3481,1.374,3482,1.374,3483,1.374,3484,2.29,3485,1.374,3486,1.374,3487,1.374,3488,1.374,3489,1.374,3490,1.374,3491,1.374,3492,2.29,3493,1.374,3494,1.374,3495,1.374,3496,2.29,3497,1.374,3498,2.29,3499,1.374,3500,1.374,3501,1.374,3502,1.374,3503,1.374,3504,1.374,3505,2.29,3506,1.374,3507,1.374,3508,1.374,3509,1.374,3510,1.374,3511,1.632,3512,1.632,3513,1.632,3514,1.374,3515,1.632,3516,1.632,3517,1.632,3518,1.632,3519,1.632,3520,1.632,3521,2.721,3522,1.286,3523,2.721,3524,2.474,3525,1.632,3526,1.632,3527,1.632,3528,1.632,3529,1.632,3530,1.632,3531,1.632,3532,1.632,3533,1.632,3534,1.632,3535,1.632,3536,1.632,3537,1.632,3538,1.632,3539,1.632,3540,1.632,3541,1.632,3542,1.632,3543,1.632,3544,1.632,3545,1.632,3546,1.374]],["title/interfaces/Qualifier-1.html",[301,0.606,380,1.123,1083,1.728]],["body/interfaces/Qualifier-1.html",[0,0.704,3,0.032,4,0.027,8,0.022,9,0.766,11,2.421,14,0.628,17,0.645,18,0.628,19,0.682,20,0.747,21,0.549,22,2.111,23,0.645,24,1.418,25,0.645,27,0.839,29,0.318,30,0.303,31,1.35,43,0.276,44,0.011,45,0.641,47,0.66,57,0.103,58,0.368,61,1.166,68,0.333,69,1.465,70,1.734,71,0.08,72,0.645,73,0.066,74,0.085,86,1.562,87,0.813,90,1.248,93,1.646,146,0.663,152,0.004,153,0.004,158,1.465,160,1.182,169,3.957,172,0.682,173,2.532,177,1.071,193,0.958,202,2.969,205,0.875,217,1.304,229,0.708,249,1.678,250,4.229,253,1.203,257,1.184,274,0.348,275,0.839,276,1.165,277,0.866,278,0.521,279,3.436,281,0.549,282,0.535,285,0.743,286,1.071,287,0.813,288,0.628,289,1.116,295,0.722,297,0.895,301,0.57,307,2.211,311,1.432,313,1.287,319,0.611,321,2.629,327,3.022,331,2.807,332,2.384,333,1.023,337,1.53,340,3.178,346,2.659,347,3.838,348,3.842,354,2.553,359,3.437,360,3.616,380,2.355,383,1.165,455,1.056,477,0.993,480,0.839,491,0.682,502,1.417,524,0.722,527,0.722,532,0.702,533,0.722,537,0.702,541,1.432,550,3.817,558,1.071,584,1.99,589,2.37,591,1.165,594,0.993,688,1.653,692,1.35,693,3.086,724,0.993,727,1.687,755,1.217,768,2.757,770,0.743,773,1.071,784,1.373,872,1.432,875,1.515,879,1.418,883,0.993,891,0.866,892,0.866,909,1.568,910,3.086,958,1.219,960,1.165,970,2.34,978,1.968,989,1.165,994,1.031,1006,2.532,1022,1.625,1050,0.866,1052,1.031,1054,1.432,1056,2.679,1083,2.384,1096,2.629,1157,1.28,1160,1.859,1170,1.165,1181,2.805,1182,3.373,1183,4.163,1184,2.384,1186,1.995,1188,2.98,1189,2.141,1228,3.817,1229,1.995,1230,1.995,1231,1.995,1235,2.095,1236,1.28,1251,1.906,1258,1.906,1259,1.165,1260,0.993,1261,1.219,1262,1.219,1263,1.219,1264,1.219,1265,1.219,1266,1.219,1268,1.687,1394,0.993,1402,1.35,1434,3,1467,1.071,1477,3.241,1762,2.805,1873,1.53,1924,0.895,1944,2.095,1945,1.687,1946,1.28,1961,1.35,1965,1.826,1966,1.515,1967,1.625,1968,0.993,1969,1.568,1970,0.958,1971,0.926,1973,2.21,1974,1.35,1975,1.35,1996,2.729,2004,3.673,2013,4.705,2055,1.28,2140,0.895,2218,3.241,2224,1.432,2293,2.343,2499,1.432,2521,2.796,2552,1.031,2577,1.219,2586,1.219,2596,0.993,2602,4.052,2654,2.343,2656,1.432,2657,5.275,2663,3.842,2664,1.432,2715,1.53,2716,1.35,2717,1.35,2718,1.031,2720,1.031,2729,1.28,2737,1.031,2745,1.165,2774,1.432,2794,1.28,2795,2.659,2797,1.28,2798,2.095,2799,2.095,2800,1.28,2801,1.28,2803,2.095,2804,2.095,2805,3.241,2806,2.095,2807,1.35,2809,1.35,2814,2.21,2817,1.28,2828,2.343,2841,1.165,2846,1.35,2847,1.432,2848,4.774,2849,2.343,2853,1.432,2855,1.35,2856,1.432,2865,1.432,2868,4.641,2877,2.974,2881,2.21,2883,4.928,2884,4.99,2886,1.35,2887,4.789,2888,1.432,2891,1.432,2892,2.343,2895,4.052,2896,1.432,2902,4.297,2903,4.611,2904,1.35,2905,1.432,2906,2.343,2913,4.297,2919,4.297,2925,2.974,2943,1.28,2973,2.21,3042,2.343,3044,3.791,3045,1.53,3046,1.432,3047,2.504,3048,1.53,3049,2.504,3050,1.53,3051,1.53,3052,1.53,3053,1.53,3054,1.53,3055,1.28,3056,1.53,3057,1.53,3058,1.28,3059,1.53,3060,1.53,3061,1.53,3062,1.53,3063,1.53,3064,1.53,3065,1.53,3066,1.53,3067,1.53,3077,2.504,3081,1.53,3082,1.53,3086,1.53,3087,2.504,3088,2.504,3089,2.504,3090,2.504,3091,1.53,3092,2.504,3093,2.504,3094,2.504,3095,2.504,3097,1.53,3098,1.53,3099,1.53,3100,1.53,3101,1.53,3102,1.53,3103,1.53,3104,1.53,3105,1.53,3106,3.178,3107,1.53,3108,1.53,3109,1.53,3110,1.53,3111,1.53,3112,1.53,3113,1.53,3114,1.53,3115,1.53,3116,1.53,3117,1.53,3118,1.53,3119,1.53,3121,1.53,3123,1.53,3126,4.051,3127,1.53,3128,1.53,3129,1.53,3130,1.53,3131,1.53,3132,1.53,3133,1.53,3134,1.53,3135,1.53,3136,4.349,3137,1.53,3138,1.53,3139,1.53,3140,1.53,3141,1.432,3142,1.432,3143,1.53,3144,2.343,3145,1.432,3146,1.432,3147,1.53,3148,1.53,3149,1.53,3150,1.53,3151,1.53,3152,1.53,3153,1.53,3154,1.53,3155,1.53,3156,1.53,3158,1.53,3159,4.051,3160,1.53,3161,1.53,3162,1.53,3163,1.53,3164,1.53,3165,1.53,3166,1.53,3167,1.53,3168,1.53,3169,1.53,3170,1.53,3174,1.53,3175,1.53,3176,4.349,3177,4.051,3178,4.791,3193,1.53,3194,1.53,3204,1.53,3205,1.53,3206,1.53,3207,1.53,3208,3.178,3209,1.53,3210,3.178,3211,3.673,3212,1.53,3213,4.051,3214,1.53,3215,1.53,3216,1.53,3217,2.504,3218,2.504,3219,2.504,3221,3.178,3222,1.53,3223,2.504,3224,3.178,3225,1.53,3226,1.53,3228,1.53,3229,2.504,3230,1.53,3231,3.178,3232,2.504,3233,2.504,3234,4.349,3235,3.673,3236,3.178,3237,3.178,3238,1.53,3239,1.53,3240,1.53,3241,2.504,3242,1.53,3243,1.53,3244,1.53,3245,1.53,3246,1.53,3247,1.53,3248,1.53,3249,1.432,3250,1.53,3251,1.53,3252,1.53,3253,1.53,3254,1.53,3255,3.178,3256,1.53,3257,1.53,3258,1.53,3259,2.504,3260,1.53,3267,1.53,3268,1.53,3280,1.53,3309,1.53,3310,1.53,3311,1.53,3312,1.53,3313,1.53,3317,3.178,3323,1.53,3324,2.504,3329,1.53,3331,1.53,3333,2.504,3335,1.53,3336,1.53,3337,1.53,3338,1.53,3339,2.504,3340,2.504,3341,1.53,3351,3.178,3355,1.53,3356,1.53,3358,1.53,3359,1.53,3360,1.53,3361,1.53,3363,2.504,3364,1.53,3366,1.53,3367,1.53,3371,1.53,3375,1.53,3376,1.53,3377,1.53,3378,1.53,3379,1.53,3380,1.53,3381,1.53,3382,1.53,3394,1.53,3405,2.504,3422,1.53,3423,1.53,3432,1.53,3434,1.53,3451,3.178,3455,1.53,3459,1.53,3461,1.53,3463,2.504,3467,1.53,3473,1.53,3474,1.53,3475,2.504,3476,1.53,3477,1.53,3478,1.53,3479,3.241,3480,1.53,3481,1.53,3482,1.53,3483,1.53,3484,2.504,3485,1.53,3486,1.53,3487,1.53,3488,1.53,3489,1.53,3490,1.53,3491,1.53,3492,2.504,3493,1.53,3494,1.53,3495,1.53,3496,2.504,3497,1.53,3498,2.504,3499,1.53,3500,1.53,3501,1.53,3502,1.53,3503,1.53,3504,1.53,3505,2.504,3506,1.53,3507,1.53,3508,1.53,3509,1.53,3510,1.53,3514,1.53,3546,1.53,3547,1.817,3548,2.974,3549,1.817,3550,1.817,3551,1.817,3552,1.817,3553,1.817,3554,2.974,3555,4.362,3556,2.974,3557,2.974,3558,1.817,3559,1.817,3560,2.974,3561,1.817,3562,1.817,3563,1.817,3564,3.775,3565,4.362,3566,3.775,3567,3.775,3568,1.817,3569,1.817,3570,1.817,3571,1.817,3572,1.817,3573,1.817,3574,1.817,3575,1.817,3576,1.817,3577,1.817,3578,1.817,3579,1.817,3580,1.817,3581,1.817,3582,1.817,3583,1.817,3584,1.817,3585,1.817,3586,1.817,3587,1.817,3588,1.817,3589,1.817,3590,1.817,3591,1.817,3592,1.817,3593,5.453,3594,1.817,3595,2.974,3596,1.817,3597,1.817,3598,1.817,3599,1.817,3600,1.817,3601,1.817,3602,1.817,3603,1.817,3604,1.817,3605,1.817,3606,1.817,3607,1.817,3608,1.817,3609,1.817,3610,1.817,3611,1.817,3612,1.817,3613,2.974,3614,1.817,3615,1.817,3616,5.166,3617,1.817,3618,1.817,3619,1.817,3620,1.817,3621,1.817,3622,3.775,3623,1.817,3624,1.817,3625,1.817,3626,1.817,3627,2.974,3628,1.817,3629,1.817,3630,1.817,3631,1.817,3632,1.817,3633,1.817,3634,1.817,3635,1.817,3636,1.817,3637,1.817,3638,1.817,3639,1.817,3640,1.817,3641,1.817,3642,1.817,3643,1.817,3644,1.817,3645,1.817,3646,1.817,3647,1.817,3648,1.817,3649,1.817,3650,1.817,3651,1.817,3652,1.817,3653,1.817,3654,1.817,3655,1.817,3656,1.817,3657,1.817,3658,1.817,3659,1.817,3660,1.817,3661,1.817,3662,1.817,3663,1.817,3664,1.817,3665,1.817,3666,1.817,3667,1.817,3668,1.817,3669,1.817,3670,2.974,3671,1.817,3672,1.817,3673,1.817,3674,1.817,3675,1.817,3676,1.817,3677,1.817,3678,3.775,3679,2.974,3680,3.775,3681,2.974,3682,2.974,3683,3.775,3684,2.974,3685,2.974,3686,1.817,3687,1.817,3688,2.974,3689,1.817,3690,1.817,3691,1.817,3692,2.974,3693,1.817,3694,1.817,3695,1.817,3696,1.817,3697,4.811,3698,1.817,3699,1.817,3700,1.817,3701,4.362,3702,2.974,3703,2.974,3704,2.974,3705,1.817,3706,1.817,3707,1.817,3708,1.817,3709,1.817,3710,3.775,3711,1.817,3712,1.817,3713,1.817,3714,1.817,3715,2.974,3716,2.974,3717,1.817,3718,1.817,3719,1.817,3720,1.817,3721,2.974,3722,2.974,3723,2.974,3724,1.817,3725,2.974,3726,1.817,3727,1.817]],["title/interfaces/QuantityVariable.html",[301,0.727,3728,3.448]],["body/interfaces/QuantityVariable.html",[3,0.103,4,0.087,8,0.07,9,2.472,29,0.275,30,0.43,43,0.499,44,0.011,45,0.812,73,0.12,152,0.009,153,0.009,229,1.856,301,1.125,307,2.927,313,1.125,537,2.266,1250,4.36,1252,4.623,1253,4.623,1254,4.623,3728,6.576,3729,5.867,3730,4.94,3731,5.867]],["title/interfaces/Reference.html",[301,0.727,878,2.328]],["body/interfaces/Reference.html",[3,0.064,4,0.054,8,0.044,20,0.912,29,0.171,30,0.392,43,0.455,44,0.011,45,0.815,47,0.33,68,0.307,71,0.159,73,0.064,74,0.171,86,1.789,87,2.252,90,0.992,121,1.076,152,0.007,153,0.007,156,0.64,172,2.605,177,0.813,215,1.486,217,2.481,229,0.865,249,1.136,253,2.085,257,0.756,274,0.696,278,1.041,281,1.097,282,1.069,285,1.486,287,1.626,288,1.739,301,1.254,313,1.49,321,3.154,327,3.204,331,3.308,332,3.699,333,1.008,354,2.12,445,0.06,460,0.677,491,2.339,527,1.444,529,1.85,537,1.943,584,2.653,589,3.418,590,3.994,591,2.329,594,3.575,650,2.653,671,3.225,674,2.437,677,3.839,682,2.061,693,3.603,812,2.974,838,3.534,843,1.626,873,2.56,874,2.56,875,3.447,876,2.231,877,4.338,878,3.544,879,1.732,880,4.289,881,2.699,882,2.699,883,1.985,884,2.699,885,5.457,886,3.225,887,3.376,888,4.18,889,2.061,890,2.061,891,1.732,892,1.732,893,4.656,894,3.376,895,2.699,896,2.699,897,2.699,898,2.56,899,4.541,900,3.544,901,4.289,902,4.344,903,4.289,904,4.861,905,4.289,906,4.289,907,4.067,908,4.289,909,3.569,910,3.173,911,2.56,912,2.56,913,4.63,914,4.63,915,2.699,916,2.699,917,4.389,918,3.739,919,3.739,920,3.545,921,2.699,922,2.699,923,2.56,924,2.699,925,3.739,926,3.739,927,3.739,928,3.405,929,2.437,930,2.699,931,3.739,932,2.699,933,3.545,934,3.545,935,2.699,936,2.56,937,2.699,938,2.699,939,2.699,940,2.699,941,3.739,942,2.699,943,2.699,944,3.739,945,2.699,946,2.699,947,2.699,948,2.699,949,2.699,950,2.699,951,2.437,952,2.699,953,2.699,954,2.329,955,2.699,956,2.56,957,2.699,958,3.376,959,2.699,960,2.329,961,2.699,962,2.329,963,2.56,964,2.699,965,2.699,966,2.699,967,2.699,968,2.699,969,2.699,970,1.444,971,2.699,972,3.225,973,3.739,974,2.699,975,2.699,976,2.699,977,2.56,978,2.769,979,3.739,980,3.699,981,2.699,982,2.699,983,3.739,984,3.545,985,2.56,986,2.699,987,2.56,988,2.699,989,2.329,990,2.699,991,2.437,992,2.699,993,2.699,994,2.061,995,2.329,996,3.545,997,2.699,998,2.699,999,2.699,1000,2.437,1001,4.61,1002,2.699,1003,2.699,1004,2.699,1005,2.699,1006,2.437,1007,2.56,1008,2.56,1009,2.56,1010,3.739,1011,2.699,1012,2.699,1013,2.699,1014,2.699]],["title/injectables/RequestService.html",[288,1.31,445,0.046]],["body/injectables/RequestService.html",[3,0.056,4,0.047,8,0.055,11,1.767,20,1.481,29,0.151,30,0.29,35,0.47,43,0.557,44,0.011,45,0.843,46,1.009,47,0.59,48,0.666,56,0.818,57,0.421,58,0.571,60,0.765,61,1.218,68,0.293,71,0.141,73,0.056,74,0.151,121,1.165,148,1.277,152,0.006,153,0.006,156,0.566,171,2.531,172,1.732,177,1.198,205,2.167,215,1.314,217,2.039,221,1.756,229,1.098,249,1.65,253,2.41,257,1.301,262,1.973,274,0.616,278,0.92,281,0.97,282,0.945,283,2.387,284,2.263,288,1.594,307,2.346,313,1.473,327,2.724,333,1.045,402,2.387,445,0.055,447,0.706,455,1.141,460,0.599,478,3.213,480,2.493,491,2.215,589,2.906,590,3.782,594,2.521,650,1.694,724,2.521,928,2.521,929,3.095,951,3.095,1052,1.822,1067,3.183,1107,4.613,1182,1.582,1924,2.659,2008,2.922,2129,4.157,2174,3.635,2175,2.531,2176,2.531,2177,2.531,2180,2.531,2227,5.366,2403,5.9,2462,3.884,2473,3.884,2506,2.705,2603,6.93,2718,3.062,2720,3.062,2737,2.617,2745,2.957,2831,5.9,3732,3.213,3733,6.14,3734,4.545,3735,6.14,3736,5.247,3737,5.247,3738,5.247,3739,5.247,3740,5.247,3741,5.247,3742,5.247,3743,5.247,3744,5.247,3745,5.247,3746,6.71,3747,5.247,3748,4.196,3749,5.247,3750,5.247,3751,5.247,3752,5.247,3753,3.654,3754,5.247,3755,3.654,3756,5.247,3757,3.654,3758,5.247,3759,3.654,3760,5.247,3761,3.654,3762,5.247,3763,3.654,3764,5.247,3765,3.654,3766,5.247,3767,3.654,3768,5.247,3769,3.654,3770,5.247,3771,3.654,3772,3.654,3773,5.247,3774,3.654,3775,3.654,3776,5.247,3777,3.654,3778,6.71,3779,5.247,3780,3.654,3781,5.247,3782,3.654,3783,5.247,3784,3.654,3785,3.654,3786,5.247,3787,3.654,3788,3.654,3789,3.884,3790,3.654,3791,5.247,3792,3.654,3793,3.654,3794,7.085,3795,3.654,3796,3.213,3797,3.654,3798,3.654,3799,6.14,3800,5.247,3801,5.247,3802,5.247,3803,7.797,3804,5.247,3805,7.106,3806,5.247,3807,5.247,3808,5.247,3809,6.14,3810,5.247,3811,7.621,3812,7.797,3813,6.7,3814,4.613,3815,3.654,3816,6.14,3817,5.247,3818,3.654,3819,5.247,3820,6.71,3821,6.71,3822,5.247,3823,6.14,3824,5.247,3825,5.247,3826,5.247,3827,5.247,3828,3.654,3829,6.14,3830,5.247,3831,3.654,3832,5.247,3833,3.654,3834,3.654,3835,3.654,3836,3.654,3837,5.247,3838,4.196,3839,3.654,3840,3.654,3841,3.654,3842,3.654,3843,3.654,3844,3.654,3845,3.654,3846,3.654,3847,5.247,3848,3.654,3849,3.654,3850,3.654,3851,3.654,3852,3.654,3853,3.654,3854,3.654,3855,3.654,3856,5.247,3857,3.654,3858,3.654,3859,5.247,3860,4.613,3861,3.654,3862,5.247,3863,3.654,3864,3.654,3865,3.654,3866,3.654,3867,3.654,3868,5.247,3869,3.654,3870,3.654,3871,3.654,3872,3.654,3873,3.654,3874,3.654,3875,3.654,3876,3.654,3877,3.654,3878,3.654,3879,3.654,3880,3.654,3881,3.654]],["title/injectables/RoleOfObjectRenderingService.html",[445,0.046,3882,3.448]],["body/injectables/RoleOfObjectRenderingService.html",[3,0.094,4,0.079,8,0.064,29,0.252,30,0.408,35,0.661,43,0.565,44,0.01,45,0.737,48,0.68,56,0.589,57,0.303,58,0.411,60,0.547,61,1.211,68,0.252,71,0.235,73,0.094,74,0.252,86,1.671,152,0.008,153,0.008,156,0.945,197,2.542,229,1.543,307,2.433,313,1.335,445,0.078,447,1.179,460,1,550,3.6,677,3.676,874,4.566,877,3.44,883,3.542,889,3.044,1067,3.164,1079,5.367,1217,4.621,1980,4.881,1981,4.881,3022,5.367,3882,5.895,3883,7.838,3884,5.367,3885,7.372,3886,7.372,3887,7.372,3888,7.372,3889,7.372,3890,6.104,3891,7.372,3892,6.104,3893,6.104,3894,6.104,3895,6.104,3896,6.104,3897,6.104,3898,6.104,3899,6.104,3900,6.104,3901,6.104,3902,6.104,3903,6.104,3904,6.104,3905,6.104,3906,6.104,3907,6.104,3908,6.104,3909,6.104,3910,6.104,3911,6.104,3912,6.104,3913,6.104,3914,6.104,3915,6.104,3916,6.104,3917,6.104,3918,6.104,3919,6.104]],["title/pipes/SafeHtmlPipe.html",[502,1.423,3920,3.448]],["body/pipes/SafeHtmlPipe.html",[3,0.102,4,0.086,8,0.07,14,2.018,16,1.964,21,2.058,22,2.005,30,0.368,35,0.595,44,0.01,46,0.943,47,0.618,48,0.594,56,0.641,57,0.407,58,0.447,60,0.595,68,0.32,71,0.256,73,0.102,74,0.274,152,0.009,153,0.009,177,1.1,274,1.119,333,0.81,502,2.558,504,3.918,508,4.114,511,4.801,869,5.737,3920,6.198,3921,7.216,3922,5.84,3923,7.751,3924,6.642,3925,7.751,3926,7.751,3927,6.642,3928,6.642,3929,5.84,3930,5.84,3931,6.642]],["title/components/SearchComponent.html",[0,0.707,131,1.464]],["body/components/SearchComponent.html",[0,0.928,1,1.109,2,1.703,3,0.049,4,0.041,5,1.176,6,1.176,7,1.176,8,0.034,11,2.244,14,1.438,16,0.938,17,2.718,18,2.644,19,2.216,20,0.701,21,1.257,22,1.736,23,1.478,24,2.372,25,1.478,29,0.131,30,0.262,35,0.424,43,0.525,44,0.011,45,0.754,46,1.193,47,0.67,48,0.667,56,0.457,57,0.311,58,0.318,60,0.562,61,1.245,68,0.343,69,2.451,71,0.122,72,0.991,73,0.049,74,0.131,90,0.55,92,1.142,93,1.131,94,1.142,95,1.753,96,1.753,97,1.176,98,2.071,99,1.176,100,1.142,101,2.486,102,1.176,103,1.078,104,1.176,105,1.109,106,0.938,107,3.001,108,1.109,109,1.109,110,0.913,111,1.078,112,1.176,113,1.078,114,1.978,115,1.176,116,1.109,117,1.109,118,1.142,119,1.078,120,1.109,121,1.1,122,1.176,123,1.109,124,1.176,125,1.078,126,1.176,127,1.078,128,1.109,129,1.109,130,1.176,131,2.131,132,1.109,133,1.078,134,1.109,135,1.078,136,1.109,137,1.176,138,1.109,139,1.176,140,1.109,141,1.176,142,1.109,143,1.176,144,1.109,145,1.176,146,1.519,147,1.109,148,1.109,149,1.673,150,1.176,151,1.176,152,0.005,153,0.005,154,1.872,158,2.451,160,1.978,163,3.506,164,1.374,166,2.668,169,3.649,171,3.921,172,2.613,173,3.701,175,4.19,177,1.193,179,4.19,181,5.548,183,1.645,188,3.967,189,4.158,193,2.909,202,1.249,205,1.464,213,2.199,215,1.142,217,2.404,219,3.624,221,3.225,244,3.279,249,1.397,250,2.823,253,1.758,256,1.525,257,1.148,261,3.211,274,0.535,275,1.289,276,1.789,277,1.33,278,0.799,279,2.36,280,2.932,281,0.843,282,0.821,285,1.142,286,1.645,287,1.249,288,0.964,289,1.714,294,1.753,295,1.109,297,1.374,307,1.048,319,1.855,320,2.35,333,0.387,343,5.752,354,1.176,360,3.056,363,1.966,364,2.909,370,4.19,373,2.199,374,3.785,375,2.538,386,4.385,387,3.279,388,2.538,392,3.092,396,2.199,398,2.538,399,2.199,402,2.074,437,5.517,455,1.767,477,1.525,480,1.922,502,1.048,524,1.654,527,1.654,532,1.078,533,1.109,542,3.785,589,1.374,755,2.036,768,2.279,770,1.142,789,2.12,858,2.932,891,2.372,892,1.984,970,2.459,978,2.414,989,1.789,1022,1.525,1050,1.33,1056,2.556,1067,2.454,1096,2.72,1434,2.535,1467,1.645,1539,2.932,1804,4.162,1865,4.162,1871,4.347,1873,2.35,1874,2.791,1924,2.05,1954,2.35,1955,4.19,1956,2.35,1965,3.056,1966,2.535,1967,2.72,1968,1.525,1969,2.624,1970,1.471,1971,1.421,2129,2.932,2130,3.785,2140,2.451,2439,2.538,2440,3.504,2449,2.538,2450,3.504,2452,2.791,2552,1.583,2569,2.538,2577,3.339,2583,3.19,2586,2.792,2596,1.525,2716,3.698,2717,3.092,2718,2.823,2719,5.517,2720,2.823,2721,6.189,2722,4.977,2724,4.162,2727,2.791,2729,2.932,2737,2.36,2743,4.977,2745,2.668,2758,3.785,2765,2.791,2766,2.538,2767,2.538,2768,2.538,2769,2.791,2770,2.791,2772,2.791,2778,6.189,2779,5.517,2780,2.791,2781,2.791,2782,2.791,2783,2.791,2784,2.791,2785,2.791,2786,2.791,2787,2.791,2788,2.791,2789,2.791,2792,2.791,2793,2.791,2794,1.966,2795,1.966,2797,1.966,2798,1.966,2799,1.966,2800,1.966,2801,1.966,2802,2.538,2803,1.966,2804,1.966,2805,3.698,2806,1.966,2807,2.074,2808,4.162,2809,2.074,2810,2.791,2811,4.162,2812,2.791,2813,2.791,2814,2.074,2815,2.199,2816,2.199,2817,1.966,2818,2.791,2819,4.099,2821,2.791,2822,2.791,2824,2.791,2829,2.791,2833,2.791,2836,4.162,2837,2.791,2838,2.791,2839,4.162,2840,2.791,2841,1.789,2842,2.791,2886,4.385,2985,2.791,2988,4.19,2991,4.162,2993,4.977,3479,3.092,3932,2.791,3933,7.039,3934,5.66,3935,5.901,3936,3.174,3937,3.174,3938,3.174,3939,3.174,3940,3.174,3941,3.174,3942,3.174,3943,3.174,3944,3.174,3945,4.733,3946,3.174,3947,3.174,3948,3.174,3949,3.174,3950,3.174,3951,3.174,3952,3.174,3953,3.174,3954,3.174,3955,3.174,3956,6.275,3957,3.174,3958,3.174,3959,3.174,3960,3.174,3961,3.174,3962,3.174,3963,3.174,3964,5.66,3965,3.174,3966,3.174,3967,2.791,3968,3.174,3969,3.174,3970,3.174,3971,4.598,3972,3.174,3973,7.039,3974,3.174,3975,7.495,3976,3.174,3977,6.275,3978,3.174,3979,3.174,3980,3.174,3981,3.092,3982,6.275,3983,3.174,3984,3.174,3985,3.174,3986,3.174,3987,3.174,3988,3.174,3989,3.174,3990,3.174,3991,3.174,3992,3.174,3993,3.174,3994,3.174,3995,3.174,3996,3.174,3997,3.174,3998,3.174,3999,3.174,4000,3.174,4001,3.174,4002,3.174,4003,3.174,4004,3.174,4005,3.174,4006,3.174,4007,3.174,4008,3.174,4009,3.174,4010,3.174,4011,3.174,4012,3.174,4013,2.074,4014,4.162,4015,3.174,4016,3.174,4017,3.174,4018,3.174,4019,3.174,4020,3.174]],["title/injectables/SearchEngineService.html",[445,0.046,3055,2.671]],["body/injectables/SearchEngineService.html",[3,0.089,4,0.075,8,0.061,11,1.665,20,1.277,29,0.239,30,0.395,35,0.64,43,0.497,44,0.011,45,0.72,46,1.147,47,0.644,48,0.647,56,0.688,57,0.354,58,0.48,60,0.64,61,1.148,68,0.342,70,2.493,71,0.223,73,0.089,74,0.239,90,1.003,152,0.008,153,0.008,156,0.896,177,1.257,205,2.001,217,1.758,253,2.167,257,1.416,274,0.975,276,3.261,277,2.425,278,1.457,279,2.886,280,4.42,281,1.537,282,1.497,288,1.758,289,3.124,319,1.711,445,0.075,447,1.118,460,0.948,477,2.78,480,2.897,524,2.493,527,2.493,532,1.965,533,2.022,970,2.899,978,2.984,1022,2.78,1050,2.425,1056,3.124,1067,3,1096,3.428,1434,2.591,1467,3,1539,4.42,2140,3.35,2552,2.886,2718,3.858,2720,3.858,2729,4.42,2737,3.558,2745,4.021,2794,3.584,2795,3.584,2796,5.088,2797,3.584,2798,3.584,2799,3.584,2800,3.584,2801,3.584,2802,4.627,2803,3.584,2804,3.584,2815,4.009,2816,4.009,2817,3.584,3055,4.42,3479,3.78,4021,7.527,4022,5.088,4023,5.786,4024,5.786,4025,5.786,4026,5.786,4027,5.786,4028,5.786,4029,5.786,4030,5.786,4031,5.786]],["title/injectables/SelectedItemListService.html",[445,0.046,4032,2.987]],["body/injectables/SelectedItemListService.html",[3,0.086,4,0.072,8,0.059,20,1.23,29,0.23,30,0.454,35,0.625,43,0.358,44,0.011,45,0.779,46,0.99,47,0.556,48,0.65,56,0.791,57,0.407,58,0.552,60,0.736,61,1.106,68,0.314,71,0.215,73,0.086,74,0.23,86,1.263,87,2.744,90,0.966,121,1.407,152,0.008,153,0.008,156,0.863,172,2.301,177,1.08,249,1.106,253,2.131,274,0.94,282,1.442,283,3.642,284,3.453,313,1.282,333,1.001,445,0.074,447,1.077,460,0.914,477,3.83,515,3.453,528,4.458,875,3.57,876,4.304,900,3.01,902,3.01,954,3.929,978,2.736,980,4.022,995,3.929,1000,3.288,1022,3.83,1052,2.78,1539,4.319,1544,5.632,1548,5.161,1602,4.458,2183,3.142,2262,4.83,2718,2.78,2720,2.78,2737,2.78,2815,3.862,2816,3.862,2934,4.127,3522,4.83,3734,5.632,3748,5.575,3789,5.161,3838,4.458,4032,4.83,4033,7.549,4034,6.13,4035,6.13,4036,5.575,4037,4.901,4038,6.13,4039,5.575,4040,4.901,4041,6.13,4042,5.575,4043,6.13,4044,5.575,4045,6.689,4046,6.13,4047,5.575,4048,4.458,4049,4.458,4050,4.901,4051,4.458,4052,4.901,4053,4.901,4054,4.901,4055,4.901,4056,6.13,4057,4.901,4058,4.901,4059,4.901]],["title/injectables/SelectedItemListService-1.html",[380,1.123,445,0.038,4032,2.492]],["body/injectables/SelectedItemListService-1.html",[3,0.086,4,0.073,8,0.059,20,1.234,29,0.231,30,0.455,35,0.626,43,0.359,44,0.011,45,0.779,46,0.992,47,0.557,48,0.651,56,0.792,57,0.408,58,0.552,60,0.736,61,1.11,68,0.315,71,0.216,73,0.086,74,0.231,86,1.267,87,2.749,90,0.969,152,0.008,153,0.008,156,0.866,172,2.88,177,1.082,249,1.11,253,2.134,274,0.943,282,1.446,283,3.654,284,3.464,313,1.284,333,1.002,445,0.074,447,1.08,460,0.917,477,3.834,515,3.464,528,4.472,875,3.574,876,4.308,900,3.019,902,3.019,954,3.937,978,2.74,980,4.025,995,3.937,1000,3.299,1022,3.834,1052,2.789,1539,4.328,1544,5.64,1548,5.171,1602,4.472,2183,3.152,2262,4.84,2718,2.789,2720,2.789,2737,2.789,2815,3.874,2816,3.874,2934,4.14,2963,4.917,3522,4.84,3734,5.64,3748,5.586,3789,5.171,3838,4.472,4032,4.84,4034,6.142,4035,6.142,4037,4.917,4038,6.142,4040,4.917,4041,6.142,4043,6.142,4045,6.699,4046,6.142,4048,4.472,4049,4.472,4050,4.917,4051,4.472,4052,4.917,4053,4.917,4054,4.917,4055,4.917,4056,6.142,4057,4.917,4058,4.917,4059,4.917,4060,7.554,4061,5.593,4062,5.593,4063,5.593,4064,5.593]],["title/interfaces/Selection.html",[301,0.727,1188,2.072]],["body/interfaces/Selection.html",[3,0.02,4,0.016,8,0.013,9,0.471,20,0.281,29,0.052,30,0.124,43,0.579,44,0.011,45,0.715,57,0.179,73,0.088,87,0.5,90,1.428,93,0.861,106,1.066,110,1.038,152,0.003,153,0.003,229,1.922,238,2.234,301,0.608,307,3.034,313,0.764,380,2.3,455,0.397,491,2.067,537,0.432,584,0.589,715,3.139,724,3.539,727,3.526,730,4.266,732,4.771,784,2.542,812,2.671,843,3.508,1083,0.611,1160,1.962,1170,3.935,1172,3.718,1180,0.88,1181,1.461,1182,2.367,1183,0.75,1184,2.928,1185,0.83,1186,5.416,1187,0.941,1188,1.075,1189,0.634,1190,2.032,1191,5.527,1192,0.941,1193,2.498,1194,5.527,1195,2.498,1196,5.527,1197,2.498,1198,5.527,1199,4.837,1200,2.498,1201,5.867,1202,2.075,1203,2.498,1204,4.09,1205,3.066,1206,4.837,1207,1.615,1208,4.837,1209,4.837,1210,2.498,1211,4.837,1212,5.056,1213,5.803,1214,2.498,1215,4.837,1216,4.837,1217,1.869,1218,2.234,1219,4.837,1220,2.127,1221,2.356,1222,1.947,1223,4.837,1224,2.498,1225,2.234,1226,4.837,1227,0.75,1228,1.766,1229,0.75,1230,0.75,1231,0.75,1232,0.941,1233,0.941,1234,1.956,1235,4.562,1236,4.477,1237,2.356,1238,2.356,1239,2.356,1240,2.356,1241,2.356,1242,1.549,1243,1.549,1244,1.549,1245,1.655,1246,1.655,1247,1.655,1248,1.655,1249,1.655,1250,1.461,1251,3.613,1252,1.549,1253,1.549,1254,1.549,1255,0.941,1256,0.941,1257,0.941,1258,0.716,1259,3.935,1260,3.355,1261,4.118,1262,4.118,1263,4.118,1264,4.118,1265,4.118,1266,3.781,1267,0.941,1268,0.634,1269,5.097,1270,5.097,1271,4.771,1272,5.097,1273,4.771,1274,2.075,1275,2.075,1276,2.075,1277,2.075,1278,2.075,1279,2.075,1280,2.075,1281,3.139,1282,2.075,1283,2.075,1284,2.075,1285,2.075,1286,2.075,1287,2.075,1288,2.075,1289,2.075,1290,2.075,1291,2.075,1292,2.075,1293,2.075,1294,2.075,1295,2.075,1296,3.042,1297,2.075,1298,2.075,1299,2.075,1300,2.075,1301,2.075,1302,2.075,1303,2.075,1304,3.139,1305,2.075,1306,2.075,1307,2.075,1308,2.075,1309,2.075,1310,2.075,1311,2.075,1312,2.075,1313,2.075,1314,2.075,1315,2.075,1316,2.075,1317,2.075,1318,2.075,1319,2.075,1320,2.075,1321,2.075,1322,2.075,1323,2.075,1324,2.075,1325,2.075,1326,3.139,1327,2.075,1328,2.075,1329,2.075,1330,2.075,1331,2.075,1332,2.075,1333,2.075,1334,2.075,1335,2.075,1336,2.075,1337,2.075,1338,2.075,1339,2.075,1340,2.075,1341,2.075,1342,2.075,1343,2.075,1344,2.075,1345,2.075,1346,2.075,1347,2.075,1348,3.139,1349,2.075,1350,2.075,1351,2.075,1352,2.075,1353,2.075,1354,2.075,1355,2.075,1356,2.075,1357,2.075,1358,2.075,1359,2.075,1360,2.075,1361,2.075,1362,2.075,1363,2.075,1364,2.075,1365,2.075,1366,2.075,1367,2.075,1368,2.075,1369,2.075,1370,3.139,1371,2.075,1372,2.075,1373,2.075,1374,2.075,1375,2.075,1376,2.075,1377,2.075,1378,2.075,1379,2.075,1380,2.075,1381,2.075,1382,2.075,1383,2.075,1384,2.075,1385,0.88,1386,3.354,1387,2.807,1388,3.139,1389,0.941,1390,0.941,1391,0.941,1392,0.941,1393,0.88]],["title/injectables/SetDataService.html",[445,0.046,1947,2.987]],["body/injectables/SetDataService.html",[3,0.072,4,0.06,8,0.049,20,1.369,29,0.192,30,0.343,35,0.556,43,0.498,44,0.011,45,0.808,46,1.189,47,0.675,48,0.668,56,0.769,57,0.396,58,0.536,60,0.715,61,0.923,68,0.341,71,0.179,73,0.072,74,0.192,86,1.581,90,0.806,121,0.762,149,1.375,152,0.007,153,0.007,156,0.72,177,1.238,183,3.617,205,1.804,213,3.222,215,2.23,217,1.413,229,1.298,249,1.231,253,1.737,256,2.979,257,1.277,262,4.305,274,0.784,277,1.949,278,1.171,280,2.881,281,1.235,282,1.203,285,1.673,287,1.83,288,1.413,313,1.254,319,1.833,333,0.993,354,1.723,363,2.881,380,1.936,445,0.066,447,0.898,460,0.762,477,3.576,480,1.888,483,2.743,524,2.167,527,2.167,529,2.082,532,1.579,533,1.625,560,3.767,677,2.319,682,2.319,724,2.979,812,2.677,875,2.082,879,1.949,891,2.924,892,2.599,970,1.625,1026,3.442,1028,3.719,1030,6.134,1033,5.452,1036,5.452,1044,3.222,1045,3.442,1050,1.949,1096,2.979,1182,2.014,1434,2.777,1490,3.719,1499,4.089,1502,4.089,1512,4.089,1519,4.089,1526,4.089,1527,4.089,1762,4.051,1947,4.296,2129,5.043,2140,3.021,2144,5.452,2152,4.089,2163,4.089,2164,6.134,2165,5.452,2167,6.134,2168,6.543,2169,7.271,2170,4.089,2171,5.452,2172,4.089,2174,4.296,2175,3.222,2176,3.222,2177,3.222,2178,4.089,2179,3.442,2180,3.222,2718,3.479,2720,3.479,2737,3.092,2745,3.495,2766,4.959,2767,3.719,2768,3.719,2806,2.881,2881,4.558,2883,3.038,2910,4.089,4065,5.721,4066,6.977,4067,6.201,4068,6.201,4069,6.201,4070,6.201,4071,6.201,4072,6.201,4073,4.65,4074,6.201,4075,4.65,4076,6.201,4077,6.201,4078,4.65,4079,6.201,4080,6.201,4081,4.65,4082,6.201,4083,4.65,4084,4.65,4085,4.65,4086,4.65,4087,4.65,4088,4.65,4089,4.65,4090,4.65,4091,4.65,4092,4.65,4093,4.65,4094,4.65,4095,4.65,4096,4.65,4097,4.65,4098,4.65,4099,4.65,4100,6.201,4101,4.65,4102,4.65,4103,4.65,4104,4.65,4105,4.65,4106,4.65,4107,4.65,4108,4.65,4109,4.65,4110,6.201,4111,4.65,4112,4.65,4113,4.65,4114,4.65,4115,4.089,4116,4.089,4117,4.65,4118,4.089,4119,4.65,4120,4.65,4121,4.65,4122,4.089,4123,4.089,4124,4.65,4125,4.089,4126,6.201,4127,4.65,4128,4.65,4129,4.65,4130,6.201,4131,6.201]],["title/injectables/SetItemToDisplayService.html",[445,0.046,4132,3.448]],["body/injectables/SetItemToDisplayService.html",[3,0.099,4,0.083,8,0.068,29,0.264,30,0.448,35,0.68,44,0.011,46,0.909,47,0.511,48,0.619,56,0.732,57,0.377,58,0.51,60,0.68,68,0.313,71,0.247,73,0.099,74,0.264,86,1.452,87,2.986,121,1.37,152,0.009,153,0.009,156,0.992,177,1.148,274,1.079,313,1.362,445,0.08,447,1.237,460,1.05,531,5.122,565,3.61,889,3.784,890,3.194,900,3.458,902,3.458,1061,6.465,1088,6.671,2183,3.61,2262,5.256,2718,3.194,2720,3.194,2737,3.194,4048,5.122,4049,5.122,4051,5.122,4132,6.067,4133,7.349,4134,7.587,4135,7.587,4136,6.405,4137,6.405,4138,7.587,4139,6.405,4140,5.631]],["title/injectables/SetLanguageService.html",[285,1.551,445,0.046]],["body/injectables/SetLanguageService.html",[3,0.077,4,0.065,8,0.053,29,0.206,30,0.4,35,0.582,43,0.464,44,0.011,45,0.818,46,0.922,47,0.61,48,0.623,56,0.738,57,0.38,58,0.514,60,0.753,68,0.206,71,0.192,73,0.077,74,0.206,90,1.251,121,1.064,152,0.007,153,0.007,156,0.773,172,2.525,177,1.155,197,2.318,205,2.315,214,3.258,215,2.751,217,2.324,219,4.13,221,3.675,224,4.311,229,1.733,257,1.515,285,2.336,307,2.771,313,1.483,333,1.052,363,4.738,445,0.069,447,0.964,460,0.817,680,2.586,883,3.47,889,3.601,956,3.09,970,2.269,972,4.07,980,3.675,1022,3.907,1123,4.385,1133,3.988,1786,3.258,1971,2.908,2221,5.933,2222,6.848,2481,3.831,3014,6.974,4065,5.41,4141,4.385,4142,6.494,4143,6.494,4144,6.494,4145,4.988,4146,6.494,4147,8.396,4148,4.988,4149,7.649,4150,6.494,4151,7.649,4152,6.494,4153,4.988,4154,7.221,4155,6.494,4156,4.988,4157,7.221,4158,6.494,4159,4.988,4160,4.988,4161,6.494,4162,6.494,4163,4.385,4164,4.988,4165,4.988,4166,4.988,4167,4.988,4168,4.988,4169,4.988,4170,4.988,4171,4.988,4172,6.494,4173,6.494,4174,6.494,4175,6.494,4176,6.494,4177,6.494,4178,6.494,4179,6.494,4180,6.494,4181,4.988,4182,4.988,4183,6.494,4184,6.494,4185,6.494,4186,6.494,4187,4.988,4188,4.988]],["title/injectables/SetSelectedItemsListService.html",[445,0.046,4189,3.448]],["body/injectables/SetSelectedItemsListService.html",[3,0.102,4,0.086,8,0.07,29,0.274,35,0.695,44,0.01,47,0.53,48,0.594,56,0.641,57,0.33,58,0.447,60,0.596,68,0.274,71,0.256,73,0.102,74,0.274,86,1.507,121,1.09,152,0.009,153,0.009,156,1.03,172,2.71,197,2.636,229,1.392,257,1.217,307,2.194,319,2.427,445,0.082,447,1.284,460,1.09,515,4.118,523,5.845,1142,4.118,2183,3.747,2481,3.921,2758,5.316,2841,3.747,3935,5.845,4065,5.364,4189,6.201,4190,7.755,4191,6.648,4192,7.755,4193,6.648,4194,4.343]],["title/injectables/SetSubtitleService.html",[445,0.046,4195,3.448]],["body/injectables/SetSubtitleService.html",[3,0.102,4,0.086,8,0.07,29,0.272,30,0.427,35,0.692,43,0.424,44,0.01,45,0.614,46,0.937,47,0.526,48,0.646,56,0.636,57,0.327,58,0.444,60,0.692,61,1.309,68,0.272,71,0.254,73,0.102,74,0.272,152,0.009,153,0.009,156,1.022,177,1.162,197,2.627,205,2.117,256,3.71,445,0.082,447,1.275,460,1.081,2437,6.876,4065,5.618,4195,6.174,4196,5.801,4197,7.721,4198,7.721,4199,6.598,4200,6.598,4201,5.801,4202,6.598,4203,6.598]],["title/injectables/SetTimeService.html",[445,0.046,2251,3.192]],["body/injectables/SetTimeService.html",[3,0.077,4,0.065,8,0.053,29,0.208,30,0.361,35,0.585,43,0.493,44,0.011,45,0.828,46,0.714,47,0.401,48,0.588,56,0.63,57,0.324,58,0.439,60,0.585,68,0.208,71,0.194,73,0.077,74,0.208,89,2.177,90,0.871,152,0.008,153,0.008,156,0.779,177,1.157,197,2.327,205,2.247,215,2.76,217,2.476,219,4.142,221,3.686,313,1.398,333,0.97,363,3.114,380,1.57,445,0.069,447,0.971,460,0.824,542,4.02,544,2.965,584,2.33,730,3.114,739,5.739,784,2.65,980,3.136,1160,2.827,1161,4.42,1173,5.739,1260,3.136,2200,5.739,2251,4.832,2284,6.746,4065,5.194,4204,4.42,4205,7.249,4206,6.527,4207,5.027,4208,6.527,4209,5.027,4210,8.575,4211,6.527,4212,5.027,4213,6.527,4214,6.527,4215,6.527,4216,7.672,4217,6.527,4218,6.527,4219,7.672,4220,7.672,4221,6.527,4222,7.672,4223,6.527,4224,6.527,4225,6.527,4226,6.527,4227,6.527,4228,7.672,4229,6.527,4230,6.527,4231,6.527,4232,6.527,4233,6.527,4234,7.672,4235,6.527,4236,6.527,4237,6.527,4238,6.527,4239,6.527,4240,6.527,4241,6.527,4242,6.527,4243,6.527,4244,6.527,4245,7.672,4246,6.527,4247,6.527,4248,6.527,4249,6.527,4250,7.672,4251,6.527,4252,6.527,4253,6.527,4254,6.527,4255,6.527,4256,6.527,4257,6.527,4258,6.527,4259,6.527,4260,6.527,4261,6.527,4262,6.527,4263,6.527,4264,5.027,4265,5.027,4266,7.249,4267,5.027,4268,5.027,4269,5.027,4270,5.027,4271,5.027,4272,5.027,4273,6.527,4274,5.027,4275,5.027,4276,5.027,4277,8.41,4278,5.027,4279,5.027,4280,5.027,4281,5.027,4282,5.027,4283,7.951,4284,5.027,4285,6.527,4286,6.527,4287,5.027,4288,5.027,4289,5.027,4290,5.027,4291,5.027]],["title/interfaces/Snak.html",[301,0.727,877,2.43]],["body/interfaces/Snak.html",[3,0.063,4,0.053,8,0.043,20,0.905,29,0.169,30,0.391,43,0.477,44,0.011,45,0.818,47,0.327,58,0.475,68,0.306,71,0.158,73,0.063,74,0.169,86,1.785,87,2.239,90,0.986,121,1.071,152,0.007,153,0.007,156,0.635,172,2.6,177,0.808,215,1.474,217,2.477,229,0.858,249,1.129,253,2.078,257,0.75,274,0.691,278,1.032,281,1.088,282,1.06,285,1.474,287,1.613,288,1.729,301,1.25,313,1.489,321,3.141,327,3.197,331,3.301,332,3.689,333,1.007,354,2.421,445,0.06,460,0.672,491,2.331,527,1.432,529,1.835,537,2.22,584,2.638,589,3.477,590,3.98,591,2.31,594,3.565,650,3.439,671,3.207,674,2.417,677,3.829,682,2.044,693,3.596,812,2.833,838,3.521,843,1.613,873,2.539,874,2.539,875,3.439,876,2.213,877,4.438,878,3.072,879,1.718,880,4.27,881,3.717,882,3.717,883,3.393,884,4.613,885,4.847,886,3.207,887,3.356,888,4.165,889,2.044,890,2.044,891,1.718,892,1.718,893,4.645,894,3.356,895,2.677,896,2.677,897,2.677,898,2.539,899,4.529,900,3.529,901,4.27,902,4.335,903,4.27,904,4.847,905,4.27,906,4.27,907,4.049,908,4.27,909,3.56,910,3.162,911,2.539,912,2.539,913,4.613,914,4.613,915,2.677,916,2.677,917,4.376,918,3.717,919,3.717,920,3.525,921,2.677,922,2.677,923,2.539,924,2.677,925,3.717,926,3.717,927,3.717,928,3.393,929,2.417,930,2.677,931,3.717,932,2.677,933,3.525,934,3.525,935,2.677,936,2.539,937,2.677,938,2.677,939,2.677,940,2.677,941,3.717,942,2.677,943,2.677,944,3.717,945,2.677,946,2.677,947,2.677,948,2.677,949,2.677,950,2.677,951,2.417,952,2.677,953,2.677,954,2.31,955,2.677,956,2.539,957,2.677,958,3.356,959,2.677,960,2.31,961,2.677,962,2.31,963,2.539,964,2.677,965,2.677,966,2.677,967,2.677,968,2.677,969,2.677,970,1.432,971,2.677,972,3.207,973,3.717,974,2.677,975,2.677,976,2.677,977,2.539,978,2.762,979,3.717,980,3.689,981,2.677,982,2.677,983,3.717,984,3.525,985,2.539,986,2.677,987,2.539,988,2.677,989,2.31,990,2.677,991,2.417,992,2.677,993,2.677,994,2.044,995,2.31,996,3.525,997,2.677,998,2.677,999,2.677,1000,2.417,1001,4.596,1002,2.677,1003,2.677,1004,2.677,1005,2.677,1006,2.417,1007,2.539,1008,2.539,1009,2.539,1010,3.717,1011,2.677,1012,2.677,1013,2.677,1014,2.677,2221,2.839]],["title/components/SociabilityDisplayComponent.html",[0,0.707,132,1.507]],["body/components/SociabilityDisplayComponent.html",[0,1.023,1,1.314,2,1.927,3,0.058,4,0.049,5,1.394,6,1.394,7,1.394,8,0.04,11,1.082,16,1.112,17,2.76,18,2.685,19,1.768,21,1.423,22,1.386,23,1.673,24,2.615,25,1.673,27,2.175,29,0.155,30,0.297,35,0.48,38,2.399,43,0.344,44,0.011,45,0.498,46,0.534,47,0.3,48,0.55,56,0.363,57,0.31,58,0.253,60,0.48,61,1.063,68,0.317,70,2.18,71,0.145,72,1.175,73,0.058,74,0.155,90,0.928,92,1.353,93,1.28,94,1.353,95,1.985,96,1.985,97,1.394,98,2.245,99,1.394,100,1.353,101,2.662,102,1.394,103,1.277,104,1.394,105,1.314,106,1.112,107,3.096,108,1.314,109,1.314,110,1.082,111,1.277,112,1.394,113,1.277,114,1.314,115,1.394,116,1.314,117,1.314,118,1.353,119,1.277,120,1.314,121,1.26,122,1.394,123,1.314,124,1.394,125,1.277,126,1.394,127,1.277,128,1.314,129,1.314,130,1.394,131,1.277,132,2.376,133,2.814,134,1.314,135,1.277,136,1.314,137,1.394,138,1.314,139,1.394,140,1.314,141,1.394,142,1.314,143,1.394,144,1.314,145,1.394,146,1.72,147,1.314,148,1.314,149,1.845,150,1.394,151,1.394,152,0.006,153,0.006,160,2.18,164,2.702,165,3.681,229,1.423,249,0.746,294,1.394,295,1.314,300,2.219,364,3.903,480,3.033,544,4.011,558,3.525,559,4.212,560,4.6,561,4.011,628,6.319,680,3.525,754,1.807,755,2.244,756,3.369,757,2.672,758,2.672,759,4.695,760,3.5,761,4.442,762,2.606,764,3.5,766,2.458,768,1.819,769,2.33,770,1.353,771,2.33,772,2.458,773,1.95,774,2.458,775,3.5,776,1.807,777,1.807,778,2.458,779,2.458,780,2.458,781,2.458,782,4.212,783,5.133,784,2.76,785,3.5,786,4.442,787,4.442,788,4.442,789,3.77,790,4.761,791,4.442,792,4.442,793,2.458,794,3.5,795,3.5,796,4.442,797,3.5,798,3.5,799,3.5,800,3.319,801,3.5,802,3.319,803,3.5,804,2.458,805,2.458,806,3.5,807,3.5,808,2.458,809,2.458,810,2.458,811,2.458,812,1.927,813,3.5,814,2.458,815,3.5,816,5.794,817,4.867,818,4.88,819,3.5,820,4.442,821,2.458,822,4.88,823,5.36,824,2.458,825,3.5,826,3.5,827,4.076,828,2.458,829,3.019,830,2.458,831,2.458,832,3.319,833,3.5,834,3.5,835,2.458,836,4.076,837,2.458,838,2.672,839,4.88,840,3.5,841,3.5,842,4.88,843,2.108,844,3.5,845,2.458,846,2.458,847,3.319,848,2.458,849,2.458,850,2.458,851,2.458,852,2.458,853,2.458,854,2.458,855,2.458,856,2.458,857,2.458,858,2.33,859,2.458,860,2.458,861,4.076,862,2.458,863,2.458,864,2.458,1755,3.008,1756,2.458,2572,2.33,4292,6.568,4293,6.568]],["title/injectables/SortingDataAccessorService.html",[445,0.046,4294,3.448]],["body/injectables/SortingDataAccessorService.html",[3,0.092,4,0.077,8,0.063,29,0.246,35,0.651,43,0.382,44,0.011,45,0.841,47,0.679,48,0.556,56,0.574,57,0.295,58,0.4,60,0.534,68,0.246,71,0.23,73,0.092,74,0.246,152,0.008,153,0.008,156,0.922,195,4.407,197,2.515,313,1.434,333,0.995,445,0.077,447,1.15,455,2.785,460,0.976,886,4.092,1182,3.764,2019,7.078,3524,5.806,4294,5.806,4295,6.888,4296,5.235,4297,7.261,4298,5.954,4299,7.261,4300,5.954,4301,6.888,4302,7.172,4303,6.888,4304,7.261,4305,7.261,4306,7.261,4307,7.261,4308,5.954,4309,7.261,4310,5.954,4311,7.261,4312,6.384]],["title/components/SourcesDisplayComponent.html",[0,0.707,134,1.507]],["body/components/SourcesDisplayComponent.html",[0,1.017,1,1.302,2,1.914,3,0.057,4,0.048,5,1.38,6,1.38,7,1.38,8,0.039,11,1.072,16,1.101,17,2.758,18,2.683,19,1.756,20,0.822,21,1.413,22,1.376,23,1.661,24,2.601,25,1.661,27,2.16,29,0.154,30,0.295,35,0.477,38,2.383,43,0.342,44,0.011,45,0.495,46,0.529,47,0.297,48,0.57,56,0.359,57,0.308,58,0.251,60,0.556,61,1.232,68,0.316,69,1.613,70,2.169,71,0.144,72,1.163,73,0.057,74,0.154,90,0.922,92,1.34,93,1.271,94,1.34,95,1.971,96,1.971,97,1.38,98,2.235,99,1.38,100,1.34,101,2.652,102,1.38,103,1.265,104,1.38,105,1.302,106,1.101,107,3.091,108,1.302,109,1.302,110,1.072,111,1.265,112,1.38,113,1.265,114,1.302,115,1.38,116,1.302,117,1.302,118,1.34,119,1.265,120,1.302,121,1.256,122,1.38,123,1.302,124,1.38,125,1.265,126,1.38,127,1.265,128,1.302,129,1.302,130,1.38,131,1.265,132,1.302,133,1.265,134,2.366,135,2.809,136,1.302,137,1.38,138,1.302,139,1.38,140,1.302,141,1.38,142,1.302,143,1.38,144,1.302,145,1.38,146,1.708,147,1.302,148,1.302,149,1.835,150,1.38,151,1.38,152,0.006,153,0.006,160,2.169,164,2.688,165,3.661,193,3.138,229,1.417,249,0.739,294,1.38,295,1.302,300,2.198,364,3.897,480,3.023,544,3.993,558,3.51,559,4.194,560,4.594,561,3.993,631,6.295,680,3.51,754,1.79,755,2.232,756,3.351,757,2.653,758,2.653,759,4.678,760,3.476,761,4.423,763,2.758,764,3.476,766,2.434,768,1.807,770,1.34,771,2.308,772,2.434,773,1.931,774,2.434,775,3.476,776,1.79,777,1.79,778,2.434,779,2.434,780,2.434,781,2.434,782,4.194,783,5.12,784,2.748,785,3.476,786,4.423,787,4.423,788,4.423,789,3.764,790,4.748,791,4.423,792,4.423,793,2.434,794,3.476,795,3.476,796,4.423,797,3.476,798,3.476,799,3.476,800,3.296,801,3.476,802,3.296,803,3.476,804,2.434,805,2.434,806,3.476,807,3.476,808,2.434,809,2.434,810,2.434,811,2.434,812,1.914,813,3.476,814,2.434,815,3.476,816,5.789,817,4.855,818,4.865,819,3.476,820,4.423,821,2.434,822,4.865,823,5.35,824,2.434,825,3.476,826,3.476,827,4.055,828,2.434,829,2.999,830,2.434,831,2.434,832,3.296,833,3.476,834,3.476,835,2.434,836,4.055,837,2.434,838,2.653,839,4.865,840,3.476,841,3.476,842,4.865,843,2.094,844,3.476,845,2.434,846,2.434,847,3.296,848,2.434,849,2.434,850,2.434,851,2.434,852,2.434,853,2.434,854,2.434,855,2.434,856,2.434,857,2.434,858,2.308,859,2.434,860,2.434,861,4.055,862,2.434,863,2.434,864,2.434,1756,2.434,2571,2.308,4313,6.739,4314,6.739,4315,3.276,4316,2.434,4317,3.726,4318,3.726,4319,3.726]],["title/components/Sparql0DisplayComponent.html",[0,0.707,136,1.507]],["body/components/Sparql0DisplayComponent.html",[0,1.045,1,1.367,2,1.982,3,0.06,4,0.051,5,1.45,6,1.45,7,1.45,8,0.041,11,1.126,14,1.674,15,3.761,16,1.157,17,2.769,18,2.694,19,1.819,20,1.527,21,1.463,22,1.957,23,1.72,25,1.72,29,0.162,30,0.305,35,0.494,36,3.25,38,2.467,43,0.54,44,0.011,45,0.644,46,1.146,47,0.644,48,0.664,53,3.25,54,4.082,56,0.704,57,0.386,58,0.491,59,2.308,60,0.678,61,1.447,68,0.341,70,2.228,71,0.151,72,1.222,73,0.06,74,0.162,86,1.248,89,1.694,92,1.407,93,1.316,94,1.407,95,2.041,96,2.041,97,1.45,98,2.284,99,1.45,100,1.407,101,2.702,102,1.45,103,1.329,104,1.45,105,1.367,106,1.157,107,3.116,108,1.367,109,1.367,110,1.126,111,1.329,112,1.45,113,1.329,114,1.367,115,1.45,116,1.367,117,1.367,118,1.407,119,1.329,120,1.367,121,0.641,122,1.45,123,1.367,124,1.45,125,1.329,126,1.45,127,1.329,128,1.367,129,1.367,130,1.45,131,1.329,132,1.367,133,1.329,134,1.367,135,1.329,136,2.418,137,2.94,138,1.367,139,1.45,140,1.367,141,1.45,142,1.367,143,1.45,144,1.367,145,1.45,146,1.768,147,1.367,148,1.367,149,2.237,150,1.45,151,1.45,152,0.006,153,0.006,154,2.308,158,2.761,160,2.228,161,4.165,162,4.165,164,2.761,166,3.105,177,1.074,188,3.9,202,2.509,205,1.649,249,0.776,257,1.008,261,2.309,274,0.659,275,1.589,294,1.45,295,1.367,297,1.694,319,1.157,333,0.477,364,2.554,370,4.078,371,3.44,386,2.556,392,2.556,399,2.711,446,2.113,455,1.72,483,3.25,490,2.308,491,1.292,524,1.925,532,1.329,533,1.367,556,4.521,754,1.88,755,2.293,757,2.747,758,3.18,768,2.695,769,2.424,770,1.407,776,1.88,777,1.88,789,1.752,928,2.647,978,1.407,1142,2.424,1172,2.113,1207,1.752,1234,2.556,1634,2.897,1759,2.556,1924,3.366,1945,3.18,1949,2.424,1950,2.424,1966,2.855,1967,3.064,1968,1.88,1969,2.956,1970,1.814,1971,1.752,1988,3.95,1989,3.413,1996,1.951,2058,3.413,2059,2.424,2061,2.424,2062,2.424,2064,3.413,2066,2.424,2090,3.599,2092,3.599,2129,3.413,2142,3.599,2148,3.599,2181,3.44,2183,2.205,2313,3.95,2334,5.099,2343,4.405,2366,4.405,2389,3.44,2430,3.599,2431,3.599,2432,3.44,2433,3.44,2434,3.44,2435,3.44,2436,4.844,2437,3.129,2445,3.44,2455,3.44,2571,2.424,2572,2.424,2583,3.593,2596,1.88,3522,2.711,3967,3.44,3971,4.765,3981,2.556,4013,2.556,4014,4.844,4194,2.556,4316,2.556,4320,7.653,4321,7.653,4322,3.817,4323,3.817,4324,5.606,4325,3.817,4326,3.817,4327,3.817,4328,3.817,4329,3.817,4330,4.417,4331,4.417,4332,3.44,4333,3.913,4334,2.711,4335,3.44,4336,3.913,4337,3.44,4338,2.556,4339,4.844,4340,2.711,4341,2.711,4342,2.711,4343,2.711,4344,2.711,4345,2.711,4346,2.711,4347,2.711,4348,2.711,4349,3.913,4350,3.913,4351,3.913,4352,3.913,4353,3.913,4354,3.913,4355,4.417,4356,2.711,4357,3.817,4358,3.817,4359,2.711,4360,2.711,4361,3.129,4362,3.913,4363,3.913,4364,3.817,4365,3.817,4366,2.711,4367,2.711,4368,2.711,4369,2.711,4370,2.711,4371,3.913,4372,3.913,4373,2.711,4374,2.711,4375,2.711,4376,3.913,4377,3.913,4378,3.913,4379,3.913,4380,3.817,4381,2.711,4382,3.913,4383,2.711,4384,2.711,4385,2.711,4386,3.913,4387,3.817,4388,2.711,4389,4.844,4390,3.817,4391,3.817,4392,3.817,4393,2.711,4394,3.913,4395,3.913,4396,3.913,4397,2.711]],["title/components/Sparql1DisplayComponent.html",[0,0.707,138,1.507]],["body/components/Sparql1DisplayComponent.html",[0,0.963,1,1.182,2,1.785,3,0.052,4,0.044,5,1.253,6,1.253,7,1.253,8,0.036,11,0.973,14,1.507,15,3.466,16,1,17,2.734,18,2.66,19,1.638,20,1.685,21,1.318,22,2.1,23,1.549,25,1.549,29,0.14,30,0.275,35,0.445,36,2.926,38,2.222,43,0.554,44,0.011,45,0.807,46,1.204,47,0.677,48,0.671,53,2.926,54,3.817,56,0.665,57,0.393,58,0.463,59,1.995,60,0.646,61,1.367,68,0.331,70,2.053,71,0.13,72,1.056,73,0.052,74,0.14,86,1.124,89,1.465,90,0.586,91,4.362,92,1.217,93,1.185,94,1.217,95,1.838,96,1.838,97,1.253,98,2.136,99,1.253,100,1.217,101,2.553,102,1.253,103,1.149,104,1.253,105,1.182,106,1,107,3.038,108,1.182,109,1.182,110,0.973,111,1.149,112,1.253,113,1.149,114,1.182,115,1.253,116,1.182,117,1.182,118,1.217,119,1.149,120,1.182,121,0.554,122,1.253,123,1.182,124,1.253,125,1.149,126,1.253,127,1.149,128,1.182,129,1.182,130,1.253,131,1.149,132,1.182,133,1.149,134,1.182,135,1.149,136,1.182,137,1.253,138,2.261,139,2.828,140,1.182,141,1.253,142,1.182,143,1.253,144,1.182,145,1.253,146,1.593,147,1.182,148,1.182,149,1.737,150,1.253,151,1.253,152,0.006,153,0.006,154,1.995,158,2.544,160,2.053,161,3.838,162,3.838,164,2.544,166,2.796,177,1.023,188,3.884,202,2.834,205,1.52,249,0.671,257,0.908,261,1.418,262,3.172,274,0.57,275,1.373,294,1.253,295,1.182,297,1.465,319,1,333,0.412,364,2.3,446,1.826,455,1.549,483,2.926,490,1.995,491,1.117,524,1.733,532,1.149,533,1.182,556,4.228,650,2.3,754,1.625,755,2.113,757,2.474,758,2.93,768,2.689,769,2.095,770,1.217,776,1.625,777,1.625,789,1.515,928,2.384,978,1.217,1142,2.095,1172,1.826,1190,3.311,1202,3.437,1207,1.515,1218,3.64,1221,3.241,1757,2.974,1758,2.705,1759,2.21,1790,5.166,1822,5.166,1877,2.705,1890,2.974,1913,2.974,1924,3.306,1940,2.705,1941,2.504,1945,2.93,1949,2.095,1950,2.095,1966,2.631,1967,2.823,1968,1.625,1969,2.724,1970,1.568,1971,1.515,1988,3.64,1989,3.073,1996,1.687,2058,3.073,2059,2.095,2061,2.095,2062,2.095,2064,3.073,2066,2.095,2090,3.241,2092,3.241,2142,3.241,2148,3.241,2313,3.64,2334,4.698,2343,3.967,2366,3.967,2430,4.228,2431,4.228,2481,1.995,2571,2.095,2572,2.095,2583,3.311,2596,1.625,2819,2.21,2841,1.906,3971,5.511,3981,2.21,4013,2.21,4194,2.21,4316,2.21,4322,3.437,4323,3.437,4324,5.166,4325,4.07,4326,4.07,4327,4.07,4328,4.07,4329,3.437,4330,4.07,4331,4.07,4334,3.437,4338,2.21,4339,4.362,4340,2.343,4341,2.343,4342,2.343,4343,2.343,4344,2.343,4345,2.343,4346,2.343,4347,2.343,4348,2.343,4355,4.07,4356,5.396,4357,3.437,4358,2.343,4359,2.343,4360,2.343,4361,2.705,4364,3.437,4365,3.437,4366,2.343,4367,3.437,4368,2.343,4369,2.343,4370,2.343,4373,2.343,4374,2.343,4375,2.343,4380,4.07,4381,2.343,4383,2.343,4384,2.343,4385,2.343,4387,3.437,4388,2.343,4389,4.362,4390,4.484,4391,3.437,4392,3.437,4393,2.343,4397,3.437,4398,7.715,4399,7.715,4400,5.875,4401,5.875,4402,5.166,4403,5.875,4404,5.875,4405,4.349,4406,5.875,4407,5.166,4408,5.875,4409,3.382,4410,3.382,4411,3.382,4412,3.382,4413,3.382,4414,3.382,4415,3.382,4416,4.961,4417,4.362,4418,4.362,4419,4.961,4420,2.974,4421,4.961,4422,3.382,4423,3.382,4424,4.362,4425,4.362,4426,3.382,4427,3.382,4428,2.504,4429,2.504,4430,2.974,4431,3.382,4432,3.382,4433,3.382,4434,3.382,4435,3.382,4436,4.961,4437,3.382,4438,3.382,4439,3.382,4440,3.382,4441,3.382,4442,2.974,4443,2.705,4444,2.504,4445,4.961,4446,4.961,4447,4.961]],["title/components/Sparql2DisplayComponent.html",[0,0.707,140,1.507]],["body/components/Sparql2DisplayComponent.html",[0,1.054,1,1.39,2,2.004,3,0.061,4,0.052,5,1.473,6,1.473,7,1.473,8,0.042,11,1.145,14,1.693,15,3.794,16,1.176,17,2.773,18,2.698,19,1.839,20,1.724,21,1.48,22,2.02,23,1.74,25,1.74,27,2.262,29,0.164,30,0.308,35,0.5,36,3.287,38,2.495,43,0.542,44,0.011,45,0.741,46,1.15,47,0.646,48,0.666,53,3.287,54,4.112,56,0.708,57,0.388,58,0.494,59,2.346,60,0.682,61,1.456,68,0.342,70,2.248,71,0.153,72,1.242,73,0.061,74,0.164,86,1.263,89,1.722,90,0.689,92,1.431,93,1.331,94,1.431,95,2.064,96,2.064,97,1.473,98,2.301,99,1.473,100,1.431,101,2.718,102,1.473,103,1.351,104,1.473,105,1.39,106,1.176,107,3.125,108,1.39,109,1.39,110,1.145,111,1.351,112,1.473,113,1.351,114,1.39,115,1.473,116,1.39,117,1.39,118,1.431,119,1.351,120,1.39,121,0.652,122,1.473,123,1.39,124,1.473,125,1.351,126,1.473,127,1.351,128,1.39,129,1.39,130,1.473,131,1.351,132,1.39,133,1.351,134,1.39,135,1.351,136,1.39,137,1.473,138,1.39,139,1.473,140,2.436,141,2.893,142,1.39,143,1.473,144,1.39,145,1.473,146,1.789,147,1.39,148,1.39,149,1.902,150,1.473,151,1.473,152,0.006,153,0.006,158,2.785,160,2.248,161,4.202,162,4.202,164,2.785,177,1.08,188,4.136,202,2.993,205,1.664,249,0.789,257,1.02,261,1.667,274,0.67,275,1.615,294,1.473,295,1.39,297,1.722,319,1.176,333,0.485,364,2.583,446,2.147,455,1.74,483,3.287,490,2.346,491,1.313,524,1.947,532,1.351,533,1.39,556,4.554,754,1.911,755,2.314,757,2.779,758,2.779,768,2.75,769,2.464,770,1.431,776,1.911,777,1.911,789,1.781,978,1.431,1142,2.464,1172,2.147,1207,1.781,1759,2.598,1924,3.451,1945,3.208,1949,2.464,1950,2.464,1966,2.881,1967,3.091,1968,1.911,1969,2.982,1970,1.844,1971,1.781,1988,3.985,1989,3.452,1996,1.983,2058,3.452,2059,2.464,2061,2.464,2062,2.464,2064,3.452,2066,2.464,2090,3.641,2092,3.641,2142,3.641,2148,3.641,2313,3.985,2430,4.554,2431,3.641,2481,2.346,2571,2.464,2572,2.464,2583,3.625,2596,1.911,2819,2.598,2841,2.241,3971,4.554,3981,2.598,4013,2.598,4194,2.598,4316,2.598,4322,3.861,4323,3.861,4325,4.456,4326,4.456,4327,4.456,4328,4.456,4329,3.861,4330,4.456,4331,4.456,4332,3.497,4334,3.861,4335,3.497,4337,3.497,4338,2.598,4340,2.755,4341,2.755,4342,2.755,4343,2.755,4344,2.755,4345,2.755,4346,2.755,4347,2.755,4348,2.755,4355,4.456,4356,3.861,4357,3.861,4358,3.861,4359,2.755,4360,2.755,4361,3.181,4364,3.861,4365,3.861,4366,2.755,4367,3.861,4368,2.755,4369,2.755,4370,2.755,4373,2.755,4374,2.755,4375,2.755,4380,4.456,4381,2.755,4383,2.755,4384,2.755,4385,2.755,4387,3.861,4388,2.755,4390,3.861,4391,3.861,4392,3.861,4393,2.755,4397,3.861,4405,4.762,4428,2.944,4429,2.944,4444,2.944,4448,7.667,4449,7.667,4450,6.433,4451,3.977,4452,3.977,4453,6.433,4454,3.977,4455,3.977]],["title/components/Sparql3DisplayComponent.html",[0,0.707,142,1.507]],["body/components/Sparql3DisplayComponent.html",[0,1.026,1,1.321,2,1.934,3,0.058,4,0.049,5,1.401,6,1.401,7,1.401,8,0.04,11,1.088,14,1.634,15,3.692,16,1.118,17,2.761,18,2.687,19,1.775,20,1.737,21,1.428,22,2.07,23,1.679,25,1.679,27,2.183,29,0.156,30,0.298,35,0.482,36,3.172,38,2.408,43,0.537,44,0.011,45,0.772,46,1.166,47,0.655,48,0.67,53,3.172,54,4.021,56,0.695,57,0.382,58,0.484,59,2.231,60,0.671,61,1.429,68,0.339,70,2.187,71,0.146,72,1.181,73,0.058,74,0.156,86,1.219,89,1.638,90,0.655,92,1.36,93,1.285,94,1.36,95,1.992,96,1.992,97,1.401,98,2.25,99,1.401,100,1.36,101,2.668,102,1.401,103,1.284,104,1.401,105,1.321,106,1.118,107,3.099,108,1.321,109,1.321,110,1.088,111,1.284,112,1.401,113,1.284,114,1.321,115,1.401,116,1.321,117,1.321,118,1.36,119,1.284,120,1.321,121,0.62,122,1.401,123,1.321,124,1.401,125,1.284,126,1.401,127,1.284,128,1.321,129,1.321,130,1.401,131,1.284,132,1.321,133,1.284,134,1.321,135,1.284,136,1.321,137,1.401,138,1.321,139,1.401,140,1.321,141,1.401,142,2.382,143,2.852,144,1.321,145,1.401,146,1.726,147,1.321,148,1.321,149,1.85,150,1.401,151,1.401,152,0.006,153,0.006,158,2.71,160,2.187,164,2.71,177,1.063,188,4.058,202,2.945,205,1.619,249,0.751,257,0.984,261,1.585,262,3.68,274,0.637,275,1.535,294,1.401,295,1.321,297,1.638,319,1.118,333,0.461,364,2.493,446,2.042,455,1.679,483,3.172,490,2.231,491,1.248,524,1.879,532,1.284,533,1.321,556,4.453,754,1.817,755,2.251,757,2.682,758,2.682,767,3.024,768,2.757,770,1.36,776,1.817,777,1.817,789,1.694,879,1.585,978,1.36,1142,2.343,1172,2.042,1207,1.694,1758,3.024,1759,2.471,1924,3.407,1945,3.121,1949,2.343,1950,2.343,1966,2.803,1967,3.007,1968,1.817,1969,2.901,1970,1.753,1971,1.694,1988,3.877,1989,3.331,1996,1.886,2058,3.331,2059,2.343,2061,2.343,2062,2.343,2064,3.331,2066,2.343,2090,3.513,2092,3.513,2142,3.513,2148,3.513,2313,3.877,2430,4.453,2431,3.513,2481,2.231,2571,2.343,2572,3.331,2583,3.527,2596,1.817,2819,2.471,2841,2.131,3277,5.451,3971,5.304,3981,2.471,4013,2.471,4194,2.471,4316,3.513,4322,3.726,4323,3.726,4325,4.336,4326,4.336,4327,4.336,4328,4.336,4329,3.726,4330,4.989,4331,4.989,4334,3.726,4338,2.471,4340,2.62,4341,2.62,4342,2.62,4343,2.62,4344,2.62,4345,2.62,4346,2.62,4347,2.62,4348,2.62,4355,4.336,4356,4.989,4357,3.726,4358,3.726,4359,2.62,4360,2.62,4364,3.726,4365,3.726,4366,2.62,4367,3.726,4368,2.62,4369,2.62,4370,2.62,4373,2.62,4374,2.62,4375,2.62,4380,4.336,4381,2.62,4383,2.62,4384,2.62,4385,2.62,4387,3.726,4388,2.62,4390,3.726,4391,3.726,4392,3.726,4393,2.62,4397,3.726,4405,4.633,4407,5.502,4420,3.325,4424,5.502,4425,5.502,4428,2.8,4429,2.8,4442,3.325,4443,3.024,4444,2.8,4456,7.711,4457,7.711,4458,6.258,4459,6.258,4460,3.782,4461,3.782,4462,3.782,4463,3.782,4464,3.782,4465,5.378,4466,3.325,4467,5.378,4468,3.782,4469,3.782,4470,3.782,4471,3.782,4472,3.782]],["title/components/Sparql4DisplayComponent.html",[0,0.707,144,1.507]],["body/components/Sparql4DisplayComponent.html",[0,1.047,1,1.371,2,1.985,3,0.06,4,0.051,5,1.454,6,1.454,7,1.454,8,0.041,11,1.129,14,1.677,15,3.767,16,1.16,17,2.77,18,2.695,19,1.822,20,1.717,21,1.466,22,2.054,23,1.724,25,1.724,27,2.241,29,0.162,30,0.306,35,0.495,36,3.256,38,2.472,43,0.531,44,0.011,45,0.739,46,1.146,47,0.644,48,0.669,53,3.256,54,4.087,56,0.704,57,0.386,58,0.491,59,2.315,60,0.679,61,1.449,68,0.342,70,2.231,71,0.151,72,1.225,73,0.06,74,0.162,86,1.251,89,1.699,90,0.68,92,1.411,93,1.319,94,1.411,95,2.045,96,2.045,97,1.454,98,2.287,99,1.454,100,1.411,101,2.705,102,1.454,103,1.332,104,1.454,105,1.371,106,1.16,107,3.118,108,1.371,109,1.371,110,1.129,111,1.332,112,1.454,113,1.332,114,1.371,115,1.454,116,1.371,117,1.371,118,1.411,119,1.332,120,1.371,121,0.643,122,1.454,123,1.371,124,1.454,125,1.332,126,1.454,127,1.332,128,1.371,129,1.371,130,1.454,131,1.332,132,1.371,133,1.332,134,1.371,135,1.332,136,1.371,137,1.454,138,1.371,139,1.454,140,1.371,141,1.454,142,1.371,143,1.454,144,2.421,145,2.882,146,1.772,147,1.371,148,1.371,149,1.888,150,1.454,151,1.454,152,0.006,153,0.006,158,2.765,160,2.231,164,2.765,177,1.075,188,4.115,202,2.98,205,1.651,249,0.779,257,1.01,261,1.645,274,0.661,275,1.593,294,1.454,295,1.371,297,1.699,319,1.16,333,0.478,364,2.559,446,2.119,455,1.724,483,3.256,490,2.315,491,1.295,524,1.929,532,1.332,533,1.371,556,4.527,754,1.885,755,2.297,757,2.753,758,2.753,768,2.742,769,2.431,770,1.411,776,1.885,777,1.885,789,1.757,978,1.411,1142,2.431,1172,2.119,1207,1.757,1759,2.563,1877,3.138,1924,3.439,1941,2.905,1945,3.184,1949,2.431,1950,2.431,1966,2.86,1967,3.068,1968,1.885,1969,2.96,1970,1.819,1971,1.757,1988,3.956,1989,3.419,1996,1.957,2058,3.419,2059,2.431,2061,2.431,2062,2.431,2064,3.419,2066,2.431,2090,3.606,2092,3.606,2142,3.606,2148,3.606,2313,3.956,2430,4.527,2431,3.606,2481,2.315,2571,2.431,2572,3.419,2583,3.599,2596,1.885,2819,2.563,2841,2.211,3971,5.083,3981,2.563,4013,2.563,4194,2.563,4316,3.606,4322,3.824,4323,3.824,4325,4.424,4326,4.424,4327,4.424,4328,4.424,4329,3.824,4330,5.059,4331,5.059,4334,3.824,4338,2.563,4340,2.718,4341,2.718,4342,2.718,4343,2.718,4344,2.718,4345,2.718,4346,2.718,4347,2.718,4348,2.718,4355,4.424,4356,4.424,4357,3.824,4358,3.824,4359,2.718,4360,2.718,4364,3.824,4365,3.824,4366,2.718,4367,3.824,4368,2.718,4369,2.718,4370,2.718,4373,2.718,4374,2.718,4375,2.718,4380,4.424,4381,2.718,4383,2.718,4384,2.718,4385,2.718,4387,3.824,4388,2.718,4390,3.824,4391,3.824,4392,3.824,4393,2.718,4397,3.824,4402,5.614,4405,4.727,4417,4.853,4418,4.853,4428,2.905,4429,2.905,4430,3.45,4443,3.138,4444,2.905,4466,3.45,4473,7.701,4474,7.701,4475,3.924,4476,3.924,4477,3.924,4478,3.924,4479,3.924,4480,3.924,4481,5.52,4482,3.924]],["title/interceptors/SparqlInterceptor.html",[4483,3.791,4484,3.448]],["body/interceptors/SparqlInterceptor.html",[3,0.097,4,0.081,8,0.066,14,1.906,22,1.938,29,0.259,30,0.415,35,0.672,43,0.403,44,0.011,46,0.891,47,0.501,48,0.614,56,0.605,57,0.311,58,0.422,60,0.562,68,0.343,71,0.242,73,0.097,74,0.259,152,0.009,153,0.009,156,0.972,177,1.138,197,2.572,249,1.487,253,2.245,278,1.887,281,1.666,282,1.622,284,3.886,313,1.057,333,0.977,445,0.079,460,1.028,1050,2.629,2140,2.716,4484,5.993,4485,6.273,4486,7.299,4487,5.516,4488,8.014,4489,7.494,4490,7.494,4491,7.494,4492,8.302,4493,8.014,4494,8.302,4495,6.273,4496,7.494,4497,6.273,4498,7.494,4499,6.273,4500,6.273,4501,6.273,4502,7.494,4503,6.273,4504,6.273,4505,6.273,4506,6.273,4507,6.589,4508,6.273,4509,6.273,4510,6.273]],["title/interfaces/Statement.html",[93,1.03,301,0.727]],["body/interfaces/Statement.html",[3,0.02,4,0.017,8,0.013,9,0.471,20,0.281,29,0.053,30,0.124,43,0.579,44,0.011,45,0.696,57,0.179,58,0.151,73,0.088,87,0.501,90,1.428,93,0.982,106,1.067,110,1.038,152,0.003,153,0.003,229,1.922,238,2.235,301,0.608,307,3.034,313,0.764,380,2.3,455,0.397,491,2.067,537,0.432,584,0.59,715,3.141,724,3.539,727,3.526,730,4.267,732,4.772,784,2.542,812,2.672,843,3.508,1083,0.611,1160,1.963,1170,3.936,1172,3.719,1180,0.881,1181,1.462,1182,2.118,1183,2.128,1184,3.009,1185,2.357,1186,5.416,1187,0.942,1188,0.611,1189,0.634,1190,2.034,1191,5.527,1192,0.942,1193,2.5,1194,5.527,1195,2.5,1196,5.527,1197,2.5,1198,5.527,1199,4.838,1200,2.5,1201,5.867,1202,2.076,1203,2.5,1204,4.091,1205,3.067,1206,4.838,1207,1.616,1208,4.838,1209,4.838,1210,2.5,1211,4.838,1212,5.058,1213,5.803,1214,2.5,1215,4.838,1216,4.838,1217,1.871,1218,2.235,1219,4.838,1220,2.128,1221,2.357,1222,1.948,1223,4.838,1224,2.5,1225,2.235,1226,4.838,1227,0.75,1228,1.768,1229,0.75,1230,0.75,1231,0.75,1232,0.942,1233,0.942,1234,1.958,1235,4.563,1236,4.478,1237,2.357,1238,2.357,1239,2.357,1240,2.357,1241,2.357,1242,1.551,1243,1.551,1244,1.551,1245,1.657,1246,1.657,1247,1.657,1248,1.657,1249,1.657,1250,1.462,1251,3.614,1252,1.551,1253,1.551,1254,1.551,1255,0.942,1256,0.942,1257,0.942,1258,0.717,1259,3.936,1260,3.355,1261,4.119,1262,4.119,1263,4.119,1264,4.119,1265,4.119,1266,3.782,1267,0.942,1268,0.634,1269,5.099,1270,5.099,1271,4.772,1272,5.099,1273,4.772,1274,2.076,1275,2.076,1276,2.076,1277,2.076,1278,2.076,1279,2.076,1280,2.076,1281,3.141,1282,2.076,1283,2.076,1284,2.076,1285,2.076,1286,2.076,1287,2.076,1288,2.076,1289,2.076,1290,2.076,1291,2.076,1292,2.076,1293,2.076,1294,2.076,1295,2.076,1296,3.044,1297,2.076,1298,2.076,1299,2.076,1300,2.076,1301,2.076,1302,2.076,1303,2.076,1304,3.141,1305,2.076,1306,2.076,1307,2.076,1308,2.076,1309,2.076,1310,2.076,1311,2.076,1312,2.076,1313,2.076,1314,2.076,1315,2.076,1316,2.076,1317,2.076,1318,2.076,1319,2.076,1320,2.076,1321,2.076,1322,2.076,1323,2.076,1324,2.076,1325,2.076,1326,3.141,1327,2.076,1328,2.076,1329,2.076,1330,2.076,1331,2.076,1332,2.076,1333,2.076,1334,2.076,1335,2.076,1336,2.076,1337,2.076,1338,2.076,1339,2.076,1340,2.076,1341,2.076,1342,2.076,1343,2.076,1344,2.076,1345,2.076,1346,2.076,1347,2.076,1348,3.141,1349,2.076,1350,2.076,1351,2.076,1352,2.076,1353,2.076,1354,2.076,1355,2.076,1356,2.076,1357,2.076,1358,2.076,1359,2.076,1360,2.076,1361,2.076,1362,2.076,1363,2.076,1364,2.076,1365,2.076,1366,2.076,1367,2.076,1368,2.076,1369,2.076,1370,3.141,1371,2.076,1372,2.076,1373,2.076,1374,2.076,1375,2.076,1376,2.076,1377,2.076,1378,2.076,1379,2.076,1380,2.076,1381,2.076,1382,2.076,1383,2.076,1384,2.076,1385,0.881,1386,3.356,1387,2.808,1388,3.141,1389,0.942,1390,0.942,1391,0.942,1392,0.942,1393,0.881]],["title/interfaces/Statement-1.html",[93,0.859,301,0.606,380,1.123]],["body/interfaces/Statement-1.html",[0,0.911,3,0.028,4,0.024,8,0.019,9,0.683,11,2.42,14,0.56,17,0.576,18,0.56,19,1.527,20,0.679,21,0.49,22,2.163,23,0.576,24,1.29,25,0.576,27,0.749,29,0.212,30,0.342,31,4.194,43,0.357,44,0.011,45,0.691,47,0.661,57,0.092,58,0.446,61,1.315,68,0.327,69,1.333,70,1.797,71,0.071,72,0.576,73,0.061,74,0.076,86,1.722,87,0.726,89,1.716,90,1.179,93,1.476,98,1.016,121,0.302,146,0.592,149,1.171,152,0.004,153,0.004,158,1.333,160,1.076,169,4.074,172,0.609,177,1.099,193,0.855,202,3.046,205,0.796,217,1.563,229,0.644,249,1.681,250,4.214,253,1.441,257,1.274,274,0.311,275,0.749,276,1.039,277,0.773,278,0.465,279,3.392,281,0.49,282,0.477,285,0.663,286,0.956,287,0.726,288,0.56,289,0.996,295,0.644,297,0.799,301,0.519,307,2.419,313,1.293,319,0.91,321,1.904,327,2.509,331,2.329,333,1.054,346,2.455,347,2.589,348,3.186,354,1.905,360,3.337,380,2.319,383,1.039,455,0.961,477,0.886,480,0.749,491,0.609,502,1.016,524,0.644,527,0.644,532,0.626,533,0.644,537,0.626,550,4.013,558,0.956,584,1.837,589,0.799,650,0.855,682,1.535,693,1.774,724,1.904,727,0.92,755,1.107,768,2.784,770,0.663,773,1.596,784,1.25,812,0.663,872,2.133,875,2.303,879,1.29,883,2.969,886,1.735,891,0.773,892,0.773,909,0.855,910,2.303,970,2.48,972,2.233,978,1.85,991,1.088,994,0.92,1022,1.479,1050,0.773,1052,0.92,1054,1.278,1056,2.498,1067,0.956,1083,1.904,1096,2.471,1157,1.143,1160,1.716,1170,1.039,1182,3.126,1183,1.088,1184,3.084,1185,1.205,1186,1.816,1188,3.183,1189,3.539,1217,1.596,1228,3.645,1229,1.816,1230,1.816,1231,1.816,1251,1.735,1258,1.735,1259,1.039,1260,0.886,1261,1.088,1262,1.088,1263,1.088,1264,1.816,1265,1.088,1266,1.088,1268,2.565,1394,0.886,1397,1.365,1402,2.011,1434,2.072,1443,1.365,1467,0.956,1477,1.205,1722,1.365,1783,2.462,1786,1.205,1924,0.799,1944,1.907,1945,1.535,1946,1.143,1961,1.205,1965,1.662,1966,1.379,1967,1.479,1968,0.886,1969,1.427,1970,0.855,1971,0.826,1973,2.011,1974,1.205,1975,1.205,1996,2.772,2013,4.546,2054,1.365,2055,1.143,2140,0.799,2218,2.011,2224,1.278,2229,1.475,2293,2.133,2295,2.933,2456,3.169,2499,1.278,2521,3.922,2552,0.92,2577,1.088,2586,1.088,2596,0.886,2602,4.037,2654,2.133,2656,1.278,2657,4.963,2661,1.475,2663,3.977,2664,2.133,2707,1.475,2716,1.205,2717,1.205,2718,1.535,2720,1.535,2729,1.143,2737,1.535,2745,1.735,2774,2.133,2794,1.143,2795,2.455,2797,1.907,2798,1.907,2799,1.907,2800,1.143,2801,1.143,2803,1.907,2804,1.907,2805,3.022,2806,1.907,2807,1.205,2809,1.205,2814,2.011,2817,1.143,2828,2.133,2846,1.205,2847,1.278,2848,4.713,2849,2.133,2853,1.278,2855,1.205,2856,1.278,2865,1.278,2868,5.207,2877,4.447,2881,2.589,2883,4.194,2884,4.281,2886,1.205,2887,4.716,2888,1.278,2891,1.278,2892,2.133,2895,3.853,2896,1.278,2902,5.001,2903,4.444,2904,1.205,2905,1.278,2906,2.133,2913,4.281,2919,4.085,2925,1.278,2943,1.143,2973,2.011,2988,1.365,3016,3.169,3042,2.133,3043,1.475,3044,2.745,3045,1.365,3046,2.133,3047,2.279,3048,1.365,3049,2.933,3050,1.365,3051,1.365,3052,1.365,3053,1.365,3054,1.365,3055,1.143,3056,1.365,3057,1.365,3058,1.143,3059,1.365,3060,1.365,3061,1.365,3062,1.365,3063,1.365,3064,1.365,3065,1.365,3066,3.425,3067,1.365,3068,1.622,3069,2.707,3070,1.622,3071,1.622,3072,1.622,3073,1.622,3074,4.887,3075,1.622,3076,2.707,3077,2.279,3078,1.622,3079,3.484,3080,1.622,3081,1.365,3082,1.365,3083,1.622,3084,1.622,3085,1.622,3086,1.365,3087,2.279,3088,2.279,3089,2.279,3090,2.279,3091,1.365,3092,2.279,3093,2.279,3094,2.279,3095,2.279,3096,1.622,3097,1.365,3098,1.365,3099,1.365,3100,1.365,3101,1.365,3102,1.365,3103,1.365,3104,1.365,3105,1.365,3106,2.933,3107,1.365,3108,1.365,3109,1.365,3110,1.365,3111,1.365,3112,1.365,3113,1.365,3114,1.365,3115,1.365,3116,1.365,3117,1.365,3118,1.365,3119,1.365,3120,1.622,3121,1.365,3122,1.622,3123,1.365,3124,1.622,3125,1.622,3126,4.114,3127,1.365,3128,1.365,3129,1.365,3130,1.365,3131,1.365,3132,1.365,3133,1.365,3134,1.365,3135,1.365,3136,3.425,3137,1.365,3138,1.365,3139,1.365,3140,1.365,3141,1.278,3142,1.278,3143,1.365,3144,2.745,3145,1.278,3146,1.278,3147,1.365,3148,1.365,3149,1.365,3150,1.365,3151,1.365,3152,1.365,3153,1.365,3154,1.365,3155,1.365,3156,1.365,3157,1.622,3158,1.365,3159,3.808,3160,1.365,3161,1.365,3162,1.365,3163,1.365,3164,1.365,3165,1.365,3166,1.365,3167,1.365,3168,1.365,3169,1.365,3170,1.365,3171,1.622,3172,1.622,3173,1.622,3174,1.365,3175,1.365,3176,2.933,3177,1.365,3178,1.365,3179,3.484,3180,4.068,3181,3.484,3182,2.707,3183,4.068,3184,1.622,3185,2.707,3186,1.622,3187,1.622,3188,2.707,3189,1.622,3190,1.622,3191,1.622,3192,2.707,3193,1.365,3194,1.365,3195,3.484,3196,2.707,3197,1.622,3198,1.622,3199,1.622,3200,1.622,3201,1.622,3202,2.707,3203,1.622,3204,1.365,3205,1.365,3206,1.365,3207,1.365,3208,2.933,3209,1.365,3210,3.808,3211,3.808,3212,1.365,3213,4.752,3214,1.365,3215,1.365,3216,1.365,3217,2.933,3218,2.279,3219,2.279,3220,3.484,3221,3.808,3222,3.425,3223,3.425,3224,2.933,3225,1.365,3226,1.365,3227,1.622,3228,1.365,3229,2.279,3230,1.365,3231,3.425,3232,2.279,3233,2.279,3234,4.114,3235,3.425,3236,2.933,3237,2.933,3238,1.365,3239,1.365,3240,1.365,3241,3.425,3242,1.365,3243,1.365,3244,1.365,3245,1.365,3246,4.365,3247,2.279,3248,1.365,3249,3.563,3250,1.365,3251,1.365,3252,2.279,3253,2.279,3254,1.365,3255,1.365,3256,1.365,3257,2.279,3258,2.279,3259,2.933,3260,1.365,3261,1.622,3262,1.475,3263,1.622,3264,1.622,3265,1.622,3266,1.622,3267,1.365,3268,1.365,3269,2.707,3270,1.622,3271,1.622,3272,1.622,3273,1.622,3274,1.622,3275,1.622,3276,1.622,3277,1.475,3278,4.068,3279,4.068,3280,3.808,3281,3.484,3282,2.707,3283,1.622,3284,2.707,3285,2.707,3286,1.622,3287,1.622,3288,1.622,3289,1.622,3290,1.622,3291,2.707,3292,1.622,3293,1.622,3294,1.622,3295,1.622,3296,1.622,3297,1.622,3298,2.707,3299,1.622,3300,1.622,3301,1.622,3302,1.622,3303,1.622,3304,1.622,3305,1.622,3306,1.622,3307,1.622,3308,1.622,3309,1.365,3310,1.365,3311,1.365,3312,1.365,3313,1.365,3314,1.622,3315,2.707,3316,1.622,3317,3.808,3318,1.622,3319,1.622,3320,1.622,3321,1.622,3322,1.622,3323,1.365,3324,2.279,3325,1.622,3326,1.622,3327,1.622,3328,1.622,3329,1.365,3330,1.622,3331,1.365,3332,1.622,3333,2.279,3334,1.622,3335,1.365,3336,1.365,3337,1.365,3338,1.365,3339,2.279,3340,2.279,3341,1.365,3342,1.622,3343,2.707,3344,2.462,3345,1.622,3346,1.622,3347,1.622,3348,1.622,3349,1.622,3350,1.622,3351,2.933,3352,2.707,3353,1.622,3354,1.622,3355,1.365,3356,1.365,3357,1.622,3358,1.365,3359,1.365,3360,1.365,3361,1.365,3362,2.707,3363,2.933,3364,1.365,3365,1.622,3366,1.365,3367,1.365,3368,1.622,3369,1.622,3370,1.622,3371,1.365,3372,1.622,3373,1.622,3374,1.622,3375,1.365,3376,1.365,3377,1.365,3378,1.365,3379,1.365,3380,1.365,3381,1.365,3382,1.365,3383,1.622,3384,2.707,3385,2.707,3386,1.622,3387,3.484,3388,4.068,3389,4.068,3390,3.484,3391,2.707,3392,2.707,3393,1.622,3394,1.365,3395,3.484,3396,2.707,3397,1.622,3398,3.484,3399,1.622,3400,1.622,3401,1.622,3402,1.622,3403,1.622,3404,2.707,3405,2.933,3406,2.707,3407,1.622,3408,1.622,3409,1.622,3410,2.707,3411,2.707,3412,1.622,3413,1.622,3414,1.622,3415,1.622,3416,1.622,3417,1.622,3418,1.622,3419,1.622,3420,1.622,3421,1.622,3422,1.365,3423,1.365,3424,1.622,3425,1.622,3426,2.707,3427,1.622,3428,1.622,3429,1.622,3430,1.622,3431,1.622,3432,1.365,3433,1.622,3434,1.365,3435,1.622,3436,1.622,3437,1.622,3438,1.622,3439,1.622,3440,2.707,3441,1.622,3442,2.707,3443,1.622,3444,2.707,3445,1.622,3446,1.622,3447,1.622,3448,1.622,3449,1.622,3450,1.622,3451,1.365,3452,1.622,3453,2.707,3454,1.622,3455,1.365,3456,1.622,3457,1.622,3458,1.622,3459,2.279,3460,1.622,3461,1.365,3462,1.622,3463,3.425,3464,1.622,3465,1.622,3466,1.622,3467,2.279,3468,1.622,3469,1.622,3470,1.622,3471,1.622,3472,1.622,3473,1.365,3474,1.365,3475,2.279,3476,1.365,3477,1.365,3478,1.365,3479,3.022,3480,1.365,3481,1.365,3482,1.365,3483,1.365,3484,2.279,3485,1.365,3486,1.365,3487,1.365,3488,1.365,3489,1.365,3490,1.365,3491,1.365,3492,2.279,3493,1.365,3494,1.365,3495,1.365,3496,2.279,3497,1.365,3498,2.279,3499,1.365,3500,1.365,3501,1.365,3502,1.365,3503,1.365,3504,1.365,3505,2.279,3506,1.365,3507,1.365,3508,1.365,3509,1.365,3510,1.365,3511,1.622,3512,1.622,3513,1.622,3514,1.365,3515,1.622,3516,1.622,3517,1.622,3518,1.622,3519,1.622,3520,1.622,3521,2.707,3522,1.278,3523,2.707,3524,2.462,3525,1.622,3526,1.622,3527,1.622,3528,1.622,3529,1.622,3530,1.622,3531,1.622,3532,1.622,3533,1.622,3534,1.622,3535,1.622,3536,1.622,3537,1.622,3538,1.622,3539,1.622,3540,1.622,3541,1.622,3542,1.622,3543,1.622,3544,1.622,3545,1.622,3546,1.365]],["title/interfaces/Statement-2.html",[93,0.859,301,0.606,724,1.728]],["body/interfaces/Statement-2.html",[0,0.7,3,0.032,4,0.027,8,0.022,9,0.761,11,2.419,14,0.624,17,0.641,18,0.624,19,0.678,20,0.742,21,0.545,22,2.108,23,0.641,24,1.41,25,0.641,27,0.833,29,0.318,30,0.357,31,1.341,43,0.376,44,0.011,45,0.64,47,0.659,57,0.102,58,0.462,61,1.162,68,0.333,69,1.457,70,1.726,71,0.079,72,0.641,73,0.066,74,0.085,86,1.558,87,0.808,90,1.245,93,1.683,146,0.659,152,0.004,153,0.004,158,1.457,160,1.175,169,3.951,172,0.678,173,2.521,177,1.069,193,0.952,202,2.964,205,0.87,217,1.298,229,0.704,249,1.677,250,4.263,253,1.197,257,1.181,274,0.346,275,0.833,276,1.157,277,0.86,278,0.517,279,3.429,281,0.545,282,0.531,285,0.738,286,1.064,287,0.808,288,0.624,289,1.108,295,0.717,297,0.889,301,0.567,307,2.206,311,1.422,313,1.284,319,0.607,321,2.62,327,3.016,331,2.8,332,2.374,333,1.022,337,1.52,340,3.163,346,2.647,347,3.826,348,3.831,354,2.547,359,3.423,360,3.608,380,2.351,383,1.157,455,1.05,477,0.986,480,0.833,491,0.678,502,1.411,524,0.717,527,0.717,532,0.697,533,0.717,537,0.697,541,1.422,550,3.807,558,1.064,584,1.981,589,2.361,591,1.157,594,0.986,688,1.642,692,1.341,693,3.079,724,0.986,727,1.677,755,1.21,768,2.754,770,0.738,773,1.064,784,1.366,872,1.422,875,2.442,879,1.41,883,0.986,891,0.86,892,0.86,909,1.559,910,3.079,958,1.211,960,1.157,970,2.335,978,1.961,989,1.157,994,1.024,1006,2.521,1022,1.616,1050,0.86,1052,1.024,1054,1.422,1056,2.668,1083,2.053,1096,2.62,1157,1.272,1160,1.85,1170,1.157,1181,2.792,1182,3.368,1183,4.154,1184,2.374,1186,1.984,1188,2.971,1189,2.131,1228,3.807,1229,1.984,1230,1.984,1231,1.984,1235,2.084,1236,1.272,1251,1.896,1258,1.896,1259,1.157,1260,0.986,1261,1.211,1262,1.211,1263,1.211,1264,1.211,1265,1.211,1266,1.211,1268,1.677,1394,0.986,1402,1.341,1434,2.992,1467,1.064,1477,3.228,1762,2.792,1873,1.52,1924,0.889,1944,2.084,1945,1.677,1946,1.272,1961,1.341,1965,1.816,1966,1.506,1967,1.616,1968,0.986,1969,1.559,1970,0.952,1971,0.919,1973,2.198,1974,1.341,1975,1.341,1996,2.719,2004,3.658,2013,4.696,2055,1.272,2140,0.889,2218,3.228,2224,1.422,2293,2.33,2499,1.422,2521,3.485,2552,1.024,2577,1.211,2586,1.211,2596,0.986,2602,4.04,2654,2.33,2656,1.422,2657,5.269,2663,4.139,2664,1.422,2715,1.52,2716,1.341,2717,1.341,2718,1.024,2720,1.024,2729,1.272,2737,1.024,2745,1.157,2774,1.422,2794,1.272,2795,2.647,2797,1.272,2798,2.084,2799,2.084,2800,1.272,2801,1.272,2803,2.084,2804,2.084,2805,3.228,2806,2.084,2807,1.341,2809,1.341,2814,2.198,2817,1.272,2828,2.33,2841,1.157,2846,1.341,2847,1.422,2848,4.763,2849,2.33,2853,1.422,2855,1.341,2856,1.422,2865,1.422,2868,4.629,2877,2.96,2881,2.198,2883,4.92,2884,4.98,2886,1.341,2887,4.78,2888,1.422,2891,1.422,2892,2.33,2895,4.04,2896,1.422,2902,4.284,2903,4.601,2904,1.341,2905,1.422,2906,2.33,2913,4.284,2919,4.284,2925,2.96,2943,1.272,2973,2.198,3042,2.33,3044,2.33,3045,1.52,3046,1.422,3047,2.49,3048,1.52,3049,2.49,3050,1.52,3051,1.52,3052,1.52,3053,1.52,3054,1.52,3055,1.272,3056,1.52,3057,1.52,3058,1.272,3059,1.52,3060,1.52,3061,1.52,3062,1.52,3063,1.52,3064,1.52,3065,1.52,3066,1.52,3067,1.52,3077,2.49,3081,1.52,3082,1.52,3086,1.52,3087,2.49,3088,2.49,3089,2.49,3090,2.49,3091,1.52,3092,2.49,3093,2.49,3094,2.49,3095,2.49,3097,1.52,3098,1.52,3099,1.52,3100,1.52,3101,1.52,3102,1.52,3103,1.52,3104,1.52,3105,1.52,3106,3.163,3107,1.52,3108,1.52,3109,1.52,3110,1.52,3111,1.52,3112,1.52,3113,1.52,3114,1.52,3115,1.52,3116,1.52,3117,1.52,3118,1.52,3119,1.52,3121,1.52,3123,1.52,3126,4.036,3127,1.52,3128,1.52,3129,1.52,3130,1.52,3131,1.52,3132,1.52,3133,1.52,3134,1.52,3135,1.52,3136,4.335,3137,1.52,3138,1.52,3139,1.52,3140,1.52,3141,1.422,3142,1.422,3143,1.52,3144,2.33,3145,1.422,3146,1.422,3147,1.52,3148,1.52,3149,1.52,3150,1.52,3151,1.52,3152,1.52,3153,1.52,3154,1.52,3155,1.52,3156,1.52,3158,1.52,3159,4.036,3160,1.52,3161,1.52,3162,1.52,3163,1.52,3164,1.52,3165,1.52,3166,1.52,3167,1.52,3168,1.52,3169,1.52,3170,1.52,3174,1.52,3175,1.52,3176,4.335,3177,4.036,3178,4.778,3193,1.52,3194,1.52,3204,1.52,3205,1.52,3206,1.52,3207,1.52,3208,3.163,3209,1.52,3210,3.163,3211,3.658,3212,1.52,3213,4.036,3214,1.52,3215,1.52,3216,1.52,3217,2.49,3218,2.49,3219,2.49,3221,3.163,3222,1.52,3223,2.49,3224,3.163,3225,1.52,3226,1.52,3228,1.52,3229,2.49,3230,1.52,3231,3.163,3232,2.49,3233,2.49,3234,4.335,3235,3.658,3236,3.163,3237,3.163,3238,1.52,3239,1.52,3240,1.52,3241,2.49,3242,1.52,3243,1.52,3244,1.52,3245,1.52,3246,1.52,3247,1.52,3248,1.52,3249,1.422,3250,1.52,3251,1.52,3252,1.52,3253,1.52,3254,1.52,3255,3.163,3256,1.52,3257,1.52,3258,1.52,3259,2.49,3260,1.52,3267,1.52,3268,1.52,3280,1.52,3309,1.52,3310,1.52,3311,1.52,3312,1.52,3313,1.52,3317,3.163,3323,1.52,3324,2.49,3329,1.52,3331,1.52,3333,2.49,3335,1.52,3336,1.52,3337,1.52,3338,1.52,3339,2.49,3340,2.49,3341,1.52,3351,3.163,3355,1.52,3356,1.52,3358,1.52,3359,1.52,3360,1.52,3361,1.52,3363,2.49,3364,1.52,3366,1.52,3367,1.52,3371,1.52,3375,1.52,3376,1.52,3377,1.52,3378,1.52,3379,1.52,3380,1.52,3381,1.52,3382,1.52,3394,1.52,3405,2.49,3422,1.52,3423,1.52,3432,1.52,3434,1.52,3451,3.163,3455,1.52,3459,1.52,3461,1.52,3463,2.49,3467,1.52,3473,1.52,3474,1.52,3475,2.49,3476,1.52,3477,1.52,3478,1.52,3479,3.228,3480,1.52,3481,1.52,3482,1.52,3483,1.52,3484,2.49,3485,1.52,3486,1.52,3487,1.52,3488,1.52,3489,1.52,3490,1.52,3491,1.52,3492,2.49,3493,1.52,3494,1.52,3495,1.52,3496,2.49,3497,1.52,3498,2.49,3499,1.52,3500,1.52,3501,1.52,3502,1.52,3503,1.52,3504,1.52,3505,2.49,3506,1.52,3507,1.52,3508,1.52,3509,1.52,3510,1.52,3514,1.52,3546,1.52,3547,1.805,3548,2.957,3549,1.805,3550,1.805,3551,1.805,3552,1.805,3553,1.805,3554,2.957,3555,4.344,3556,2.957,3557,2.957,3558,1.805,3559,1.805,3560,2.957,3561,1.805,3562,1.805,3563,1.805,3564,3.757,3565,4.344,3566,3.757,3567,3.757,3568,1.805,3569,1.805,3570,1.805,3571,1.805,3572,1.805,3573,1.805,3574,1.805,3575,1.805,3576,1.805,3577,1.805,3578,1.805,3579,1.805,3580,1.805,3581,1.805,3582,1.805,3583,1.805,3584,1.805,3585,1.805,3586,1.805,3587,1.805,3588,1.805,3589,1.805,3590,1.805,3591,1.805,3592,1.805,3593,5.437,3594,1.805,3595,2.957,3596,1.805,3597,1.805,3598,1.805,3599,1.805,3600,1.805,3601,1.805,3602,1.805,3603,1.805,3604,1.805,3605,1.805,3606,1.805,3607,1.805,3608,1.805,3609,1.805,3610,1.805,3611,1.805,3612,1.805,3613,2.957,3614,1.805,3615,1.805,3616,5.149,3617,1.805,3618,1.805,3619,1.805,3620,1.805,3621,1.805,3622,3.757,3623,1.805,3624,1.805,3625,1.805,3626,1.805,3627,2.957,3628,1.805,3629,1.805,3630,1.805,3631,1.805,3632,1.805,3633,1.805,3634,1.805,3635,1.805,3636,1.805,3637,1.805,3638,1.805,3639,1.805,3640,1.805,3641,1.805,3642,1.805,3643,1.805,3644,1.805,3645,1.805,3646,1.805,3647,1.805,3648,1.805,3649,1.805,3650,1.805,3651,1.805,3652,1.805,3653,1.805,3654,1.805,3655,1.805,3656,1.805,3657,1.805,3658,1.805,3659,1.805,3660,1.805,3661,1.805,3662,1.805,3663,1.805,3664,1.805,3665,1.805,3666,1.805,3667,1.805,3668,1.805,3669,1.805,3670,2.957,3671,1.805,3672,1.805,3673,1.805,3674,1.805,3675,1.805,3676,1.805,3677,1.805,3678,3.757,3679,2.957,3680,3.757,3681,2.957,3682,2.957,3683,3.757,3684,2.957,3685,2.957,3686,1.805,3687,1.805,3688,2.957,3689,1.805,3690,1.805,3691,1.805,3692,2.957,3693,1.805,3694,1.805,3695,1.805,3696,1.805,3697,4.794,3698,1.805,3699,1.805,3700,1.805,3701,4.344,3702,2.957,3703,2.957,3704,2.957,3705,1.805,3706,1.805,3707,1.805,3708,1.805,3709,1.805,3710,3.757,3711,1.805,3712,1.805,3713,1.805,3714,1.805,3715,2.957,3716,2.957,3717,1.805,3718,1.805,3719,1.805,3720,1.805,3721,2.957,3722,2.957,3723,2.957,3724,1.805,3725,2.957,3726,1.805,3727,1.805]],["title/injectables/StatementsControlsService.html",[445,0.046,3058,2.671]],["body/injectables/StatementsControlsService.html",[3,0.083,4,0.069,8,0.057,9,3.262,29,0.221,31,4.44,35,0.609,43,0.547,44,0.011,47,0.427,48,0.671,56,0.841,57,0.433,58,0.586,60,0.782,68,0.281,71,0.206,73,0.083,74,0.221,152,0.008,153,0.008,156,0.829,197,2.397,250,3.724,275,2.173,333,1.069,360,2.89,445,0.072,447,1.034,460,0.877,550,5.246,875,3.851,910,3.769,1182,3.909,1965,2.89,1966,2.397,2521,3.83,2663,5.132,2855,3.497,2895,3.497,2903,3.497,2904,3.497,3044,4.708,3046,3.709,3058,4.21,3141,4.708,3142,4.708,3144,4.708,3145,4.708,3146,4.708,4511,7.741,4512,4.707,4513,6.796,4514,6.796,4515,5.353,4516,6.796,4517,5.353,4518,6.796,4519,5.353,4520,6.796,4521,5.353,4522,6.796,4523,5.353,4524,6.796,4525,5.353,4526,6.796,4527,5.353,4528,6.796,4529,5.353,4530,6.796,4531,5.353,4532,6.796,4533,5.353,4534,6.796,4535,5.353,4536,6.796,4537,5.353,4538,5.353,4539,5.353,4540,5.353,4541,5.353,4542,5.353,4543,5.353,4544,5.353,4545,5.353,4546,5.353,4547,5.353,4548,5.353,4549,5.353,4550,5.353]],["title/interfaces/StringVariable.html",[301,0.727,4551,3.448]],["body/interfaces/StringVariable.html",[3,0.103,4,0.087,8,0.07,9,2.472,29,0.275,30,0.43,43,0.499,44,0.011,45,0.819,73,0.12,152,0.009,153,0.009,229,1.856,301,1.125,307,2.927,313,1.125,537,2.266,1242,4.623,1243,4.623,1244,4.623,3730,4.94,4551,6.576,4552,5.867,4553,5.867]],["title/injectables/TechnicalitiesDisplayService.html",[445,0.046,1636,2.987]],["body/injectables/TechnicalitiesDisplayService.html",[3,0.102,4,0.086,8,0.07,29,0.273,35,0.693,44,0.01,48,0.592,56,0.638,57,0.328,58,0.445,60,0.593,61,1.312,68,0.273,71,0.255,73,0.102,74,0.273,121,1.083,152,0.009,153,0.009,156,1.024,197,2.629,257,1.415,261,2.771,380,2.413,445,0.082,447,1.277,460,1.083,565,3.725,1636,5.355,1637,6.251,2185,5.812,2887,4.319,4554,7.202,4555,7.729,4556,7.729,4557,6.61,4558,6.61,4559,6.61,4560,6.61,4561,6.61,4562,6.61,4563,6.61,4564,6.61,4565,6.61,4566,6.61]],["title/components/TextDisplayComponent.html",[0,0.707,147,1.507]],["body/components/TextDisplayComponent.html",[0,1.177,1,1.723,2,2.319,3,0.076,4,0.064,5,1.827,6,1.827,7,1.827,8,0.052,11,1.419,14,1.958,15,4.236,16,1.458,17,2.816,18,2.74,19,2.128,21,1.712,22,1.857,23,2.013,25,2.013,29,0.204,30,0.357,35,0.578,36,3.802,38,2.887,43,0.521,44,0.011,45,0.708,46,1.081,47,0.608,48,0.633,53,3.802,54,4.492,56,0.476,57,0.356,58,0.332,59,2.909,60,0.442,61,1.279,68,0.296,70,2.252,71,0.19,72,1.54,73,0.076,74,0.204,92,1.774,93,1.54,94,1.774,95,2.388,96,2.388,97,1.827,98,2.514,99,1.827,100,1.774,101,2.928,102,1.827,103,1.675,104,1.827,105,1.723,106,1.458,107,3.227,108,1.723,109,1.723,110,1.419,111,1.675,112,1.827,113,1.675,114,1.723,115,1.827,116,1.723,117,1.723,118,1.774,119,1.675,120,1.723,121,0.808,122,1.827,123,1.723,124,1.827,125,1.675,126,1.827,127,1.675,128,1.723,129,1.723,130,1.827,131,1.675,132,1.723,133,1.675,134,1.723,135,1.675,136,1.723,137,1.827,138,1.723,139,1.827,140,1.723,141,1.827,142,1.723,143,1.827,144,1.723,145,1.827,146,2.069,147,2.661,148,2.986,149,2.123,150,1.827,151,1.827,152,0.007,153,0.007,154,2.909,166,3.633,172,1.628,177,1.02,183,3.723,189,3.055,202,1.941,215,2.319,217,1.498,219,2.663,221,2.369,256,3.659,257,1.394,274,0.831,313,0.831,343,4.975,373,3.417,381,3.651,386,4.211,387,3.417,392,3.222,393,3.944,727,2.459,754,2.369,755,2.583,757,3.215,758,3.581,762,3.417,763,3.651,768,2.586,770,1.774,1756,3.222,2313,4.449,2438,4.336,2439,3.944,2440,3.651,2441,4.336,2442,4.336,2443,4.336,2444,4.336,2447,4.336,2448,4.336,2449,3.944,2450,3.651,2577,4.236,2586,3.802,2596,2.369,4315,4.336,4338,3.222,4567,7.364,4568,7.364,4569,6.446,4570,8.106,4571,7.182,4572,4.932,4573,4.932,4574,4.932,4575,4.932,4576,4.932,4577,4.932,4578,7.616,4579,4.932,4580,4.932,4581,4.932,4582,7.182,4583,4.932,4584,4.932,4585,4.932,4586,4.932,4587,6.446,4588,4.932,4589,4.932]],["title/interfaces/TimeProperty.html",[301,0.727,4590,3.448]],["body/interfaces/TimeProperty.html",[3,0.078,4,0.065,8,0.053,9,1.869,29,0.208,30,0.362,43,0.42,44,0.011,45,0.759,73,0.101,152,0.008,153,0.008,229,1.912,301,0.85,307,3.016,313,0.85,537,1.713,650,3.033,784,2.048,817,4.498,928,2.424,1007,3.125,1133,5.232,1160,3.934,1225,4.053,4115,4.436,4116,4.436,4118,4.436,4122,4.436,4123,4.436,4125,4.436,4590,5.806,4591,4.034,4592,4.436,4593,4.436,4594,5.045,4595,5.045,4596,5.045,4597,5.045,4598,5.045,4599,5.045,4600,5.045,4601,5.045,4602,5.045,4603,8.157,4604,7.261,4605,8.157,4606,5.045,4607,7.261,4608,5.045,4609,5.045,4610,5.045,4611,6.543,4612,6.543,4613,6.543,4614,5.045,4615,6.755,4616,5.045,4617,7.261,4618,5.045,4619,5.045,4620,5.045,4621,5.045,4622,5.045,4623,5.045,4624,5.045,4625,5.045,4626,5.045,4627,5.045,4628,5.045,4629,5.045,4630,5.045,4631,6.543,4632,5.045,4633,5.045,4634,5.045,4635,5.045,4636,5.045,4637,5.045,4638,5.045,4639,5.045,4640,5.045,4641,5.045,4642,5.045,4643,5.045,4644,5.045,4645,5.045,4646,5.045,4647,5.045,4648,5.045,4649,5.045,4650,5.045,4651,5.045,4652,5.045,4653,5.045,4654,5.045,4655,5.045,4656,5.045,4657,6.543,4658,5.045,4659,5.045,4660,5.045,4661,5.045,4662,5.045,4663,5.045,4664,5.045,4665,5.045,4666,5.045,4667,5.045,4668,5.045]],["title/interfaces/TimeVariable.html",[301,0.727,4669,3.448]],["body/interfaces/TimeVariable.html",[3,0.097,4,0.082,8,0.067,9,2.343,29,0.261,30,0.417,43,0.484,44,0.011,45,0.802,73,0.116,152,0.009,153,0.009,229,1.898,301,1.066,307,2.993,313,1.066,537,2.147,1160,2.739,1204,5.881,1237,4.132,1238,4.132,1239,4.132,1240,4.132,1241,4.132,3730,4.681,4591,5.057,4669,6.43,4670,5.56,4671,6.324,4672,6.324,4673,6.324,4674,6.324,4675,6.324,4676,6.324]],["title/injectables/TranscriptDisplayService.html",[445,0.046,4677,3.448]],["body/injectables/TranscriptDisplayService.html",[3,0.1,4,0.084,8,0.069,29,0.269,30,0.424,35,0.686,44,0.011,46,0.924,47,0.519,48,0.587,56,0.627,57,0.323,58,0.438,60,0.583,68,0.336,71,0.251,73,0.1,74,0.269,86,1.474,89,3.524,152,0.009,153,0.009,156,1.008,177,1.155,274,1.096,278,1.639,281,1.728,288,1.977,333,0.934,445,0.081,447,1.257,460,1.066,502,2.148,527,2.676,529,2.914,565,3.667,1096,3.679,2140,3.524,2191,5.72,2552,3.244,2973,4.25,4677,6.124,4678,7.155,4679,7.658,4680,7.658,4681,5.72,4682,6.506,4683,6.506,4684,6.506,4685,6.506,4686,6.506,4687,6.506,4688,6.506]],["title/injectables/TranscriptionService.html",[445,0.046,4689,3.448]],["body/injectables/TranscriptionService.html",[3,0.103,4,0.087,8,0.07,29,0.275,35,0.697,44,0.01,45,0.621,48,0.595,56,0.644,57,0.331,58,0.449,60,0.598,68,0.275,71,0.257,73,0.103,74,0.275,86,1.512,89,3.366,152,0.009,153,0.009,156,1.034,197,2.64,333,0.814,445,0.082,447,1.289,460,1.094,548,5.697,3001,5.867,3860,5.867,4689,6.215,4690,5.867,4691,7.772,4692,6.673,4693,7.772,4694,6.673,4695,6.673,4696,6.673,4697,6.673,4698,6.673,4699,6.673,4700,6.673,4701,6.673,4702,6.673,4703,6.673]],["title/injectables/TypologyService.html",[445,0.046,2254,3.192]],["body/injectables/TypologyService.html",[3,0.097,4,0.082,8,0.067,29,0.261,30,0.417,35,0.675,44,0.011,45,0.588,46,0.898,47,0.505,48,0.577,56,0.61,57,0.314,58,0.425,60,0.567,68,0.344,71,0.244,73,0.097,74,0.261,86,1.706,152,0.009,153,0.009,156,0.98,177,1.142,229,1.324,253,1.772,274,1.066,278,1.593,281,1.68,282,1.636,288,1.921,333,0.918,445,0.08,447,1.222,460,1.036,527,2.631,529,2.832,980,3.864,2140,3.482,2183,4.532,2254,5.574,2496,5.56,2552,3.154,3344,5.057,4704,5.56,4705,7.53,4706,7.53,4707,6.324,4708,6.324,4709,6.324,4710,6.324,4711,6.324,4712,6.324,4713,6.324,4714,6.324,4715,6.324,4716,7.53,4717,6.324,4718,6.324,4719,6.324,4720,6.324,4721,6.324,4722,6.324]],["title/pipes/UnitPipe.html",[502,1.423,756,2.328]],["body/pipes/UnitPipe.html",[3,0.094,4,0.079,8,0.065,14,1.861,16,1.811,21,1.962,22,1.911,30,0.339,35,0.549,43,0.474,44,0.011,45,0.738,46,1.049,47,0.633,48,0.608,56,0.591,57,0.394,58,0.412,60,0.549,68,0.327,71,0.236,73,0.094,74,0.253,152,0.008,153,0.008,177,1.049,205,2.18,217,1.861,219,3.307,221,2.943,224,3.452,249,1.215,256,2.943,274,1.032,278,1.543,281,1.627,283,4.002,284,3.794,333,0.747,360,3.988,502,2.618,504,3.613,508,3.794,511,4.576,756,3.988,829,5.026,869,5.468,1050,2.567,2603,6.343,3734,5.468,3789,5.468,3794,5.385,3813,5.385,3814,5.385,4201,5.385,4507,6.495,4723,5.385,4724,6.125,4725,6.125,4726,6.125,4727,6.125,4728,6.125,4729,6.125,4730,6.125,4731,6.125,4732,6.125,4733,6.125,4734,6.125,4735,6.125,4736,6.125,4737,6.125,4738,6.125]],["title/interfaces/Variable.html",[301,0.727,1184,2.072]],["body/interfaces/Variable.html",[3,0.019,4,0.016,8,0.013,9,0.468,20,0.279,29,0.052,30,0.123,43,0.579,44,0.011,45,0.729,57,0.178,58,0.382,73,0.088,87,0.497,90,1.427,93,0.858,106,1.062,110,1.034,152,0.003,153,0.003,229,1.922,238,2.225,301,0.605,307,3.033,313,0.761,380,2.296,455,0.395,491,2.062,537,0.429,584,0.586,715,3.129,724,3.534,727,3.52,730,4.258,732,4.763,784,2.536,812,2.727,843,3.507,1083,0.607,1160,1.956,1170,3.928,1172,3.712,1180,0.876,1181,1.454,1182,2.553,1183,0.745,1184,2.732,1185,0.826,1186,5.416,1187,2.659,1188,0.607,1189,0.63,1190,2.024,1191,5.522,1192,0.936,1193,2.488,1194,5.522,1195,2.488,1196,5.522,1197,2.488,1198,5.522,1199,4.829,1200,2.488,1201,5.863,1202,2.066,1203,2.488,1204,4.081,1205,3.057,1206,4.829,1207,1.608,1208,4.829,1209,4.829,1210,2.488,1211,4.829,1212,5.049,1213,5.799,1214,2.488,1215,4.829,1216,4.829,1217,1.862,1218,2.225,1219,4.829,1220,2.119,1221,2.346,1222,1.939,1223,4.829,1224,2.488,1225,2.225,1226,4.829,1227,0.745,1228,1.759,1229,0.745,1230,0.745,1231,0.745,1232,0.936,1233,0.936,1234,1.948,1235,4.556,1236,4.471,1237,2.346,1238,2.346,1239,2.346,1240,2.346,1241,2.346,1242,1.542,1243,1.542,1244,1.542,1245,1.647,1246,1.647,1247,1.647,1248,1.647,1249,1.647,1250,1.454,1251,3.605,1252,1.542,1253,1.542,1254,1.542,1255,0.936,1256,0.936,1257,0.936,1258,0.712,1259,3.928,1260,3.349,1261,4.112,1262,4.112,1263,4.112,1264,4.112,1265,4.112,1266,3.773,1267,0.936,1268,0.63,1269,5.089,1270,5.089,1271,4.763,1272,5.089,1273,4.763,1274,2.066,1275,2.066,1276,2.066,1277,2.066,1278,2.066,1279,2.066,1280,2.066,1281,3.129,1282,2.066,1283,2.066,1284,2.066,1285,2.066,1286,2.066,1287,2.066,1288,2.066,1289,2.066,1290,2.066,1291,2.066,1292,2.066,1293,2.066,1294,2.066,1295,2.066,1296,3.031,1297,2.066,1298,2.066,1299,2.066,1300,2.066,1301,2.066,1302,2.066,1303,2.066,1304,3.129,1305,2.066,1306,2.066,1307,2.066,1308,2.066,1309,2.066,1310,2.066,1311,2.066,1312,2.066,1313,2.066,1314,2.066,1315,2.066,1316,2.066,1317,2.066,1318,2.066,1319,2.066,1320,2.066,1321,2.066,1322,2.066,1323,2.066,1324,2.066,1325,2.066,1326,3.129,1327,2.066,1328,2.066,1329,2.066,1330,2.066,1331,2.066,1332,2.066,1333,2.066,1334,2.066,1335,2.066,1336,2.066,1337,2.066,1338,2.066,1339,2.066,1340,2.066,1341,2.066,1342,2.066,1343,2.066,1344,2.066,1345,2.066,1346,2.066,1347,2.066,1348,3.129,1349,2.066,1350,2.066,1351,2.066,1352,2.066,1353,2.066,1354,2.066,1355,2.066,1356,2.066,1357,2.066,1358,2.066,1359,2.066,1360,2.066,1361,2.066,1362,2.066,1363,2.066,1364,2.066,1365,2.066,1366,2.066,1367,2.066,1368,2.066,1369,2.066,1370,3.129,1371,2.066,1372,2.066,1373,2.066,1374,2.066,1375,2.066,1376,2.066,1377,2.066,1378,2.066,1379,2.066,1380,2.066,1381,2.066,1382,2.066,1383,2.066,1384,2.066,1385,0.876,1386,3.343,1387,2.797,1388,3.129,1389,0.936,1390,0.936,1391,0.936,1392,0.936,1393,0.876]],["title/injectables/WikiDisplayService.html",[445,0.046,1638,2.987]],["body/injectables/WikiDisplayService.html",[3,0.093,4,0.078,8,0.064,29,0.25,30,0.406,35,0.657,43,0.388,44,0.011,45,0.562,46,0.858,47,0.482,48,0.604,56,0.583,57,0.3,58,0.407,60,0.542,68,0.25,71,0.233,73,0.093,74,0.25,121,0.991,152,0.008,153,0.008,156,0.936,197,2.532,257,1.63,333,0.737,445,0.077,447,1.168,460,0.991,480,3.202,548,5.464,565,3.407,1638,5.078,1744,6.557,4140,6.444,4681,5.316,4739,7.209,4740,7.329,4741,7.329,4742,6.046,4743,6.046,4744,6.046,4745,6.046,4746,6.046,4747,6.046,4748,6.046,4749,6.046,4750,6.046,4751,6.046,4752,6.046,4753,6.046,4754,6.046,4755,6.046,4756,6.046,4757,6.046,4758,6.046,4759,6.046,4760,8.779,4761,6.046,4762,7.887,4763,6.046,4764,6.046,4765,6.046,4766,6.046,4767,6.046,4768,6.046,4769,6.046,4770,6.046,4771,6.046,4772,6.046,4773,6.046,4774,6.046,4775,6.046]],["title/coverage.html",[4776,5.181]],["body/coverage.html",[0,1.434,1,1.231,8,0.037,9,3.292,10,4.087,11,1.471,12,3.098,13,3.098,20,1.128,43,0.226,44,0.011,90,1.591,93,1.437,100,1.267,103,1.196,105,1.231,108,1.231,109,1.231,111,1.196,113,1.196,116,1.231,118,1.267,120,1.231,121,0.986,123,1.231,125,1.196,127,1.196,129,1.231,131,1.196,132,1.231,134,1.231,136,1.231,138,1.231,140,1.231,142,1.231,144,1.231,146,1.641,147,1.231,149,1.511,152,0.006,153,0.006,155,4.087,172,1.687,205,0.911,224,1.986,249,0.699,257,0.645,285,1.267,288,1.07,290,2.818,292,2.818,301,1.459,319,1.042,408,4.494,409,4.494,416,2.818,418,3.098,434,3.784,440,3.098,445,0.095,446,1.902,448,3.098,449,3.098,455,1.596,491,1.687,492,2.608,493,4.087,494,4.571,502,2.488,503,2.818,505,3.098,506,3.098,514,2.818,515,4.526,532,1.196,536,2.818,538,4.494,539,3.098,563,2.441,564,3.098,565,4.351,637,3.098,638,3.098,639,3.098,640,3.098,641,3.098,642,3.098,643,3.098,644,3.098,645,3.098,646,3.098,647,3.098,648,3.098,677,1.757,727,1.757,752,3.098,753,3.098,754,3.97,756,1.902,865,2.818,866,3.098,867,3.098,873,4.526,877,1.986,878,1.902,887,2.078,888,2.078,890,2.549,910,1.578,1017,2.818,1018,3.098,1019,3.098,1026,2.608,1027,4.087,1028,2.818,1029,3.098,1044,2.441,1046,2.441,1048,4.494,1049,3.098,1083,2.456,1091,2.608,1092,2.608,1148,2.818,1149,3.098,1150,3.098,1180,5.537,1184,4.265,1188,1.693,1189,2.549,1217,1.827,1227,2.078,1235,2.183,1236,3.166,1258,1.986,1259,1.986,1260,2.456,1268,1.757,1271,2.441,1385,2.441,1387,3.166,1393,2.441,1394,2.456,1395,3.098,1489,3.098,1490,4.087,1537,3.098,1538,4.494,1616,2.608,1617,4.087,1618,4.087,1635,3.166,1636,2.441,1638,2.441,1640,2.608,1752,3.098,1753,3.098,1772,2.608,1773,3.098,1774,3.098,1925,3.098,1933,2.818,1934,3.098,1935,3.098,1936,3.098,1938,4.452,1939,4.087,1947,2.441,1951,2.441,2136,3.098,2137,3.098,2138,3.098,2139,4.087,2184,4.494,2186,3.098,2193,2.818,2197,5.276,2251,2.608,2254,2.608,2256,2.608,2310,3.098,2311,3.098,2312,3.098,2457,3.098,2521,1.986,2522,4.494,2523,4.494,2534,2.818,2535,3.098,2537,2.818,2538,3.098,2554,3.098,2555,3.098,2567,3.098,2568,3.098,2574,3.098,2627,2.818,2628,3.098,2640,2.818,2641,3.098,2686,2.608,2687,4.087,2688,3.098,2715,5.186,2843,3.098,2844,3.098,2845,3.098,2927,2.818,2928,3.098,2943,2.183,2944,3.098,3004,3.098,3042,5.671,3043,4.81,3055,2.183,3058,2.183,3728,2.818,3729,4.494,3730,5.409,3731,3.098,3732,3.098,3882,2.818,3883,3.098,3884,3.098,3920,2.818,3921,3.098,3922,3.098,3932,3.098,4021,3.098,4022,3.098,4032,3.541,4033,3.098,4060,3.098,4065,4.577,4132,2.818,4133,3.098,4141,3.098,4189,2.818,4195,2.818,4196,3.098,4204,3.098,4292,3.098,4293,3.098,4294,2.818,4295,3.098,4296,3.098,4301,3.098,4302,3.098,4303,3.098,4312,3.098,4313,3.098,4314,3.098,4320,3.098,4321,3.098,4398,3.098,4399,3.098,4448,3.098,4449,3.098,4456,3.098,4457,3.098,4473,3.098,4474,3.098,4483,3.098,4484,2.818,4486,3.098,4487,3.098,4511,3.098,4512,3.098,4551,2.818,4552,4.494,4553,3.098,4554,3.098,4567,3.098,4568,3.098,4590,2.818,4591,5.276,4592,4.494,4593,3.098,4669,2.818,4670,3.098,4677,2.818,4678,3.098,4689,2.818,4690,3.098,4704,3.098,4723,3.098,4739,3.098,4776,3.098,4777,3.524,4778,3.524,4779,8.946,4780,5.111,4781,8.599,4782,7.307,4783,3.524,4784,3.524,4785,7.87,4786,7.721,4787,6.598,4788,3.524,4789,3.524,4790,6.015,4791,6.015,4792,3.524,4793,7.307,4794,5.111,4795,8.185,4796,8.185,4797,6.598,4798,5.111,4799,3.524,4800,3.524,4801,3.524,4802,3.524,4803,3.524,4804,3.524,4805,3.524,4806,5.111,4807,3.524,4808,3.524,4809,3.524,4810,3.524,4811,3.524,4812,3.524,4813,3.524,4814,3.524,4815,3.524,4816,3.524,4817,3.524,4818,3.524,4819,3.524,4820,5.111,4821,3.524,4822,3.524,4823,3.524,4824,3.524,4825,3.524,4826,3.524,4827,6.598,4828,3.524,4829,5.111,4830,3.524,4831,3.524]],["title/dependencies.html",[4832,3.162,4833,4.149]],["body/dependencies.html",[8,0.067,11,1.833,44,0.011,71,0.246,72,1.989,152,0.009,153,0.009,221,3.061,275,2.586,282,1.647,294,2.36,383,3.59,1157,4.996,1158,5.601,1164,5.094,2599,5.094,2846,4.162,3796,6.649,3929,6.649,3930,6.649,4833,5.094,4834,6.37,4835,8.895,4836,6.37,4837,8.066,4838,6.37,4839,7.563,4840,6.649,4841,7.563,4842,7.563,4843,6.37,4844,6.37,4845,6.37,4846,6.37,4847,6.37,4848,6.37,4849,6.37,4850,7.563,4851,6.37,4852,6.37,4853,6.37,4854,6.37,4855,6.37,4856,6.37,4857,6.37,4858,6.37,4859,6.37,4860,6.37,4861,6.37,4862,6.37,4863,6.37,4864,6.37,4865,6.37,4866,6.37,4867,6.37,4868,6.37,4869,6.37,4870,6.37,4871,6.37,4872,6.37,4873,6.37,4874,5.601,4875,6.37,4876,6.37,4877,6.37]],["title/index.html",[29,0.148,4878,3.597,4879,3.597]],["body/index.html",[0,1.321,4,0.083,18,1.932,44,0.009,57,0.316,92,2.717,152,0.009,153,0.009,214,4.154,249,1.262,261,3.166,301,1.072,829,4.257,843,2.502,878,3.433,1061,5.085,1111,7.487,1163,7.086,1164,6.668,1733,5.085,1801,5.591,1871,4.405,2221,4.405,2227,6.041,2359,5.085,2502,5.591,3249,4.405,3262,5.085,4615,7.331,4840,7.086,4874,5.591,4880,6.359,4881,6.359,4882,6.359,4883,6.359,4884,6.359,4885,6.359,4886,5.591,4887,6.359,4888,7.555,4889,6.359,4890,6.359,4891,6.359,4892,6.359,4893,5.591,4894,6.359,4895,6.359,4896,7.555,4897,8.515,4898,8.727,4899,6.359,4900,6.359,4901,6.359,4902,6.359,4903,6.359,4904,6.359,4905,6.359,4906,6.359,4907,8.06,4908,6.359,4909,6.359,4910,6.359,4911,6.359,4912,6.359,4913,6.359,4914,6.359,4915,7.555,4916,8.339,4917,7.555,4918,6.359,4919,6.359,4920,6.359,4921,8.06,4922,6.359,4923,6.359,4924,5.591,4925,5.085,4926,6.359,4927,6.359]],["title/modules.html",[407,4.712]],["body/modules.html",[44,0.009,152,0.009,153,0.009,406,5.66,407,5.66,4163,6.223,4886,6.223,4928,7.078]],["title/overview.html",[4925,4.712]],["body/overview.html",[2,2.503,44,0.009,94,2.503,152,0.009,153,0.009,380,2.173,405,7,444,6.118,447,1.344,504,4.104,537,2.363,730,4.31,1273,4.821,1388,4.821,2582,7,4833,5.564,4924,6.118,4925,5.564,4929,6.958,4930,6.958,4931,6.958,4932,6.958,4933,6.958]],["title/properties.html",[30,0.287,4832,3.162]],["body/properties.html",[30,0.392,44,0.01,152,0.009,153,0.009,4893,6.229,4934,7.085]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":90,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"interfaces/Data.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"components/MainDisplayComponent.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["0.0.0",{"_index":4934,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":4865,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":4858,"title":{},"body":{"dependencies.html":{}}}],["0.14.10",{"_index":4877,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4779,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4791,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4820,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":4806,"title":{},"body":{"coverage.html":{}}}],["0/150",{"_index":4784,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":4794,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4787,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4798,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":4800,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":4799,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":4802,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":4780,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":4790,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4781,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":4805,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":4789,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":4801,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4786,"title":{},"body":{"coverage.html":{}}}],["0/40",{"_index":4803,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4793,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4782,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4785,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4797,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":739,"title":{},"body":{"injectables/BlockDisplayService.html":{},"injectables/SetTimeService.html":{}}}],["00t00:00:00z",{"_index":1171,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["01",{"_index":1173,"title":{},"body":{"pipes/CustomDatePipe.html":{},"injectables/SetTimeService.html":{}}}],["01t00:00:00z",{"_index":1174,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["1",{"_index":380,"title":{"injectables/DataService-1.html":{},"injectables/DetailsService-1.html":{},"injectables/IframesDisplayService-1.html":{},"interfaces/Qualifier-1.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Statement-1.html":{}},"body":{"components/AppComponent.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetTimeService.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TechnicalitiesDisplayService.html":{},"interfaces/Variable.html":{},"overview.html":{}}}],["1.56.1",{"_index":4871,"title":{},"body":{"dependencies.html":{}}}],["1.9.2",{"_index":4859,"title":{},"body":{"dependencies.html":{}}}],["1/16",{"_index":4816,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":4792,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4815,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":4821,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1260,"title":{},"body":{"interfaces/Data.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"injectables/SetTimeService.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["10.2.3",{"_index":4868,"title":{},"body":{"dependencies.html":{}}}],["10/13",{"_index":4814,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{}}}],["1000",{"_index":2009,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["100vh",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["106",{"_index":4623,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["10px",{"_index":2446,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["11",{"_index":1269,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["12",{"_index":1270,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["12/114",{"_index":4808,"title":{},"body":{"coverage.html":{}}}],["12/136",{"_index":4807,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":3854,"title":{},"body":{"injectables/RequestService.html":{}}}],["13",{"_index":1170,"title":{},"body":{"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["14",{"_index":1271,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["14.0.0",{"_index":4845,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":2829,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["15",{"_index":1172,"title":{},"body":{"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"interfaces/Selection.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["150px",{"_index":4016,"title":{},"body":{"components/SearchComponent.html":{}}}],["16",{"_index":1261,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["16.1.0",{"_index":4894,"title":{},"body":{"index.html":{}}}],["17",{"_index":1262,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["18",{"_index":1272,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["18.2.7",{"_index":4835,"title":{},"body":{"dependencies.html":{}}}],["18.2.8",{"_index":4837,"title":{},"body":{"dependencies.html":{}}}],["182",{"_index":4625,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["19",{"_index":1263,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["1er",{"_index":4267,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["1st",{"_index":4265,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["2",{"_index":724,"title":{"interfaces/Statement-2.html":{}},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Data.html":{},"injectables/HuDatabaseService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["2).ts",{"_index":1538,"title":{},"body":{"injectables/DetailsService.html":{},"coverage.html":{}}}],["2).ts:104",{"_index":1552,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:11",{"_index":1560,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:110",{"_index":1556,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:12",{"_index":1561,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:127",{"_index":1557,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:14",{"_index":1550,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:148",{"_index":1549,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:152",{"_index":1559,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:156",{"_index":1551,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:31",{"_index":1555,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:62",{"_index":1553,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2).ts:98",{"_index":1554,"title":{},"body":{"injectables/DetailsService.html":{}}}],["2.0.3",{"_index":4852,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":4850,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":4860,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":4873,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":4854,"title":{},"body":{"dependencies.html":{}}}],["2/20",{"_index":4804,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":4822,"title":{},"body":{"coverage.html":{}}}],["2/42",{"_index":4817,"title":{},"body":{"coverage.html":{}}}],["2/45",{"_index":4811,"title":{},"body":{"coverage.html":{}}}],["2/62",{"_index":4819,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":4812,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1264,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["20%0alimit%20200",{"_index":2511,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["20).pipe",{"_index":3676,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["20.%0a%20%20service%20wikibase%3alabel%20%7b%20bd%3aserviceparam%20wikibase%3alanguage%20%22\"+this.lang.selectedlang+\"%22%2c%22en%22.%20%7d%0a%7d%0a",{"_index":2017,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/ItemInfoService.html":{}}}],["20px",{"_index":2441,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/TextDisplayComponent.html":{}}}],["20service%20wikibase%3alabel%20%7b%20bd%3aserviceparam%20wikibase%3alanguage%20%22",{"_index":2935,"title":{},"body":{"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["20values%20%3fqualifier%20%7b%20wd%3aq514317%20wd%3aq21403%20%7d%0a%20%3fitem%20wikibase%3apropertytype%20%3fpropertytype%3b%0a%20%20%20%20%20%20%20%20%20%20%20wdt%3ap8%20%3fqualifier.%0a%7d%0aorder%20by%20%3fitemlabel",{"_index":2977,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["20wd%3aq1089730%7d%20%3fitem%20wdt%3ap8%20%3fproperties%3b%20wikibase%3apropertytype%20%3fpropertytype%20minus%20%7b%20%3fproperty%20wikibase%3apropertytype%20wikibase%3aurl%20%7d%20minus%20%7b%20%3fitem%20wikibase%3apropertytype%20wikibase%3aexternalid%20%7d%20minus%20%7b%20%3fitem%20wikibase%3apropertytype%20wikibase%3aurl%20%7d%20minus%20%7b%20%3fitem%20wikibase%3apropertytype%20wikibase%3aglobecoordinate%20%7d%20minus%20%7b%20%3fitem%20wikibase%3apropertytype%20wikibase%3ageoshape%20%7d%20minus%20%7b%20%3fitem%20wikibase%3apropertytype%20wikibase%3acommonsmedia%20%7d%20%7d%20order%20by%20%3fitemlabel%0a",{"_index":2970,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["21",{"_index":1265,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["214",{"_index":4626,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["22",{"_index":1273,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"overview.html":{}}}],["22%2c%22en%22.%20%7d%0a",{"_index":2936,"title":{},"body":{"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["222",{"_index":4627,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["23",{"_index":1266,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["23.7.0",{"_index":4863,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":1386,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["24px",{"_index":2827,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["25",{"_index":1387,"title":{},"body":{"interfaces/Data.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["26",{"_index":1388,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"overview.html":{}}}],["27",{"_index":715,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["289",{"_index":4630,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["290",{"_index":4632,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["291",{"_index":4633,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["2px",{"_index":2455,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["3",{"_index":1235,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["300px",{"_index":2825,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["303",{"_index":4634,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["321",{"_index":4637,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["360",{"_index":2443,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/TextDisplayComponent.html":{}}}],["37",{"_index":4595,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["38",{"_index":4597,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["39",{"_index":4600,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["3fitem%20wdt%3ap2%20wd%3a",{"_index":2938,"title":{},"body":{"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["4",{"_index":1236,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["4).replace(/^0",{"_index":4272,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["4.18.2",{"_index":4856,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":4824,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4602,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["400px",{"_index":2626,"title":{},"body":{"components/MapComponent.html":{}}}],["41",{"_index":4606,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["43",{"_index":4608,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["44",{"_index":4610,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["45",{"_index":4614,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["46",{"_index":4616,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["47",{"_index":4933,"title":{},"body":{"overview.html":{}}}],["49",{"_index":4618,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["5",{"_index":727,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Data.html":{},"components/ItemInfoComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["5.5.4",{"_index":4875,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":928,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"interfaces/Snak.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"interfaces/TimeProperty.html":{}}}],["500",{"_index":2008,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/RequestService.html":{}}}],["5000",{"_index":3866,"title":{},"body":{"injectables/RequestService.html":{}}}],["500px",{"_index":2832,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["50px",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["57",{"_index":4823,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1259,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["600",{"_index":4019,"title":{},"body":{"components/SearchComponent.html":{}}}],["60px",{"_index":4020,"title":{},"body":{"components/SearchComponent.html":{}}}],["64px",{"_index":2826,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["7",{"_index":730,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Data.html":{},"interfaces/Selection.html":{},"injectables/SetTimeService.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"overview.html":{}}}],["7.0.0",{"_index":4848,"title":{},"body":{"dependencies.html":{}}}],["7.0.7",{"_index":4861,"title":{},"body":{"dependencies.html":{}}}],["7.5.7",{"_index":4869,"title":{},"body":{"dependencies.html":{}}}],["76",{"_index":4813,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4620,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["7d%0a",{"_index":2939,"title":{},"body":{"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["8",{"_index":491,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"interfaces/Data.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"interfaces/Selection.html":{},"interfaces/Snak.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["8px",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/ParisSearchComponent.html":{}}}],["9",{"_index":732,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["96",{"_index":4622,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["_\")+\"_",{"_index":4762,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["_blank",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["_data",{"_index":2852,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["_literalvariables",{"_index":3099,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["_liveannouncer",{"_index":1986,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["_mutator",{"_index":1385,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["_ondestroy",{"_index":2853,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["_propertieslist",{"_index":3097,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["_qualifierliteralvariables",{"_index":3100,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["a.e.c",{"_index":4289,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["a.itemlabel.value.touppercase",{"_index":2979,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["a.label.localecompare(b.label",{"_index":3655,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["a.mainsnak.timeorder",{"_index":2302,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["a.value",{"_index":4171,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["a.value.touppercase",{"_index":2999,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["abril",{"_index":4246,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["abstractcontrol",{"_index":3046,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["acc",{"_index":1588,"title":{},"body":{"injectables/DetailsService.html":{}}}],["acc.concat(value",{"_index":3881,"title":{},"body":{"injectables/RequestService.html":{}}}],["accessor.service.ts",{"_index":4296,"title":{},"body":{"injectables/SortingDataAccessorService.html":{},"coverage.html":{}}}],["accessor.service.ts:10",{"_index":4300,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["accessor.service.ts:6",{"_index":4298,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["accessors",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/PropertiesListService.html":{},"injectables/SortingDataAccessorService.html":{}}}],["accumulator",{"_index":4306,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["accumulator[key",{"_index":4307,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["activatedroute",{"_index":2597,"title":{},"body":{"components/MapComponent.html":{}}}],["active",{"_index":4435,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["actividades",{"_index":1848,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["activit",{"_index":1916,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["activitad",{"_index":1917,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["activities",{"_index":1842,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["activity",{"_index":1190,"title":{},"body":{"interfaces/Data.html":{},"interfaces/DisplayFlags.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"components/Sparql1DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["activity1",{"_index":1274,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["activity2",{"_index":1297,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["activity3",{"_index":1319,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["activity4",{"_index":1341,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["activity5",{"_index":1363,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["activity_display_properties",{"_index":641,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["activitydetail",{"_index":596,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["activitytitle",{"_index":4400,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["activités",{"_index":1846,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["actual_component",{"_index":151,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["actuel",{"_index":3680,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["actuelles",{"_index":3636,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["adapter",{"_index":4843,"title":{},"body":{"dependencies.html":{}}}],["adatbázis",{"_index":1876,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["add",{"_index":1786,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"injectables/SetLanguageService.html":{},"interfaces/Statement-1.html":{}}}],["addclaimitemdetails",{"_index":2202,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addclaimitemdetails(items",{"_index":2209,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addclaimpropertydetails",{"_index":3005,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["addclaimpropertydetails(properties",{"_index":3010,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["adddata",{"_index":2690,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["adddata(x",{"_index":2692,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["adddetails",{"_index":4134,"title":{},"body":{"injectables/SetItemToDisplayService.html":{}}}],["adddetails(properties",{"_index":4136,"title":{},"body":{"injectables/SetItemToDisplayService.html":{}}}],["addfirstqualifier(i",{"_index":3212,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["adding",{"_index":2708,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["additemdetails",{"_index":1059,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["additeminfo",{"_index":2203,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["additeminfo(re",{"_index":2211,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addlongestwordlength",{"_index":2204,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addlongestwordlength(re",{"_index":2213,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addordertoitemvalues(itemvalues",{"_index":3383,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["addparis",{"_index":2724,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["addparis(re",{"_index":2727,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["addpropertydetails",{"_index":1060,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["addqualifier2propertydetails",{"_index":3006,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["addqualifier2propertydetails(properties",{"_index":3011,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["addqualifieritemdetails",{"_index":2205,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addqualifieritemdetails(items",{"_index":2215,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addqualifierpropertydetails",{"_index":3007,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["addqualifierpropertydetails(properties",{"_index":3023,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["addqualifiers(i",{"_index":3204,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["addreference2itemdetails",{"_index":2206,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addreference2itemdetails(items",{"_index":2231,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addreference2propertydetails",{"_index":3008,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["addreference2propertydetails(properties",{"_index":3025,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["addreferenceitemdetails",{"_index":2207,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addreferenceitemdetails(items",{"_index":2233,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addreferencepropertydetails",{"_index":3009,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["addreferencepropertydetails(properties",{"_index":3027,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["address",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{},"injectables/SetDataService.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{}}}],["address.includes('embed.html",{"_index":2942,"title":{},"body":{"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["address.includes('embed.html')){oldprefix",{"_index":2178,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["address.replace(oldprefix",{"_index":2180,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{},"injectables/SetDataService.html":{}}}],["address:\"harmonia_universalis",{"_index":1991,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["addresstitle",{"_index":4401,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["addsitelinksdetails",{"_index":2208,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addsitelinksdetails(re",{"_index":2235,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["addstatements",{"_index":3170,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["addto(map",{"_index":2619,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["addtoselecteditemslist",{"_index":4190,"title":{},"body":{"injectables/SetSelectedItemsListService.html":{}}}],["addtoselecteditemslist(item",{"_index":4192,"title":{},"body":{"injectables/SetSelectedItemsListService.html":{}}}],["advanced",{"_index":19,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["advanced_search",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SearchComponent.html":{}}}],["advanced_search:string",{"_index":3968,"title":{},"body":{"components/SearchComponent.html":{}}}],["advancedsearchcomponent",{"_index":100,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["advancedsearchlistcomponent",{"_index":1,"title":{"components/AdvancedSearchListComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["aec",{"_index":4288,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["afterviewinit",{"_index":1944,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["agosto",{"_index":4250,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["ainsi",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["ajoute",{"_index":2219,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{}}}],["ajouter",{"_index":692,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["ajoutée",{"_index":3628,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["aktivität",{"_index":1915,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["aktivitäten",{"_index":1844,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["alapobjektum",{"_index":1869,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["alert(\"too",{"_index":1573,"title":{},"body":{"injectables/DetailsService.html":{}}}],["aliases",{"_index":2222,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/SetLanguageService.html":{}}}],["aliases.length",{"_index":4185,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["aliasesobj",{"_index":4167,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["aliasesobj.map(a",{"_index":4170,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["align",{"_index":2449,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/SearchComponent.html":{},"components/TextDisplayComponent.html":{}}}],["allsametype",{"_index":3725,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["alphabétique",{"_index":3652,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["always",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["america",{"_index":554,"title":{},"body":{"interfaces/Bank.html":{}}}],["amount",{"_index":1250,"title":{},"body":{"interfaces/Data.html":{},"injectables/ItemDetailsService.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["amount1",{"_index":1252,"title":{},"body":{"interfaces/Data.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["amount2",{"_index":1253,"title":{},"body":{"interfaces/Data.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["amount3",{"_index":1254,"title":{},"body":{"interfaces/Data.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["amount4",{"_index":1389,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["amount5",{"_index":1392,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["angular",{"_index":1164,"title":{},"body":{"pipes/CustomDatePipe.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":4834,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4836,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":1943,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["angular/cli",{"_index":4838,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":72,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"pipes/CustomDatePipe.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"injectables/RequestService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interceptors/SparqlInterceptor.html":{},"pipes/UnitPipe.html":{}}}],["angular/compiler",{"_index":4839,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":1469,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["angular/forms",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4841,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["angular/material/card",{"_index":770,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["angular/material/checkbox",{"_index":3048,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["angular/material/core",{"_index":3050,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["angular/material/form",{"_index":1970,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["angular/material/icon",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["angular/material/input",{"_index":1968,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["angular/material/menu",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["angular/material/paginator",{"_index":1978,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["angular/material/progress",{"_index":1963,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["angular/material/select",{"_index":2905,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["angular/material/slide",{"_index":1974,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["angular/material/sort",{"_index":1960,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["angular/material/table",{"_index":1956,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["angular/material/toolbar",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["angular/material/tooltip",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["angular/platform",{"_index":3929,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"dependencies.html":{}}}],["animal",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["animation",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["animation.ts",{"_index":4826,"title":{},"body":{"coverage.html":{}}}],["animations",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["ante",{"_index":4607,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["août",{"_index":4231,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["api",{"_index":2173,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["app.component.scss",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["appcomponent",{"_index":103,"title":{"components/AppComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["appeler",{"_index":3585,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["appelée",{"_index":3625,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["appends",{"_index":1078,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["apply",{"_index":1103,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["applyfilter",{"_index":2090,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["applyfilter(event",{"_index":2064,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["approfondie",{"_index":2989,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["approfondita",{"_index":2994,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["approutingmodule",{"_index":406,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["april",{"_index":4216,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["aprile",{"_index":4257,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["après",{"_index":1722,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["archive",{"_index":1193,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["archive1",{"_index":1275,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["archive2",{"_index":1298,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["archive3",{"_index":1320,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["archive4",{"_index":1342,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["archive5",{"_index":1364,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["aree",{"_index":4011,"title":{},"body":{"components/SearchComponent.html":{}}}],["argument",{"_index":3597,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["arr",{"_index":978,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Snak.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["arr.filter((el",{"_index":4383,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["arr.filter(boolean",{"_index":979,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["arr.filter(boolean).join",{"_index":1601,"title":{},"body":{"injectables/DetailsService.html":{}}}],["arr.flatmap(obj",{"_index":955,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["arr.foreach((prop",{"_index":1592,"title":{},"body":{"injectables/DetailsService.html":{}}}],["arr.foreach(x",{"_index":4045,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["arr.length",{"_index":1009,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["arr.map(row",{"_index":2683,"title":{},"body":{"injectables/MutatorService.html":{}}}],["arr.reduce((result",{"_index":1584,"title":{},"body":{"injectables/DetailsService.html":{}}}],["arr.slice",{"_index":1011,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["arr[0",{"_index":2685,"title":{},"body":{"injectables/MutatorService.html":{}}}],["arr[0].map((_",{"_index":2681,"title":{},"body":{"injectables/MutatorService.html":{}}}],["array",{"_index":1022,"title":{},"body":{"pipes/CommaJoinPipe.html":{},"pipes/JoinPipe.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetLanguageService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["array(itemtypes.length).fill(0",{"_index":3180,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["array.from(new",{"_index":996,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["array.isarray(aliasesobj",{"_index":4169,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["array.isarray(claims[key",{"_index":1715,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["array.isarray(infolist[0",{"_index":658,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["array.isarray(infolist[1",{"_index":661,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["array.isarray(infolist[2",{"_index":664,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["array.isarray(infolist[3",{"_index":667,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["array.isarray(item[1",{"_index":1706,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["array.isarray(res",{"_index":4172,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["arraybuffer",{"_index":3825,"title":{},"body":{"injectables/RequestService.html":{}}}],["arraytocsv",{"_index":450,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["arraytocsv(data",{"_index":453,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["arraytocsvservice",{"_index":446,"title":{"injectables/ArrayToCsvService.html":{}},"body":{"injectables/ArrayToCsvService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"coverage.html":{}}}],["artefact",{"_index":1195,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["artefact1",{"_index":1276,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["artefact2",{"_index":1299,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["artefact3",{"_index":1321,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["artefact4",{"_index":1343,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["artefact5",{"_index":1365,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["artifact",{"_index":4647,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["artifacts",{"_index":4909,"title":{},"body":{"index.html":{}}}],["async",{"_index":858,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["async}})&nbsp",{"_index":830,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["attivit",{"_index":1850,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["au",{"_index":3265,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["augmenteditems",{"_index":3683,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["augmenteditems.filter(item",{"_index":3688,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["augmentés",{"_index":3710,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["august",{"_index":4219,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["ausbildung",{"_index":1836,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["aussi",{"_index":2224,"title":{},"body":{"injectables/ItemDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["author",{"_index":1940,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql1DisplayComponent.html":{}}}],["author\",\"author.id\",\"title\",\"title.id\",\"location\",\"location.id\",\"country\",\"country.id\",\"date",{"_index":2182,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["author%3b%0a%20%20%20%20%20%20%20%20wdt%3ap222%20%3fdate%3b%0a%20%20%20%20%20%20%20%20wdt%3ap241%20%3flocation%20.%0a%20%20%3fcountry%20%5ewdt%3ap297%20%3flocation%3b%0a%20%20%20%20%20%20%20%20%20%20wdt%3ap2%20%20%20%3fc%20%20",{"_index":2159,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["author','title','place','date",{"_index":1994,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["authorheader",{"_index":2083,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["authorheader:string",{"_index":1999,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["auto",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"components/ParisSearchComponent.html":{},"components/TextDisplayComponent.html":{}}}],["automatically",{"_index":4903,"title":{},"body":{"index.html":{}}}],["autres",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DisplayFlags.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Lang.html":{}}}],["aux",{"_index":3326,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["available",{"_index":4163,"title":{},"body":{"injectables/SetLanguageService.html":{},"modules.html":{}}}],["avancée",{"_index":4000,"title":{},"body":{"components/SearchComponent.html":{}}}],["avant",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["avanzada",{"_index":4002,"title":{},"body":{"components/SearchComponent.html":{}}}],["avanzata",{"_index":4003,"title":{},"body":{"components/SearchComponent.html":{}}}],["avec",{"_index":2218,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["avez",{"_index":2784,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["avril",{"_index":4227,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["b",{"_index":541,"title":{},"body":{"interfaces/Bank.html":{},"injectables/ItemDetailsService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["b.itemlabel.value.touppercase",{"_index":2980,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["b.mainsnak.timeorder",{"_index":2303,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["b.value.touppercase",{"_index":3000,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["back",{"_index":530,"title":{},"body":{"injectables/BackListService.html":{}}}],["background",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{}}}],["backlinks",{"_index":3850,"title":{},"body":{"injectables/RequestService.html":{}}}],["backlist",{"_index":519,"title":{},"body":{"injectables/BackListService.html":{}}}],["backlist(item",{"_index":520,"title":{},"body":{"injectables/BackListService.html":{}}}],["backlist:any",{"_index":500,"title":{},"body":{"injectables/BackListDetailsService.html":{}}}],["backlistdetails",{"_index":516,"title":{},"body":{"injectables/BackListService.html":{}}}],["backlistdetailsservice",{"_index":492,"title":{"injectables/BackListDetailsService.html":{}},"body":{"injectables/BackListDetailsService.html":{},"injectables/BackListService.html":{},"coverage.html":{}}}],["backlistid",{"_index":507,"title":{},"body":{"pipes/BackListIdPipe.html":{}}}],["backlistidpipe",{"_index":503,"title":{"pipes/BackListIdPipe.html":{}},"body":{"pipes/BackListIdPipe.html":{},"coverage.html":{}}}],["backlistservice",{"_index":514,"title":{"injectables/BackListService.html":{}},"body":{"injectables/BackListService.html":{},"coverage.html":{}}}],["bank",{"_index":536,"title":{"interfaces/Bank.html":{}},"body":{"interfaces/Bank.html":{},"coverage.html":{}}}],["banks",{"_index":539,"title":{},"body":{"interfaces/Bank.html":{},"coverage.html":{}}}],["banns",{"_index":4663,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["baptism",{"_index":4594,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["base",{"_index":1865,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"components/SearchComponent.html":{}}}],["basegeturl",{"_index":2718,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["baseparams",{"_index":3862,"title":{},"body":{"injectables/RequestService.html":{}}}],["basesearchurl",{"_index":3733,"title":{},"body":{"injectables/RequestService.html":{}}}],["basewikimediaurl",{"_index":2198,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["basic",{"_index":1863,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["bayern.de/vd16",{"_index":709,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["bbdefb",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["bce",{"_index":4286,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["bearing",{"_index":4421,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["begin",{"_index":4617,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["beginning",{"_index":4598,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["behavior",{"_index":2003,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["behaviorsubject",{"_index":1434,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["behaviorsubject(0",{"_index":1435,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["behaviorsubject([itemtypes",{"_index":1439,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["behaviorsubject(itemtypes",{"_index":1443,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["behaviorsubject(mutator",{"_index":1453,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["behaviorsubject(this.seed",{"_index":2696,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["belhoste",{"_index":4882,"title":{},"body":{"index.html":{}}}],["below",{"_index":3228,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["beruf",{"_index":1843,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["besucht",{"_index":2782,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["biblio.author.label",{"_index":2131,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["biblio.date.value",{"_index":2134,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["biblio.location.label",{"_index":2133,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["biblio.title.label",{"_index":2132,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["biblio_harmonia_universalis",{"_index":2063,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["bibliography",{"_index":1998,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["bibliohu",{"_index":2084,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["bibliohu:string",{"_index":1997,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["bien",{"_index":3130,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["birth",{"_index":4619,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["blob",{"_index":478,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"injectables/RequestService.html":{}}}],["blob([content",{"_index":479,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["blob([data",{"_index":3844,"title":{},"body":{"injectables/RequestService.html":{}}}],["block",{"_index":1634,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["blockdisplay",{"_index":1641,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["blockdisplayservice",{"_index":563,"title":{"injectables/BlockDisplayService.html":{}},"body":{"injectables/BlockDisplayService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"coverage.html":{}}}],["body",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["bold",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["book",{"_index":1197,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["book1",{"_index":1277,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["book2",{"_index":1300,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["book3",{"_index":1322,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["book4",{"_index":1344,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["book5",{"_index":1366,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["boolean",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DisplayFlags.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["bootstrap",{"_index":4930,"title":{},"body":{"overview.html":{}}}],["bottom",{"_index":2445,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["bottom:20px",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":2839,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["browse",{"_index":4886,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":3930,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"dependencies.html":{}}}],["bruno",{"_index":4881,"title":{},"body":{"index.html":{}}}],["build",{"_index":1111,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"index.html":{}}}],["buildings",{"_index":4417,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["buildingtitle",{"_index":4402,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["burial",{"_index":4601,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["básico",{"_index":1867,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["búsqueda",{"_index":4001,"title":{},"body":{"components/SearchComponent.html":{}}}],["c",{"_index":542,"title":{},"body":{"interfaces/Bank.html":{},"components/SearchComponent.html":{},"injectables/SetTimeService.html":{}}}],["c'est",{"_index":3448,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["cache",{"_index":4488,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["cachedresponse",{"_index":4502,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["calendar",{"_index":4629,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["calendar.service.ts",{"_index":1936,"title":{},"body":{"injectables/GregorianToJulianCalendarService.html":{},"coverage.html":{}}}],["calendar.service.ts:6",{"_index":1937,"title":{},"body":{"injectables/GregorianToJulianCalendarService.html":{}}}],["called",{"_index":2774,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["campos",{"_index":4010,"title":{},"body":{"components/SearchComponent.html":{}}}],["caractère",{"_index":3447,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["caractères",{"_index":991,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Qualifier.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{}}}],["card",{"_index":2452,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/SearchComponent.html":{}}}],["career",{"_index":106,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"interfaces/Data.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"interfaces/ItemType.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"interfaces/Selection.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"components/TextDisplayComponent.html":{},"interfaces/Variable.html":{}}}],["career1",{"_index":1278,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["career2",{"_index":1301,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["career3",{"_index":1323,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["career4",{"_index":1345,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["career5",{"_index":1367,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["career_display_properties",{"_index":639,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["careerandactivities",{"_index":599,"title":{},"body":{"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{}}}],["careerdisplaycomponent",{"_index":105,"title":{"components/CareerDisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["carrera",{"_index":1847,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["carriera",{"_index":1849,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["carrière",{"_index":1845,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["cas",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["case",{"_index":4089,"title":{},"body":{"injectables/SetDataService.html":{}}}],["caseinsensitive",{"_index":4302,"title":{},"body":{"injectables/SortingDataAccessorService.html":{},"coverage.html":{}}}],["catcherror",{"_index":3799,"title":{},"body":{"injectables/RequestService.html":{}}}],["center",{"_index":2450,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/TextDisplayComponent.html":{}}}],["center2",{"_index":2834,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["cette",{"_index":3624,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["cgi/zeige?index=lemmata&term",{"_index":749,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["champ",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["change",{"_index":2502,"title":{},"body":{"injectables/ItemInfoService.html":{},"index.html":{}}}],["changedetection",{"_index":4322,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["changedetectionstrategy",{"_index":4348,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4323,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["changedetector",{"_index":2577,"title":{},"body":{"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["changedetectorref",{"_index":2596,"title":{},"body":{"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["changelist",{"_index":2945,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["changelist(data",{"_index":2952,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["changements",{"_index":3259,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["changes",{"_index":59,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["changes.selecteditemvalue",{"_index":81,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["changes.selecteditemvalue.currentvalue",{"_index":83,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["changes.selectedprojectlist",{"_index":75,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["changes.selectedprojectlist.currentvalue",{"_index":77,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["changes.selectedstatementlist",{"_index":78,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["changes.selectedstatementlist.currentvalue",{"_index":80,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["changes.sparqldata",{"_index":4359,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["changes.sparqldata.currentvalue",{"_index":4360,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["changes.sparqldata.currentvalue.foreach",{"_index":4362,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["changes.sparqldata.currentvalue.foreach(function",{"_index":4428,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["changes.sparqlsubject",{"_index":4373,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["changes.sparqlsubject.currentvalue",{"_index":4374,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["changes.trans",{"_index":4584,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["changeundefineditem",{"_index":868,"title":{},"body":{"pipes/ChangeUndefinedItemPipe.html":{}}}],["changeundefineditempipe",{"_index":865,"title":{"pipes/ChangeUndefinedItemPipe.html":{}},"body":{"pipes/ChangeUndefinedItemPipe.html":{},"coverage.html":{}}}],["chaque",{"_index":1762,"title":{},"body":{"components/EducationDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier-1.html":{},"injectables/SetDataService.html":{},"interfaces/Statement-2.html":{}}}],["chargées",{"_index":3663,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["chaîne",{"_index":990,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["check",{"_index":4923,"title":{},"body":{"index.html":{}}}],["check_circle",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["checkboxsectionvalid",{"_index":3545,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["checked",{"_index":2503,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["chiffre",{"_index":3449,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["child",{"_index":4396,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["children",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chronologique",{"_index":2226,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["circular",{"_index":3533,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["circularinversepermutation",{"_index":2642,"title":{},"body":{"injectables/MutatorService.html":{}}}],["circularinversepermutation(arr",{"_index":2646,"title":{},"body":{"injectables/MutatorService.html":{}}}],["circularpermutation",{"_index":2643,"title":{},"body":{"injectables/MutatorService.html":{}}}],["circularpermutation(arr",{"_index":2648,"title":{},"body":{"injectables/MutatorService.html":{}}}],["circumcision",{"_index":4660,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["city",{"_index":1200,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["city1",{"_index":1279,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["city2",{"_index":1302,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["city3",{"_index":1324,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["city4",{"_index":1346,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["city5",{"_index":1368,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["claim",{"_index":677,"title":{"interfaces/Claim.html":{}},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"coverage.html":{}}}],["claim.datatype",{"_index":679,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["claim.externallink",{"_index":698,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["claim.externallink.replace(\"$1",{"_index":700,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["claim.mainsnak.datavalue.value.id",{"_index":940,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["claim.mainsnak.datavalue?.value?.id",{"_index":938,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["claim.mainsnak.property",{"_index":916,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["claim.qualifiers?.[prop",{"_index":981,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["claim.qualifiers[prop",{"_index":982,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["claim.references",{"_index":904,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["claim.url",{"_index":699,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["claim[\"qualifiers",{"_index":4100,"title":{},"body":{"injectables/SetDataService.html":{}}}],["claim['qualifiers",{"_index":919,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["claim[0].mainsnak.datavalue.value",{"_index":701,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["claimarray.foreach((claim",{"_index":4099,"title":{},"body":{"injectables/SetDataService.html":{}}}],["claims",{"_index":889,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Reference.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"interfaces/Snak.html":{}}}],["claims.p2",{"_index":1709,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2.career",{"_index":1665,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2.sociability",{"_index":1671,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2.training",{"_index":1677,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.activity",{"_index":1684,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.career",{"_index":1663,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.document",{"_index":1692,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.event",{"_index":1688,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.org",{"_index":1680,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.person",{"_index":1658,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.place",{"_index":1654,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.sociability",{"_index":1669,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.sources",{"_index":1699,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2?.training",{"_index":1675,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2[0].mainsnak.label",{"_index":1721,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p2[0]?.mainsnak?.label",{"_index":1719,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims.p3",{"_index":1710,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["claims:any",{"_index":3909,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["claims[prop",{"_index":1125,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["claimsarray",{"_index":913,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["claimsarray.flatmap(val",{"_index":914,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["claimsobject",{"_index":887,"title":{"interfaces/ClaimsObject.html":{}},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"coverage.html":{}}}],["clarity",{"_index":1076,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["class",{"_index":74,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{}}}],["classes",{"_index":2341,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["classeslist",{"_index":1731,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["classeslistbuilding",{"_index":2458,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["classeslistbuilding(id",{"_index":2464,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["classeslistquery",{"_index":2490,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["classeslistquery:observable",{"_index":2484,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["classeslisttitle",{"_index":2316,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["classeslisttitle:string",{"_index":2382,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["cleaning",{"_index":4691,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["cleaning(u",{"_index":4693,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["clear",{"_index":3307,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["cli",{"_index":4840,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["click",{"_index":777,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["cloner",{"_index":3390,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["code",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Lang.html":{},"injectables/SetLanguageService.html":{},"index.html":{}}}],["col",{"_index":1186,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["col:0",{"_index":1233,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["col:23",{"_index":1296,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["colindex",{"_index":2682,"title":{},"body":{"injectables/MutatorService.html":{}}}],["color:#3f51b5",{"_index":2433,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["color:#ad1457",{"_index":2439,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/SearchComponent.html":{},"components/TextDisplayComponent.html":{}}}],["color:#f6f8f9",{"_index":2454,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["color:white",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["column",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["columns",{"_index":1267,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["combinelatest",{"_index":1467,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["combinelatest([this.behavior",{"_index":2049,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["comma",{"_index":471,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["commajoin",{"_index":1020,"title":{},"body":{"pipes/CommaJoinPipe.html":{}}}],["commajoinpipe",{"_index":1017,"title":{"pipes/CommaJoinPipe.html":{}},"body":{"pipes/CommaJoinPipe.html":{},"coverage.html":{}}}],["command",{"_index":4926,"title":{},"body":{"index.html":{}}}],["comme",{"_index":1748,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["commemorative",{"_index":4652,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["commonmodule",{"_index":24,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["commonsmedia",{"_index":2273,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["compare(u",{"_index":3535,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["complete",{"_index":1028,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/SetDataService.html":{},"coverage.html":{}}}],["completeitem",{"_index":1033,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/SetDataService.html":{}}}],["completeitem(res",{"_index":1034,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["component",{"_index":0,"title":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:mapcomponent",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:searchcomponent",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":99,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"overview.html":{}}}],["composition",{"_index":4599,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["computed",{"_index":1466,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["concat",{"_index":1712,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["concat(this.setreferenceitems(values",{"_index":1579,"title":{},"body":{"injectables/DetailsService.html":{}}}],["concaténer",{"_index":3398,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["condition",{"_index":1787,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["confirmation",{"_index":4624,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["consecration",{"_index":4635,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["conserver",{"_index":3427,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["console.error(\"les",{"_index":3659,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.error('itemtypes",{"_index":3645,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(\"url",{"_index":740,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["console.log('added",{"_index":3553,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('calling",{"_index":3612,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('currentitemtypes",{"_index":3615,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('education",{"_index":1760,"title":{},"body":{"components/EducationDisplayComponent.html":{}}}],["console.log('event",{"_index":3587,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('initial",{"_index":3592,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('laststatementindex",{"_index":3549,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('ngaftercontentinit",{"_index":3349,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["console.log('ngafterviewinit",{"_index":3350,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["console.log('openitem",{"_index":2773,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["console.log('q.display",{"_index":1771,"title":{},"body":{"components/EducationDisplayComponent.html":{}}}],["console.log('qualifiers",{"_index":1768,"title":{},"body":{"components/EducationDisplayComponent.html":{},"injectables/PropertyDetailsService.html":{}}}],["console.log('qualifiers2",{"_index":1769,"title":{},"body":{"components/EducationDisplayComponent.html":{},"injectables/PropertyDetailsService.html":{}}}],["console.log('removed",{"_index":3568,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('selected",{"_index":3245,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('selectedparisitemslist",{"_index":2790,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["console.log('setcurrentitemtypes",{"_index":3643,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('sources",{"_index":4318,"title":{},"body":{"components/SourcesDisplayComponent.html":{}}}],["console.log('statements",{"_index":3600,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log('updated",{"_index":3255,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(`augmented",{"_index":3700,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(address",{"_index":2971,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["console.log(augmenteditems",{"_index":3712,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(control.value.cb",{"_index":3543,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["console.log(coords",{"_index":2633,"title":{},"body":{"injectables/MapService.html":{}}}],["console.log(event.value",{"_index":3280,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(i",{"_index":3588,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(item[0].claims.p309[0].mainsnak.datavalue.value",{"_index":2195,"title":{},"body":{"injectables/IframesDisplayService-1.html":{}}}],["console.log(itemtype",{"_index":2660,"title":{},"body":{"injectables/MutatorService.html":{}}}],["console.log(itemtypes",{"_index":3314,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["console.log(label",{"_index":3288,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["console.log(mutator",{"_index":3191,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["console.log(newmutator",{"_index":2679,"title":{},"body":{"injectables/MutatorService.html":{}}}],["console.log(options",{"_index":3664,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(prefix",{"_index":2975,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["console.log(re",{"_index":2550,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["console.log(re.claims",{"_index":3911,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["console.log(request.url",{"_index":4501,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["console.log(res",{"_index":2552,"title":{},"body":{"injectables/ListDetailsService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{}}}],["console.log(res.parse",{"_index":4687,"title":{},"body":{"injectables/TranscriptDisplayService.html":{}}}],["console.log(result",{"_index":4715,"title":{},"body":{"injectables/TypologyService.html":{}}}],["console.log(search",{"_index":3507,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(this.dynamicinfolist",{"_index":3322,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["console.log(this.istrans",{"_index":4589,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["console.log(this.pages",{"_index":3987,"title":{},"body":{"components/SearchComponent.html":{}}}],["console.log(this.propertiestoselect",{"_index":3454,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["console.log(this.qualifierliteralvariables",{"_index":3505,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(this.selecteditemslist",{"_index":4012,"title":{},"body":{"components/SearchComponent.html":{}}}],["console.log(this.sparqldata",{"_index":4480,"title":{},"body":{"components/Sparql4DisplayComponent.html":{}}}],["console.log(this.subtitle",{"_index":4467,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["console.log(this.text",{"_index":4588,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["console.log(typeof(list",{"_index":2551,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["console.log(u",{"_index":2973,"title":{},"body":{"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{}}}],["console.log(value",{"_index":872,"title":{},"body":{"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["console.log(values",{"_index":4050,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["console.log(x",{"_index":4203,"title":{},"body":{"injectables/SetSubtitleService.html":{}}}],["const",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"interfaces/Data.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/ItemType.html":{},"interfaces/Lang.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/ParisDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"injectables/SortingDataAccessorService.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/StringVariable.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}}}],["constante",{"_index":593,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["constraint",{"_index":4657,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["construction",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Lang.html":{}}}],["constructor",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/IframesDisplayService.html":{},"interfaces/Lang.html":{},"injectables/LongestWordService.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"injectables/SortingDataAccessorService.html":{},"interceptors/SparqlInterceptor.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/WikiDisplayService.html":{}}}],["constructor(private",{"_index":1165,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["container",{"_index":2824,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["content",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"components/ItemInfoComponent.html":{},"components/ParisSearchComponent.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{}}}],["contents",{"_index":2194,"title":{},"body":{"injectables/IframesDisplayService-1.html":{}}}],["contenttype",{"_index":458,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["contenus",{"_index":959,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["context",{"_index":1202,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"components/Sparql1DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["context1",{"_index":1246,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["context2",{"_index":1247,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["context3",{"_index":1248,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["context4",{"_index":1249,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["context5",{"_index":1390,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["contexttitle",{"_index":4403,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["continue",{"_index":674,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["control",{"_index":2895,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["control.patchvalue(\"value",{"_index":4550,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["control.value.cb.some((item",{"_index":3544,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["control.value.every((val",{"_index":3726,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["control.value[0][2",{"_index":3512,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["control.value[0][3",{"_index":3724,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["controls",{"_index":3066,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["controls.service",{"_index":3060,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["controls.service.ts",{"_index":4512,"title":{},"body":{"injectables/StatementsControlsService.html":{},"coverage.html":{}}}],["controls.service.ts:11",{"_index":4517,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:19",{"_index":4519,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:21",{"_index":4527,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:23",{"_index":4523,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:25",{"_index":4521,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:27",{"_index":4535,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:29",{"_index":4533,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:31",{"_index":4537,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:33",{"_index":4531,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:35",{"_index":4529,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:37",{"_index":4525,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["controls.service.ts:7",{"_index":4515,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["contrôle",{"_index":3254,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["convert",{"_index":463,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["coordinate",{"_index":799,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["coords",{"_index":2614,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["corporations",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["correctement",{"_index":3662,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["correspondant",{"_index":3572,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["correspondants",{"_index":3570,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["corriger",{"_index":3599,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["cors",{"_index":4853,"title":{},"body":{"dependencies.html":{}}}],["country",{"_index":1203,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["country%20%3fcountrylabel%0awhere%20%0a%7b%20values%20%3fc%20%7b%20wd%3aq21925%20wd%3aq11317%20%7d%0a%20%20%3ftitle%20wdt%3ap2%20wd%3aq20%3b%0a%20%20%20%20%20%20%20%20wdt%3ap243%20wd%3aq172203%3b%0a%20%20%20%20%20%20%20%20wdt%3ap21%20%3f",{"_index":2158,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["country1",{"_index":1280,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["country2",{"_index":1303,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["country3",{"_index":1325,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["country4",{"_index":1347,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["country5",{"_index":1369,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["coverage",{"_index":4776,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":3041,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["create",{"_index":477,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/HuDatabaseService.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["createcompleteitem",{"_index":4066,"title":{},"body":{"injectables/SetDataService.html":{}}}],["createcompleteitemservice",{"_index":1026,"title":{"injectables/CreateCompleteItemService.html":{}},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/SetDataService.html":{},"coverage.html":{}}}],["createitem",{"_index":1030,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/SetDataService.html":{}}}],["createitemtodisplay",{"_index":1062,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["createitemtodisplay(re",{"_index":1065,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["createitemtodisplayservice",{"_index":1044,"title":{"injectables/CreateItemToDisplayService.html":{}},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/SetDataService.html":{},"coverage.html":{}}}],["createlist",{"_index":1539,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["createlist(arr",{"_index":995,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Snak.html":{}}}],["createlist(re",{"_index":2729,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["creation",{"_index":4642,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["crire",{"_index":3131,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["crée",{"_index":908,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["créer",{"_index":960,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-2.html":{}}}],["család",{"_index":1834,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["csv",{"_index":1988,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["csv.service",{"_index":1950,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["csv.service.ts",{"_index":449,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"coverage.html":{}}}],["csv.service.ts:10",{"_index":454,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["csv.service.ts:20",{"_index":459,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["csv.service.ts:6",{"_index":452,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["cultura",{"_index":1859,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["culture",{"_index":1854,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["curr",{"_index":1587,"title":{},"body":{"injectables/DetailsService.html":{}}}],["curr.entities",{"_index":1589,"title":{},"body":{"injectables/DetailsService.html":{}}}],["current",{"_index":3277,"title":{},"body":{"interfaces/Qualifier.html":{},"components/Sparql3DisplayComponent.html":{},"interfaces/Statement-1.html":{}}}],["currentaddress",{"_index":4458,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["currentdynamicinfolist",{"_index":3182,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["currentdynamicinfolist.push(initialdynamicinfo",{"_index":3184,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["currentdynamicinfolist[index",{"_index":3319,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["currentitemtypes",{"_index":1477,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["currentitemtypesarray",{"_index":3547,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["currentlang",{"_index":1153,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["currentmutator",{"_index":3103,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["currentstatement",{"_index":1396,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["currenttrans.currentvalue",{"_index":4586,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["currenttrans:simplechange",{"_index":4583,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["currentword",{"_index":2563,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["currentword.length",{"_index":2564,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["currentyear",{"_index":1928,"title":{},"body":{"components/FooterComponent.html":{}}}],["custom",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["customdate",{"_index":1151,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["customdatepipe",{"_index":1148,"title":{"pipes/CustomDatePipe.html":{}},"body":{"pipes/CustomDatePipe.html":{},"coverage.html":{}}}],["d",{"_index":544,"title":{},"body":{"interfaces/Bank.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"injectables/SetTimeService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d'une",{"_index":592,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["d'éléments",{"_index":3622,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["d.amount",{"_index":826,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.calendar",{"_index":820,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.datatype",{"_index":818,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.datatype==='commonsmedia",{"_index":835,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.datatype==='monolingualtext",{"_index":824,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.datatype==='string",{"_index":821,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.datatype==='wikibase",{"_index":831,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.datatype===\\'commonsmedia",{"_index":860,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.datatype===\\'monolingualtext",{"_index":857,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.datatype===\\'string",{"_index":856,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.datatype===\\'wikibase",{"_index":859,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.date",{"_index":819,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.label",{"_index":832,"title":{},"body":{"components/CareerDisplayComponent.html":{},"injectables/CreateItemToDisplayService.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.label.charat(0).tolowercase",{"_index":1138,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["d.label.slice(1",{"_index":1139,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["d.separator}}{{d.description",{"_index":834,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.string",{"_index":822,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.string.text",{"_index":825,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["d.unit",{"_index":827,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["dans",{"_index":909,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["darstellung=v",{"_index":751,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["data",{"_index":455,"title":{"interfaces/Data.html":{}},"body":{"injectables/ArrayToCsvService.html":{},"interfaces/Data.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"interfaces/Selection.html":{},"injectables/SortingDataAccessorService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["data(data",{"_index":2907,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["data.author.id.tolocalelowercase().includes(filter",{"_index":2023,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["data.author.label.tolocalelowercase().includes(filter",{"_index":2022,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["data.date.value.tolocalelowercase().includes(filter",{"_index":2028,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["data.deselect",{"_index":3309,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["data.location.id.tolocalelowercase().includes(filter",{"_index":2027,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["data.location.label.tolocalelowercase().includes(filter",{"_index":2026,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["data.map(row",{"_index":461,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["data.service",{"_index":1948,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["data.service.ts",{"_index":1490,"title":{},"body":{"injectables/DataService-1.html":{},"injectables/SetDataService.html":{},"coverage.html":{}}}],["data.service.ts:12",{"_index":1517,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:14",{"_index":1518,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:16",{"_index":1519,"title":{},"body":{"injectables/DataService-1.html":{},"injectables/SetDataService.html":{}}}],["data.service.ts:17",{"_index":4083,"title":{},"body":{"injectables/SetDataService.html":{}}}],["data.service.ts:18",{"_index":1512,"title":{},"body":{"injectables/DataService-1.html":{},"injectables/SetDataService.html":{}}}],["data.service.ts:19",{"_index":4086,"title":{},"body":{"injectables/SetDataService.html":{}}}],["data.service.ts:20",{"_index":4085,"title":{},"body":{"injectables/SetDataService.html":{}}}],["data.service.ts:21",{"_index":1501,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:23",{"_index":1502,"title":{},"body":{"injectables/DataService-1.html":{},"injectables/SetDataService.html":{}}}],["data.service.ts:25",{"_index":4087,"title":{},"body":{"injectables/SetDataService.html":{}}}],["data.service.ts:26",{"_index":4081,"title":{},"body":{"injectables/SetDataService.html":{}}}],["data.service.ts:27",{"_index":4084,"title":{},"body":{"injectables/SetDataService.html":{}}}],["data.service.ts:29",{"_index":1527,"title":{},"body":{"injectables/DataService-1.html":{},"injectables/SetDataService.html":{}}}],["data.service.ts:31",{"_index":1529,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:33",{"_index":1509,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:36",{"_index":1523,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:38",{"_index":1525,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:40",{"_index":1506,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:43",{"_index":1520,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:45",{"_index":1522,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:47",{"_index":1504,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:50",{"_index":1500,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:52",{"_index":1515,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:54",{"_index":1516,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:56",{"_index":4078,"title":{},"body":{"injectables/SetDataService.html":{}}}],["data.service.ts:58",{"_index":1498,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:65",{"_index":1526,"title":{},"body":{"injectables/DataService-1.html":{},"injectables/SetDataService.html":{}}}],["data.service.ts:67",{"_index":1513,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:69",{"_index":1507,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:71",{"_index":1514,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:73",{"_index":1510,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:75",{"_index":1499,"title":{},"body":{"injectables/DataService-1.html":{},"injectables/SetDataService.html":{}}}],["data.service.ts:80",{"_index":4073,"title":{},"body":{"injectables/SetDataService.html":{}}}],["data.service.ts:9",{"_index":1497,"title":{},"body":{"injectables/DataService-1.html":{}}}],["data.service.ts:90",{"_index":4075,"title":{},"body":{"injectables/SetDataService.html":{}}}],["data.title.id.tolocalelowercase().includes(filter",{"_index":2025,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["data.title.label.tolocalelowercase().includes(filter",{"_index":2024,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["data[sortheaderid",{"_index":4310,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["databank",{"_index":3989,"title":{},"body":{"components/SearchComponent.html":{}}}],["database",{"_index":1871,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/SearchComponent.html":{},"index.html":{}}}],["database.service",{"_index":1953,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{}}}],["database.service.ts",{"_index":2139,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ParisDatabaseService.html":{},"coverage.html":{}}}],["database.service.ts:10",{"_index":2156,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["database.service.ts:12",{"_index":2704,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["database.service.ts:13",{"_index":2697,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["database.service.ts:14",{"_index":2155,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["database.service.ts:16",{"_index":2695,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["database.service.ts:21",{"_index":2151,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ParisDatabaseService.html":{}}}],["database.service.ts:44",{"_index":2147,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["database.service.ts:54",{"_index":2153,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["database.service.ts:62",{"_index":2149,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["database.service.ts:7",{"_index":2691,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["databasetodisplay",{"_index":2141,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["databasetodisplay(sparql",{"_index":2146,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["databasetodownload",{"_index":2142,"title":{},"body":{"injectables/HuDatabaseService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["databasetodownload(data",{"_index":2148,"title":{},"body":{"injectables/HuDatabaseService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["dataservice",{"_index":1394,"title":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"coverage.html":{}}}],["dataservice.pipe(map(res",{"_index":2046,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["dataset",{"_index":2711,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["datasource",{"_index":1995,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["datatodownload",{"_index":4444,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["datatodownload:any",{"_index":2181,"title":{},"body":{"injectables/HuDatabaseService.html":{},"components/Sparql0DisplayComponent.html":{}}}],["datatype",{"_index":883,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SetLanguageService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["datatype.charat(0",{"_index":3296,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["datatype:string",{"_index":3902,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["datavalue",{"_index":884,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["date",{"_index":1160,"title":{},"body":{"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/ItemDetailsService.html":{},"interfaces/ItemType.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"injectables/SetTimeService.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}}}],["date().getfullyear",{"_index":1929,"title":{},"body":{"components/FooterComponent.html":{}}}],["date.pipe.ts",{"_index":1150,"title":{},"body":{"pipes/CustomDatePipe.html":{},"coverage.html":{}}}],["date.pipe.ts:13",{"_index":1154,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["date.pipe.ts:15",{"_index":1152,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["date.substring(0",{"_index":4271,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["date.substring(5",{"_index":4274,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["date.substring(8",{"_index":4276,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["date1",{"_index":1237,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}}}],["date2",{"_index":1238,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}}}],["date3",{"_index":1239,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}}}],["date4",{"_index":1240,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}}}],["date5",{"_index":1241,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}}}],["dateheader",{"_index":2085,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["dateheader:string",{"_index":2002,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["datenbank",{"_index":1872,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["datepipe",{"_index":1155,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["datepipe:datepipe",{"_index":1167,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["dati",{"_index":1875,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["datos",{"_index":1874,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"components/SearchComponent.html":{}}}],["day",{"_index":4210,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["daynum",{"_index":4275,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["daysuffix",{"_index":4206,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["daysuffix(day",{"_index":4208,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["dd",{"_index":1231,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["de",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"pipes/UnitPipe.html":{}}}],["de.pipe",{"_index":4031,"title":{},"body":{"injectables/SearchEngineService.html":{}}}],["death",{"_index":4596,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["debouncetime",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["debouncetime(200",{"_index":2802,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{}}}],["debouncetime(400",{"_index":2795,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["debug",{"_index":741,"title":{},"body":{"injectables/BlockDisplayService.html":{},"injectables/PropertyDetailsService.html":{}}}],["december",{"_index":4223,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["declarations",{"_index":4929,"title":{},"body":{"overview.html":{}}}],["decorators",{"_index":2122,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{},"components/ProjectSelectComponent.html":{}}}],["deep",{"_index":2981,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["deepnatureof",{"_index":2946,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["default",{"_index":46,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/BackListService.html":{},"components/CareerDisplayComponent.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"injectables/ListDetailsService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{}}}],["defined",{"_index":48,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{}}}],["definitions",{"_index":2304,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{}}}],["dei",{"_index":1796,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["delay",{"_index":3052,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["delete",{"_index":1146,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["dependencies",{"_index":4833,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":2362,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["depuis",{"_index":2404,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["dernier",{"_index":3446,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["derniers",{"_index":3445,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["des",{"_index":693,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDetailsService.html":{},"components/ItemInfoComponent.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["descobj",{"_index":4176,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["descobj?.value",{"_index":4180,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["description",{"_index":2221,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/SetLanguageService.html":{},"interfaces/Snak.html":{},"index.html":{}}}],["descriptions",{"_index":2261,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{}}}],["details",{"_index":1061,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/SetItemToDisplayService.html":{},"index.html":{}}}],["details.service",{"_index":531,"title":{},"body":{"injectables/BackListService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/SetItemToDisplayService.html":{}}}],["details.service.ts",{"_index":494,"title":{},"body":{"injectables/BackListDetailsService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ListDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"coverage.html":{}}}],["details.service.ts:10",{"_index":498,"title":{},"body":{"injectables/BackListDetailsService.html":{},"injectables/ListDetailsService.html":{},"injectables/PropertyDetailsService.html":{}}}],["details.service.ts:115",{"_index":3028,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["details.service.ts:12",{"_index":2248,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:13",{"_index":2242,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/ListDetailsService.html":{}}}],["details.service.ts:14",{"_index":2250,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/ListDetailsService.html":{}}}],["details.service.ts:142",{"_index":3026,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["details.service.ts:15",{"_index":2243,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:16",{"_index":2245,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:19",{"_index":2240,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:192",{"_index":2234,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:21",{"_index":2246,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:229",{"_index":2232,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:23",{"_index":2214,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:25",{"_index":2210,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:267",{"_index":2236,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:28",{"_index":3024,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["details.service.ts:289",{"_index":2212,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:295",{"_index":2238,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["details.service.ts:54",{"_index":2541,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["details.service.ts:6",{"_index":496,"title":{},"body":{"injectables/BackListDetailsService.html":{},"injectables/PropertyDetailsService.html":{}}}],["details.service.ts:67",{"_index":3012,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["details.service.ts:88",{"_index":2216,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["detailsservice",{"_index":890,"title":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{}},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/SetItemToDisplayService.html":{},"interfaces/Snak.html":{},"coverage.html":{}}}],["detect(obj",{"_index":3523,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["detect(obj[key",{"_index":3528,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["deuxième",{"_index":3596,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["dev",{"_index":4900,"title":{},"body":{"index.html":{}}}],["development",{"_index":4895,"title":{},"body":{"index.html":{}}}],["dezember",{"_index":4242,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["di",{"_index":1804,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"components/SearchComponent.html":{}}}],["dicembre",{"_index":4263,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["diciembre",{"_index":4254,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["differentdatatype",{"_index":3514,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["différer",{"_index":3353,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["direction",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["directive",{"_index":97,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["directives",{"_index":150,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":4908,"title":{},"body":{"index.html":{}}}],["directory",{"_index":4912,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":2013,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["disciples",{"_index":4425,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{}}}],["dispatch",{"_index":2305,"title":{},"body":{"injectables/ItemDisplayDispatcherService.html":{}}}],["dispatch(item",{"_index":1649,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["dispatcher.service.ts",{"_index":1618,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"coverage.html":{}}}],["dispatcher.service.ts:29",{"_index":2307,"title":{},"body":{"injectables/ItemDisplayDispatcherService.html":{}}}],["dispatcher.service.ts:30",{"_index":2309,"title":{},"body":{"injectables/ItemDisplayDispatcherService.html":{}}}],["dispatcher.service.ts:32",{"_index":2308,"title":{},"body":{"injectables/ItemDisplayDispatcherService.html":{}}}],["dispatcher.service.ts:34",{"_index":2306,"title":{},"body":{"injectables/ItemDisplayDispatcherService.html":{}}}],["display",{"_index":149,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["display'},{'name",{"_index":107,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["display.component.html",{"_index":757,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["display.component.scss",{"_index":758,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["display.component.ts",{"_index":754,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:101",{"_index":4336,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["display.component.ts:102",{"_index":4462,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["display.component.ts:103",{"_index":4476,"title":{},"body":{"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:106",{"_index":4464,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["display.component.ts:109",{"_index":4478,"title":{},"body":{"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:113",{"_index":4461,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["display.component.ts:119",{"_index":4463,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["display.component.ts:126",{"_index":4409,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:131",{"_index":4411,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:135",{"_index":4414,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:14",{"_index":4573,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:143",{"_index":4410,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:150",{"_index":4413,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:17",{"_index":4572,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:18",{"_index":1755,"title":{},"body":{"components/EducationDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":1756,"title":{},"body":{"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["display.component.ts:20",{"_index":763,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":762,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["display.component.ts:22",{"_index":4315,"title":{},"body":{"components/SourcesDisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["display.component.ts:23",{"_index":769,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:24",{"_index":4338,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["display.component.ts:25",{"_index":767,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{}}}],["display.component.ts:26",{"_index":4317,"title":{},"body":{"components/SourcesDisplayComponent.html":{}}}],["display.component.ts:27",{"_index":2572,"title":{},"body":{"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:28",{"_index":4316,"title":{},"body":{"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:29",{"_index":765,"title":{},"body":{"components/CareerDisplayComponent.html":{}}}],["display.component.ts:30",{"_index":4343,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:31",{"_index":4341,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:32",{"_index":2571,"title":{},"body":{"components/MainDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:33",{"_index":4347,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:34",{"_index":4340,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:35",{"_index":4346,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:36",{"_index":4342,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:37",{"_index":4345,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:38",{"_index":4344,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:39",{"_index":4420,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{}}}],["display.component.ts:40",{"_index":1759,"title":{},"body":{"components/EducationDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:41",{"_index":4415,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:42",{"_index":1758,"title":{},"body":{"components/EducationDisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{}}}],["display.component.ts:43",{"_index":4427,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:44",{"_index":4426,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:45",{"_index":4422,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:46",{"_index":1757,"title":{},"body":{"components/EducationDisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:47",{"_index":4423,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:49",{"_index":4412,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["display.component.ts:77",{"_index":4332,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{}}}],["display.component.ts:82",{"_index":4335,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{}}}],["display.component.ts:86",{"_index":4337,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{}}}],["display.component.ts:87",{"_index":4475,"title":{},"body":{"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:92",{"_index":4477,"title":{},"body":{"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:93",{"_index":4451,"title":{},"body":{"components/Sparql2DisplayComponent.html":{}}}],["display.component.ts:94",{"_index":4333,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["display.component.ts:96",{"_index":4479,"title":{},"body":{"components/Sparql4DisplayComponent.html":{}}}],["display.component.ts:97",{"_index":4460,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["display.component.ts:99",{"_index":4452,"title":{},"body":{"components/Sparql2DisplayComponent.html":{}}}],["display.config",{"_index":649,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.config.ts",{"_index":4796,"title":{},"body":{"coverage.html":{}}}],["display.push",{"_index":2265,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["display.service",{"_index":1045,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/SetDataService.html":{}}}],["display.service.ts",{"_index":565,"title":{},"body":{"injectables/BlockDisplayService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:10",{"_index":4557,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["display.service.ts:11",{"_index":4139,"title":{},"body":{"injectables/SetItemToDisplayService.html":{}}}],["display.service.ts:117",{"_index":634,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:12",{"_index":4681,"title":{},"body":{"injectables/TranscriptDisplayService.html":{},"injectables/WikiDisplayService.html":{}}}],["display.service.ts:13",{"_index":1090,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["display.service.ts:14",{"_index":1089,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["display.service.ts:15",{"_index":1087,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["display.service.ts:16",{"_index":1085,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["display.service.ts:18",{"_index":1066,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["display.service.ts:25",{"_index":585,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:34",{"_index":4137,"title":{},"body":{"injectables/SetItemToDisplayService.html":{}}}],["display.service.ts:35",{"_index":614,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:39",{"_index":626,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:43",{"_index":623,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:47",{"_index":600,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:49",{"_index":1072,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["display.service.ts:51",{"_index":629,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:55",{"_index":605,"title":{},"body":{"injectables/BlockDisplayService.html":{},"injectables/IframesDisplayService-1.html":{}}}],["display.service.ts:59",{"_index":620,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:6",{"_index":2185,"title":{},"body":{"injectables/IframesDisplayService.html":{},"injectables/TechnicalitiesDisplayService.html":{}}}],["display.service.ts:63",{"_index":597,"title":{},"body":{"injectables/BlockDisplayService.html":{},"injectables/CreateItemToDisplayService.html":{}}}],["display.service.ts:67",{"_index":608,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:71",{"_index":603,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:75",{"_index":632,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:8",{"_index":4140,"title":{},"body":{"injectables/SetItemToDisplayService.html":{},"injectables/WikiDisplayService.html":{}}}],["display.service.ts:82",{"_index":617,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:9",{"_index":2191,"title":{},"body":{"injectables/IframesDisplayService-1.html":{},"injectables/TranscriptDisplayService.html":{}}}],["display.service.ts:94",{"_index":611,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display.service.ts:98",{"_index":636,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["display/career",{"_index":753,"title":{},"body":{"components/CareerDisplayComponent.html":{},"coverage.html":{}}}],["display/display.component",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["display/education",{"_index":1753,"title":{},"body":{"components/EducationDisplayComponent.html":{},"coverage.html":{}}}],["display/header",{"_index":2137,"title":{},"body":{"components/HeaderDisplayComponent.html":{},"coverage.html":{}}}],["display/iframes",{"_index":4788,"title":{},"body":{"coverage.html":{}}}],["display/main",{"_index":2568,"title":{},"body":{"components/MainDisplayComponent.html":{},"coverage.html":{}}}],["display/map/map.component",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["display/sociability",{"_index":4293,"title":{},"body":{"components/SociabilityDisplayComponent.html":{},"coverage.html":{}}}],["display/sources",{"_index":4314,"title":{},"body":{"components/SourcesDisplayComponent.html":{},"coverage.html":{}}}],["display/sparql0",{"_index":4321,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"coverage.html":{}}}],["display/sparql1",{"_index":4399,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"coverage.html":{}}}],["display/sparql2",{"_index":4449,"title":{},"body":{"components/Sparql2DisplayComponent.html":{},"coverage.html":{}}}],["display/sparql3",{"_index":4457,"title":{},"body":{"components/Sparql3DisplayComponent.html":{},"coverage.html":{}}}],["display/sparql4",{"_index":4474,"title":{},"body":{"components/Sparql4DisplayComponent.html":{},"coverage.html":{}}}],["display/text",{"_index":4568,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["display:flex",{"_index":2448,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/TextDisplayComponent.html":{}}}],["displaycomponent",{"_index":108,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["displayedcolumns",{"_index":2086,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["displayedcolumns:string",{"_index":1993,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["displayflags",{"_index":1616,"title":{"interfaces/DisplayFlags.html":{}},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"coverage.html":{}}}],["displaymap",{"_index":2629,"title":{},"body":{"injectables/MapService.html":{}}}],["displaymap(coords",{"_index":2631,"title":{},"body":{"injectables/MapService.html":{}}}],["disponibles",{"_index":3623,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["disputation",{"_index":4638,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["dist",{"_index":4911,"title":{},"body":{"index.html":{}}}],["div",{"_index":4014,"title":{},"body":{"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["division",{"_index":2436,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["document",{"_index":1205,"title":{},"body":{"interfaces/Data.html":{},"interfaces/DisplayFlags.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["document.createelement('a",{"_index":485,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["document1",{"_index":1281,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["document2",{"_index":1304,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["document3",{"_index":1326,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["document4",{"_index":1348,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["document5",{"_index":1370,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["document_display_properties",{"_index":640,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["documentation",{"_index":4777,"title":{},"body":{"coverage.html":{}}}],["documentdetail",{"_index":602,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["documento",{"_index":1922,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["does'nt",{"_index":2504,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["doivent",{"_index":3639,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["dokument",{"_index":1921,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["dokumentum",{"_index":1923,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["domaines",{"_index":4009,"title":{},"body":{"components/SearchComponent.html":{}}}],["domiciled",{"_index":4416,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["domsanitizer",{"_index":3928,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["données",{"_index":1873,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-2.html":{}}}],["double",{"_index":467,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["doublons",{"_index":999,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["download",{"_index":483,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/SetDataService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["download&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp",{"_index":2135,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["downloadblob",{"_index":451,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["downloadblob(content",{"_index":456,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["downloadfile",{"_index":3736,"title":{},"body":{"injectables/RequestService.html":{}}}],["downloadfile(data",{"_index":3752,"title":{},"body":{"injectables/RequestService.html":{}}}],["downloadlist",{"_index":3737,"title":{},"body":{"injectables/RequestService.html":{}}}],["downloadlist(sparql",{"_index":3754,"title":{},"body":{"injectables/RequestService.html":{}}}],["downlooding",{"_index":2059,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["dropdownoptions",{"_index":3072,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["druckpublikation",{"_index":1903,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["du",{"_index":773,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"components/MainDisplayComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["ducation",{"_index":1837,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["duplicates",{"_index":4194,"title":{},"body":{"injectables/SetSelectedItemsListService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["dynamic",{"_index":4844,"title":{},"body":{"dependencies.html":{}}}],["dynamicinfolist",{"_index":3074,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["dynamicinfolistvalue",{"_index":3384,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["dynamicinfolistvalue[this.laststatementindex",{"_index":3385,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["dynamicinfolistvalue[this.laststatementindex].itemtypes",{"_index":3418,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["dynamicinfolistvalue[this.laststatementindex].itemtypes[itemindex",{"_index":3410,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["dynamicinfolistvalue[this.laststatementindex].itemvalues[itemindex",{"_index":3388,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["décembre",{"_index":4235,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["déclaration",{"_index":3178,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["découpe",{"_index":1003,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["défaut",{"_index":3318,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["défini",{"_index":3017,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["détection",{"_index":3258,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["d’un",{"_index":992,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["d’une",{"_index":896,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["e",{"_index":545,"title":{},"body":{"interfaces/Bank.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["e.length",{"_index":2073,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["e.pageindex",{"_index":2077,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["e.pagesize",{"_index":2075,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["e2e",{"_index":4919,"title":{},"body":{"index.html":{}}}],["e3f2fd",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["each",{"_index":1135,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["educación",{"_index":1838,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["education",{"_index":110,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"interfaces/Data.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"interfaces/ItemType.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"interfaces/Selection.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"components/TextDisplayComponent.html":{},"interfaces/Variable.html":{}}}],["education1",{"_index":1282,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["education2",{"_index":1305,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["education3",{"_index":1327,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["education4",{"_index":1349,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["education5",{"_index":1371,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["education_display_properties",{"_index":642,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["educationdisplaycomponent",{"_index":109,"title":{"components/EducationDisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["educazione",{"_index":1839,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["effect",{"_index":3045,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["egység",{"_index":4730,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["ein(e",{"_index":2983,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["eine",{"_index":3988,"title":{},"body":{"components/SearchComponent.html":{}}}],["einheit",{"_index":4728,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["el",{"_index":3981,"title":{},"body":{"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["el.itemdescription",{"_index":4429,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["el.itemdescription.value",{"_index":4366,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["el.itemlabel.value",{"_index":4365,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["el.itemtext",{"_index":4364,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["el.itemtext.tolowercase().includes(this.query.tolowercase",{"_index":4384,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["element",{"_index":96,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["elements",{"_index":2816,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["elenco",{"_index":1795,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["elle",{"_index":3632,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["emitevent",{"_index":3252,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["emitting",{"_index":2709,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["empty",{"_index":3646,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["en",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/TextDisplayComponent.html":{}}}],["enable",{"_index":2707,"title":{},"body":{"injectables/ParisDatabaseService.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["enabled",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":4615,"title":{},"body":{"interfaces/TimeProperty.html":{},"index.html":{}}}],["enero",{"_index":4243,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["engine",{"_index":2794,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["engine.service",{"_index":3057,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["engine.service.ts",{"_index":4022,"title":{},"body":{"injectables/SearchEngineService.html":{},"coverage.html":{}}}],["engine.service.ts:12",{"_index":4029,"title":{},"body":{"injectables/SearchEngineService.html":{}}}],["engine.service.ts:13",{"_index":4028,"title":{},"body":{"injectables/SearchEngineService.html":{}}}],["engine.service.ts:18",{"_index":4026,"title":{},"body":{"injectables/SearchEngineService.html":{}}}],["engine.service.ts:19",{"_index":4027,"title":{},"body":{"injectables/SearchEngineService.html":{}}}],["engine.service.ts:21",{"_index":4025,"title":{},"body":{"injectables/SearchEngineService.html":{}}}],["engine.service.ts:37",{"_index":4023,"title":{},"body":{"injectables/SearchEngineService.html":{}}}],["english",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{}}}],["ennoblement",{"_index":4640,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["enrich",{"_index":1100,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["enrichclaims",{"_index":1063,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["enrichclaims(re",{"_index":1068,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["enriched?.aliases",{"_index":2270,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["enriched?.description",{"_index":2268,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["enriched?.label",{"_index":2266,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["enrichi",{"_index":2220,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{}}}],["enrichies",{"_index":911,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["enrichir",{"_index":3019,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["enrichis",{"_index":935,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["enrichit",{"_index":2217,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["enrichment",{"_index":1074,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["entit",{"_index":897,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["entities",{"_index":968,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["entity",{"_index":888,"title":{"interfaces/Entity.html":{}},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"coverage.html":{}}}],["entity.claims",{"_index":4097,"title":{},"body":{"injectables/SetDataService.html":{}}}],["entity.itemlabel.label.tolowercase().indexof(search",{"_index":3459,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["entity.itemlabel.value.tolowercase().indexof(search",{"_index":2922,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["entity.value.tolowercase().indexof(search",{"_index":3667,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["entityterms",{"_index":3848,"title":{},"body":{"injectables/RequestService.html":{}}}],["entityvalues",{"_index":3102,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["entityvalues:any",{"_index":3477,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["entrée",{"_index":1763,"title":{},"body":{"components/EducationDisplayComponent.html":{}}}],["environment",{"_index":4829,"title":{},"body":{"coverage.html":{}}}],["equaldatatype",{"_index":3513,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["era",{"_index":2284,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/SetTimeService.html":{}}}],["ereignis",{"_index":1885,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["error('trop",{"_index":925,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["erweiterte",{"_index":3999,"title":{},"body":{"components/SearchComponent.html":{}}}],["es",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockDisplayService.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SetLanguageService.html":{},"injectables/SetTimeService.html":{},"components/TextDisplayComponent.html":{},"pipes/UnitPipe.html":{},"dependencies.html":{}}}],["escape",{"_index":466,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["esemény",{"_index":1888,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["est",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["et",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["etc",{"_index":3018,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["event",{"_index":1207,"title":{},"body":{"interfaces/Data.html":{},"interfaces/DisplayFlags.html":{},"injectables/FactgridSubtitlesService.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/ItemType.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Selection.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["event.target.value.trim().tolowercase",{"_index":2066,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["event.value",{"_index":2925,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["event.value[0",{"_index":3246,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["event.value[0][0",{"_index":3268,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["event.value[0][2",{"_index":3270,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["event.value[1",{"_index":3278,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["event.value[2",{"_index":3279,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["event.value[3",{"_index":3291,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["event.value[4",{"_index":3295,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["event1",{"_index":1283,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["event2",{"_index":1306,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["event3",{"_index":1328,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["event4",{"_index":1350,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["event5",{"_index":1372,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["event_display_properties",{"_index":643,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["eventdetail",{"_index":607,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["eventemitter",{"_index":2868,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["evento",{"_index":1887,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["events",{"_index":4613,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["ex",{"_index":3021,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["example",{"_index":2823,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["exclure",{"_index":675,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["execute",{"_index":4917,"title":{},"body":{"index.html":{}}}],["exemple",{"_index":1716,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["exist",{"_index":4181,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["existante",{"_index":3630,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["existe",{"_index":2230,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["expand",{"_index":3797,"title":{},"body":{"injectables/RequestService.html":{}}}],["expand(response",{"_index":3873,"title":{},"body":{"injectables/RequestService.html":{}}}],["export",{"_index":73,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{}}}],["exports",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["expose",{"_index":2705,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["express",{"_index":4855,"title":{},"body":{"dependencies.html":{}}}],["external",{"_index":680,"title":{},"body":{"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/MainDisplayComponent.html":{},"injectables/SetLanguageService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["external_links_display_properties",{"_index":648,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["externallink",{"_index":3014,"title":{},"body":{"injectables/PropertyDetailsService.html":{},"injectables/SetLanguageService.html":{}}}],["externallinks",{"_index":610,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["externallinks.push(claim",{"_index":696,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["externes",{"_index":695,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["extraoptions",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["f",{"_index":546,"title":{},"body":{"interfaces/Bank.html":{}}}],["f.id",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["f.name",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["factgrid",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"pipes/CustomDatePipe.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"injectables/TechnicalitiesDisplayService.html":{},"index.html":{}}}],["factgridsubtitlesservice",{"_index":1772,"title":{"injectables/FactgridSubtitlesService.html":{}},"body":{"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDetailsService.html":{},"coverage.html":{}}}],["factgridtitle",{"_index":4017,"title":{},"body":{"components/SearchComponent.html":{}}}],["factgridviewer",{"_index":1931,"title":{},"body":{"components/FooterComponent.html":{}}}],["fallback",{"_index":4154,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["fallbackorder",{"_index":4147,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["false",{"_index":768,"title":{},"body":{"components/CareerDisplayComponent.html":{},"pipes/CustomDatePipe.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["famiglia",{"_index":1832,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["familia",{"_index":1830,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["familie",{"_index":1825,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["famille",{"_index":1827,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["family",{"_index":1822,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"components/Sparql1DisplayComponent.html":{}}}],["familynametitle",{"_index":4404,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["faut",{"_index":3263,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["fb",{"_index":3063,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["febbraio",{"_index":4256,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["febrero",{"_index":4244,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["februar",{"_index":4237,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["february",{"_index":4214,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["fetch",{"_index":3867,"title":{},"body":{"injectables/RequestService.html":{}}}],["fetch().pipe",{"_index":3872,"title":{},"body":{"injectables/RequestService.html":{}}}],["fetch(response.continue.sroffset",{"_index":3876,"title":{},"body":{"injectables/RequestService.html":{}}}],["fiction",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["field",{"_index":1971,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SetLanguageService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["fields",{"_index":3933,"title":{},"body":{"components/SearchComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{},"dependencies.html":{}}}],["filename",{"_index":457,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["files",{"_index":4905,"title":{},"body":{"index.html":{}}}],["filter",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filter(boolean",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"injectables/DetailsService.html":{},"interfaces/Lang.html":{}}}],["filter(claim",{"_index":937,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["filter(item",{"_index":2759,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["filter(label",{"_index":1140,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["filter(obj",{"_index":971,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["filter(res",{"_index":3479,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filtered",{"_index":1996,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filtereditems",{"_index":3686,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["filtereditemtypes",{"_index":3079,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["filtereditemtypes.next(res",{"_index":3605,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["filtereditemtypesarray",{"_index":3550,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["filtereditemvalues",{"_index":3161,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filtereditemvaluesarray",{"_index":3552,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["filteredliteralvariables",{"_index":3163,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filteredprojectmulti",{"_index":2854,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["filteredproperties",{"_index":3608,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["filteredpropertymulti",{"_index":3157,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["filteredpropertymultiarray",{"_index":3551,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["filteredqualifierliteralvariables",{"_index":3169,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filteredqualifierproperties",{"_index":3165,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filteredqualifiervalues",{"_index":3167,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filteritem",{"_index":4329,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["filteritem(arr",{"_index":4334,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["filteritem(arr:any",{"_index":4382,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["filteritemtypes",{"_index":3422,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filteritemtypes(index",{"_index":3611,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["filteritemvalues",{"_index":3460,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["filteritemvalues(index",{"_index":3670,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["filterliteralvariables",{"_index":3480,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filterprojectmulti",{"_index":2859,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["filterpropertymulti",{"_index":3451,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filterpropertymulti(index",{"_index":3656,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["filterqualifierliteralvariables",{"_index":3504,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filterqualifierproperties",{"_index":3485,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filterqualifiervalues",{"_index":3490,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["filtervalue",{"_index":2065,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["filtrer",{"_index":964,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["final",{"_index":1112,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["finding",{"_index":4643,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["findlongestword",{"_index":2556,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["findlongestword(str",{"_index":2558,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["first",{"_index":1133,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"interfaces/TimeProperty.html":{}}}],["firstcharacter",{"_index":3492,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["firstpart",{"_index":4283,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["firstpart}${year",{"_index":4284,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["firsttype",{"_index":3723,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["fit",{"_index":2453,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["flag",{"_index":1733,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"index.html":{}}}],["flags",{"_index":1750,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["flatmap(claim",{"_index":903,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["flatmap(ref",{"_index":905,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["flatmap(val",{"_index":901,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["flex",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["flow",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["fois",{"_index":3626,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["fonction",{"_index":3434,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["font",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["fonti",{"_index":1813,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["footer",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":112,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["footer.component.html",{"_index":1926,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1927,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["footercomponent",{"_index":111,"title":{"components/FooterComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["force",{"_index":2297,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["forcer",{"_index":3257,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["forkjoin",{"_index":1052,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["forkjoin([instanceslistquery,subclasseslistquery,classeslistquery,natureoflistquery",{"_index":2495,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["forkjoin([response1",{"_index":4058,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["forkjoin([u1",{"_index":3861,"title":{},"body":{"injectables/RequestService.html":{}}}],["forkjoin(requests",{"_index":3804,"title":{},"body":{"injectables/RequestService.html":{}}}],["form",{"_index":2828,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["formarray",{"_index":2663,"title":{},"body":{"injectables/MutatorService.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["format",{"_index":1161,"title":{},"body":{"pipes/CustomDatePipe.html":{},"injectables/SetTimeService.html":{}}}],["format=json&origin",{"_index":2745,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["formbuilder",{"_index":2855,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["formcontrol",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["formeritemtype",{"_index":3171,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["formeritemtype.push(itemtypes",{"_index":3187,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["formeritemtypes",{"_index":1397,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["formeritemtypeslist",{"_index":3195,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["formervisitstitle",{"_index":2719,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["formervisitstitle:string",{"_index":2772,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["formgroup",{"_index":2903,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["formsmodule",{"_index":1966,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["források",{"_index":1814,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["forschungsfelder",{"_index":4008,"title":{},"body":{"components/SearchComponent.html":{}}}],["forschungsprojekten",{"_index":4004,"title":{},"body":{"components/SearchComponent.html":{}}}],["fort",{"_index":882,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["fr",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"injectables/PropertiesListService.html":{},"components/SearchComponent.html":{},"injectables/SetLanguageService.html":{},"injectables/SetTimeService.html":{},"components/TextDisplayComponent.html":{},"pipes/UnitPipe.html":{}}}],["france",{"_index":543,"title":{},"body":{"interfaces/Bank.html":{}}}],["freemasonry",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Lang.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["freemasonry1",{"_index":1284,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["freemasonry2",{"_index":1307,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["freemasonry3",{"_index":1329,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["freemasonry4",{"_index":1351,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["freemasonry5",{"_index":1373,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["french",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["fresh",{"_index":2710,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["from1",{"_index":4671,"title":{},"body":{"interfaces/TimeVariable.html":{}}}],["from2",{"_index":4672,"title":{},"body":{"interfaces/TimeVariable.html":{}}}],["from3",{"_index":4673,"title":{},"body":{"interfaces/TimeVariable.html":{}}}],["fuentes",{"_index":1812,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["function",{"_index":3522,"title":{},"body":{"interfaces/Qualifier.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"components/Sparql0DisplayComponent.html":{},"interfaces/Statement-1.html":{}}}],["fundamentalobjekt",{"_index":1864,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["further",{"_index":1801,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"index.html":{}}}],["fusionne",{"_index":957,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["février",{"_index":4225,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["für",{"_index":3990,"title":{},"body":{"components/SearchComponent.html":{}}}],["g",{"_index":548,"title":{},"body":{"interfaces/Bank.html":{},"injectables/ItemDetailsService.html":{},"injectables/PropertiesListService.html":{},"injectables/TranscriptionService.html":{},"injectables/WikiDisplayService.html":{}}}],["general",{"_index":489,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"injectables/FactgridSubtitlesService.html":{}}}],["generate",{"_index":4907,"title":{},"body":{"index.html":{}}}],["generated",{"_index":4892,"title":{},"body":{"index.html":{}}}],["gennaio",{"_index":4255,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["german",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["germany",{"_index":557,"title":{},"body":{"interfaces/Bank.html":{}}}],["gestion",{"_index":2290,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["getaliases",{"_index":4142,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["getaliases(obj",{"_index":4146,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["getask",{"_index":3738,"title":{},"body":{"injectables/RequestService.html":{}}}],["getask(re",{"_index":3756,"title":{},"body":{"injectables/RequestService.html":{}}}],["getbacklist",{"_index":3739,"title":{},"body":{"injectables/RequestService.html":{}}}],["getbacklist(item",{"_index":3758,"title":{},"body":{"injectables/RequestService.html":{}}}],["getdata",{"_index":2899,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["getexpandedurl",{"_index":3740,"title":{},"body":{"injectables/RequestService.html":{}}}],["getexpandedurl(url",{"_index":3760,"title":{},"body":{"injectables/RequestService.html":{}}}],["getitem",{"_index":3741,"title":{},"body":{"injectables/RequestService.html":{}}}],["getitem(re",{"_index":3762,"title":{},"body":{"injectables/RequestService.html":{}}}],["getitemtalkpagehtml",{"_index":3742,"title":{},"body":{"injectables/RequestService.html":{}}}],["getitemtalkpagehtml(itemid",{"_index":3764,"title":{},"body":{"injectables/RequestService.html":{}}}],["getlabelsfromselectedoptions(options",{"_index":3719,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["getlangvalue",{"_index":4143,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["getlangvalue(obj",{"_index":4152,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["getlist",{"_index":3743,"title":{},"body":{"injectables/RequestService.html":{}}}],["getlist(sparql",{"_index":3766,"title":{},"body":{"injectables/RequestService.html":{}}}],["getoriginalitemlabel",{"_index":3404,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["getoriginalitemlabel(itemlabel",{"_index":3437,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["getprojectlist",{"_index":3744,"title":{},"body":{"injectables/RequestService.html":{}}}],["getprojectlist(re",{"_index":3768,"title":{},"body":{"injectables/RequestService.html":{}}}],["getqidslist",{"_index":3745,"title":{},"body":{"injectables/RequestService.html":{}}}],["getqidslist(search",{"_index":3770,"title":{},"body":{"injectables/RequestService.html":{}}}],["getqualifierpropertieslistbuilding",{"_index":2966,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["getreferenceproperties",{"_index":1540,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{}}}],["getreferenceproperties(u",{"_index":898,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["getresearchfieldssorted",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["getstat",{"_index":3746,"title":{},"body":{"injectables/RequestService.html":{}}}],["getter",{"_index":3129,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["getting",{"_index":4878,"title":{"index.html":{}},"body":{}}],["gettranscript",{"_index":3747,"title":{},"body":{"injectables/RequestService.html":{}}}],["gettranscript(id",{"_index":3773,"title":{},"body":{"injectables/RequestService.html":{}}}],["geturlsuffix",{"_index":2720,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["getvalue",{"_index":4705,"title":{},"body":{"injectables/TypologyService.html":{}}}],["getvalue(id",{"_index":4706,"title":{},"body":{"injectables/TypologyService.html":{}}}],["ghpages",{"_index":4851,"title":{},"body":{"dependencies.html":{}}}],["giugno",{"_index":4259,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["give",{"_index":4090,"title":{},"body":{"injectables/SetDataService.html":{}}}],["gli",{"_index":3997,"title":{},"body":{"components/SearchComponent.html":{}}}],["globe",{"_index":798,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["go",{"_index":4922,"title":{},"body":{"index.html":{}}}],["gov",{"_index":4481,"title":{},"body":{"components/Sparql4DisplayComponent.html":{}}}],["graph",{"_index":4928,"title":{},"body":{"modules.html":{}}}],["greg",{"_index":788,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["gregorian",{"_index":4628,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["gregoriantojuliancalendarservice",{"_index":1933,"title":{"injectables/GregorianToJulianCalendarService.html":{}},"body":{"injectables/GregorianToJulianCalendarService.html":{},"coverage.html":{}}}],["group",{"_index":1210,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["group1",{"_index":1285,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["group2",{"_index":1308,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["group3",{"_index":1330,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["group4",{"_index":1352,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["group5",{"_index":1374,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["groupes",{"_index":927,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["groups",{"_index":1073,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["gère",{"_index":2223,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["général",{"_index":684,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["générer",{"_index":686,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["générique",{"_index":587,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["h",{"_index":549,"title":{},"body":{"interfaces/Bank.html":{}}}],["haben",{"_index":2781,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["hai",{"_index":2787,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["handle",{"_index":2167,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["handlepageevent",{"_index":2091,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["handlepageevent(e",{"_index":2070,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["handling",{"_index":776,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["harmonia",{"_index":114,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["harmonia_universalis",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Lang.html":{}}}],["harmoniauniversaliscomponent",{"_index":113,"title":{"components/HarmoniaUniversalisComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["header",{"_index":117,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["header_display_properties",{"_index":646,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["headerdetail",{"_index":613,"title":{},"body":{"injectables/BlockDisplayService.html":{},"components/HeaderDisplayComponent.html":{}}}],["headerdisplaycomponent",{"_index":116,"title":{"components/HeaderDisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["headers",{"_index":3821,"title":{},"body":{"injectables/RequestService.html":{}}}],["heidelberg.de/drw",{"_index":748,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["height",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["height:40px",{"_index":2447,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/TextDisplayComponent.html":{}}}],["help",{"_index":4921,"title":{},"body":{"index.html":{}}}],["hely",{"_index":1883,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["hide",{"_index":2435,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["hidepagesize",{"_index":2010,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["hierarchy",{"_index":2361,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["hip",{"_index":2702,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["historiadores",{"_index":3995,"title":{},"body":{"components/SearchComponent.html":{}}}],["historians",{"_index":3964,"title":{},"body":{"components/SearchComponent.html":{}}}],["historien.nes",{"_index":3992,"title":{},"body":{"components/SearchComponent.html":{}}}],["historiker*innen",{"_index":3991,"title":{},"body":{"components/SearchComponent.html":{}}}],["hop",{"_index":2703,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["hors",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["host",{"_index":2624,"title":{},"body":{"components/MapComponent.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["html.pipe.ts",{"_index":3922,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:13",{"_index":3924,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["html.pipe.ts:9",{"_index":3927,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["http",{"_index":3734,"title":{},"body":{"injectables/RequestService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"pipes/UnitPipe.html":{}}}],["http://commons.wikimedia.org/wiki/special:filepath",{"_index":2239,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["http://gateway",{"_index":708,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["http://localhost:4200",{"_index":4902,"title":{},"body":{"index.html":{}}}],["http://www.wikidata.org/entity/q1985727",{"_index":787,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["http://www.wikidata.org/entity/q1985786",{"_index":791,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["httpclient",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"injectables/RequestService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"pipes/UnitPipe.html":{}}}],["httpevent",{"_index":4497,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["httphandler",{"_index":4494,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["httpheaders",{"_index":3793,"title":{},"body":{"injectables/RequestService.html":{}}}],["httpheaders().set('accept",{"_index":3822,"title":{},"body":{"injectables/RequestService.html":{}}}],["httpinterceptor",{"_index":4496,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["httpparams",{"_index":3794,"title":{},"body":{"injectables/RequestService.html":{},"pipes/UnitPipe.html":{}}}],["httpparams().set('action',\"wbgetentities",{"_index":4732,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["httpparams().set('format",{"_index":3818,"title":{},"body":{"injectables/RequestService.html":{}}}],["httprequest",{"_index":4492,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["httpresponse",{"_index":4498,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["https://blog.factgrid.de/archives/2684",{"_index":4889,"title":{},"body":{"index.html":{}}}],["https://database.factgrid.de",{"_index":4887,"title":{},"body":{"index.html":{}}}],["https://database.factgrid.de//w/api.php?action=wbgetentities&ids",{"_index":2737,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin",{"_index":2800,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["https://database.factgrid.de//w/api.php?action=wbgetentities&ids=q220375&format=json&origin",{"_index":2801,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["https://database.factgrid.de//w/api.php?action=wbsearchentities&search",{"_index":3786,"title":{},"body":{"injectables/RequestService.html":{}}}],["https://database.factgrid.de/query",{"_index":2177,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{},"injectables/SetDataService.html":{}}}],["https://database.factgrid.de/query/#%23biblio%0aselect%20distinct%20%3ftitle%20%3ftitlelabel%20%3fauthor%20%3fauthorlabel%20%3fdate%20%3flocation%20%3flocationlabel%20%3f",{"_index":2157,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["https://database.factgrid.de/query/#select%20%3fitem%20%3fitemlabel%20%3fitemdescription%0awhere%20%7b%20%3fitem%20wdt%3ap2%20wd%3a",{"_index":2507,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["https://database.factgrid.de/query/#select%20%3fitem%20%3fitemlabel%20%3fitemdescription%20%0awhere%20%7b%20%3fitem%20wdt%3ap3%2b%20wd%3a",{"_index":2516,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["https://database.factgrid.de/query/#select%20distinct%20%3fitem%20%3fitemlabel%20%3fitemdescription%20where%20%7b%20%0a%3fitem%20%5e%28wdt%3ap3%2fwdt%3ap3%2a%29%20wd%3a",{"_index":2518,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["https://database.factgrid.de/query/#select%20distinct%20%3fitem%20%3fitemlabel%20%3fitemdescription%20where%20%7b%20%3fobject%20wdt%3ap3%2a%20%3fitem%3b%20%5ewdt%3ap2%20wd%3a",{"_index":2519,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["https://database.factgrid.de/query/#select%20distinct%20%3fitem%20%3fitemlabel%20%3fpropertytype%20%20where%20%7b%20",{"_index":2976,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["https://database.factgrid.de/query/#select%20distinct%20%3fitem%20%3fitemlabel%20%3fpropertytype%20where%20%7b",{"_index":2968,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["https://database.factgrid.de/query/#select%20distinct%20%3fitem%20%3fitemlabel%20where%20%7b",{"_index":2937,"title":{},"body":{"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["https://database.factgrid.de/query/embed.html",{"_index":2179,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/SetDataService.html":{}}}],["https://database.factgrid.de/sparql?query",{"_index":2175,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{},"injectables/SetDataService.html":{}}}],["https://database.factgrid.de/w/api.php",{"_index":3837,"title":{},"body":{"injectables/RequestService.html":{}}}],["https://de.wikisource.org/wiki",{"_index":4768,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["https://drw",{"_index":746,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["https://en.wikisource.org/wiki",{"_index":4763,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["https://explore.gnd.network/gnd",{"_index":704,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["https://fr.wikisource.org/wiki",{"_index":4773,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["https://kxp.k10plus.de/db=1.28/cmd?act=srcha&ikt=8079&trm=%27",{"_index":713,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["https://kxp.k10plus.de/db=1.65/cmd?act=srcha&ikt=8080&trm=vd18",{"_index":718,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["hu",{"_index":224,"title":{"interfaces/HU.html":{}},"body":{"components/AppComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"injectables/SetLanguageService.html":{},"pipes/UnitPipe.html":{},"coverage.html":{}}}],["hudatabaseservice",{"_index":1951,"title":{"injectables/HuDatabaseService.html":{}},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"coverage.html":{}}}],["human",{"_index":1212,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["human1",{"_index":1286,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["human2",{"_index":1309,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["human3",{"_index":1331,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["human4",{"_index":1353,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["human5",{"_index":1375,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["hungarian",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["i).disable",{"_index":3222,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["i).enable",{"_index":3213,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["i).patchvalue",{"_index":3226,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["i).updatevalueandvalidity",{"_index":3274,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["i:number",{"_index":4051,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetItemToDisplayService.html":{}}}],["i=0",{"_index":2183,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ListDetailsService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetSelectedItemsListService.html":{},"components/Sparql0DisplayComponent.html":{},"injectables/TypologyService.html":{}}}],["i=0;i",{"_index":501,"title":{},"body":{"injectables/BackListDetailsService.html":{},"injectables/ListDetailsService.html":{}}}],["ici",{"_index":2498,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["icon",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["iconsole.log(res",{"_index":4717,"title":{},"body":{"injectables/TypologyService.html":{}}}],["id",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"pipes/BackListIdPipe.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"interfaces/Data.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"injectables/MutatorService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/StringVariable.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TypologyService.html":{},"interfaces/Variable.html":{}}}],["id.pipe.ts",{"_index":506,"title":{},"body":{"pipes/BackListIdPipe.html":{},"coverage.html":{}}}],["id.pipe.ts:9",{"_index":510,"title":{},"body":{"pipes/BackListIdPipe.html":{}}}],["id.substring(5",{"_index":513,"title":{},"body":{"pipes/BackListIdPipe.html":{}}}],["id:string",{"_index":1981,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/RoleOfObjectRenderingService.html":{}}}],["identifier",{"_index":4778,"title":{},"body":{"coverage.html":{}}}],["if(a.itemlabel.value.touppercase()b.itemlabel.value.touppercase",{"_index":2941,"title":{},"body":{"injectables/ProjectsListService.html":{}}}],["if(d.description",{"_index":833,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["if(el.itemdescription",{"_index":4363,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["if(issearch",{"_index":4387,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["if(snak.mainsnak.property",{"_index":3912,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["if(snak.qualifiers2",{"_index":3915,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["if(sparql.includes(\"item",{"_index":2163,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["if(this.list.length",{"_index":4372,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["if(this.selectedlang",{"_index":2779,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["if(this.text",{"_index":4587,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["if(this.trans",{"_index":4581,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["iframes",{"_index":119,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["iframesdisplay",{"_index":1645,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["iframesdisplaycomponent",{"_index":118,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["iframesdisplayservice",{"_index":1635,"title":{"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{}},"body":{"interfaces/DisplayFlags.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDisplayDispatcherService.html":{},"coverage.html":{}}}],["iif",{"_index":3051,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["il",{"_index":3202,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["illuminati",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["image",{"_index":766,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"pipes/BackListIdPipe.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"pipes/CustomDatePipe.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"pipes/UnitPipe.html":{}}}],["import",{"_index":68,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{}}}],["import('./display/display.component').then(mod",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./harmonia",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./paris",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./search/advanced",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":2442,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/TextDisplayComponent.html":{}}}],["imports",{"_index":23,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["impresa",{"_index":1906,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["imprimée",{"_index":1904,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["include",{"_index":4465,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{}}}],["indexable",{"_index":1015,"title":{},"body":{"interfaces/ClaimsObject.html":{}}}],["indépendamment",{"_index":3320,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{}}}],["info'},{'name",{"_index":122,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["info.component.html",{"_index":2315,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.scss",{"_index":2314,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts",{"_index":2312,"title":{},"body":{"components/ItemInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:21",{"_index":2350,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:24",{"_index":2338,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:28",{"_index":2365,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:29",{"_index":2351,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:30",{"_index":2353,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:31",{"_index":2355,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:32",{"_index":2357,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:33",{"_index":2371,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:34",{"_index":2352,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:35",{"_index":2354,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:36",{"_index":2356,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:37",{"_index":2358,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:38",{"_index":2372,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:39",{"_index":2346,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:40",{"_index":2347,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:41",{"_index":2348,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:42",{"_index":2349,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:43",{"_index":2345,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:44",{"_index":2344,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:45",{"_index":2367,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:46",{"_index":2369,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:47",{"_index":2342,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:48",{"_index":2360,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:49",{"_index":2363,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:50",{"_index":2364,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:51",{"_index":2370,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:54",{"_index":2340,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.component.ts:58",{"_index":2339,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["info.service",{"_index":1047,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/ItemDetailsService.html":{}}}],["info.service.ts",{"_index":2457,"title":{},"body":{"injectables/ItemInfoService.html":{},"coverage.html":{}}}],["info.service.ts:13",{"_index":2479,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info.service.ts:14",{"_index":2477,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info.service.ts:19",{"_index":2478,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info.service.ts:21",{"_index":2467,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info.service.ts:41",{"_index":2469,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info.service.ts:51",{"_index":2476,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info.service.ts:60",{"_index":2465,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info.service.ts:69",{"_index":2472,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info.service.ts:77",{"_index":2470,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info.service.ts:89",{"_index":2474,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["info/item",{"_index":2311,"title":{},"body":{"components/ItemInfoComponent.html":{},"coverage.html":{}}}],["infolist",{"_index":655,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{}}}],["infolist:any",{"_index":2486,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["infolist[0",{"_index":659,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["infolist[1",{"_index":662,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["infolist[2",{"_index":665,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["infolist[3",{"_index":668,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["infolistbuilding",{"_index":2459,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["infolistbuilding(item",{"_index":2466,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["information",{"_index":2368,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["init",{"_index":3602,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["initial",{"_index":2910,"title":{},"body":{"components/ProjectSelectComponent.html":{},"injectables/SetDataService.html":{}}}],["initialdynamicinfo",{"_index":3179,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["initialise",{"_index":3620,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["initialiser",{"_index":3176,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["initialization",{"_index":2767,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{}}}],["initialsearch",{"_index":3671,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["inject",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackListService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"components/MapComponent.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"interfaces/Snak.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{}}}],["inject(activatedroute",{"_index":2593,"title":{},"body":{"components/MapComponent.html":{}}}],["inject(arraytocsvservice",{"_index":1989,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["inject(backlistdetailsservice",{"_index":522,"title":{},"body":{"injectables/BackListService.html":{}}}],["inject(blockdisplayservice",{"_index":1642,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["inject(changedetectorref",{"_index":2586,"title":{},"body":{"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["inject(createcompleteitemservice",{"_index":4082,"title":{},"body":{"injectables/SetDataService.html":{}}}],["inject(createitemtodisplayservice",{"_index":1036,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/SetDataService.html":{}}}],["inject(dataservice",{"_index":2654,"title":{},"body":{"injectables/MutatorService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["inject(detailsservice",{"_index":1088,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/SetItemToDisplayService.html":{}}}],["inject(domsanitizer",{"_index":3926,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["inject(factgridsubtitlesservice",{"_index":2241,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["inject(formbuilder",{"_index":2888,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["inject(httpclient",{"_index":3789,"title":{},"body":{"injectables/RequestService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"pipes/UnitPipe.html":{}}}],["inject(hudatabaseservice",{"_index":1985,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["inject(iframesdisplayservice",{"_index":1646,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["inject(itemdetailsservice",{"_index":1084,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["inject(iteminfoservice",{"_index":1038,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/ItemDetailsService.html":{}}}],["inject(itemsparqlservice",{"_index":1040,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["inject(liveannouncer",{"_index":1987,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["inject(longestwordservice",{"_index":2244,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["inject(parisdatabaseservice",{"_index":2741,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["inject(propertieslistservice",{"_index":3062,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["inject(propertydetailsservice",{"_index":1086,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["inject(requestservice",{"_index":527,"title":{},"body":{"injectables/BackListService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"injectables/ListDetailsService.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{}}}],["inject(router",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{}}}],["inject(searchengineservice",{"_index":3065,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["inject(selectedlangservice",{"_index":524,"title":{},"body":{"injectables/BackListService.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["inject(setlanguageservice",{"_index":892,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["inject(settimeservice",{"_index":2247,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["inject(statementscontrolsservice",{"_index":3067,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["inject(technicalitiesdisplayservice",{"_index":1648,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["inject(typologyservice",{"_index":2249,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["inject(wikidisplayservice",{"_index":1644,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["injectable",{"_index":445,"title":{"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/GregorianToJulianCalendarService.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/ItemInfoService.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"injectables/SortingDataAccessorService.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"injectables/WikiDisplayService.html":{}},"body":{"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/ItemInfoService.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"injectables/SortingDataAccessorService.html":{},"interceptors/SparqlInterceptor.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{}}}],["injectables",{"_index":447,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/GregorianToJulianCalendarService.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/ItemInfoService.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"injectables/SortingDataAccessorService.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"injectables/WikiDisplayService.html":{},"overview.html":{}}}],["input",{"_index":70,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/CareerDisplayComponent.html":{},"pipes/CommaJoinPipe.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"pipes/JoinPipe.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/SearchEngineService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["input([0",{"_index":3073,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["input(de",{"_index":4024,"title":{},"body":{"injectables/SearchEngineService.html":{}}}],["input(de:observable",{"_index":4030,"title":{},"body":{"injectables/SearchEngineService.html":{}}}],["input.join(sep",{"_index":1025,"title":{},"body":{"pipes/CommaJoinPipe.html":{},"pipes/JoinPipe.html":{}}}],["inputs",{"_index":38,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["install",{"_index":4857,"title":{},"body":{"dependencies.html":{}}}],["instance",{"_index":2359,"title":{},"body":{"components/ItemInfoComponent.html":{},"injectables/PropertiesListService.html":{},"index.html":{}}}],["instanceof",{"_index":4508,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["instances",{"_index":2343,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{}}}],["instanceslist",{"_index":1729,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["instanceslistbuilding",{"_index":2460,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["instanceslistbuilding(id",{"_index":2468,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["instanceslistquery",{"_index":2482,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["instanceslisttitle",{"_index":2317,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["instanceslisttitle_50",{"_index":4324,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{}}}],["instancia",{"_index":2990,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["intercept",{"_index":4489,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["intercept(request",{"_index":4491,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["interceptor",{"_index":4483,"title":{"interceptors/SparqlInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":4487,"title":{},"body":{"interceptors/SparqlInterceptor.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":4490,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["interceptor.service.ts:16",{"_index":4495,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["interceptors",{"_index":4485,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["interface",{"_index":301,"title":{"interfaces/Bank.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"interfaces/Data.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"interfaces/ItemType.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"interfaces/Selection.html":{},"interfaces/Snak.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/StringVariable.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Bank.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"interfaces/Data.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/ItemType.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"interfaces/Selection.html":{},"interfaces/Snak.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/StringVariable.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":537,"title":{},"body":{"interfaces/Bank.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"interfaces/Data.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"interfaces/ItemType.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"interfaces/Selection.html":{},"interfaces/Snak.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/StringVariable.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{},"overview.html":{}}}],["interop",{"_index":1470,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["investigación",{"_index":2991,"title":{},"body":{"injectables/PropertiesListService.html":{},"components/SearchComponent.html":{}}}],["ires",{"_index":4718,"title":{},"body":{"injectables/TypologyService.html":{}}}],["isactivity",{"_index":1619,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isaddqualifier",{"_index":3116,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["isaddstatement",{"_index":3114,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["iscareer",{"_index":1620,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["iscircular(obj",{"_index":3519,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["isdisplay",{"_index":2721,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["isdisplay:boolean",{"_index":2770,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["isdocument",{"_index":1621,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isdown",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["isevent",{"_index":1622,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isexternallinks",{"_index":1623,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isframes",{"_index":1624,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isinfo",{"_index":2318,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["isinfo:boolean",{"_index":2380,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["isinfolist",{"_index":1625,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isitemvalue",{"_index":3119,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["islast",{"_index":816,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["islaststatement",{"_index":3113,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["islist",{"_index":4325,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["islist1",{"_index":2319,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["islist1:boolean",{"_index":2376,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["islist2",{"_index":2320,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["islist2:boolean",{"_index":2377,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["islist3",{"_index":2321,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["islist3:boolean",{"_index":2378,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["islist4",{"_index":2322,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["islist4:boolean",{"_index":2379,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["islist:boolean",{"_index":4350,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["isliteralonqualifier",{"_index":3111,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["isliteralonstatement",{"_index":3108,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["isliteralstringonqualifier",{"_index":3112,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["isliteralstringonstatement",{"_index":3109,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["isliteralvariableselected",{"_index":3121,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["ismain",{"_index":1626,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isnan(parseint(lastchar",{"_index":3442,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["isnan(parseint(secondlastchar",{"_index":3443,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["iso",{"_index":1162,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["isorg",{"_index":1627,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isother",{"_index":1628,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isplace",{"_index":1629,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["ispropertiesinvalid(index",{"_index":3147,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["isqualifier",{"_index":3118,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["isqualifier2display",{"_index":3302,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["isremovequalifier",{"_index":3117,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["isremovestatement",{"_index":3115,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["isresearchfieldenabled",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["isresearchfieldenabled(researchfield",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["issearch",{"_index":4326,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["issearch:boolean",{"_index":4351,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["issociability",{"_index":1630,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["issource",{"_index":1631,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isspinner",{"_index":2015,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["ist",{"_index":2982,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["istimetoggle",{"_index":3120,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["istraining",{"_index":1632,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["istrans",{"_index":4569,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["istrans:boolean",{"_index":4577,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["isupdatingdynamicinfolist",{"_index":3096,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["iswikibaseitemonqualifier",{"_index":3110,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["iswikibaseitemonstatement",{"_index":3107,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["iswikis",{"_index":1633,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["isworks",{"_index":4327,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["isworks:boolean=false",{"_index":4352,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["it.id",{"_index":2263,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["italian",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["italy",{"_index":547,"title":{},"body":{"interfaces/Bank.html":{}}}],["item",{"_index":121,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SelectedItemListService.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{}}}],["item(res",{"_index":4155,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["item.claims",{"_index":1123,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/SetLanguageService.html":{}}}],["item.claims.p236[0].mainsnak.datavalue.value",{"_index":4188,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["item.claims?.p236?.[0]?.mainsnak?.datavalue?.value",{"_index":4187,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["item.datatype",{"_index":4183,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["item.description",{"_index":2819,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["item.id",{"_index":2481,"title":{},"body":{"injectables/ItemInfoService.html":{},"components/ParisSearchComponent.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["item.id\",\"item.label\",\"item.description",{"_index":4386,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["item.infolist",{"_index":2497,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["item.item.value.replace(\"https://database.factgrid.de/entity",{"_index":2997,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["item.itemlabel.value",{"_index":2995,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["item.label",{"_index":2841,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SetSelectedItemsListService.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-2.html":{}}}],["item.label.tolowercase().includes(search",{"_index":3690,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["item.label.tolowercase().startswith(search",{"_index":3689,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["item.label}}&nbsp",{"_index":2818,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["item.order).filter(order",{"_index":3420,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["item.pipe.ts",{"_index":867,"title":{},"body":{"pipes/ChangeUndefinedItemPipe.html":{},"coverage.html":{}}}],["item.pipe.ts:9",{"_index":870,"title":{},"body":{"pipes/ChangeUndefinedItemPipe.html":{}}}],["item.propertytype.value.replace(\"http://wikiba.se/ontology",{"_index":2996,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["item.selected",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["item.service",{"_index":4088,"title":{},"body":{"injectables/SetDataService.html":{}}}],["item.service.ts",{"_index":1029,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"coverage.html":{}}}],["item.service.ts:14",{"_index":1037,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["item.service.ts:15",{"_index":1039,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["item.service.ts:16",{"_index":1041,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["item.service.ts:17",{"_index":1043,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["item.service.ts:18",{"_index":1042,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["item.service.ts:21",{"_index":1035,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["item.sitelinks",{"_index":4182,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["item.title",{"_index":3879,"title":{},"body":{"injectables/RequestService.html":{}}}],["item.value",{"_index":2760,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["item.value.id",{"_index":2761,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["item/:id",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["item2",{"_index":4144,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["item2(res",{"_index":4158,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["item:hover",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["item[0].claims",{"_index":1650,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["item[0].claims.p1132",{"_index":4564,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["item[0].claims.p309",{"_index":2192,"title":{},"body":{"injectables/IframesDisplayService-1.html":{}}}],["item[0].claims.p368",{"_index":706,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p368.url",{"_index":707,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p368[0].mainsnak.datavalue.value",{"_index":710,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p369",{"_index":711,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p369.url",{"_index":712,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p369[0].mainsnak.datavalue.value",{"_index":714,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p370",{"_index":716,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p370.url",{"_index":717,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p370[0].mainsnak.datavalue.value",{"_index":719,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p650",{"_index":720,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p650.externallink",{"_index":733,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p650.externallink.replace(\"$1",{"_index":734,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p650.url",{"_index":743,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p650[0].mainsnak.datavalue.value",{"_index":721,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p76",{"_index":702,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p76.url",{"_index":703,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p76[0].mainsnak.datavalue.value",{"_index":705,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p882",{"_index":744,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p882.url",{"_index":745,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p882[0].mainsnak.datavalue.value",{"_index":750,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims.p994",{"_index":4558,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["item[0].claims[p",{"_index":697,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims[prop",{"_index":678,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].claims[property",{"_index":651,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[0].sitelinks",{"_index":4742,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.commonswiki",{"_index":4743,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.dewiki",{"_index":4747,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.dewikisource",{"_index":4766,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.dewikisource.title.replace",{"_index":4767,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.dewikisource.url=this.url",{"_index":4769,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.enwiki",{"_index":4745,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.enwikisource",{"_index":4759,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.enwikisource.title.replace",{"_index":4761,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.enwikisource.url=this.url",{"_index":4764,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.eswiki",{"_index":4755,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.frwiki",{"_index":4749,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.frwikisource",{"_index":4771,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.frwikisource.title.replace",{"_index":4772,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.frwikisource.url=this.url",{"_index":4774,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.itwiki",{"_index":4751,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.nlwiki",{"_index":4753,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0].sitelinks.wikidatawiki",{"_index":4757,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["item[0]?.infolist",{"_index":656,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[1",{"_index":1705,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["item[1].splice(item[1].indexof(\"p1132",{"_index":4565,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["item[1].splice(item[1].indexof(\"p309\"),1",{"_index":2196,"title":{},"body":{"injectables/IframesDisplayService-1.html":{}}}],["item[1].splice(item[1].indexof(\"p994",{"_index":4562,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["item[1].splice(item[1].indexof(prop",{"_index":685,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item[1].splice(item[1].indexof(property",{"_index":652,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["item_talk:${itemid",{"_index":3833,"title":{},"body":{"injectables/RequestService.html":{}}}],["itemdata:any",{"_index":2548,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["itemdetailsservice",{"_index":1092,"title":{"injectables/ItemDetailsService.html":{}},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/ItemDetailsService.html":{},"coverage.html":{}}}],["itemdisplaydispatcherservice",{"_index":1640,"title":{"injectables/ItemDisplayDispatcherService.html":{}},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"coverage.html":{}}}],["itemid",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{}}}],["itemid:string",{"_index":2771,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["itemindex",{"_index":3387,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["iteminfo",{"_index":1031,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/ItemDetailsService.html":{}}}],["iteminfocomponent",{"_index":120,"title":{"components/ItemInfoComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["iteminformation",{"_index":2451,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["iteminfoservice",{"_index":1046,"title":{"injectables/ItemInfoService.html":{}},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemInfoService.html":{},"coverage.html":{}}}],["itemlabel",{"_index":3450,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemlabel.charat(itemlabel.length",{"_index":3440,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemlabel.length",{"_index":3438,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemlabel.slice(0",{"_index":3444,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemlocation",{"_index":2613,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["itemlocation.zoom",{"_index":2623,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["itemproperties",{"_index":1071,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{}}}],["itemproperties)[1",{"_index":1109,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["items",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["items.concat(this.setqualifieritems(values",{"_index":1578,"title":{},"body":{"injectables/DetailsService.html":{}}}],["items.filter((item",{"_index":3693,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["items.map(this.createlist).map(list",{"_index":1581,"title":{},"body":{"injectables/DetailsService.html":{}}}],["items.push(u.mainsnak.datavalue.value.id",{"_index":1577,"title":{},"body":{"injectables/DetailsService.html":{}}}],["items[8",{"_index":1582,"title":{},"body":{"injectables/DetailsService.html":{}}}],["itemschunks",{"_index":948,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["itemschunks.length",{"_index":950,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["itemschunks.map(list",{"_index":952,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["itemsdetails",{"_index":1070,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["itemselected",{"_index":2837,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["itemslists",{"_index":951,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"interfaces/Snak.html":{}}}],["itemslists.length",{"_index":953,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["itemsparql",{"_index":1032,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["itemsparqlservice",{"_index":1048,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"coverage.html":{}}}],["itemtodisplay",{"_index":4067,"title":{},"body":{"injectables/SetDataService.html":{}}}],["itemtodisplay(id",{"_index":4072,"title":{},"body":{"injectables/SetDataService.html":{}}}],["itemtuype",{"_index":2668,"title":{},"body":{"injectables/MutatorService.html":{}}}],["itemtype",{"_index":2521,"title":{"interfaces/ItemType.html":{}},"body":{"interfaces/ItemType.html":{},"injectables/MutatorService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"coverage.html":{}}}],["itemtype(statements",{"_index":4516,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["itemtype.label.tolowercase().indexof(search",{"_index":3432,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["itemtype[0",{"_index":2662,"title":{},"body":{"injectables/MutatorService.html":{}}}],["itemtype[1",{"_index":2665,"title":{},"body":{"injectables/MutatorService.html":{}}}],["itemtype[2",{"_index":2670,"title":{},"body":{"injectables/MutatorService.html":{}}}],["itemtype[3",{"_index":2667,"title":{},"body":{"injectables/MutatorService.html":{}}}],["itemtypefilterctrl",{"_index":3155,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["itemtypes",{"_index":1189,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/ItemType.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["itemtypes$:observable",{"_index":1478,"title":{},"body":{"injectables/DataService.html":{}}}],["itemtypes.length",{"_index":3644,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["itemtypes.map((itemtype",{"_index":3409,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemtypes.map((itemvalue",{"_index":3402,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemtypes1",{"_index":1398,"title":{},"body":{"injectables/DataService.html":{}}}],["itemtypes2",{"_index":1399,"title":{},"body":{"injectables/DataService.html":{}}}],["itemtypes:variable",{"_index":3172,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemtypesasitemvalues",{"_index":3125,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemtypesearchinput",{"_index":3304,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemtypeslist",{"_index":3173,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemvalue",{"_index":31,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["itemvalue(statements",{"_index":4518,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["itemvalue.label",{"_index":3393,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemvaluecontrol",{"_index":3574,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["itemvaluecontrol.disable",{"_index":3579,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["itemvaluecontrol.enable",{"_index":3576,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["itemvaluefilterctrl",{"_index":3160,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["itemvalues",{"_index":3181,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemvalues.map((itemvalue",{"_index":3386,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["itemvalueslist1(label",{"_index":3473,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["itemvalueslist2(label",{"_index":3476,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["itérer",{"_index":3589,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["j",{"_index":550,"title":{},"body":{"interfaces/Bank.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RoleOfObjectRenderingService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["j).disable",{"_index":3236,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["j).enable",{"_index":3234,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["j).patchvalue",{"_index":3240,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["j).patchvalue(value",{"_index":3238,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["j=0",{"_index":3919,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["januar",{"_index":4236,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["january",{"_index":4213,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["janvier",{"_index":4224,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["jar",{"_index":2699,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["jaw",{"_index":2698,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["join",{"_index":470,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/JoinPipe.html":{}}}],["join('\\r\\n",{"_index":473,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["join.pipe.ts",{"_index":1019,"title":{},"body":{"pipes/CommaJoinPipe.html":{},"coverage.html":{}}}],["join.pipe.ts:9",{"_index":1024,"title":{},"body":{"pipes/CommaJoinPipe.html":{}}}],["joinpipe",{"_index":2534,"title":{"pipes/JoinPipe.html":{}},"body":{"pipes/JoinPipe.html":{},"coverage.html":{}}}],["jour",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["json",{"_index":3812,"title":{},"body":{"injectables/RequestService.html":{}}}],["json.parse(localstorage.getitem('selecteditems",{"_index":2758,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SetSelectedItemsListService.html":{}}}],["json.parse(str",{"_index":3649,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["json.stringify",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["json.stringify([v.itemtext",{"_index":4369,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["json.stringify([{name:'harmonia",{"_index":1990,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["json.stringify(label",{"_index":3647,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["json.stringify(obj",{"_index":3531,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["jsonpipe",{"_index":1972,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["juillet",{"_index":4230,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["juin",{"_index":4229,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["jul",{"_index":792,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["juli",{"_index":4240,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["julian",{"_index":1935,"title":{},"body":{"injectables/GregorianToJulianCalendarService.html":{},"coverage.html":{}}}],["julio",{"_index":4249,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["july",{"_index":4218,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["june",{"_index":4217,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["juni",{"_index":4239,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["junio",{"_index":4248,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["jusqu",{"_index":3709,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["justify",{"_index":2833,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["k",{"_index":555,"title":{},"body":{"interfaces/Bank.html":{}}}],["karma",{"_index":4918,"title":{},"body":{"index.html":{}}}],["karrier",{"_index":1851,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["key",{"_index":886,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Qualifier.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"injectables/SortingDataAccessorService.html":{},"interfaces/Statement-1.html":{}}}],["key.startswith('q",{"_index":1714,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["keys",{"_index":4164,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["keys.length",{"_index":4165,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["keys:string",{"_index":2553,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["keyword",{"_index":2887,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TechnicalitiesDisplayService.html":{}}}],["kiadvány",{"_index":1910,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["known",{"_index":4631,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["kolombia",{"_index":551,"title":{},"body":{"interfaces/Bank.html":{}}}],["kultur",{"_index":1856,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["kultúra",{"_index":1861,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["l",{"_index":556,"title":{},"body":{"interfaces/Bank.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["l'affichage",{"_index":683,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["l'exécution",{"_index":3354,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["l'index",{"_index":3593,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["l'infolist",{"_index":2500,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["l'initialisation",{"_index":3364,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["l'objet",{"_index":2295,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["l'observable",{"_index":3586,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["l'ordre",{"_index":3016,"title":{},"body":{"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["l'url",{"_index":687,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["l'élément",{"_index":2987,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["l'étiquette",{"_index":3406,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["l.item",{"_index":4445,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["l.item.entity",{"_index":4446,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["l.item.id",{"_index":4447,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["l.itemdescription",{"_index":4390,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["l.itemdescription.value",{"_index":2431,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["l.itemlabel",{"_index":4389,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{}}}],["l.itemlabel.value",{"_index":2430,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["l.year",{"_index":4391,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["l.year.value",{"_index":4392,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["la",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Lang.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["label",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"injectables/CreateItemToDisplayService.html":{},"interfaces/Data.html":{},"injectables/ItemDetailsService.html":{},"interfaces/ItemType.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"components/SearchComponent.html":{},"interfaces/Selection.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/StringVariable.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}}}],["label.charat(0",{"_index":3281,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["label1",{"_index":2524,"title":{},"body":{"interfaces/ItemType.html":{}}}],["label2",{"_index":2525,"title":{},"body":{"interfaces/ItemType.html":{}}}],["label3",{"_index":2526,"title":{},"body":{"interfaces/ItemType.html":{}}}],["label4",{"_index":2527,"title":{},"body":{"interfaces/ItemType.html":{}}}],["label5",{"_index":2528,"title":{},"body":{"interfaces/ItemType.html":{}}}],["label:string",{"_index":1980,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/RoleOfObjectRenderingService.html":{}}}],["labellength",{"_index":4091,"title":{},"body":{"injectables/SetDataService.html":{}}}],["labelobj",{"_index":4174,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["labelobj?.value",{"_index":4179,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["labels",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-2.html":{}}}],["lang",{"_index":205,"title":{"interfaces/Lang.html":{}},"body":{"components/AppComponent.html":{},"injectables/BackListService.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"pipes/UnitPipe.html":{},"coverage.html":{}}}],["lang).pipe",{"_index":3478,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["lang.code",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["lang.name",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.service",{"_index":533,"title":{},"body":{"injectables/BackListService.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["lang.service.ts",{"_index":4810,"title":{},"body":{"coverage.html":{}}}],["lang:string",{"_index":4201,"title":{},"body":{"injectables/SetSubtitleService.html":{},"pipes/UnitPipe.html":{}}}],["langs",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["langservice",{"_index":517,"title":{},"body":{"injectables/BackListService.html":{},"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["langservice:string",{"_index":2480,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["langsetting",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["langsetting(lang",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["language",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"injectables/CreateItemToDisplayService.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetTimeService.html":{}}}],["language.service",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["language.service.ts",{"_index":4141,"title":{},"body":{"injectables/SetLanguageService.html":{},"coverage.html":{}}}],["language.service.ts:10",{"_index":4160,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["language.service.ts:13",{"_index":4153,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["language.service.ts:25",{"_index":4148,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["language.service.ts:31",{"_index":4156,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["language.service.ts:56",{"_index":4159,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["language.service.ts:6",{"_index":4145,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["language=en&uselang=fr&limit=50&format=json&origin",{"_index":3791,"title":{},"body":{"injectables/RequestService.html":{}}}],["laquelle",{"_index":3638,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["last",{"_index":817,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/TimeProperty.html":{}}}],["lastchar",{"_index":3439,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["lastitemtypes",{"_index":1403,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["lastitemtypes$(u",{"_index":1414,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["lastitemtypes$(u$:observable",{"_index":1479,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["laststatementindex",{"_index":3135,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["lat",{"_index":2578,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["lat/:lng/:z",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lat=coords.datavalue.value.latitude",{"_index":2634,"title":{},"body":{"injectables/MapService.html":{}}}],["latitude",{"_index":800,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["latitude:string",{"_index":2600,"title":{},"body":{"components/MapComponent.html":{}}}],["le",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["leaflet",{"_index":2599,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"dependencies.html":{}}}],["leaflet.latlng(lat",{"_index":2636,"title":{},"body":{"injectables/MapService.html":{}}}],["leaflet.latlng(this.lat",{"_index":2615,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet.map('map",{"_index":2617,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["leaflet.marker([lat",{"_index":2638,"title":{},"body":{"injectables/MapService.html":{}}}],["leaflet.marker([this.lat",{"_index":2620,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":2618,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["leben",{"_index":1823,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["left",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"components/TextDisplayComponent.html":{}}}],["left:10px",{"_index":4018,"title":{},"body":{"components/SearchComponent.html":{}}}],["legend",{"_index":94,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"overview.html":{}}}],["length",{"_index":2004,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["les",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Lang.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["lessthanfifty",{"_index":1541,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{}}}],["lessthanfifty(arr",{"_index":1008,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["letter",{"_index":1134,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["leurs",{"_index":3653,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["liens",{"_index":694,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["lieu",{"_index":1809,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["life",{"_index":1821,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["lifeandfamily",{"_index":622,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["limit",{"_index":4339,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{}}}],["lines",{"_index":476,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["link",{"_index":482,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["linkeditems",{"_index":518,"title":{},"body":{"injectables/BackListService.html":{}}}],["linking",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["links",{"_index":1700,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["list",{"_index":20,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/HuDatabaseService.html":{},"injectables/ListDetailsService.html":{},"components/MainDisplayComponent.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":102,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["list.component.html",{"_index":26,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.scss",{"_index":28,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts",{"_index":13,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":51,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts:14",{"_index":52,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts:15",{"_index":50,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts:16",{"_index":49,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts:18",{"_index":65,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts:19",{"_index":67,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts:20",{"_index":64,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts:21",{"_index":66,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts:24",{"_index":55,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.component.ts:42",{"_index":63,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["list.csv",{"_index":3846,"title":{},"body":{"injectables/RequestService.html":{}}}],["list.service",{"_index":3054,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["list.service.ts",{"_index":515,"title":{},"body":{"injectables/BackListService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetSelectedItemsListService.html":{},"coverage.html":{}}}],["list.service.ts:10",{"_index":528,"title":{},"body":{"injectables/BackListService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["list.service.ts:101",{"_index":4064,"title":{},"body":{"injectables/SelectedItemListService-1.html":{}}}],["list.service.ts:104",{"_index":4042,"title":{},"body":{"injectables/SelectedItemListService.html":{}}}],["list.service.ts:106",{"_index":4063,"title":{},"body":{"injectables/SelectedItemListService-1.html":{}}}],["list.service.ts:109",{"_index":4036,"title":{},"body":{"injectables/SelectedItemListService.html":{}}}],["list.service.ts:11",{"_index":523,"title":{},"body":{"injectables/BackListService.html":{},"injectables/SetSelectedItemsListService.html":{}}}],["list.service.ts:111",{"_index":4061,"title":{},"body":{"injectables/SelectedItemListService-1.html":{}}}],["list.service.ts:117",{"_index":4044,"title":{},"body":{"injectables/SelectedItemListService.html":{}}}],["list.service.ts:119",{"_index":2963,"title":{},"body":{"injectables/PropertiesListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["list.service.ts:12",{"_index":525,"title":{},"body":{"injectables/BackListService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["list.service.ts:13",{"_index":2934,"title":{},"body":{"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["list.service.ts:14",{"_index":526,"title":{},"body":{"injectables/BackListService.html":{}}}],["list.service.ts:16",{"_index":521,"title":{},"body":{"injectables/BackListService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["list.service.ts:18",{"_index":2933,"title":{},"body":{"injectables/ProjectsListService.html":{}}}],["list.service.ts:19",{"_index":2960,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["list.service.ts:26",{"_index":2930,"title":{},"body":{"injectables/ProjectsListService.html":{}}}],["list.service.ts:30",{"_index":2958,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["list.service.ts:39",{"_index":2967,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["list.service.ts:46",{"_index":2931,"title":{},"body":{"injectables/ProjectsListService.html":{}}}],["list.service.ts:50",{"_index":2955,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["list.service.ts:7",{"_index":4191,"title":{},"body":{"injectables/SetSelectedItemsListService.html":{}}}],["list.service.ts:70",{"_index":2956,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["list.service.ts:78",{"_index":2954,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["list.service.ts:87",{"_index":2953,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["list.service.ts:93",{"_index":4039,"title":{},"body":{"injectables/SelectedItemListService.html":{}}}],["list.service.ts:95",{"_index":4062,"title":{},"body":{"injectables/SelectedItemListService-1.html":{}}}],["list.service.ts:97",{"_index":2965,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["list.service.ts:99",{"_index":4047,"title":{},"body":{"injectables/SelectedItemListService.html":{}}}],["list.slice(1",{"_index":1571,"title":{},"body":{"injectables/DetailsService.html":{}}}],["list/advanced",{"_index":12,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"coverage.html":{}}}],["list1",{"_index":2323,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list1:any",{"_index":2373,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list1number",{"_index":2324,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list2",{"_index":2325,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list2:any",{"_index":2374,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list2number",{"_index":2326,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list3",{"_index":2327,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list3:any",{"_index":2375,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list3number",{"_index":2328,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list4",{"_index":2329,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list4number",{"_index":2330,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["list:any",{"_index":4349,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["lista",{"_index":1793,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["listdetailsservice",{"_index":2537,"title":{"injectables/ListDetailsService.html":{}},"body":{"injectables/ListDetailsService.html":{},"coverage.html":{}}}],["liste",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/Lang.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-2.html":{}}}],["listes",{"_index":2403,"title":{},"body":{"components/ItemInfoComponent.html":{},"injectables/RequestService.html":{}}}],["listfromsparql",{"_index":2143,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["listfromsparql(res",{"_index":2150,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["lists",{"_index":1107,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/RequestService.html":{}}}],["lists.length",{"_index":3800,"title":{},"body":{"injectables/RequestService.html":{}}}],["listtitle",{"_index":4405,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["listwithoutduplicate",{"_index":4328,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["listwithoutduplicate:any",{"_index":4354,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["listája",{"_index":1799,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["literal",{"_index":584,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/Data.html":{},"interfaces/HU.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Selection.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["literalcontrollerdisplay(label",{"_index":3225,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["literalfilterctrl",{"_index":3162,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["literals",{"_index":1227,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/MutatorService.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["literalstring",{"_index":3142,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["literalstring(statements",{"_index":4520,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["literalvalue",{"_index":3141,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["literalvalue(statements",{"_index":4522,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["literalvariables",{"_index":3088,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["literalvariables(literalvariables",{"_index":3086,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["liveannouncer",{"_index":1942,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["lng",{"_index":2579,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["lng=coords.datavalue.value.longitude",{"_index":2635,"title":{},"body":{"injectables/MapService.html":{}}}],["lng]).addto(map",{"_index":2639,"title":{},"body":{"injectables/MapService.html":{}}}],["load",{"_index":2909,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["loadcomponent",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":4847,"title":{},"body":{"dependencies.html":{}}}],["localstorage",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["localstorage.setitem('selecteditems",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["localstorage.setitem('selectedlang",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["localstorage.setitem('selectedparisitems",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["localstorage.setitem('selectedresearchfield",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["localstorage['selecteditems",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["localstorage['selectedlang",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"pipes/CustomDatePipe.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"injectables/SetSubtitleService.html":{},"components/TextDisplayComponent.html":{},"pipes/UnitPipe.html":{}}}],["localstorage['selectedlang']===undefined",{"_index":2766,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{}}}],["localstorage['selectedparisitems",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["localstorage['selectedresearchfield",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["location",{"_index":1941,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["locationandcontext",{"_index":619,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["locationandsituation",{"_index":625,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["locationheader",{"_index":2087,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["locationheader:string",{"_index":2001,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["log",{"_index":742,"title":{},"body":{"injectables/BlockDisplayService.html":{},"components/EducationDisplayComponent.html":{}}}],["logique",{"_index":689,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["longest",{"_index":2257,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/LongestWordService.html":{}}}],["longest.length",{"_index":2565,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["longestlength",{"_index":2199,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["longestword",{"_index":2560,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["longestword.length",{"_index":2566,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["longestwordservice",{"_index":2256,"title":{"injectables/LongestWordService.html":{}},"body":{"injectables/ItemDetailsService.html":{},"injectables/LongestWordService.html":{},"coverage.html":{}}}],["longitude",{"_index":802,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["lors",{"_index":3706,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["lowercase",{"_index":1080,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["lugar",{"_index":1881,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["luglio",{"_index":4260,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["luogo",{"_index":1882,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["lément",{"_index":3591,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["léments",{"_index":1006,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-2.html":{}}}],["m",{"_index":558,"title":{},"body":{"interfaces/Bank.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["m.mainsnak.datatype",{"_index":783,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datatype==='commonsmedia",{"_index":804,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datatype==='monolingualtext",{"_index":793,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datatype==='wikibase",{"_index":805,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datatype===\\'commonsmedia",{"_index":849,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datatype===\\'monolingualtext",{"_index":848,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datatype===\\'wikibase",{"_index":850,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datavalue.value",{"_index":796,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datavalue.value.amount",{"_index":797,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datavalue.value.calendarmodel",{"_index":786,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datavalue.value.date",{"_index":785,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datavalue.value.language",{"_index":795,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datavalue.value.latitude",{"_index":801,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datavalue.value.longitude",{"_index":803,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.datavalue.value.text",{"_index":794,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.description",{"_index":851,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.description}}&nbsp",{"_index":808,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.label",{"_index":806,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.mainsnak.separator",{"_index":807,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.qualifiers2",{"_index":813,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.qualifiers2.foreach(q",{"_index":1770,"title":{},"body":{"components/EducationDisplayComponent.html":{}}}],["m.rank",{"_index":853,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.rank=='deprecated",{"_index":809,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m.rank==\\'deprecated",{"_index":852,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m[\"qualifiers",{"_index":1767,"title":{},"body":{"components/EducationDisplayComponent.html":{}}}],["m['qualifiers",{"_index":811,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m['references2",{"_index":836,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m['references2'].length",{"_index":837,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m[\\'qualifiers",{"_index":854,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m[\\'references2",{"_index":861,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["m[\\'references2\\'].length",{"_index":862,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["ma",{"_index":839,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["made",{"_index":2501,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["maggio",{"_index":4258,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["magnetism",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["mai",{"_index":4228,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["main",{"_index":124,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["maindisplaycomponent",{"_index":123,"title":{"components/MainDisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["mainlist",{"_index":1707,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/MainDisplayComponent.html":{}}}],["mainsnak",{"_index":874,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/RoleOfObjectRenderingService.html":{},"interfaces/Snak.html":{}}}],["mainsnak:any",{"_index":3903,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["mainsnaks",{"_index":2262,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetItemToDisplayService.html":{}}}],["mainsnaks2",{"_index":4048,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetItemToDisplayService.html":{}}}],["maintitle",{"_index":2570,"title":{},"body":{"components/MainDisplayComponent.html":{}}}],["manquant",{"_index":3598,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["many",{"_index":1574,"title":{},"body":{"injectables/DetailsService.html":{}}}],["map",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{}}}],["map'},{'name",{"_index":126,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["map(changes.sparqldata.currentvalue.reverse().map(v",{"_index":4368,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["map(claim",{"_index":939,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["map(d",{"_index":1137,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["map(filtereditems",{"_index":3677,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["map(items",{"_index":3691,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["map(re",{"_index":3466,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["map(res",{"_index":1096,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/ListDetailsService.html":{},"components/ParisSearchComponent.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{}}}],["map(res=>unit",{"_index":4737,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["map(response",{"_index":3877,"title":{},"body":{"injectables/RequestService.html":{}}}],["map(str",{"_index":3648,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["map(string",{"_index":462,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["map(v",{"_index":464,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["map.component.html",{"_index":2576,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":2575,"title":{},"body":{"components/MapComponent.html":{}}}],["map.setview(itemlocation.coords",{"_index":2622,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["mapcomponent",{"_index":125,"title":{"components/MapComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["mapservice",{"_index":2627,"title":{"injectables/MapService.html":{}},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["mapzoom",{"_index":2580,"title":{},"body":{"components/MapComponent.html":{}}}],["march",{"_index":4215,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["margin",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["marriage",{"_index":4664,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["mars",{"_index":4226,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["marzo",{"_index":4245,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["master",{"_index":4468,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["mat",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"dependencies.html":{}}}],["matbuttonmodule",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["matcardmodule",{"_index":755,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["matcheckboxmodule",{"_index":3047,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["matching",{"_index":153,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["matformfieldmodule",{"_index":1969,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["math.abs(statement.mainsnak.timeorder",{"_index":2289,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["maticonmodule",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["matinputmodule",{"_index":1967,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["matmenumodule",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["matoption",{"_index":3049,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["matpaginatormodule",{"_index":1977,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["matprogressspinnermodule",{"_index":1962,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["matref",{"_index":3306,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["matselect",{"_index":2848,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["matselectchange",{"_index":2877,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["matselectchange(this.multiselect",{"_index":2924,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["matselectmodule",{"_index":2847,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["matslidetogglemodule",{"_index":1973,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["matsort",{"_index":1957,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["matsortmodule",{"_index":1959,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["mattabledatasource",{"_index":1954,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["mattablemodule",{"_index":1955,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["mattoolbarmodule",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["mattooltipmodule",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["max",{"_index":2831,"title":{},"body":{"components/ParisSearchComponent.html":{},"injectables/RequestService.html":{}}}],["maximum",{"_index":1007,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/TimeProperty.html":{}}}],["mayo",{"_index":4247,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["mediumdate",{"_index":1178,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["members",{"_index":1790,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"components/Sparql1DisplayComponent.html":{}}}],["membres",{"_index":1792,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["membri",{"_index":1797,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["menu",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["mergeobjects",{"_index":1542,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{}}}],["mergeobjects(res",{"_index":963,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["message",{"_index":39,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["met",{"_index":3621,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"pipes/BackListIdPipe.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"pipes/JoinPipe.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"pipes/UnitPipe.html":{}}}],["method",{"_index":3537,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{}}}],["mettre",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["miembros",{"_index":1794,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["min",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/ParisSearchComponent.html":{}}}],["minimum",{"_index":4656,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["mis",{"_index":3641,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["mitgliederverzeichnis",{"_index":1791,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["mm",{"_index":1230,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["mod.advancedsearchcomponent",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mod.displaycomponent",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mod.harmoniauniversaliscomponent",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mod.parissearchcomponent",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modified",{"_index":4651,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["modifiée",{"_index":3631,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["module",{"_index":405,"title":{"modules/AppRoutingModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":407,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["moment",{"_index":4842,"title":{},"body":{"dependencies.html":{}}}],["monolingualtext",{"_index":2293,"title":{},"body":{"injectables/ItemDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["month",{"_index":4277,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["monthidx",{"_index":4279,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["monthnum",{"_index":4273,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["months",{"_index":4205,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["monuments",{"_index":4418,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["more",{"_index":4888,"title":{},"body":{"index.html":{}}}],["moteur",{"_index":3464,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["multi",{"_index":2896,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["multiselect",{"_index":2856,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["municipality",{"_index":725,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["mutator",{"_index":1268,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/MutatorService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["mutator$:observable",{"_index":1530,"title":{},"body":{"injectables/DataService-1.html":{}}}],["mutator(itemtype",{"_index":2650,"title":{},"body":{"injectables/MutatorService.html":{}}}],["mutator2",{"_index":1393,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["mutator:behaviorsubject",{"_index":1471,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["mutatorforitemvalue",{"_index":1400,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["mutatorforitemvalue:behaviorsubject",{"_index":1531,"title":{},"body":{"injectables/DataService-1.html":{}}}],["mutatorforitemvalue:observable",{"_index":1532,"title":{},"body":{"injectables/DataService-1.html":{}}}],["mutatorfornextstatement",{"_index":1401,"title":{},"body":{"injectables/DataService.html":{}}}],["mutatorfornextstatement$:observable",{"_index":1473,"title":{},"body":{"injectables/DataService.html":{}}}],["mutatorfornextstatement:behaviorsubject",{"_index":1472,"title":{},"body":{"injectables/DataService.html":{}}}],["mutatorservice",{"_index":2640,"title":{"injectables/MutatorService.html":{}},"body":{"injectables/MutatorService.html":{},"coverage.html":{}}}],["mylang",{"_index":2088,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["mylang:string",{"_index":2016,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["más",{"_index":1803,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["märz",{"_index":4238,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["métadonnées",{"_index":3013,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["méthode",{"_index":586,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["métier",{"_index":690,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["n",{"_index":559,"title":{},"body":{"interfaces/Bank.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["n.datatype",{"_index":842,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["n.datatype==='string",{"_index":846,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["n.datatype==='time",{"_index":845,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["n.datatype===\\'string",{"_index":864,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["n.datatype===\\'time",{"_index":863,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["n.display",{"_index":841,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["n.label",{"_index":840,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{},"index.html":{}}}],["name1",{"_index":1288,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["name2",{"_index":1311,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["name3",{"_index":1333,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["name4",{"_index":1355,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["name5",{"_index":1377,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["names",{"_index":2672,"title":{},"body":{"injectables/MutatorService.html":{}}}],["nature",{"_index":2986,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["natureoflist",{"_index":1732,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["natureoflistbuilding",{"_index":2461,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["natureoflistbuilding(id",{"_index":2471,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["natureoflistquery",{"_index":2492,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["natureoflistquery:observable",{"_index":2485,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["natureoflisttitle",{"_index":2331,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["natureoflisttitle:string",{"_index":2383,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["navigate",{"_index":4901,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["naviguer",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["nbsp",{"_index":823,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["nbsp;&nbsp;&nbsp",{"_index":790,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp",{"_index":4393,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["nbsp;&nbsp;&nbsp;{{this.list.length",{"_index":4388,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["nbsp;&nbsp;|&nbsp;&nbsp",{"_index":2130,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["nbsp;({{d.unit",{"_index":828,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["nbsp;({{m.rank",{"_index":810,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["nbsp;|&nbsp",{"_index":1932,"title":{},"body":{"components/FooterComponent.html":{}}}],["ne",{"_index":3660,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["necessary",{"_index":1101,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/ItemInfoService.html":{}}}],["needed",{"_index":4308,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["nestedcaseinsensitive",{"_index":4303,"title":{},"body":{"injectables/SortingDataAccessorService.html":{},"coverage.html":{}}}],["nestedproperty",{"_index":4301,"title":{},"body":{"injectables/SortingDataAccessorService.html":{},"coverage.html":{}}}],["new",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"pipes/UnitPipe.html":{},"coverage.html":{},"index.html":{}}}],["newarr",{"_index":2680,"title":{},"body":{"injectables/MutatorService.html":{}}}],["newdata",{"_index":2712,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["newid",{"_index":512,"title":{},"body":{"pipes/BackListIdPipe.html":{}}}],["newitem",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["newitemtype",{"_index":3411,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemtype.label",{"_index":3415,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemtype.order",{"_index":3412,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemtype.originallabel",{"_index":3413,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemtype.originallabel}${newitemtype.order.tostring",{"_index":3416,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemvalue",{"_index":3389,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemvalue.label",{"_index":3396,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemvalue.label}${newitemvalue.order.tostring",{"_index":3397,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemvalue.order",{"_index":3391,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemvalue.originallabel",{"_index":3392,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newitemvalue.originallabel}${newitemvalue.order.tostring",{"_index":3407,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newlabel",{"_index":3716,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["newmutator",{"_index":2676,"title":{},"body":{"injectables/MutatorService.html":{}}}],["newoptions",{"_index":1491,"title":{},"body":{"injectables/DataService-1.html":{}}}],["newprefix",{"_index":2174,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{},"injectables/SetDataService.html":{}}}],["newqualifier",{"_index":3540,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["newsparqladdress",{"_index":2462,"title":{},"body":{"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{}}}],["newsparqladdress(address",{"_index":2473,"title":{},"body":{"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{}}}],["newsparqladress",{"_index":2144,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["newsparqladress(address",{"_index":2152,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["newsparqladress(address:string",{"_index":2172,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["next",{"_index":4493,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["next.handle(request",{"_index":4510,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":4505,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["ng",{"_index":4898,"title":{},"body":{"index.html":{}}}],["ngaftercontentinit",{"_index":3348,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["ngafterviewinit",{"_index":2055,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["ngclass",{"_index":2313,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["ngfor",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{}}}],["ngif",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{}}}],["ngmodule",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":36,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["ngonchanges(changes",{"_index":53,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["ngondestroy",{"_index":2583,"title":{},"body":{"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["ngoninit",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["ngx",{"_index":1157,"title":{},"body":{"pipes/CustomDatePipe.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"dependencies.html":{}}}],["ngxmatselectsearchmodule",{"_index":2849,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["node",{"_index":4862,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":4864,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":1234,"title":{},"body":{"interfaces/Data.html":{},"components/ItemInfoComponent.html":{},"interfaces/Selection.html":{},"components/Sparql0DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["not(:last",{"_index":4395,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["notfound(res",{"_index":3546,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["nouveau",{"_index":3555,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["nouveaux",{"_index":3559,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["nouvel",{"_index":3030,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["nouvelle",{"_index":3177,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["nouvelles",{"_index":3417,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["november",{"_index":4222,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["novembre",{"_index":4234,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["noviembre",{"_index":4253,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["now",{"_index":1143,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["npm",{"_index":4867,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"pipes/UnitPipe.html":{}}}],["number",{"_index":1182,"title":{},"body":{"interfaces/Data.html":{},"injectables/FactgridSubtitlesService.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SortingDataAccessorService.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/Variable.html":{}}}],["number(latitude",{"_index":2608,"title":{},"body":{"components/MapComponent.html":{}}}],["number(longitude",{"_index":2610,"title":{},"body":{"components/MapComponent.html":{}}}],["number(value.replace",{"_index":2286,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["number(year",{"_index":4291,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["number(zoom",{"_index":2612,"title":{},"body":{"components/MapComponent.html":{}}}],["number1",{"_index":1255,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["number2",{"_index":1256,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["number3",{"_index":1257,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["nyomtatott",{"_index":1909,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["o",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Bank.html":{},"interfaces/Lang.html":{}}}],["obj",{"_index":972,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Qualifier.html":{},"interfaces/Reference.html":{},"injectables/SetLanguageService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{}}}],["obj.entities",{"_index":973,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["obj.hasownproperty(key",{"_index":3527,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["obj[code",{"_index":4162,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["obj[keys[0",{"_index":4166,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["obj[lang",{"_index":4161,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["object",{"_index":1217,"title":{},"body":{"interfaces/Data.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/ItemType.html":{},"injectables/ListDetailsService.html":{},"interfaces/Qualifier.html":{},"injectables/RoleOfObjectRenderingService.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["object.keys(claims",{"_index":1124,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["object.keys(claims).foreach(key",{"_index":1713,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["object.keys(item[0].claims",{"_index":670,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["object.keys(obj",{"_index":956,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/SetLanguageService.html":{},"interfaces/Snak.html":{}}}],["object.keys(re.claims",{"_index":1093,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["object.values(entity.claims).foreach((claimarray",{"_index":4098,"title":{},"body":{"injectables/SetDataService.html":{}}}],["object.values(object.values(object.values(object.values(object.values(res)[0])[0])[2])[0])[1",{"_index":4738,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["object.values(re.claims",{"_index":3910,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["object.values(res",{"_index":934,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["object.values(res)[1].statistics.pages",{"_index":3984,"title":{},"body":{"components/SearchComponent.html":{}}}],["object.values(res.entities",{"_index":2806,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["object.values(res.entities)[0][\"claims\"].p2[0].mainsnak.datavalue.value.id));//.pipe(map(res",{"_index":4719,"title":{},"body":{"injectables/TypologyService.html":{}}}],["object.values(res[\"entities\"])[0][\"claims\"].p2",{"_index":4716,"title":{},"body":{"injectables/TypologyService.html":{}}}],["object.values(res[\"entities\"])[0][\"claims\"].p2[0].mainsnak.datavalue.value.id",{"_index":4714,"title":{},"body":{"injectables/TypologyService.html":{}}}],["object.values(u.claims",{"_index":900,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetItemToDisplayService.html":{},"interfaces/Snak.html":{}}}],["object1",{"_index":1289,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["object2",{"_index":1312,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["object3",{"_index":1334,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["object4",{"_index":1356,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["object5",{"_index":1378,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["object:any",{"_index":2542,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["objectoptions",{"_index":1492,"title":{},"body":{"injectables/DataService-1.html":{}}}],["objet",{"_index":962,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["objeto",{"_index":1866,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["objets",{"_index":958,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-2.html":{}}}],["observable",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TypologyService.html":{}}}],["observedlist",{"_index":2544,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["obsolètes",{"_index":676,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["obtenir",{"_index":3405,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["october",{"_index":4221,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["octobre",{"_index":4233,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["octubre",{"_index":4252,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["of(cachedresponse",{"_index":4504,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["of(false",{"_index":3817,"title":{},"body":{"injectables/RequestService.html":{}}}],["of(options.filter(entity",{"_index":3666,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["of(options.slice",{"_index":3665,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["of(undefined",{"_index":3803,"title":{},"body":{"injectables/RequestService.html":{}}}],["oggetto",{"_index":1868,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["oktatás",{"_index":1840,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["oktober",{"_index":4241,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["oldprefix",{"_index":2176,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{},"injectables/SetDataService.html":{}}}],["onchanges",{"_index":15,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["onclick",{"_index":2092,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["onclick(query",{"_index":2058,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["ondestroy",{"_index":1945,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["oninit",{"_index":69,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/EducationDisplayComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["onitemtypeselect(event",{"_index":3244,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["onliteralvalueselect(event",{"_index":3286,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["onpropertyselect(event",{"_index":3260,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["onqualifierliteralvalueselect(event",{"_index":3300,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["onqualifierpropertyselect(event",{"_index":3290,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["onqualifiervalueselect(event",{"_index":3294,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["onselectchange",{"_index":2860,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["onselectchange($event",{"_index":2874,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["onselection",{"_index":2861,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["onselection(event",{"_index":2876,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["onvalueselect(event",{"_index":3275,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["onvariableselect(event",{"_index":3541,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["open",{"_index":779,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["open_in_new",{"_index":789,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["open_in_new&nbsp;&nbsp;&nbsp",{"_index":4013,"title":{},"body":{"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["open_in_new&nbsp;&nbsp;&nbsp;&nbsp;&nbsp",{"_index":2822,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["openimage",{"_index":760,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["openimage(image",{"_index":764,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["openitem",{"_index":2725,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["openitem(item",{"_index":2733,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["option[1",{"_index":3715,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["optional",{"_index":58,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{}}}],["options",{"_index":1183,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["options.filter(itemtype",{"_index":3431,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["options.length",{"_index":3658,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["options.map(option",{"_index":3720,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["opérationnels",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["order",{"_index":812,"title":{},"body":{"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Reference.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Variable.html":{}}}],["order%20by%20%3fitemlabel",{"_index":2509,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["order:0",{"_index":1192,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["ordered",{"_index":4126,"title":{},"body":{"injectables/SetDataService.html":{}}}],["ordered.includes(p",{"_index":4130,"title":{},"body":{"injectables/SetDataService.html":{}}}],["ordered.push(\"p47",{"_index":4128,"title":{},"body":{"injectables/SetDataService.html":{}}}],["ordered.push(p",{"_index":4131,"title":{},"body":{"injectables/SetDataService.html":{}}}],["ordination",{"_index":4636,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["ordre",{"_index":3651,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["org",{"_index":1891,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["org_display_properties",{"_index":644,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["organisation",{"_index":1218,"title":{},"body":{"interfaces/Data.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"components/Sparql1DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["organisation1",{"_index":1290,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["organisation2",{"_index":1313,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["organisation3",{"_index":1335,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["organisation4",{"_index":1357,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["organisation5",{"_index":1379,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["organisationtitle",{"_index":4406,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["organización",{"_index":1896,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["organization",{"_index":1678,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["organizzazione",{"_index":1897,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["original",{"_index":3436,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["originale",{"_index":3395,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["originallabel",{"_index":1187,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["ort",{"_index":1808,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["others",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Lang.html":{}}}],["ottobre",{"_index":4262,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["ou",{"_index":3629,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["out",{"_index":4924,"title":{},"body":{"index.html":{},"overview.html":{}}}],["output",{"_index":2902,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["outputs",{"_index":2864,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["overflow",{"_index":2830,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["overview",{"_index":4925,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":560,"title":{},"body":{"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"components/MainDisplayComponent.html":{},"injectables/SetDataService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["p.id",{"_index":2573,"title":{},"body":{"components/MainDisplayComponent.html":{},"injectables/PropertyDetailsService.html":{}}}],["p.label",{"_index":782,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["p.separator}}{{p.description",{"_index":844,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["p.value",{"_index":847,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["p06",{"_index":4117,"title":{},"body":{"injectables/SetDataService.html":{}}}],["p1041",{"_index":4658,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p1042",{"_index":4659,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p1060",{"_index":4662,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p1079",{"_index":4665,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p1104",{"_index":4667,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p1123",{"_index":4122,"title":{},"body":{"injectables/SetDataService.html":{},"interfaces/TimeProperty.html":{}}}],["p1124",{"_index":4115,"title":{},"body":{"injectables/SetDataService.html":{},"interfaces/TimeProperty.html":{}}}],["p1125",{"_index":4123,"title":{},"body":{"injectables/SetDataService.html":{},"interfaces/TimeProperty.html":{}}}],["p1126",{"_index":4116,"title":{},"body":{"injectables/SetDataService.html":{},"interfaces/TimeProperty.html":{}}}],["p1152",{"_index":4668,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p1306",{"_index":672,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["p2",{"_index":1816,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDetailsService.html":{}}}],["p208",{"_index":3914,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["p247",{"_index":3022,"title":{},"body":{"injectables/PropertyDetailsService.html":{},"injectables/RoleOfObjectRenderingService.html":{}}}],["p290",{"_index":4111,"title":{},"body":{"injectables/SetDataService.html":{}}}],["p291",{"_index":4124,"title":{},"body":{"injectables/SetDataService.html":{}}}],["p320",{"_index":1788,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["p38",{"_index":4120,"title":{},"body":{"injectables/SetDataService.html":{}}}],["p392",{"_index":4639,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p394",{"_index":4641,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p41",{"_index":4119,"title":{},"body":{"injectables/SetDataService.html":{}}}],["p412",{"_index":4118,"title":{},"body":{"injectables/SetDataService.html":{},"interfaces/TimeProperty.html":{}}}],["p432",{"_index":4644,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p45",{"_index":4114,"title":{},"body":{"injectables/SetDataService.html":{}}}],["p459",{"_index":4646,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p49",{"_index":4113,"title":{},"body":{"injectables/SetDataService.html":{}}}],["p50",{"_index":4121,"title":{},"body":{"injectables/SetDataService.html":{}}}],["p536",{"_index":4648,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p551",{"_index":4650,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p612",{"_index":4125,"title":{},"body":{"injectables/SetDataService.html":{},"interfaces/TimeProperty.html":{}}}],["p650",{"_index":673,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["p77",{"_index":4112,"title":{},"body":{"injectables/SetDataService.html":{}}}],["p779",{"_index":4653,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p818",{"_index":4655,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["p820",{"_index":1079,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/RoleOfObjectRenderingService.html":{}}}],["p820qualifier2",{"_index":1128,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["p820qualifier2.display",{"_index":1131,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["p820qualifier2.display.length",{"_index":1132,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["p?.foreach(m",{"_index":1766,"title":{},"body":{"components/EducationDisplayComponent.html":{}}}],["package",{"_index":4832,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/TextDisplayComponent.html":{}}}],["page",{"_index":4927,"title":{},"body":{"index.html":{}}}],["pageevent",{"_index":1976,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["pageevent:pageevent",{"_index":2014,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["pageindex",{"_index":2006,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["pages",{"_index":3934,"title":{},"body":{"components/SearchComponent.html":{}}}],["pagesize",{"_index":2005,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["pagesizeoptions",{"_index":2007,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["pagetitle",{"_index":3832,"title":{},"body":{"injectables/RequestService.html":{}}}],["paginator",{"_index":2031,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["par",{"_index":994,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["para",{"_index":3994,"title":{},"body":{"components/SearchComponent.html":{}}}],["param",{"_index":3637,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{}}}],["parammap",{"_index":2598,"title":{},"body":{"components/MapComponent.html":{}}}],["params",{"_index":2603,"title":{},"body":{"components/MapComponent.html":{},"injectables/RequestService.html":{},"pipes/UnitPipe.html":{}}}],["params.set('sroffset",{"_index":3869,"title":{},"body":{"injectables/RequestService.html":{}}}],["params1",{"_index":3847,"title":{},"body":{"injectables/RequestService.html":{}}}],["params1.set('uselang",{"_index":3857,"title":{},"body":{"injectables/RequestService.html":{}}}],["params2",{"_index":3856,"title":{},"body":{"injectables/RequestService.html":{}}}],["params['lat",{"_index":2604,"title":{},"body":{"components/MapComponent.html":{}}}],["params['lng",{"_index":2605,"title":{},"body":{"components/MapComponent.html":{}}}],["params['z",{"_index":2606,"title":{},"body":{"components/MapComponent.html":{}}}],["paramsinheritancestrategy",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parentheses",{"_index":1081,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["paris",{"_index":128,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["parisdatabaseservice",{"_index":2686,"title":{"injectables/ParisDatabaseService.html":{}},"body":{"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"coverage.html":{}}}],["parish",{"_index":728,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["parissearchcomponent",{"_index":127,"title":{"components/ParisSearchComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["parseint(monthnum",{"_index":4280,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["partir",{"_index":591,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-2.html":{}}}],["pas",{"_index":3661,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["pass",{"_index":1784,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["patchqualifiervalue",{"_index":4513,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["patchqualifiervalue(value",{"_index":4524,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["path",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patients",{"_index":4453,"title":{},"body":{"components/Sparql2DisplayComponent.html":{}}}],["patientstitle",{"_index":4450,"title":{},"body":{"components/Sparql2DisplayComponent.html":{}}}],["pattern",{"_index":1177,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["people",{"_index":1221,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"components/Sparql1DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["people1",{"_index":1291,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["people2",{"_index":1314,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["people3",{"_index":1336,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["people4",{"_index":1358,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["people5",{"_index":1380,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["per",{"_index":3996,"title":{},"body":{"components/SearchComponent.html":{}}}],["permuted",{"_index":2675,"title":{},"body":{"injectables/MutatorService.html":{}}}],["permutedarray",{"_index":2673,"title":{},"body":{"injectables/MutatorService.html":{}}}],["person",{"_index":1220,"title":{},"body":{"interfaces/Data.html":{},"interfaces/DisplayFlags.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["person1",{"_index":1292,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["person2",{"_index":1315,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["person3",{"_index":1337,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["person4",{"_index":1359,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["person5",{"_index":1381,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["person_display_properties",{"_index":637,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["peupler",{"_index":588,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["philobiblon",{"_index":4560,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["pi",{"_index":1805,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["picture",{"_index":778,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["pipe",{"_index":502,"title":{"pipes/BackListIdPipe.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"pipes/CustomDatePipe.html":{},"pipes/JoinPipe.html":{},"pipes/SafeHtmlPipe.html":{},"pipes/UnitPipe.html":{}},"body":{"pipes/BackListIdPipe.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DetailsService.html":{},"pipes/JoinPipe.html":{},"injectables/ListDetailsService.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{},"pipes/UnitPipe.html":{},"coverage.html":{}}}],["pipe(catcherror",{"_index":3820,"title":{},"body":{"injectables/RequestService.html":{}}}],["pipe(map(res",{"_index":3344,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{},"injectables/TypologyService.html":{}}}],["pipe(takeuntil(this._ondestroy",{"_index":2913,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["pipes",{"_index":504,"title":{},"body":{"pipes/BackListIdPipe.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"pipes/CustomDatePipe.html":{},"pipes/JoinPipe.html":{},"pipes/SafeHtmlPipe.html":{},"pipes/UnitPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":511,"title":{},"body":{"pipes/BackListIdPipe.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"pipes/CustomDatePipe.html":{},"pipes/JoinPipe.html":{},"pipes/SafeHtmlPipe.html":{},"pipes/UnitPipe.html":{}}}],["place",{"_index":1222,"title":{},"body":{"interfaces/Data.html":{},"interfaces/DisplayFlags.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["place1",{"_index":1293,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["place2",{"_index":1316,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["place3",{"_index":1338,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["place4",{"_index":1360,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["place5",{"_index":1382,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["place_display_properties",{"_index":638,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["placeholderforliteralstring",{"_index":3082,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["placeholderforliteralvalue",{"_index":3081,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["placeholderlabel",{"_index":2863,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["plus",{"_index":926,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["pom",{"_index":484,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["pom.click",{"_index":488,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["pom.href",{"_index":486,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["pom.setattribute('download",{"_index":487,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["populatedisplay",{"_index":566,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["populatedisplay(item",{"_index":582,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["possible",{"_index":3536,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["possèdent",{"_index":967,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["post",{"_index":4604,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["pour",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["pourrait",{"_index":2499,"title":{},"body":{"injectables/ItemInfoService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["preferred",{"_index":4151,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["prefix",{"_index":2506,"title":{},"body":{"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/RequestService.html":{}}}],["prefix1",{"_index":2332,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["prefix1:string",{"_index":2384,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["prefix2",{"_index":2333,"title":{},"body":{"components/ItemInfoComponent.html":{},"injectables/PropertiesListService.html":{}}}],["prefix2:string",{"_index":2385,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["prefix=\"https://database.factgrid.de/wiki/special:entitydata",{"_index":4710,"title":{},"body":{"injectables/TypologyService.html":{}}}],["premiere",{"_index":4649,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["prepare",{"_index":1097,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["present",{"_index":4419,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["previousitemtypes",{"_index":3075,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["previousitemvalues",{"_index":3078,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["print",{"_index":1902,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["printed",{"_index":1223,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["private",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"components/MapComponent.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{}}}],["probablement",{"_index":3105,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["problème",{"_index":3595,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["prochain",{"_index":3266,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["prod",{"_index":4913,"title":{},"body":{"index.html":{}}}],["production",{"_index":4914,"title":{},"body":{"index.html":{}}}],["profession",{"_index":1224,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["profession1",{"_index":1294,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["profession2",{"_index":1317,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["profession3",{"_index":1339,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["profession4",{"_index":1361,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["profession5",{"_index":1383,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["profundidad",{"_index":2992,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["progetti",{"_index":4007,"title":{},"body":{"components/SearchComponent.html":{}}}],["proj",{"_index":88,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["project",{"_index":92,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"index.html":{}}}],["project.itemlabel.value",{"_index":2926,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["projectlist",{"_index":32,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["projectmultifilterctrl",{"_index":2857,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["projects",{"_index":2886,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["projects:string",{"_index":3969,"title":{},"body":{"components/SearchComponent.html":{}}}],["projectsearchinput",{"_index":2858,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["projectselectcomponent",{"_index":129,"title":{"components/ProjectSelectComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["projectslistbuilding",{"_index":2929,"title":{},"body":{"injectables/ProjectsListService.html":{}}}],["projectslistbuilding(id",{"_index":2932,"title":{},"body":{"injectables/ProjectsListService.html":{}}}],["projectslistservice",{"_index":2927,"title":{"injectables/ProjectsListService.html":{}},"body":{"injectables/ProjectsListService.html":{},"coverage.html":{}}}],["projectstatement",{"_index":33,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["projets",{"_index":4005,"title":{},"body":{"components/SearchComponent.html":{}}}],["prop",{"_index":671,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["properties",{"_index":30,"title":{"properties.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/StringVariable.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{},"properties.html":{}}}],["properties.map(this.createlist).map(list",{"_index":1570,"title":{},"body":{"injectables/DetailsService.html":{}}}],["properties.push(u.mainsnak.property",{"_index":1567,"title":{},"body":{"injectables/DetailsService.html":{}}}],["properties[8",{"_index":1572,"title":{},"body":{"injectables/DetailsService.html":{}}}],["propertieschunks",{"_index":922,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["propertieschunks.length",{"_index":924,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["propertieschunks.map(list",{"_index":930,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["propertiescontrol",{"_index":3150,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertiescontrol.dirty",{"_index":3153,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertiescontrol.invalid",{"_index":3152,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertiescontrol.touched",{"_index":3154,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertiesdetails",{"_index":1069,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["propertieslist",{"_index":1402,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertieslist2building",{"_index":2947,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["propertieslist2building(id",{"_index":2957,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["propertieslist:behaviorsubject",{"_index":1486,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["propertieslistbuilding",{"_index":2948,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["propertieslistbuilding(id",{"_index":2959,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["propertieslists",{"_index":929,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"interfaces/Snak.html":{}}}],["propertieslists.length",{"_index":932,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["propertieslistservice",{"_index":2943,"title":{"injectables/PropertiesListService.html":{}},"body":{"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"coverage.html":{}}}],["propertiestoselect",{"_index":3098,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertiesurl",{"_index":4038,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["propertiesurl:string",{"_index":4053,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["propertiesvalues",{"_index":3083,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["property",{"_index":650,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/Qualifier.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"interfaces/Snak.html":{},"components/Sparql1DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/TimeProperty.html":{}}}],["property.ts",{"_index":4592,"title":{},"body":{"interfaces/TimeProperty.html":{},"coverage.html":{}}}],["property2",{"_index":2432,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["propertydatatype",{"_index":3068,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["propertydatatype(itemtype",{"_index":3273,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["propertydetailsservice",{"_index":1091,"title":{"injectables/PropertyDetailsService.html":{}},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/PropertyDetailsService.html":{},"coverage.html":{}}}],["propertyid",{"_index":1778,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["propertylist",{"_index":3061,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertymeta",{"_index":3033,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["propertymeta.aliases",{"_index":3037,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["propertymeta.description",{"_index":3036,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["propertymeta.externallink",{"_index":3038,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["propertymeta.id",{"_index":3034,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["propertymeta.label",{"_index":3035,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["propertyselectionchange",{"_index":3313,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertytmultifilterctrl",{"_index":3156,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertyvalue",{"_index":3267,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["propertyvaluechanges",{"_index":3342,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["propertyvalues",{"_index":4514,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["propertyvalues(statements",{"_index":4526,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["propriét",{"_index":682,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Reference.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{}}}],["propriétés",{"_index":594,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-2.html":{}}}],["props=labels|descriptions&format=json",{"_index":4049,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetItemToDisplayService.html":{}}}],["prose",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["protected",{"_index":2657,"title":{},"body":{"injectables/MutatorService.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["protractor",{"_index":4920,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":460,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/GregorianToJulianCalendarService.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/ItemInfoService.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"injectables/SortingDataAccessorService.html":{},"interceptors/SparqlInterceptor.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"injectables/WikiDisplayService.html":{}}}],["providers",{"_index":4931,"title":{},"body":{"overview.html":{}}}],["provides",{"_index":4884,"title":{},"body":{"index.html":{}}}],["province",{"_index":722,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["proyectos",{"_index":4006,"title":{},"body":{"components/SearchComponent.html":{}}}],["précédents",{"_index":3077,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["pubblicazione",{"_index":1907,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["public",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["publicación",{"_index":1905,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["publication",{"_index":1225,"title":{},"body":{"interfaces/Data.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/TimeProperty.html":{},"interfaces/Variable.html":{}}}],["publication1",{"_index":1295,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["publication2",{"_index":1318,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["publication3",{"_index":1340,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["publication4",{"_index":1362,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["publication5",{"_index":1384,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["pupils",{"_index":4424,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{}}}],["pupiltitle",{"_index":4407,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{}}}],["pure",{"_index":1159,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["put",{"_index":2838,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["px",{"_index":2444,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/TextDisplayComponent.html":{}}}],["q",{"_index":561,"title":{},"body":{"interfaces/Bank.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["q.datatype",{"_index":2272,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["q.datavalue.value",{"_index":2276,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["q.datavalue.value.aliases",{"_index":2278,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["q.datavalue.value.amount",{"_index":2291,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["q.datavalue.value.description",{"_index":2277,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["q.datavalue.value.label",{"_index":2275,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["q.datavalue.value.time",{"_index":2279,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["q.datavalue.value.unit",{"_index":2292,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["q.datavalue?.value",{"_index":2274,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["q.display",{"_index":815,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["q.id",{"_index":1130,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["q.label",{"_index":855,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["q.label}}:&nbsp",{"_index":814,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["q100626",{"_index":1198,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q100631",{"_index":1206,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q101755",{"_index":1196,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q10441",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["q10671",{"_index":1919,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q10677",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["q10678",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["q11174",{"_index":1878,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q11214",{"_index":1894,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q12",{"_index":1890,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"components/Sparql1DisplayComponent.html":{}}}],["q140759",{"_index":4454,"title":{},"body":{"components/Sparql2DisplayComponent.html":{}}}],["q140806",{"_index":1893,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q146602",{"_index":1911,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q147829",{"_index":1870,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q152233",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["q16200",{"_index":4438,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["q164344",{"_index":1880,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q172192",{"_index":4442,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{}}}],["q172203",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["q195135",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["q20",{"_index":1899,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q21407",{"_index":1920,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q21870",{"_index":1194,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q21909",{"_index":1912,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q21925",{"_index":1879,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q22",{"_index":1862,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q220375",{"_index":2813,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["q220833",{"_index":1892,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q23197",{"_index":1209,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q24499",{"_index":4431,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["q256699",{"_index":1191,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q257227",{"_index":1900,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q28115",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["q37073",{"_index":1913,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"components/Sparql1DisplayComponent.html":{}}}],["q456376",{"_index":4440,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["q7",{"_index":1818,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q77478",{"_index":1213,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q77483",{"_index":1204,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{}}}],["q77488",{"_index":1216,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q77493",{"_index":1199,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q77495",{"_index":1215,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q77498",{"_index":1211,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q77499",{"_index":1208,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q77500",{"_index":1201,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q77501",{"_index":1219,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q77502",{"_index":1226,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["q8",{"_index":1877,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["q9",{"_index":1884,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["q945258",{"_index":4470,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["q945280",{"_index":4376,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["q960698",{"_index":4377,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["q99677",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["qid",{"_index":2160,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["qu'une",{"_index":3627,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["qual",{"_index":3210,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualif2",{"_index":3916,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["qualif2.id",{"_index":3918,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["qualifier",{"_index":1083,"title":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{}},"body":{"injectables/CreateItemToDisplayService.html":{},"interfaces/Data.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["qualifier.datavalue.value.id",{"_index":1596,"title":{},"body":{"injectables/DetailsService.html":{}}}],["qualifier2",{"_index":3031,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["qualifier2.display",{"_index":2296,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["qualifier2obj",{"_index":3032,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["qualifiercontrollerdisplay(u",{"_index":3230,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifierentityvalues",{"_index":3498,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifierid",{"_index":3029,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["qualifieritems",{"_index":941,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["qualifierliteralcontrollerdisplay(label",{"_index":3239,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifierliteralfilterctrl",{"_index":3168,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifierliteralstring",{"_index":3146,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["qualifierliteralstring(qualifiers",{"_index":4528,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["qualifierliteralvalue",{"_index":3145,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["qualifierliteralvalue(qualifiers",{"_index":4530,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["qualifierliteralvariables",{"_index":3093,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifierliteralvariables(qualifierliteralvariables",{"_index":3091,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifierorder",{"_index":3040,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["qualifierproperties",{"_index":917,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["qualifierproperties).filter(boolean",{"_index":943,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["qualifierproperties.concat(u[\"qualifiers",{"_index":1568,"title":{},"body":{"injectables/DetailsService.html":{}}}],["qualifierpropertieslistbuilding",{"_index":2951,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["qualifierpropertiestoselect",{"_index":3101,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifierproperty",{"_index":3044,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["qualifierproperty(qualifiers",{"_index":4532,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["qualifierpropertydatatype",{"_index":3071,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["qualifierpropertyfilterctrl",{"_index":3164,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifiers",{"_index":875,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["qualifiers(i",{"_index":3133,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifiers(statements",{"_index":4534,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["qualifiers.at(j).controls[\"value\"].get('qualifierliteralstring",{"_index":4548,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["qualifiers.at(j).controls[\"value\"].get('qualifierliteralvalue",{"_index":4547,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["qualifiers.at(j).controls[\"value\"].get('qualifiervalue",{"_index":4546,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["qualifiers.at(j).get('qualifierproperty",{"_index":4545,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["qualifiers2",{"_index":1764,"title":{},"body":{"components/EducationDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{}}}],["qualifiersorder",{"_index":4076,"title":{},"body":{"injectables/SetDataService.html":{}}}],["qualifiersorder.includes(\"p47",{"_index":4127,"title":{},"body":{"injectables/SetDataService.html":{}}}],["qualifiersorder.includes(p",{"_index":4129,"title":{},"body":{"injectables/SetDataService.html":{}}}],["qualifiertypes",{"_index":1258,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["qualifiertypes.includes(entityvalue.col",{"_index":3500,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["qualifiervalue",{"_index":3144,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["qualifiervalue(qualifiers",{"_index":4536,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["qualifiervaluefilterctrl",{"_index":3166,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["quantity",{"_index":1251,"title":{},"body":{"interfaces/Data.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["quantityvariable",{"_index":3728,"title":{"interfaces/QuantityVariable.html":{}},"body":{"interfaces/QuantityVariable.html":{},"coverage.html":{}}}],["quantityvariables",{"_index":3731,"title":{},"body":{"interfaces/QuantityVariable.html":{},"coverage.html":{}}}],["que",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["quellen",{"_index":1811,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["quem",{"_index":4605,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["queries",{"_index":2168,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["query",{"_index":1924,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["query:string",{"_index":4353,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["qui",{"_index":966,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["quoi",{"_index":3201,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["quote",{"_index":469,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["quotes",{"_index":468,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["r",{"_index":562,"title":{},"body":{"interfaces/Bank.html":{}}}],["r1",{"_index":3885,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["r1:any",{"_index":3905,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["r2",{"_index":3886,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["r2:any",{"_index":3906,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["r3",{"_index":3887,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["r3:any",{"_index":3907,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["r4",{"_index":3888,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["r4:any",{"_index":3908,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["re",{"_index":1067,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/ItemDetailsService.html":{},"components/ParisSearchComponent.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{}}}],["re.boolean",{"_index":4106,"title":{},"body":{"injectables/SetDataService.html":{}}}],["re.claims[prop].length",{"_index":2299,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["re.claims[prop].sort((a",{"_index":2301,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["re.claims[prop][0].mainsnak.timeorder",{"_index":2300,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["re.claims[propertyid].activity",{"_index":1914,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].career",{"_index":1841,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].document",{"_index":1901,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].event",{"_index":1889,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].main",{"_index":1820,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].org",{"_index":1895,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].other",{"_index":1800,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].person",{"_index":1819,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].place",{"_index":1807,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].sociability",{"_index":1853,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].sources",{"_index":1810,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].sparql",{"_index":1789,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid].training",{"_index":1835,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.claims[propertyid][j].mainsnak.datavalue.value.id",{"_index":1817,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["re.longestwordlength",{"_index":2259,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["re.search",{"_index":2817,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["re=prefix+id+suffix",{"_index":4712,"title":{},"body":{"injectables/TypologyService.html":{}}}],["re[0",{"_index":3475,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["reactiveformsmodule",{"_index":1965,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["readonly",{"_index":1992,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["ready",{"_index":2171,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["receipt",{"_index":4609,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["recherche",{"_index":2988,"title":{},"body":{"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{}}}],["reduce",{"_index":3798,"title":{},"body":{"injectables/RequestService.html":{}}}],["reduce((acc",{"_index":3880,"title":{},"body":{"injectables/RequestService.html":{}}}],["reduce((accumulator",{"_index":4305,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["reduce(function(longest",{"_index":2562,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["ref",{"_index":986,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["ref.snaks[prop",{"_index":987,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["ref.snaks[prop].datatype",{"_index":1598,"title":{},"body":{"injectables/DetailsService.html":{}}}],["ref.snaks[prop].foreach((snak",{"_index":1599,"title":{},"body":{"injectables/DetailsService.html":{}}}],["ref['snaks",{"_index":906,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["reference",{"_index":878,"title":{"interfaces/Reference.html":{}},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"coverage.html":{},"index.html":{}}}],["referenceitems",{"_index":944,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["referenceproperties",{"_index":899,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["referenceproperties).filter(boolean",{"_index":946,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["referenceproperties.concat(ref[\"snaks",{"_index":1566,"title":{},"body":{"injectables/DetailsService.html":{}}}],["references",{"_index":876,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Reference.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Snak.html":{}}}],["reflète",{"_index":3634,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["regex",{"_index":3001,"title":{},"body":{"injectables/PropertiesListService.html":{},"injectables/TranscriptionService.html":{}}}],["regex1",{"_index":4698,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["regex2",{"_index":4695,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["regexp(substring",{"_index":3002,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["religious",{"_index":4661,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["reload",{"_index":4904,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1142,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/SetSelectedItemsListService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["removequalifiers(i",{"_index":3214,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["removes",{"_index":1082,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["removestatements(i",{"_index":3193,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["removesubstring",{"_index":2949,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["removesubstring(str",{"_index":2961,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["rendering.service.ts",{"_index":3884,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{},"coverage.html":{}}}],["rendering.service.ts:12",{"_index":3895,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:13",{"_index":3894,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:14",{"_index":3893,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:15",{"_index":3896,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:16",{"_index":3901,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:17",{"_index":3897,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:18",{"_index":3898,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:19",{"_index":3899,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:20",{"_index":3900,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:22",{"_index":3892,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["rendering.service.ts:8",{"_index":3890,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["renewal",{"_index":4654,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["reorderqualifiersorder",{"_index":4068,"title":{},"body":{"injectables/SetDataService.html":{}}}],["reorderqualifiersorder(qualifiersorder",{"_index":4074,"title":{},"body":{"injectables/SetDataService.html":{}}}],["replace(\"$2",{"_index":735,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["replace(\"$3",{"_index":736,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["replace(\"$4",{"_index":737,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["replace(\"$5",{"_index":738,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["replace(/\\+/g",{"_index":2287,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["replaysubject",{"_index":2883,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/SetDataService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["replaysubject(1",{"_index":2884,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["reported",{"_index":4612,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["request",{"_index":2140,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"injectables/ListDetailsService.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{}}}],["request.service",{"_index":529,"title":{},"body":{"injectables/BackListService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemInfoService.html":{},"injectables/ListDetailsService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Reference.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{}}}],["request.url.includes(\"biblio",{"_index":4499,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["request.url.includes(\"statistics",{"_index":4500,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["requestitems",{"_index":3748,"title":{},"body":{"injectables/RequestService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["requestitems(itemslists",{"_index":3776,"title":{},"body":{"injectables/RequestService.html":{}}}],["requestitems(valuesurl",{"_index":4037,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["requestitems(valuesurl:string",{"_index":4052,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["requestproperties",{"_index":3749,"title":{},"body":{"injectables/RequestService.html":{}}}],["requestproperties(propertieslists",{"_index":3779,"title":{},"body":{"injectables/RequestService.html":{}}}],["requestservice",{"_index":288,"title":{"injectables/RequestService.html":{}},"body":{"components/AppComponent.html":{},"injectables/BackListService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{},"coverage.html":{}}}],["res",{"_index":970,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemInfoService.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["res.entities",{"_index":2805,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["res.foreach((entity",{"_index":4096,"title":{},"body":{"injectables/SetDataService.html":{}}}],["res.head.vars",{"_index":2547,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["res.map(item",{"_index":4173,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["res.reduce((acc",{"_index":1586,"title":{},"body":{"injectables/DetailsService.html":{}}}],["res.results",{"_index":2162,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["res.results.bindings",{"_index":2549,"title":{},"body":{"injectables/ListDetailsService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["res.subscribe(res=>console.log(res",{"_index":4686,"title":{},"body":{"injectables/TranscriptDisplayService.html":{}}}],["res[\"claims",{"_index":4720,"title":{},"body":{"injectables/TypologyService.html":{}}}],["res[0",{"_index":2052,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["res[0].entities",{"_index":1590,"title":{},"body":{"injectables/DetailsService.html":{}}}],["res[0][\"itemvalue",{"_index":3347,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["res[0][\"property",{"_index":3345,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["res[1",{"_index":2054,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["res[res.length",{"_index":1481,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["research",{"_index":3956,"title":{},"body":{"components/SearchComponent.html":{}}}],["researchfield",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["researchfield.id",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["researchfield.name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["researchfields",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["researchfieldselect",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["researchfieldselect(researchfield",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["researchfieldssorted",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["reserach",{"_index":3945,"title":{},"body":{"components/SearchComponent.html":{}}}],["reset",{"_index":4932,"title":{},"body":{"overview.html":{}}}],["resetpreviousitemvalues(currentindex",{"_index":3714,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["respectant",{"_index":3015,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["response",{"_index":4507,"title":{},"body":{"interceptors/SparqlInterceptor.html":{},"pipes/UnitPipe.html":{}}}],["response.continue",{"_index":3874,"title":{},"body":{"injectables/RequestService.html":{}}}],["response.continue.sroffset",{"_index":3875,"title":{},"body":{"injectables/RequestService.html":{}}}],["response.query?.search.map(item",{"_index":3878,"title":{},"body":{"injectables/RequestService.html":{}}}],["response1",{"_index":4054,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["response2",{"_index":4056,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["responsetype",{"_index":3824,"title":{},"body":{"injectables/RequestService.html":{}}}],["result",{"_index":980,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemInfoService.html":{},"interfaces/Reference.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetLanguageService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"injectables/TypologyService.html":{}}}],["result.aliases",{"_index":4186,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["result.concat(object.keys(item",{"_index":1585,"title":{},"body":{"injectables/DetailsService.html":{}}}],["result.description",{"_index":4184,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["result.push(arr.splice(0",{"_index":1603,"title":{},"body":{"injectables/DetailsService.html":{}}}],["result.push(object.values(x)[0][0].datavalue.value.id",{"_index":4059,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["result.push(object.values(x)[0][0].property",{"_index":4046,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["result.push(qualifier.datavalue.value.id",{"_index":1597,"title":{},"body":{"injectables/DetailsService.html":{}}}],["result.push(res",{"_index":4722,"title":{},"body":{"injectables/TypologyService.html":{}}}],["result.push(snak.datavalue.value.id",{"_index":984,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["result.push(temparr.slice(0",{"_index":1012,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["result2",{"_index":4709,"title":{},"body":{"injectables/TypologyService.html":{}}}],["result=classeslistquery",{"_index":2494,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["results",{"_index":152,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["results.bindings",{"_index":2161,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["retirement",{"_index":4645,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["retirer",{"_index":681,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["retourne",{"_index":893,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["retrieve",{"_index":1106,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["return",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"injectables/SortingDataAccessorService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{}}}],["revisions",{"_index":3834,"title":{},"body":{"injectables/RequestService.html":{}}}],["ricerca",{"_index":2993,"title":{},"body":{"injectables/PropertiesListService.html":{},"components/SearchComponent.html":{}}}],["right",{"_index":2456,"title":{},"body":{"components/ItemInfoComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["rolelabels",{"_index":1136,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["roleofobject",{"_index":3889,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["roleofobject(re",{"_index":3891,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["roleofobjectrenderingservice",{"_index":3882,"title":{"injectables/RoleOfObjectRenderingService.html":{}},"body":{"injectables/RoleOfObjectRenderingService.html":{},"coverage.html":{}}}],["root",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/GregorianToJulianCalendarService.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"injectables/SortingDataAccessorService.html":{},"interceptors/SparqlInterceptor.html":{},"injectables/StatementsControlsService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"injectables/WikiDisplayService.html":{}}}],["root'},{'name",{"_index":104,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["route",{"_index":2581,"title":{},"body":{"components/MapComponent.html":{}}}],["router",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{}}}],["routerlink",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["routerlinkactive",{"_index":2765,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["routermodule",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["routermodule.forroot(routes",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":2569,"title":{},"body":{"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["routes",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["routing.module.ts",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["routingconfiguration",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["row",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{}}}],["row[colindex",{"_index":2684,"title":{},"body":{"injectables/MutatorService.html":{}}}],["rows",{"_index":474,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["run",{"_index":4897,"title":{},"body":{"index.html":{}}}],["running",{"_index":4915,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TypologyService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{}}}],["réappliquer",{"_index":3362,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["récupère",{"_index":3778,"title":{},"body":{"injectables/RequestService.html":{}}}],["référence",{"_index":895,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["références",{"_index":838,"title":{},"body":{"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["réinitialiser",{"_index":3704,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["rénitialiser",{"_index":3264,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["réordonne",{"_index":4095,"title":{},"body":{"injectables/SetDataService.html":{}}}],["s",{"_index":1833,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["s'abonner",{"_index":3325,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["s'agit",{"_index":3203,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["s'assure",{"_index":3633,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["safehtml",{"_index":3923,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["safehtmlpipe",{"_index":3920,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["safestringify(obj",{"_index":3529,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["sanitizer",{"_index":3925,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["sans",{"_index":998,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["sass",{"_index":4870,"title":{},"body":{"dependencies.html":{}}}],["saveas",{"_index":3795,"title":{},"body":{"injectables/RequestService.html":{}}}],["saveas(blob",{"_index":3845,"title":{},"body":{"injectables/RequestService.html":{}}}],["saver",{"_index":3796,"title":{},"body":{"injectables/RequestService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":4906,"title":{},"body":{"index.html":{}}}],["scrollpositionrestoration",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["se",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["search",{"_index":11,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["search'},{'name",{"_index":101,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["search.charat(0",{"_index":3493,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["search.component",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search.component#.ts",{"_index":3043,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{},"coverage.html":{}}}],["search.component').then(mod",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search.component.html",{"_index":2717,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["search.component.scss",{"_index":2716,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["search.component.ts",{"_index":2715,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{},"coverage.html":{}}}],["search.component.ts:127",{"_index":2730,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:141",{"_index":2728,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:146",{"_index":2736,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:151",{"_index":2731,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:47",{"_index":2742,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:48",{"_index":2739,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:49",{"_index":2753,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:50",{"_index":2763,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:51",{"_index":2751,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:52",{"_index":2754,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:59",{"_index":2755,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:61",{"_index":2757,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:62",{"_index":2747,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:64",{"_index":2740,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:65",{"_index":2756,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:67",{"_index":2750,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:68",{"_index":2749,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:69",{"_index":2752,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:70",{"_index":2748,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:72",{"_index":2738,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:73",{"_index":2746,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:75",{"_index":2744,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:76",{"_index":2762,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:79",{"_index":2734,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.component.ts:85",{"_index":2732,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["search.slice(1",{"_index":3502,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["search.startswith",{"_index":3687,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["search.tolowercase",{"_index":2919,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["search/advanced",{"_index":10,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["search/bank.ts",{"_index":538,"title":{},"body":{"interfaces/Bank.html":{},"coverage.html":{}}}],["search/item",{"_index":2522,"title":{},"body":{"interfaces/ItemType.html":{},"coverage.html":{}}}],["search/paris",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ParisSearchComponent.html":{},"coverage.html":{}}}],["search/project",{"_index":2843,"title":{},"body":{"components/ProjectSelectComponent.html":{},"coverage.html":{}}}],["search/quantity",{"_index":3729,"title":{},"body":{"interfaces/QuantityVariable.html":{},"coverage.html":{}}}],["search/search.component",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search/services/data.service.ts",{"_index":1395,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["search/services/data.service.ts:12",{"_index":1454,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:14",{"_index":1456,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:16",{"_index":1457,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:18",{"_index":1458,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:20",{"_index":1459,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:22",{"_index":1461,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:25",{"_index":1427,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:27",{"_index":1429,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:29",{"_index":1431,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:35",{"_index":1444,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:37",{"_index":1446,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:39",{"_index":1447,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:41",{"_index":1449,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:43",{"_index":1450,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:45",{"_index":1452,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:47",{"_index":1440,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:49",{"_index":1442,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:53",{"_index":1415,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:58",{"_index":1421,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:60",{"_index":1423,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:62",{"_index":1425,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:64",{"_index":1419,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:66",{"_index":1462,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:68",{"_index":1464,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:70",{"_index":1433,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:72",{"_index":1436,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:74",{"_index":1438,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:76",{"_index":1417,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/data.service.ts:9",{"_index":1413,"title":{},"body":{"injectables/DataService.html":{}}}],["search/services/mutator.service.ts",{"_index":2641,"title":{},"body":{"injectables/MutatorService.html":{},"coverage.html":{}}}],["search/services/mutator.service.ts:15",{"_index":2655,"title":{},"body":{"injectables/MutatorService.html":{}}}],["search/services/mutator.service.ts:18",{"_index":2651,"title":{},"body":{"injectables/MutatorService.html":{}}}],["search/services/mutator.service.ts:38",{"_index":2653,"title":{},"body":{"injectables/MutatorService.html":{}}}],["search/services/mutator.service.ts:43",{"_index":2649,"title":{},"body":{"injectables/MutatorService.html":{}}}],["search/services/mutator.service.ts:52",{"_index":2647,"title":{},"body":{"injectables/MutatorService.html":{}}}],["search/services/mutator.service.ts:8",{"_index":2645,"title":{},"body":{"injectables/MutatorService.html":{}}}],["search/services/new",{"_index":1489,"title":{},"body":{"injectables/DataService-1.html":{},"coverage.html":{}}}],["search/services/paris",{"_index":2688,"title":{},"body":{"injectables/ParisDatabaseService.html":{},"coverage.html":{}}}],["search/services/statements",{"_index":4511,"title":{},"body":{"injectables/StatementsControlsService.html":{},"coverage.html":{}}}],["search/statement",{"_index":3042,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"coverage.html":{}}}],["search/string",{"_index":4552,"title":{},"body":{"interfaces/StringVariable.html":{},"coverage.html":{}}}],["search/time",{"_index":4591,"title":{},"body":{"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"coverage.html":{}}}],["search/variable.ts",{"_index":1180,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["searchcomponent",{"_index":131,"title":{"components/SearchComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["searchengine",{"_index":3064,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["searchengineservice",{"_index":3055,"title":{"injectables/SearchEngineService.html":{}},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"coverage.html":{}}}],["searchinput",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["searchitem",{"_index":3750,"title":{},"body":{"injectables/RequestService.html":{}}}],["searchitem(label",{"_index":3781,"title":{},"body":{"injectables/RequestService.html":{}}}],["searchproperty",{"_index":3751,"title":{},"body":{"injectables/RequestService.html":{}}}],["searchproperty(label",{"_index":3783,"title":{},"body":{"injectables/RequestService.html":{}}}],["searchquery",{"_index":2722,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["searchtoken",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["searchurlsuffix",{"_index":3735,"title":{},"body":{"injectables/RequestService.html":{}}}],["secondlastchar",{"_index":3441,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["security",{"_index":4866,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":3249,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"index.html":{}}}],["seed",{"_index":2689,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["seem",{"_index":2505,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["seen",{"_index":3530,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["seen.add(value",{"_index":3534,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["seen.has(value",{"_index":3532,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["seenobjects",{"_index":3520,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["seenobjects.add(obj",{"_index":3526,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["seenobjects.has(obj",{"_index":3525,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["select",{"_index":2846,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"dependencies.html":{}}}],["select'},{'name",{"_index":130,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["select.component.html",{"_index":2850,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.scss",{"_index":2851,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts",{"_index":2845,"title":{},"body":{"components/ProjectSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:110",{"_index":2878,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:114",{"_index":2872,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:38",{"_index":2898,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:39",{"_index":2890,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:40",{"_index":2889,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:43",{"_index":2867,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:45",{"_index":2866,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:50",{"_index":2900,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:54",{"_index":2880,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:56",{"_index":2897,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:59",{"_index":2894,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:62",{"_index":2885,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:65",{"_index":2893,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:67",{"_index":2869,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:69",{"_index":2882,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:71",{"_index":2873,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:81",{"_index":2871,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:85",{"_index":2879,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:89",{"_index":2875,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select.component.ts:92",{"_index":2870,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["select/project",{"_index":2844,"title":{},"body":{"components/ProjectSelectComponent.html":{},"coverage.html":{}}}],["selected",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackListService.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"injectables/SetSelectedItemsListService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"coverage.html":{}}}],["selected.id",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["selected?.id",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["selectedcol",{"_index":2669,"title":{},"body":{"injectables/MutatorService.html":{}}}],["selecteditem",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["selecteditem.label",{"_index":2842,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["selecteditem.label}}&nbsp",{"_index":2821,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["selecteditem:observable",{"_index":2769,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["selecteditemid",{"_index":2666,"title":{},"body":{"injectables/MutatorService.html":{}}}],["selecteditemlistservice",{"_index":4032,"title":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"coverage.html":{}}}],["selecteditems",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["selecteditemsize",{"_index":2840,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["selecteditemslist",{"_index":3935,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SetSelectedItemsListService.html":{}}}],["selecteditemslist:any",{"_index":4193,"title":{},"body":{"injectables/SetSelectedItemsListService.html":{}}}],["selecteditemtype",{"_index":2664,"title":{},"body":{"injectables/MutatorService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["selecteditemtype(itemtype",{"_index":3250,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["selecteditemtypes",{"_index":3123,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["selecteditemvalue",{"_index":40,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["selectedlabels",{"_index":3681,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["selectedlabels.map(label",{"_index":3684,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["selectedlang",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"injectables/CreateItemToDisplayService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"components/TextDisplayComponent.html":{}}}],["selectedlangservice",{"_index":532,"title":{},"body":{"injectables/BackListService.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"coverage.html":{}}}],["selectedliteralvariables",{"_index":3104,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["selectedoptions",{"_index":3678,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["selectedoptions.push([itemtypecontrol.value[0",{"_index":3717,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["selectedoptions.push(itemtypevalue",{"_index":3718,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["selectedpage",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["selectedparisitems",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["selectedparisitemslist",{"_index":2723,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["selectedprojectlist",{"_index":41,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["selectedpropertieslist",{"_index":3303,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["selectedqualifiervalue",{"_index":3070,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["selectedresearchfield",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["selectedsparql",{"_index":2164,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["selectedstatementlist",{"_index":42,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["selectedvalue",{"_index":3069,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["selectedvalue(itemtype",{"_index":3283,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["selectedvalues",{"_index":3424,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["selectedvaluetype(itemtype",{"_index":3289,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["selection",{"_index":1188,"title":{"interfaces/Selection.html":{}},"body":{"interfaces/Data.html":{},"injectables/FactgridSubtitlesService.html":{},"injectables/MutatorService.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["selectionchange",{"_index":2865,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["selections",{"_index":1185,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Variable.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["selecttodisplay:string",{"_index":2546,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["self",{"_index":3694,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["self.findindex((t",{"_index":3695,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["selon",{"_index":688,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["sep",{"_index":1023,"title":{},"body":{"pipes/CommaJoinPipe.html":{},"pipes/JoinPipe.html":{}}}],["separated",{"_index":472,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["separator",{"_index":3685,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["september",{"_index":4220,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["septembre",{"_index":4232,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["septiembre",{"_index":4251,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["serve",{"_index":4899,"title":{},"body":{"index.html":{}}}],["server",{"_index":4896,"title":{},"body":{"index.html":{}}}],["services/array",{"_index":1949,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["services/data.service",{"_index":2656,"title":{},"body":{"injectables/MutatorService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["services/hu",{"_index":1952,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["services/paris",{"_index":2764,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["services/properties",{"_index":3053,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["services/request.service",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"injectables/HuDatabaseService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["services/search",{"_index":3056,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["services/set",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["services/statements",{"_index":3059,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["sessionstorage.setitem('from",{"_index":2775,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["sessionstorage['selectedpage",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{}}}],["set",{"_index":879,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"components/Sparql3DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["set('action",{"_index":3805,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('format",{"_index":3811,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('format',\"json",{"_index":4736,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["set('formatversion",{"_index":3830,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('gbllimit",{"_index":3852,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('gblnamespace",{"_index":3853,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('gbltitle",{"_index":3855,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('generator",{"_index":3849,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('ids',value",{"_index":4735,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["set('language",{"_index":3808,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('languages',lang",{"_index":4733,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["set('limit",{"_index":3810,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('list",{"_index":3863,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('meta",{"_index":3839,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('origin",{"_index":3813,"title":{},"body":{"injectables/RequestService.html":{},"pipes/UnitPipe.html":{}}}],["set('page",{"_index":3828,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('prop",{"_index":3829,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('props','labels",{"_index":4734,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["set('rvprop",{"_index":3836,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('search",{"_index":3807,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('siprop",{"_index":3841,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('srlimit",{"_index":3865,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('srsearch",{"_index":3864,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('titles",{"_index":3835,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('type",{"_index":3815,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('uselang",{"_index":3809,"title":{},"body":{"injectables/RequestService.html":{}}}],["set('wbetterms",{"_index":3851,"title":{},"body":{"injectables/RequestService.html":{}}}],["set(a.filter(boolean",{"_index":1002,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["set(arr",{"_index":1602,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["set(arr)).reduce((list",{"_index":997,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["setactivitydisplay",{"_index":567,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setactivitydisplay(item",{"_index":595,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setbacklist",{"_index":495,"title":{},"body":{"injectables/BackListDetailsService.html":{}}}],["setbacklist(list",{"_index":497,"title":{},"body":{"injectables/BackListDetailsService.html":{}}}],["setbacklist(list:any",{"_index":499,"title":{},"body":{"injectables/BackListDetailsService.html":{}}}],["setcareerdisplay",{"_index":568,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setcareerdisplay(item",{"_index":598,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setcurrentitemtypes",{"_index":3613,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["setcurrentitemtypes(index",{"_index":3642,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["setdata(data",{"_index":2901,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["setdataservice",{"_index":1947,"title":{"injectables/SetDataService.html":{}},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/SetDataService.html":{},"coverage.html":{}}}],["setdate",{"_index":2200,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/SetTimeService.html":{}}}],["setdate(time",{"_index":4211,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["setdocumentdisplay",{"_index":569,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setdocumentdisplay(item",{"_index":601,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["seteducationdisplay",{"_index":570,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["seteducationdisplay(item",{"_index":604,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["seteventdisplay",{"_index":571,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["seteventdisplay(item",{"_index":606,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setexternallinksdisplay",{"_index":572,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setexternallinksdisplay(item",{"_index":609,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setheaderdisplay",{"_index":573,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setheaderdisplay(item",{"_index":612,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["sethousenumbersquery",{"_index":2187,"title":{},"body":{"injectables/IframesDisplayService-1.html":{}}}],["sethousenumbersquery(res",{"_index":2189,"title":{},"body":{"injectables/IframesDisplayService-1.html":{}}}],["setiframesdisplay",{"_index":2188,"title":{},"body":{"injectables/IframesDisplayService-1.html":{}}}],["setiframesdisplay(item",{"_index":2190,"title":{},"body":{"injectables/IframesDisplayService-1.html":{}}}],["setinitialitemtypevalue",{"_index":3366,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["setinitialitemvalue",{"_index":3609,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["setinitialliteralvariable",{"_index":3375,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["setinitialpropertyvalue",{"_index":3371,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["setinitialqualifierliteralvariable",{"_index":3381,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["setinitialqualifierpropertyvalue",{"_index":3377,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["setinitialqualifiervaluevalue",{"_index":3379,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["setinitialvalue",{"_index":2862,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["setinitialvaluevalue",{"_index":3373,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["setiteminfodisplay",{"_index":574,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setiteminfodisplay(item",{"_index":615,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setitems",{"_index":4034,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["setitems(arr",{"_index":4041,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["setitemslist",{"_index":1543,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{}}}],["setitemslist(u",{"_index":936,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["setitemtodisplay",{"_index":4135,"title":{},"body":{"injectables/SetItemToDisplayService.html":{}}}],["setitemtodisplay(u",{"_index":4138,"title":{},"body":{"injectables/SetItemToDisplayService.html":{}}}],["setitemtodisplayservice",{"_index":4132,"title":{"injectables/SetItemToDisplayService.html":{}},"body":{"injectables/SetItemToDisplayService.html":{},"coverage.html":{}}}],["setlanguage",{"_index":891,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["setlanguageservice",{"_index":285,"title":{"injectables/SetLanguageService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"coverage.html":{}}}],["setlistdetails",{"_index":2539,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["setlistdetails(list",{"_index":2540,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["setlistdetails(sparql",{"_index":2543,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["setorgdisplay",{"_index":575,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setorgdisplay(item",{"_index":618,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setpagesizeoptions",{"_index":2093,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["setpagesizeoptions(setpagesizeoptionsinput",{"_index":2078,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["setpagesizeoptionsinput",{"_index":2079,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["setpagesizeoptionsinput.split(',').map(str",{"_index":2081,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["setpersondisplay",{"_index":576,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setpersondisplay(item",{"_index":621,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setplacedisplay",{"_index":577,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setplacedisplay(item",{"_index":624,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setproperties",{"_index":1544,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["setproperties(arr",{"_index":954,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Snak.html":{}}}],["setpropertiesandvalues",{"_index":4035,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["setpropertiesandvalues(u",{"_index":4043,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["setpropertieslist",{"_index":1545,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{}}}],["setpropertieslist(u",{"_index":912,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["setqualifieritems",{"_index":1546,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{}}}],["setqualifieritems(values",{"_index":977,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["setreferenceitems",{"_index":1547,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{}}}],["setreferenceitems(values",{"_index":985,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["setselecteditemslistservice",{"_index":4189,"title":{"injectables/SetSelectedItemsListService.html":{}},"body":{"injectables/SetSelectedItemsListService.html":{},"coverage.html":{}}}],["setseparator(entityvalues",{"_index":3510,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["setsociabilitydisplay",{"_index":578,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setsociabilitydisplay(item",{"_index":627,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setsourcesdisplay",{"_index":579,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setsourcesdisplay(item",{"_index":630,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setsubtitle1",{"_index":1775,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["setsubtitle1(re",{"_index":1777,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["setsubtitle1(re,propertyid,lang",{"_index":1785,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["setsubtitle2",{"_index":1776,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["setsubtitle2(re",{"_index":1780,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["setsubtitle2(re,propertyid,number,lang",{"_index":1815,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["setsubtitleservice",{"_index":4195,"title":{"injectables/SetSubtitleService.html":{}},"body":{"injectables/SetSubtitleService.html":{},"coverage.html":{}}}],["settechnicalitiesdisplay",{"_index":4555,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["settechnicalitiesdisplay(item",{"_index":4556,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["settembre",{"_index":4261,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["settimeout",{"_index":3352,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["settimeservice",{"_index":2251,"title":{"injectables/SetTimeService.html":{}},"body":{"injectables/ItemDetailsService.html":{},"injectables/SetTimeService.html":{},"coverage.html":{}}}],["settings",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["settitle",{"_index":4459,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["seturl",{"_index":580,"title":{},"body":{"injectables/BlockDisplayService.html":{},"injectables/ItemDetailsService.html":{}}}],["seturl(item",{"_index":633,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["seturl(u",{"_index":2237,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["seturldisplay",{"_index":581,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["seturldisplay(item",{"_index":635,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["setwikidisplay",{"_index":4740,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["setwikidisplay(item",{"_index":4741,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["seul",{"_index":961,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["seuls",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["show",{"_index":2437,"title":{},"body":{"components/ItemInfoComponent.html":{},"injectables/SetSubtitleService.html":{},"components/Sparql0DisplayComponent.html":{}}}],["show(){x",{"_index":4202,"title":{},"body":{"injectables/SetSubtitleService.html":{}}}],["show(lang",{"_index":4198,"title":{},"body":{"injectables/SetSubtitleService.html":{}}}],["showfirstlastbuttons",{"_index":2012,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["showpagesizeoptions",{"_index":2011,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["showreferences",{"_index":759,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["shrink",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["si",{"_index":2229,"title":{},"body":{"injectables/ItemDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["sie",{"_index":2780,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["signal",{"_index":1465,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["simplechange",{"_index":4574,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["simplechanges",{"_index":54,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["single",{"_index":3159,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["singleselect",{"_index":3311,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["siteinfo",{"_index":3840,"title":{},"body":{"injectables/RequestService.html":{}}}],["sitelinks",{"_index":4157,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["size",{"_index":2440,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/TextDisplayComponent.html":{}}}],["slide",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["slideupanimation",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"coverage.html":{}}}],["snak",{"_index":877,"title":{"interfaces/Snak.html":{}},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/RoleOfObjectRenderingService.html":{},"interfaces/Snak.html":{},"coverage.html":{}}}],["snak.datavalue.value.id",{"_index":1600,"title":{},"body":{"injectables/DetailsService.html":{}}}],["snak.mainsnak.property",{"_index":3913,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["snak.qualifiers2",{"_index":3917,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["snak?.datavalue?.value?.id",{"_index":983,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["snaks",{"_index":885,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["snaks[0]?.datatype",{"_index":988,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["sociabilidad",{"_index":1858,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["sociabilit",{"_index":1857,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["sociability",{"_index":133,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["sociability_display_properties",{"_index":645,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["sociabilityandculture",{"_index":628,"title":{},"body":{"injectables/BlockDisplayService.html":{},"components/SociabilityDisplayComponent.html":{}}}],["sociabilitydisplaycomponent",{"_index":132,"title":{"components/SociabilityDisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["soit",{"_index":3722,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["something",{"_index":3539,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["sont",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["sort",{"_index":1958,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["sort((a",{"_index":2998,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["sortheaderid",{"_index":2019,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/SortingDataAccessorService.html":{}}}],["sorting",{"_index":4309,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["sortingaccessor",{"_index":1979,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["sortingaccessor.nestedcaseinsensitive(data",{"_index":2020,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["sortingdata",{"_index":4297,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["sortingdata(data",{"_index":4299,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["sortingdataaccessor",{"_index":4312,"title":{},"body":{"injectables/SortingDataAccessorService.html":{},"coverage.html":{}}}],["sortingdataaccessorservice",{"_index":4294,"title":{"injectables/SortingDataAccessorService.html":{}},"body":{"injectables/SortingDataAccessorService.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"injectables/GregorianToJulianCalendarService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{},"index.html":{}}}],["sources",{"_index":135,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["sources_display_properties",{"_index":647,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["sourcesdisplaycomponent",{"_index":134,"title":{"components/SourcesDisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["sourceslist",{"_index":631,"title":{},"body":{"injectables/BlockDisplayService.html":{},"components/SourcesDisplayComponent.html":{}}}],["sous",{"_index":1004,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["soziabilität",{"_index":1855,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["spacer",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["spanish",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["sparql",{"_index":2129,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"components/ParisSearchComponent.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{},"components/Sparql0DisplayComponent.html":{}}}],["sparql.service",{"_index":1049,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"coverage.html":{}}}],["sparql.service.ts",{"_index":4818,"title":{},"body":{"coverage.html":{}}}],["sparql0",{"_index":137,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["sparql0displaycomponent",{"_index":136,"title":{"components/Sparql0DisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["sparql1",{"_index":139,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["sparql1displaycomponent",{"_index":138,"title":{"components/Sparql1DisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["sparql2",{"_index":141,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["sparql2displaycomponent",{"_index":140,"title":{"components/Sparql2DisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["sparql3",{"_index":143,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["sparql3displaycomponent",{"_index":142,"title":{"components/Sparql3DisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["sparql4",{"_index":145,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["sparql4displaycomponent",{"_index":144,"title":{"components/Sparql4DisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["sparqlask",{"_index":4069,"title":{},"body":{"injectables/SetDataService.html":{}}}],["sparqlask(sparql",{"_index":4077,"title":{},"body":{"injectables/SetDataService.html":{}}}],["sparqlbuilding",{"_index":2145,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["sparqlbuilding(lang",{"_index":2154,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["sparqldata",{"_index":4330,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["sparqlinterceptor",{"_index":4484,"title":{"interceptors/SparqlInterceptor.html":{}},"body":{"interceptors/SparqlInterceptor.html":{},"coverage.html":{}}}],["sparqlresult",{"_index":2169,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["sparqlresult.subscribe(re",{"_index":4105,"title":{},"body":{"injectables/SetDataService.html":{}}}],["sparqlresult:observable",{"_index":4107,"title":{},"body":{"injectables/SetDataService.html":{}}}],["sparqlsubject",{"_index":4331,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["sparqltodisplay",{"_index":4070,"title":{},"body":{"injectables/SetDataService.html":{}}}],["sparqltodisplay(sparql",{"_index":4079,"title":{},"body":{"injectables/SetDataService.html":{}}}],["sparqltodownload",{"_index":4071,"title":{},"body":{"injectables/SetDataService.html":{}}}],["sparqltodownload(sparql",{"_index":4080,"title":{},"body":{"injectables/SetDataService.html":{}}}],["specialpages",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["specials",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["spinner",{"_index":1964,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["split",{"_index":4304,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["spécifique",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["src/app/app",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"coverage.html":{}}}],["src/app/app.component.ts:107",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:133",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:142",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:150",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:175",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:72",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:76",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:77",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:79",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:80",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:84",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:85",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:86",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:87",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:92",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/back",{"_index":505,"title":{},"body":{"pipes/BackListIdPipe.html":{},"coverage.html":{}}}],["src/app/change",{"_index":866,"title":{},"body":{"pipes/ChangeUndefinedItemPipe.html":{},"coverage.html":{}}}],["src/app/comma",{"_index":1018,"title":{},"body":{"pipes/CommaJoinPipe.html":{},"coverage.html":{}}}],["src/app/custom",{"_index":1149,"title":{},"body":{"pipes/CustomDatePipe.html":{},"coverage.html":{}}}],["src/app/display/career",{"_index":752,"title":{},"body":{"components/CareerDisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/display.component.ts",{"_index":4783,"title":{},"body":{"coverage.html":{}}}],["src/app/display/education",{"_index":1752,"title":{},"body":{"components/EducationDisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/header",{"_index":2136,"title":{},"body":{"components/HeaderDisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/iframes",{"_index":2184,"title":{},"body":{"injectables/IframesDisplayService.html":{},"coverage.html":{}}}],["src/app/display/item",{"_index":2310,"title":{},"body":{"components/ItemInfoComponent.html":{},"coverage.html":{}}}],["src/app/display/main",{"_index":2567,"title":{},"body":{"components/MainDisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/map/map.component.ts",{"_index":2574,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/display/map/map.component.ts:16",{"_index":2587,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/map/map.component.ts:17",{"_index":2594,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/map/map.component.ts:20",{"_index":2589,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/map/map.component.ts:21",{"_index":2591,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/map/map.component.ts:22",{"_index":2592,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/map/map.component.ts:23",{"_index":2588,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/map/map.component.ts:24",{"_index":2590,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/map/map.component.ts:25",{"_index":2595,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/map/map.component.ts:27",{"_index":2585,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/map/map.component.ts:51",{"_index":2584,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/display/services/block",{"_index":564,"title":{},"body":{"injectables/BlockDisplayService.html":{},"coverage.html":{}}}],["src/app/display/services/iframes",{"_index":2186,"title":{},"body":{"injectables/IframesDisplayService-1.html":{},"coverage.html":{}}}],["src/app/display/services/item",{"_index":1617,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"coverage.html":{}}}],["src/app/display/services/map.service.ts",{"_index":2628,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/display/services/map.service.ts:11",{"_index":2632,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/display/services/map.service.ts:7",{"_index":2630,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/display/services/properties",{"_index":4795,"title":{},"body":{"coverage.html":{}}}],["src/app/display/services/selected",{"_index":4060,"title":{},"body":{"injectables/SelectedItemListService-1.html":{},"coverage.html":{}}}],["src/app/display/services/technicalities",{"_index":4554,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{},"coverage.html":{}}}],["src/app/display/services/transcription.service.ts",{"_index":4690,"title":{},"body":{"injectables/TranscriptionService.html":{},"coverage.html":{}}}],["src/app/display/services/transcription.service.ts:10",{"_index":4694,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["src/app/display/services/transcription.service.ts:6",{"_index":4692,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["src/app/display/services/wiki",{"_index":4739,"title":{},"body":{"injectables/WikiDisplayService.html":{},"coverage.html":{}}}],["src/app/display/sociability",{"_index":4292,"title":{},"body":{"components/SociabilityDisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/sources",{"_index":4313,"title":{},"body":{"components/SourcesDisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/sparql0",{"_index":4320,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/sparql1",{"_index":4398,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/sparql2",{"_index":4448,"title":{},"body":{"components/Sparql2DisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/sparql3",{"_index":4456,"title":{},"body":{"components/Sparql3DisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/sparql4",{"_index":4473,"title":{},"body":{"components/Sparql4DisplayComponent.html":{},"coverage.html":{}}}],["src/app/display/text",{"_index":4567,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts",{"_index":1925,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:11",{"_index":1930,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/gregorian",{"_index":1934,"title":{},"body":{"injectables/GregorianToJulianCalendarService.html":{},"coverage.html":{}}}],["src/app/harmonia",{"_index":1938,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"coverage.html":{}}}],["src/app/join.pipe.ts",{"_index":2535,"title":{},"body":{"pipes/JoinPipe.html":{},"coverage.html":{}}}],["src/app/join.pipe.ts:8",{"_index":2536,"title":{},"body":{"pipes/JoinPipe.html":{}}}],["src/app/paris",{"_index":2687,"title":{},"body":{"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"coverage.html":{}}}],["src/app/safe",{"_index":3921,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["src/app/search/advanced",{"_index":9,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"interfaces/Bank.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/ItemType.html":{},"injectables/MutatorService.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts",{"_index":3932,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:167",{"_index":3937,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:181",{"_index":3936,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:184",{"_index":3942,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:186",{"_index":3938,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:45",{"_index":3943,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:46",{"_index":3958,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:47",{"_index":3963,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:48",{"_index":3953,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:53",{"_index":3966,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:54",{"_index":3965,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:55",{"_index":3940,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:56",{"_index":3957,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:57",{"_index":3946,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:62",{"_index":3959,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:64",{"_index":3961,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:65",{"_index":3949,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:67",{"_index":3944,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:68",{"_index":3960,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:70",{"_index":3952,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:71",{"_index":3951,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:72",{"_index":3954,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:73",{"_index":3950,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:74",{"_index":3955,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:76",{"_index":3941,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:77",{"_index":3948,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:79",{"_index":3947,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:80",{"_index":3962,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:87",{"_index":3939,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/selected",{"_index":4809,"title":{},"body":{"coverage.html":{}}}],["src/app/services/#set",{"_index":4133,"title":{},"body":{"injectables/SetItemToDisplayService.html":{},"coverage.html":{}}}],["src/app/services/array",{"_index":448,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"coverage.html":{}}}],["src/app/services/back",{"_index":493,"title":{},"body":{"injectables/BackListDetailsService.html":{},"injectables/BackListService.html":{},"coverage.html":{}}}],["src/app/services/create",{"_index":1027,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"coverage.html":{}}}],["src/app/services/details.service",{"_index":1537,"title":{},"body":{"injectables/DetailsService.html":{},"coverage.html":{}}}],["src/app/services/details.service.ts",{"_index":873,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"coverage.html":{}}}],["src/app/services/details.service.ts:133",{"_index":1609,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:140",{"_index":1607,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:154",{"_index":1611,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:176",{"_index":1612,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:202",{"_index":1604,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:209",{"_index":1613,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:216",{"_index":1606,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:26",{"_index":1016,"title":{},"body":{"interfaces/ClaimsObject.html":{}}}],["src/app/services/details.service.ts:38",{"_index":1614,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:39",{"_index":1615,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:44",{"_index":1605,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:56",{"_index":1610,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/details.service.ts:91",{"_index":1608,"title":{},"body":{"injectables/DetailsService-1.html":{}}}],["src/app/services/factgrid",{"_index":1773,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"coverage.html":{}}}],["src/app/services/item",{"_index":2197,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/ItemInfoService.html":{},"coverage.html":{}}}],["src/app/services/list",{"_index":2538,"title":{},"body":{"injectables/ListDetailsService.html":{},"coverage.html":{}}}],["src/app/services/longest",{"_index":2554,"title":{},"body":{"injectables/LongestWordService.html":{},"coverage.html":{}}}],["src/app/services/projects",{"_index":2928,"title":{},"body":{"injectables/ProjectsListService.html":{},"coverage.html":{}}}],["src/app/services/properties",{"_index":2944,"title":{},"body":{"injectables/PropertiesListService.html":{},"coverage.html":{}}}],["src/app/services/property",{"_index":3004,"title":{},"body":{"injectables/PropertyDetailsService.html":{},"coverage.html":{}}}],["src/app/services/request.service.ts",{"_index":3732,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/app/services/request.service.ts:105",{"_index":3774,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:115",{"_index":3765,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:12",{"_index":3790,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:128",{"_index":3772,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:137",{"_index":3775,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:14",{"_index":3787,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:143",{"_index":3753,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:148",{"_index":3761,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:15",{"_index":3785,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:157",{"_index":3769,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:16",{"_index":3792,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:161",{"_index":3759,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:17",{"_index":3788,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:184",{"_index":3771,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:22",{"_index":3780,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:40",{"_index":3777,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:55",{"_index":3782,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:67",{"_index":3784,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:80",{"_index":3757,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:84",{"_index":3763,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:88",{"_index":3767,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/request.service.ts:96",{"_index":3755,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/app/services/role",{"_index":3883,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{},"coverage.html":{}}}],["src/app/services/search",{"_index":4021,"title":{},"body":{"injectables/SearchEngineService.html":{},"coverage.html":{}}}],["src/app/services/selected",{"_index":4033,"title":{},"body":{"injectables/SelectedItemListService.html":{},"coverage.html":{}}}],["src/app/services/set",{"_index":4065,"title":{},"body":{"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"coverage.html":{}}}],["src/app/services/transcript",{"_index":4678,"title":{},"body":{"injectables/TranscriptDisplayService.html":{},"coverage.html":{}}}],["src/app/services/typology.service.ts",{"_index":4704,"title":{},"body":{"injectables/TypologyService.html":{},"coverage.html":{}}}],["src/app/services/typology.service.ts:11",{"_index":4708,"title":{},"body":{"injectables/TypologyService.html":{}}}],["src/app/services/typology.service.ts:14",{"_index":4707,"title":{},"body":{"injectables/TypologyService.html":{}}}],["src/app/slide",{"_index":4825,"title":{},"body":{"coverage.html":{}}}],["src/app/sorting",{"_index":4295,"title":{},"body":{"injectables/SortingDataAccessorService.html":{},"coverage.html":{}}}],["src/app/sortingaccessor.ts",{"_index":4827,"title":{},"body":{"coverage.html":{}}}],["src/app/sparql",{"_index":4486,"title":{},"body":{"interceptors/SparqlInterceptor.html":{},"coverage.html":{}}}],["src/app/unit.pipe.ts",{"_index":4723,"title":{},"body":{"pipes/UnitPipe.html":{},"coverage.html":{}}}],["src/app/unit.pipe.ts:10",{"_index":4725,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["src/app/unit.pipe.ts:14",{"_index":4726,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["src/app/unit.pipe.ts:16",{"_index":4724,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["src/environments/environment.prod.ts",{"_index":4828,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.ts",{"_index":4830,"title":{},"body":{"coverage.html":{}}}],["sroffset",{"_index":3868,"title":{},"body":{"injectables/RequestService.html":{}}}],["sroffset.tostring",{"_index":3870,"title":{},"body":{"injectables/RequestService.html":{}}}],["stampata",{"_index":1908,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["standalone",{"_index":21,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"pipes/BackListIdPipe.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"pipes/UnitPipe.html":{}}}],["start",{"_index":4611,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["started",{"_index":4879,"title":{"index.html":{}},"body":{}}],["starting",{"_index":475,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["startwith",{"_index":1961,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["startwith(initialsearch",{"_index":3673,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["state",{"_index":2777,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["stated",{"_index":4621,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["statement",{"_index":93,"title":{"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"injectables/CreateItemToDisplayService.html":{},"interfaces/Data.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MutatorService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Selection.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["statement.get('itemtype').setvalue(selectedvalues[index",{"_index":3433,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["statement.get('itemtype').value",{"_index":3426,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["statement.get('value').get('itemvalue').value",{"_index":3518,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["statement.get('value.itemvalue",{"_index":3575,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["statement.get('value.literalstring').disable",{"_index":3578,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["statement.get('value.literalstring').enable",{"_index":3581,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["statement.get('value.literalvalue').disable",{"_index":3577,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["statement.get('value.literalvalue').enable",{"_index":3580,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["statement.mainsnak.label",{"_index":1141,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["statement.mainsnak.timeorder",{"_index":2283,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["statement.qualifiers",{"_index":1127,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["statement.qualifiers2",{"_index":1126,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{},"injectables/PropertyDetailsService.html":{}}}],["statement.qualifiers2.filter(q",{"_index":1147,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["statement.qualifiers2.find(q",{"_index":1129,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["statement.qualifiers2.push(qualifier2obj",{"_index":3039,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["statement.qualifiers['p820",{"_index":1145,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["statementcontrollerdisplay(u",{"_index":3216,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["statementgroup",{"_index":3148,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["statementgroup.get('properties",{"_index":3151,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["statementlist",{"_index":34,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["statementname",{"_index":3080,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["statementoptions",{"_index":3548,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["statements",{"_index":910,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"injectables/MutatorService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"coverage.html":{}}}],["statements.at(i).get('properties",{"_index":4541,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["statements.at(i).get('qualifiers",{"_index":4544,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["statements.at(i).get('value.itemtype",{"_index":4539,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["statements.at(i).get('value.itemvalue",{"_index":4540,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["statements.at(i).get('value.literalstring",{"_index":4543,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["statements.at(i).get('value.literalvalue",{"_index":4542,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["statements.length",{"_index":4538,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["statementscontrolsservice",{"_index":3058,"title":{"injectables/StatementsControlsService.html":{}},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"coverage.html":{}}}],["statementsearchcomponent",{"_index":146,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["statementvalues",{"_index":37,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["statementvalues(value",{"_index":62,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["states",{"_index":553,"title":{},"body":{"interfaces/Bank.html":{}}}],["static",{"_index":2892,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["statistics",{"_index":3842,"title":{},"body":{"injectables/RequestService.html":{}}}],["steps",{"_index":1075,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["stockant",{"_index":3076,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["stocker",{"_index":3394,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["stockées",{"_index":3705,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["storage",{"_index":2768,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SetDataService.html":{}}}],["stored",{"_index":4910,"title":{},"body":{"index.html":{}}}],["storici",{"_index":3998,"title":{},"body":{"components/SearchComponent.html":{}}}],["str",{"_index":2082,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/LongestWordService.html":{},"injectables/PropertiesListService.html":{}}}],["str.replace(regex",{"_index":3003,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["str.split",{"_index":2561,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["string",{"_index":45,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"pipes/BackListIdPipe.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"interfaces/Data.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/StringVariable.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{}}}],["string(number(day",{"_index":4266,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["string1",{"_index":1242,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/StringVariable.html":{},"interfaces/Variable.html":{}}}],["string2",{"_index":1243,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/StringVariable.html":{},"interfaces/Variable.html":{}}}],["string3",{"_index":1244,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/StringVariable.html":{},"interfaces/Variable.html":{}}}],["string4",{"_index":1245,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["string5",{"_index":1391,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["strings",{"_index":4150,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["stringtoogle",{"_index":3122,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["stringvariable",{"_index":4551,"title":{"interfaces/StringVariable.html":{}},"body":{"interfaces/StringVariable.html":{},"coverage.html":{}}}],["stringvariables",{"_index":4553,"title":{},"body":{"interfaces/StringVariable.html":{},"coverage.html":{}}}],["structure",{"_index":1113,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["student",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["style",{"_index":2836,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["styles",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["styleurls",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["styling",{"_index":4015,"title":{},"body":{"components/SearchComponent.html":{}}}],["subclasses",{"_index":2366,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{}}}],["subclasseslist",{"_index":1730,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["subclasseslistbuilding",{"_index":2463,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["subclasseslistbuilding(id",{"_index":2475,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["subclasseslistquery",{"_index":2488,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["subclasseslistquery:observable",{"_index":2483,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["subclasseslisttitle",{"_index":2334,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{}}}],["subdivision",{"_index":2438,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/TextDisplayComponent.html":{}}}],["subinfotitle",{"_index":2335,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["subinfotitle:string",{"_index":2381,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["subject",{"_index":2881,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/SetDataService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["subjectoptions",{"_index":1493,"title":{},"body":{"injectables/DataService-1.html":{}}}],["subjectsvalues",{"_index":3084,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["subscribe",{"_index":2602,"title":{},"body":{"components/MapComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["subscribe(augmenteditems",{"_index":3699,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["subscribe(filtereditems",{"_index":3471,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["subscribe(filteredoptions",{"_index":3668,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["subscribe(re",{"_index":2807,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["subscribe(res",{"_index":2496,"title":{},"body":{"injectables/ItemInfoService.html":{},"injectables/TypologyService.html":{}}}],["subscribe(response",{"_index":3826,"title":{},"body":{"injectables/RequestService.html":{}}}],["subscribetostatementchanges(statement",{"_index":3515,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["substring",{"_index":2962,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["substring(0",{"_index":2288,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["subtitle",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/Lang.html":{},"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["subtitle.service.ts",{"_index":4196,"title":{},"body":{"injectables/SetSubtitleService.html":{},"coverage.html":{}}}],["subtitle.service.ts:10",{"_index":4199,"title":{},"body":{"injectables/SetSubtitleService.html":{}}}],["subtitle.service.ts:12",{"_index":4197,"title":{},"body":{"injectables/SetSubtitleService.html":{}}}],["subtitle.service.ts:8",{"_index":4200,"title":{},"body":{"injectables/SetSubtitleService.html":{}}}],["subtitle:string",{"_index":3967,"title":{},"body":{"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["subtitles.service",{"_index":2253,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["subtitles.service.ts",{"_index":1774,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"coverage.html":{}}}],["subtitles.service.ts:10",{"_index":1782,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["subtitles.service.ts:15",{"_index":1779,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["subtitles.service.ts:41",{"_index":1781,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["suche",{"_index":2985,"title":{},"body":{"injectables/PropertiesListService.html":{},"components/SearchComponent.html":{}}}],["suffix",{"_index":2508,"title":{},"body":{"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["suffix1",{"_index":2336,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["suffix2",{"_index":2510,"title":{},"body":{"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["suffix=\".json",{"_index":4711,"title":{},"body":{"injectables/TypologyService.html":{}}}],["suffixes",{"_index":4285,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["suffixes[lang",{"_index":4290,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["super('customdate",{"_index":1168,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["super.transform(value",{"_index":1176,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["superclass",{"_index":4378,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["supposons",{"_index":3721,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["supprimer",{"_index":3106,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["sur",{"_index":3590,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["swedish",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["switchmap",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"interfaces/Lang.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["switchmap(label",{"_index":2797,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["switchmap(options",{"_index":3657,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["switchmap(res",{"_index":4102,"title":{},"body":{"injectables/SetDataService.html":{}}}],["switchmap(search",{"_index":3674,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["switchmap(url",{"_index":2803,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["switzerland",{"_index":540,"title":{},"body":{"interfaces/Bank.html":{}}}],["szervezet",{"_index":1898,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["szociabilitás",{"_index":1860,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["sélection",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["sélectionn",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["sélectionnées",{"_index":3363,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["sélectionnés",{"_index":3711,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["sélections",{"_index":3635,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["séparée",{"_index":993,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["t",{"_index":1001,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["t.label",{"_index":3696,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["tab",{"_index":780,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["table",{"_index":2193,"title":{},"body":{"injectables/IframesDisplayService-1.html":{},"components/ParisSearchComponent.html":{},"coverage.html":{}}}],["tableau",{"_index":590,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"interfaces/Snak.html":{}}}],["tableaux",{"_index":1005,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4831,"title":{},"body":{"coverage.html":{}}}],["tagok",{"_index":1798,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["take",{"_index":1051,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["takeuntil",{"_index":2906,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["takewhile",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"injectables/CreateCompleteItemService.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{}}}],["tap",{"_index":1050,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ListDetailsService.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"pipes/UnitPipe.html":{}}}],["tap((response",{"_index":4506,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["tap(res",{"_index":2796,"title":{},"body":{"components/ParisSearchComponent.html":{},"injectables/SearchEngineService.html":{}}}],["target",{"_index":616,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.activitydetail",{"_index":1683,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.activitydetail.length",{"_index":1686,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.career",{"_index":1664,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.careerandactivities",{"_index":1660,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.careerandactivities.length",{"_index":1662,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.classeslist",{"_index":663,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.documentdetail",{"_index":1691,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.documentdetail.length",{"_index":1694,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.education",{"_index":1672,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.education.length",{"_index":1674,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.eventdetail",{"_index":1687,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.eventdetail.length",{"_index":1690,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.externallinks",{"_index":1701,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.externallinks.length",{"_index":1703,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.headerdetail",{"_index":1651,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.iframes",{"_index":1723,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.iframes.length",{"_index":1725,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist",{"_index":1728,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.classeslist",{"_index":1738,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.classeslist.length",{"_index":1739,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.instanceslist",{"_index":1734,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.instanceslist.length",{"_index":1735,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.natureoflist",{"_index":1740,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.natureoflist.length",{"_index":1741,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.subclasseslist",{"_index":1736,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.subclasseslist.length",{"_index":1737,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.technicalities",{"_index":1742,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.infolist.technicalities.length",{"_index":1743,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.instanceslist",{"_index":657,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.lifeandfamily",{"_index":1657,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.locationandcontext",{"_index":1679,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.locationandcontext.length",{"_index":1682,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.locationandsituation",{"_index":1653,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.locationandsituation.length",{"_index":1656,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.mainlist",{"_index":1708,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.mainlist.length",{"_index":1718,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.mainlist.push(claims.p3",{"_index":1711,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.mainlist.push(claims[key",{"_index":1717,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.maintitle",{"_index":1720,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.natureoflist",{"_index":666,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.otherclaims",{"_index":1704,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.sociability",{"_index":1670,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.sociabilityandculture",{"_index":1666,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.sociabilityandculture.length",{"_index":1668,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.sources",{"_index":1698,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.sourceslist",{"_index":1695,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.sourceslist.length",{"_index":1697,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.subclasseslist",{"_index":660,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.training",{"_index":1676,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.wikis",{"_index":1745,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["target.wikis.length",{"_index":1747,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["targetarray",{"_index":583,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["targetarray.push(item[0].claims[property",{"_index":653,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["tat",{"_index":772,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["technicalities",{"_index":1637,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/TechnicalitiesDisplayService.html":{}}}],["technicalities.push(item[0].claims.p1132",{"_index":4566,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["technicalities.push(item[0].claims.p994",{"_index":4563,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["technicalitiesdisplay",{"_index":1647,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["technicalitiesdisplayservice",{"_index":1636,"title":{"injectables/TechnicalitiesDisplayService.html":{}},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/TechnicalitiesDisplayService.html":{},"coverage.html":{}}}],["technicalitiesnumber",{"_index":2337,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["technologies",{"_index":4890,"title":{},"body":{"index.html":{}}}],["temparr",{"_index":1010,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["temparr.length",{"_index":1014,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["temparr.slice(50",{"_index":1013,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{}}}],["terminus",{"_index":4603,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["terms",{"_index":4561,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["test",{"_index":3262,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{},"index.html":{}}}],["tests",{"_index":4916,"title":{},"body":{"index.html":{}}}],["tevékenység",{"_index":1918,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["tevékenységek",{"_index":1852,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["text",{"_index":148,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/ItemType.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["text/csv",{"_index":3823,"title":{},"body":{"injectables/RequestService.html":{}}}],["text/csv;charset=utf",{"_index":490,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["text1",{"_index":2529,"title":{},"body":{"interfaces/ItemType.html":{}}}],["text2",{"_index":2530,"title":{},"body":{"interfaces/ItemType.html":{}}}],["text3",{"_index":2531,"title":{},"body":{"interfaces/ItemType.html":{}}}],["text4",{"_index":2532,"title":{},"body":{"interfaces/ItemType.html":{}}}],["text5",{"_index":2533,"title":{},"body":{"interfaces/ItemType.html":{}}}],["text:string",{"_index":4575,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["textdisplaycomponent",{"_index":147,"title":{"components/TextDisplayComponent.html":{}},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{}}}],["this._data",{"_index":2908,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this._literalvariables",{"_index":3087,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this._propertieslist",{"_index":3085,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this._qualifierliteralvariables",{"_index":3092,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.additemdetails.addclaimitemdetails(itemsdetails",{"_index":1120,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.additemdetails.addqualifieritemdetails(itemsdetails",{"_index":1121,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.additemdetails.addreference2itemdetails(itemsdetails",{"_index":1114,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.additemdetails.addreferenceitemdetails(itemsdetails",{"_index":1122,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.additemdetails.addsitelinksdetails(re",{"_index":1115,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.addordertoitemvalues([...itemtypes",{"_index":3468,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.addpropertydetails.addclaimpropertydetails(propertiesdetails",{"_index":1116,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.addpropertydetails.addqualifier2propertydetails(propertiesdetails",{"_index":1117,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.addpropertydetails.addqualifierpropertydetails(propertiesdetails",{"_index":1108,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.addpropertydetails.addreference2propertydetails(propertiesdetails",{"_index":1119,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.addpropertydetails.addreferencepropertydetails(propertiesdetails",{"_index":1118,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.advanced_search",{"_index":3973,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.authorheader",{"_index":2034,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.basegeturl",{"_index":4092,"title":{},"body":{"injectables/SetDataService.html":{}}}],["this.bibliohu",{"_index":2032,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.blockdisplay.setactivitydisplay(item",{"_index":1685,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setcareerdisplay(item",{"_index":1661,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setdocumentdisplay(item",{"_index":1693,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.seteducationdisplay(item",{"_index":1673,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.seteventdisplay(item",{"_index":1689,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setexternallinksdisplay(item",{"_index":1702,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setheaderdisplay(item",{"_index":1652,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setiteminfodisplay(item",{"_index":1726,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setorgdisplay(item",{"_index":1681,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setpersondisplay(item",{"_index":1659,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setplacedisplay(item",{"_index":1655,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setsociabilitydisplay(item",{"_index":1667,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.blockdisplay.setsourcesdisplay(item",{"_index":1696,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.cache.get(request.url",{"_index":4503,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["this.cache.set(request.url",{"_index":4509,"title":{},"body":{"interceptors/SparqlInterceptor.html":{}}}],["this.changedetector.detectchanges",{"_index":2814,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.changelist(res))).subscribe(res",{"_index":2978,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["this.circularpermutation(array",{"_index":2674,"title":{},"body":{"injectables/MutatorService.html":{}}}],["this.classeslistbuilding(id",{"_index":2491,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["this.classeslisttitle",{"_index":2390,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.controls.itemvalue(this.statements",{"_index":3220,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.controls.literalstring(qual",{"_index":3243,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.controls.literalstring(this.statements",{"_index":3223,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.controls.literalvalue(qual",{"_index":3242,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.controls.literalvalue(this.statements",{"_index":3221,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.controls.patchqualifiervalue(value",{"_index":3299,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.controls.propertyvalues(this.statements",{"_index":3247,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.controls.qualifierliteralstring(qual",{"_index":3237,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.controls.qualifierliteralvalue(qual",{"_index":3235,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.controls.qualifiers(this.statements",{"_index":3211,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.controls.qualifiervalue(qual",{"_index":3231,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.createcompleteitem.completeitem(res",{"_index":4103,"title":{},"body":{"injectables/SetDataService.html":{}}}],["this.createitem.createitemtodisplay(res",{"_index":1053,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["this.createlist(list).slice(1",{"_index":931,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.createlist(res",{"_index":2799,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.csv.arraytocsv(u",{"_index":2061,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.csv.downloadblob(v",{"_index":2062,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.currentitemtypesarray.splice(i",{"_index":3569,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.currentitemtypesarray[index",{"_index":3616,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.currentitemtypesarray[index].filter(itemtype",{"_index":3619,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.currentstatement.asobservable",{"_index":1437,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.currentstatement.next(i",{"_index":1488,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.data",{"_index":2917,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.data$.asobservable",{"_index":2694,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["this.data$.getvalue().concat(x",{"_index":2713,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["this.data$.next(newdata",{"_index":2714,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["this.data.$propertieslist.subscribe(res",{"_index":3452,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.filter(entity",{"_index":2921,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.data.formeritemtypes$.subscribe(res",{"_index":3196,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.itemtypes$.subscribe(res",{"_index":3367,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.data.itemtypes2$.subscribe(res",{"_index":3186,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.mutator$.pipe(map(re",{"_index":3474,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.data.mutator$.subscribe(re",{"_index":3497,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.data.mutator$.subscribe(res",{"_index":2661,"title":{},"body":{"injectables/MutatorService.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.mutatorfornextstatement$.subscribe(res",{"_index":3190,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.subscribe(res",{"_index":2706,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["this.data.updateformeritemtypes(formeritemtype",{"_index":3189,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.updateformeritemtypes(formeritemtypeslist.slice",{"_index":3197,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.updateitemtypes",{"_index":3261,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.updateitemtypes(formeritemtypeslist[formeritemtypeslist.length",{"_index":3198,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.updateitemtypes(itemtypes",{"_index":3188,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.updatemutator(mutator",{"_index":3192,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.data.updatemutator(newmutator",{"_index":2678,"title":{},"body":{"injectables/MutatorService.html":{}}}],["this.database.databasetodisplay(u",{"_index":2045,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.database.databasetodownload(query",{"_index":2060,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.database.listfromsparql(res",{"_index":2047,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.database.sparqlbuilding(this.mylang",{"_index":2044,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.databasetodownload(query",{"_index":4385,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.datasource",{"_index":2048,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.datasource.data",{"_index":2053,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.datasource.filter",{"_index":2051,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.datasource.filtereddata",{"_index":2067,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.datasource.filtereddata[0].author.label",{"_index":2069,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":2021,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.datasource.paginator=this.paginator",{"_index":2057,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.datasource.sort=this.sort",{"_index":2056,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.datasource.sortingdataaccessor",{"_index":2018,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.datatype",{"_index":3269,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.datatypevalidator",{"_index":3138,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.dateheader",{"_index":2040,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.daysuffix(daynum",{"_index":4278,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["this.details.getreferenceproperties(re",{"_index":1110,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.details.setitemslist(re",{"_index":1095,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.details.setpropertieslist(re",{"_index":1094,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.downloadfile(response",{"_index":3827,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.dropdownoptions.next(itemtypes",{"_index":3400,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.dropdownoptions.next(updateditemvalues",{"_index":3421,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.dropdownoptions.pipe(takeuntil(this._ondestroy)).subscribe((options",{"_index":3428,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.dynamicinfolist",{"_index":3327,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.dynamicinfolist.getvalue",{"_index":3183,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.dynamicinfolist.next(currentdynamicinfolist",{"_index":3185,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.education",{"_index":1761,"title":{},"body":{"components/EducationDisplayComponent.html":{}}}],["this.education?.foreach(p",{"_index":1765,"title":{},"body":{"components/EducationDisplayComponent.html":{}}}],["this.enrichclaims(re",{"_index":1102,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.entityvalues",{"_index":3463,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.entityvalues.filter(entityvalue",{"_index":3499,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.entityvalues]).filter(value",{"_index":3469,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.fb.array([this.qualifier",{"_index":3140,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.fb.array([this.statement",{"_index":3127,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.fb.group",{"_index":3126,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.fields",{"_index":3977,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.filtered",{"_index":2068,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.filtereditemtypes",{"_index":3370,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filtereditemtypes.next",{"_index":3430,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filtereditemtypes.next(options",{"_index":3429,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filtereditemtypes.next(res",{"_index":3369,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filtereditemtypesarray.foreach((filtereditemtypes",{"_index":3604,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemtypesarray.push(new",{"_index":3554,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemtypesarray.splice(i",{"_index":3571,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemtypesarray[index].next",{"_index":3618,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemtypesarray[index].next(this.currentitemtypesarray[index].slice",{"_index":3617,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemtypesarray[this.laststatementindex].next",{"_index":3561,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemvalues",{"_index":3374,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filtereditemvalues.next(filtereditems",{"_index":3472,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filtereditemvalues.next(this.addordertoitemvalues([...itemtypes",{"_index":3462,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filtereditemvalues.next(this.addordertoitemvalues(itemtypes",{"_index":3321,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filtereditemvaluesarray.foreach((filtereditemvalues",{"_index":3610,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemvaluesarray.push(new",{"_index":3556,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemvaluesarray[index",{"_index":3701,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemvaluesarray[index].next(augmenteditems",{"_index":3702,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemvaluesarray[index].next(options",{"_index":3708,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filtereditemvaluesarray[this.laststatementindex].next",{"_index":3562,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredliteralvariables",{"_index":3376,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredliteralvariables.next",{"_index":3482,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredliteralvariables.next(this.literalvariables.slice",{"_index":3090,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredprojectmulti",{"_index":2916,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.filteredprojectmulti.next",{"_index":2920,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.filteredprojectmulti.next(this.data.slice",{"_index":2911,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.filteredpropertymulti",{"_index":3372,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filteredpropertymulti.next",{"_index":3457,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filteredpropertymulti.next(this.propertiestoselect.slice",{"_index":3456,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filteredpropertymultiarray.foreach((filteredproperties",{"_index":3607,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredpropertymultiarray.push(new",{"_index":3557,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredpropertymultiarray[index].next(filteredoptions",{"_index":3669,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredpropertymultiarray[this.laststatementindex].next",{"_index":3563,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifierliteralvariables.next",{"_index":3508,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifierliteralvariables.next(this.qualifierliteralvariables.slice",{"_index":3095,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifierproperties",{"_index":3378,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifierproperties.next",{"_index":3488,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifierproperties.next(this.qualifierpropertiestoselect.slice",{"_index":3487,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifiervalues",{"_index":3380,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifiervalues.next(qualifierentityvalues",{"_index":3501,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifiervalues.next(qualifierentityvalues.filter(value",{"_index":3503,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifiervalues.next(this.entityvalues.filter(value",{"_index":3495,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteredqualifiervalues.next(this.entityvalues.slice",{"_index":3494,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteritem(this.listwithoutduplicate",{"_index":4381,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.filteritemtypes",{"_index":3330,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filteritemtypes(index",{"_index":3606,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteritemtypes(this.laststatementindex",{"_index":3565,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filteritemvalues",{"_index":3334,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filteritemvalues(this.laststatementindex",{"_index":3566,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filterliteralvariables",{"_index":3336,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filterprojectmulti",{"_index":2914,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.filterpropertymulti",{"_index":3332,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.filterpropertymulti(i",{"_index":3584,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filterpropertymulti(this.laststatementindex",{"_index":3567,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filterqualifierliteralvariables",{"_index":3382,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filterqualifierproperties",{"_index":3338,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filterqualifiervalues",{"_index":3340,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.filterresearchfield(this.items",{"_index":2810,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["this.formeritemtypes.asobservable",{"_index":1441,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.formeritemtypes.next(itemtypes",{"_index":1485,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.formervisitstitle",{"_index":2778,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["this.getaliases(item.aliases",{"_index":4178,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["this.getlabelsfromselectedoptions(selectedoptions",{"_index":3682,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.getlangvalue(item.descriptions",{"_index":4177,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["this.getlangvalue(item.labels",{"_index":4175,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["this.getlangvalue(obj",{"_index":4168,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["this.getoriginalitemlabel(itemtype.label",{"_index":3414,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.getoriginalitemlabel(itemvalue.label",{"_index":3403,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.getselectedoptionsuptoindex(index",{"_index":3679,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.geturlsuffix",{"_index":4093,"title":{},"body":{"injectables/SetDataService.html":{}}}],["this.geturlsuffix).pipe",{"_index":3802,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.http.get('https://database.factgrid.de//w/api.php",{"_index":3814,"title":{},"body":{"injectables/RequestService.html":{},"pipes/UnitPipe.html":{}}}],["this.http.get('https://database.factgrid.de//w/api.php?action=parse",{"_index":3831,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.http.get('https://database.factgrid.de//w/api.php?action=query",{"_index":3843,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.http.get('https://database.factgrid.de/w/api.php",{"_index":3871,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.http.get(prefix",{"_index":3859,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.http.get(propertiesurl",{"_index":4057,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["this.http.get(re).pipe(catcherror",{"_index":3816,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.http.get(sparql",{"_index":3819,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.http.get(this.basegeturl",{"_index":3801,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.http.get(url",{"_index":3838,"title":{},"body":{"injectables/RequestService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["this.http.get(valuesurl",{"_index":4055,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["this.iframesdisplay.setiframesdisplay(item",{"_index":1724,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.infolist?.classeslist",{"_index":2410,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.infolist?.instanceslist",{"_index":2408,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.infolist?.natureoflist",{"_index":2412,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.infolist?.subclasseslist",{"_index":2406,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.infolist?.technicalities",{"_index":2414,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.instanceslistbuilding(id",{"_index":2487,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["this.instanceslisttitle",{"_index":2386,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.isaddqualifier",{"_index":3284,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.isaddstatement",{"_index":3285,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.isdisplay",{"_index":2811,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["this.isinfo",{"_index":2425,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.islist",{"_index":4357,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.islist1",{"_index":2426,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.islist2",{"_index":2427,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.islist3",{"_index":2428,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.islist4",{"_index":2429,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.isliteralonqualifier",{"_index":3233,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.isliteralonstatement",{"_index":3219,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.isliteralstringonqualifier",{"_index":3241,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.isliteralstringonstatement",{"_index":3224,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.isqualifier",{"_index":3208,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.isremovequalifier",{"_index":3298,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.isremovestatement",{"_index":3175,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.issearch",{"_index":4358,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.isspinner",{"_index":2042,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.istrans",{"_index":4582,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.iswikibaseitemonqualifier",{"_index":3232,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.iswikibaseitemonstatement",{"_index":3218,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.isworks",{"_index":4356,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.isworks=true",{"_index":4379,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["this.iteminfo.infolistbuilding(res",{"_index":1057,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["this.items",{"_index":2808,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["this.items[0].id",{"_index":2812,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["this.itemsparql.itemsparql(res",{"_index":1058,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["this.itemtypefilterctrl.value",{"_index":3423,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.itemtypefilterctrl.valuechanges",{"_index":3329,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.itemtypes.asobservable",{"_index":1445,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.itemtypes.next(item",{"_index":1482,"title":{},"body":{"injectables/DataService.html":{}}}],["this.itemtypes1.asobservable",{"_index":1448,"title":{},"body":{"injectables/DataService.html":{}}}],["this.itemtypes1.next(item",{"_index":1483,"title":{},"body":{"injectables/DataService.html":{}}}],["this.itemtypes2.asobservable",{"_index":1451,"title":{},"body":{"injectables/DataService.html":{}}}],["this.itemtypes2.next(item",{"_index":1484,"title":{},"body":{"injectables/DataService.html":{}}}],["this.itemvalue",{"_index":82,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["this.itemvaluefilterctrl.value",{"_index":3461,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.itemvaluefilterctrl.value.tolowercase",{"_index":3672,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.itemvaluefilterctrl.valuechanges",{"_index":3333,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.itemvalueslist2(label",{"_index":3465,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.itemvalueslist2(search",{"_index":3675,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.labels",{"_index":2792,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["this.lang.activitytitle",{"_index":4436,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["this.lang.addresstitle",{"_index":4439,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["this.lang.advanced_search",{"_index":3974,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.lang.authorheader",{"_index":2035,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.lang.bibliohu",{"_index":2033,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.lang.buildingtitle",{"_index":4430,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.lang.buildingtitle(this.buildingtitle",{"_index":4482,"title":{},"body":{"components/Sparql4DisplayComponent.html":{}}}],["this.lang.classeslisttitle",{"_index":2391,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.lang.currentaddress",{"_index":4472,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["this.lang.dateheader",{"_index":2041,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.lang.familynametitle",{"_index":4432,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["this.lang.fields",{"_index":3978,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.lang.formervisitstitle",{"_index":2789,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["this.lang.instanceslisttitle",{"_index":2387,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.lang.listtitle",{"_index":4443,"title":{},"body":{"components/Sparql1DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.lang.locationheader",{"_index":2039,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.lang.natureoflisttitle",{"_index":2393,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.lang.organisationtitle",{"_index":4437,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["this.lang.patientstitle",{"_index":4455,"title":{},"body":{"components/Sparql2DisplayComponent.html":{}}}],["this.lang.prefix1",{"_index":2397,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.lang.prefix2",{"_index":2399,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.lang.projects",{"_index":3976,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.lang.pupiltitle",{"_index":4469,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["this.lang.selectedlang",{"_index":1056,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.lang.selectedlang)[0",{"_index":1055,"title":{},"body":{"injectables/CreateCompleteItemService.html":{}}}],["this.lang.settitle",{"_index":4471,"title":{},"body":{"components/Sparql3DisplayComponent.html":{}}}],["this.lang.subclasseslisttitle",{"_index":2389,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["this.lang.subinfotitle",{"_index":2395,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.lang.subtitle",{"_index":3972,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.lang.suffix1",{"_index":2401,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.lang.titleheader",{"_index":2037,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.lang.worktitle",{"_index":4441,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["this.langservice",{"_index":2515,"title":{},"body":{"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["this.langservice.selectedlang",{"_index":534,"title":{},"body":{"injectables/BackListService.html":{}}}],["this.laststatementindex",{"_index":3368,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.lat",{"_index":2607,"title":{},"body":{"components/MapComponent.html":{}}}],["this.length",{"_index":2072,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.lessthanfifty(items",{"_index":949,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.lessthanfifty(properties",{"_index":923,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.lessthanfifty(this.uniq(items",{"_index":1580,"title":{},"body":{"injectables/DetailsService.html":{}}}],["this.list",{"_index":4380,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.list.length",{"_index":4397,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.list1",{"_index":2405,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list1.length",{"_index":2416,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list1number",{"_index":2415,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list2",{"_index":2407,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list2.length",{"_index":2418,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list2number",{"_index":2417,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list3",{"_index":2409,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list3.length",{"_index":2420,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list3number",{"_index":2419,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list4",{"_index":2411,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list4.length",{"_index":2422,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list4number",{"_index":2421,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.list=this.listwithoutduplicate",{"_index":4371,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["this.list[0",{"_index":4433,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["this.list[0].activity",{"_index":4434,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["this.listfromsparql(res",{"_index":2514,"title":{},"body":{"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["this.listwithoutduplicate",{"_index":4367,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.literalcontrollerdisplay(label",{"_index":3287,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.literalfilterctrl.value",{"_index":3481,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.literalfilterctrl.valuechanges",{"_index":3335,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.literalvariables",{"_index":3089,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.literalvariables.filter(variable",{"_index":3483,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.lng",{"_index":2609,"title":{},"body":{"components/MapComponent.html":{}}}],["this.lng]).addto(map",{"_index":2621,"title":{},"body":{"components/MapComponent.html":{}}}],["this.locationheader",{"_index":2038,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.longestlength.findlongestword(re.label",{"_index":2260,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["this.matref.options.foreach((data",{"_index":3308,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.mergeobjects(res",{"_index":933,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.months[lang]?.[monthidx",{"_index":4281,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["this.months[lang][monthidx",{"_index":4282,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["this.mutator.asobservable",{"_index":1455,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.mutator.next(mutator",{"_index":1474,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.mutatorforitemvalue.asobservable",{"_index":1511,"title":{},"body":{"injectables/DataService-1.html":{}}}],["this.mutatorforitemvalue.next(mutator",{"_index":1475,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.mutatorfornextstatement.asobservable",{"_index":1460,"title":{},"body":{"injectables/DataService.html":{}}}],["this.mutatorfornextstatement.next(mutator",{"_index":1476,"title":{},"body":{"injectables/DataService.html":{}}}],["this.mylang",{"_index":2043,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.natureoflistbuilding(id",{"_index":2493,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["this.natureoflisttitle",{"_index":2392,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.newoptions.asobservable",{"_index":1521,"title":{},"body":{"injectables/DataService-1.html":{}}}],["this.newoptions.next(item",{"_index":1536,"title":{},"body":{"injectables/DataService-1.html":{}}}],["this.newsparqladdress(address",{"_index":2972,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["this.newsparqladdress(prefix",{"_index":2940,"title":{},"body":{"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["this.newsparqladdress(prefix+id+this.langservice",{"_index":2520,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["this.newsparqladdress(prefix+id+this.langservice+suffix",{"_index":2517,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["this.newsparqladdress(prefix+id+this.langservice+suffix+suffix2",{"_index":2512,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["this.newsparqladress(sparql",{"_index":2165,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["this.newsparqladress(sparql);//handle",{"_index":4108,"title":{},"body":{"injectables/SetDataService.html":{}}}],["this.newsparqladress(sparql,this.selectedlang",{"_index":2166,"title":{},"body":{"injectables/HuDatabaseService.html":{}}}],["this.objectoptions.asobservable",{"_index":1524,"title":{},"body":{"injectables/DataService-1.html":{}}}],["this.objectoptions.next(item",{"_index":1535,"title":{},"body":{"injectables/DataService-1.html":{}}}],["this.pageevent",{"_index":2071,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.pageindex",{"_index":2076,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.pages",{"_index":3982,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.pages.subscribe(res",{"_index":3985,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.pagesize",{"_index":2074,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.pagesizeoptions",{"_index":2080,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.placeholderforliteralstring",{"_index":3229,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.placeholderforliteralvalue",{"_index":3227,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.populatedisplay(item",{"_index":654,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["this.prefix1",{"_index":2396,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.prefix2",{"_index":2398,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.previousitemtypes[index",{"_index":3516,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.previousitemvalues[index",{"_index":3517,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.projectlist",{"_index":76,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["this.projectmultifilterctrl.value",{"_index":2918,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.projectmultifilterctrl.valuechanges",{"_index":2912,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.projects",{"_index":3975,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.projectstatement",{"_index":84,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["this.propertieslist.asobservable",{"_index":1463,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.propertieslist.next(list",{"_index":1487,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["this.propertiestoselect",{"_index":3453,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.propertiestoselect.filter(entity",{"_index":3458,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.propertiesvalues.splice(i",{"_index":3199,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.propertydatatype.emit([i",{"_index":3272,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.propertylist.propertieslistbuilding(event.value[3",{"_index":3582,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.propertylist.qualifierpropertieslistbuilding.subscribe(res",{"_index":3323,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.propertytmultifilterctrl.value",{"_index":3455,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.propertytmultifilterctrl.valuechanges",{"_index":3331,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifiercontrollerdisplay(datatype",{"_index":3293,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.qualifierliteralfilterctrl.value",{"_index":3506,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifierliteralfilterctrl.valuechanges",{"_index":3341,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifierliteralvariables",{"_index":3094,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifierliteralvariables.filter(variable",{"_index":3509,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifierpropertiestoselect",{"_index":3324,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifierpropertiestoselect.filter(entity",{"_index":3489,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifierpropertydatatype.emit([i",{"_index":3292,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.qualifierpropertyfilterctrl.value",{"_index":3486,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifierpropertyfilterctrl.valuechanges",{"_index":3337,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifiers(i).controls.length",{"_index":3205,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifiers(i).pristine",{"_index":3206,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifiers(i).push(this.qualifier",{"_index":3209,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifiers(i).removeat(j",{"_index":3215,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifiers(i).removeat(m",{"_index":3207,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifiervalue",{"_index":3143,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifiervalue(qualifiers",{"_index":4549,"title":{},"body":{"injectables/StatementsControlsService.html":{}}}],["this.qualifiervaluefilterctrl.value",{"_index":3491,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.qualifiervaluefilterctrl.valuechanges",{"_index":3339,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.query",{"_index":4355,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.query.controls['statements",{"_index":3132,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.query.get('statements",{"_index":3128,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.query.get('statements').valuechanges",{"_index":3343,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.reorderqualifiersorder(claim[\"qualifiers",{"_index":4101,"title":{},"body":{"injectables/SetDataService.html":{}}}],["this.request.downloadlist(selectedsparql",{"_index":4109,"title":{},"body":{"injectables/SetDataService.html":{}}}],["this.request.getask(selectedsparql",{"_index":4104,"title":{},"body":{"injectables/SetDataService.html":{}}}],["this.request.getitem(re",{"_index":4713,"title":{},"body":{"injectables/TypologyService.html":{}}}],["this.request.getitem(url",{"_index":2804,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.request.getitem(url).pipe",{"_index":4094,"title":{},"body":{"injectables/SetDataService.html":{}}}],["this.request.getlist(selectedsparql",{"_index":2170,"title":{},"body":{"injectables/HuDatabaseService.html":{},"injectables/SetDataService.html":{}}}],["this.request.getlist(sparql).pipe",{"_index":2545,"title":{},"body":{"injectables/ListDetailsService.html":{}}}],["this.request.getlist(u).pipe(map(res",{"_index":2513,"title":{},"body":{"injectables/ItemInfoService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{}}}],["this.request.getstat",{"_index":3970,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.request.getstat().pipe(map(res",{"_index":3983,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.request.searchitem(label",{"_index":2798,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.request.subscribe(res",{"_index":4688,"title":{},"body":{"injectables/TranscriptDisplayService.html":{}}}],["this.requestservice.getbacklist(item",{"_index":535,"title":{},"body":{"injectables/BackListService.html":{}}}],["this.requestservice.requestitems(...itemslists",{"_index":1583,"title":{},"body":{"injectables/DetailsService.html":{}}}],["this.requestservice.requestproperties(...propertieslists",{"_index":1575,"title":{},"body":{"injectables/DetailsService.html":{}}}],["this.researchfields.filter(f",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["this.researchfields.find(f",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["this.resetpreviousitemvalues(index",{"_index":3703,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.route.params",{"_index":2601,"title":{},"body":{"components/MapComponent.html":{}}}],["this.router.navigate(['/harmonia_universalis",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["this.router.navigate(['/item",{"_index":2776,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["this.router.navigate(['/paris",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(value",{"_index":3931,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.searchinput.valuechanges",{"_index":2793,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["this.selecteditemslist",{"_index":3979,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.selecteditemslist.filter(function",{"_index":3980,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.selecteditemtype.emit(event.value",{"_index":3248,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.selectedlang",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/TextDisplayComponent.html":{}}}],["this.selectedparisitemslist",{"_index":2791,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["this.selectedqualifiervalue.emit(event.value",{"_index":3301,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.selectedqualifiervalue.emit(u",{"_index":3297,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.selectedresearchfield",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["this.selectedvalue.emit(event.value",{"_index":3282,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.selectionchange.emit(new",{"_index":2923,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.setcurrentitemtypes(index",{"_index":3614,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setcurrentitemtypes(this.laststatementindex",{"_index":3564,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setdate.setdate(value",{"_index":2282,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["this.setinitialitemtypevalue",{"_index":3355,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setinitialitemvalue",{"_index":3603,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setinitialliteralvariable",{"_index":3358,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setinitialpropertyvalue",{"_index":3356,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setinitialqualifierliteralvariable",{"_index":3361,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setinitialqualifierpropertyvalue",{"_index":3359,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setinitialqualifiervaluevalue",{"_index":3360,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setinitialvalue",{"_index":2915,"title":{},"body":{"components/ProjectSelectComponent.html":{}}}],["this.setinitialvaluevalue",{"_index":3357,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.setlanguage.item(re",{"_index":2809,"title":{},"body":{"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"components/SearchComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setlanguage.item(res",{"_index":1054,"title":{},"body":{"injectables/CreateCompleteItemService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.setlanguage.item2(res.items",{"_index":1099,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.setlanguage.item2(res.properties",{"_index":1098,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.setqualifieritems(claimsarray",{"_index":942,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.setreferenceitems(claimsarray",{"_index":945,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.setseparator(this.entityvalues",{"_index":3467,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.seturl(item",{"_index":691,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["this.seturldisplay(item",{"_index":669,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["this.showreferences",{"_index":775,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["this.sourceslist",{"_index":4319,"title":{},"body":{"components/SourcesDisplayComponent.html":{}}}],["this.sparqldata()[0",{"_index":4466,"title":{},"body":{"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.sparqldata[0",{"_index":4361,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{}}}],["this.sparqlsubject",{"_index":4375,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.stat",{"_index":3986,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.statementcontrollerdisplay(this.datatype",{"_index":3271,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.statementlist",{"_index":79,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["this.statementoptions.push(new",{"_index":3558,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statementoptions[0",{"_index":3594,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statementoptions[index",{"_index":3697,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statementoptions[index].next(augmenteditems",{"_index":3713,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statementoptions[index].next(uniqueitems",{"_index":3698,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statementoptions[index].subscribe(options",{"_index":3707,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statements.at(i",{"_index":3573,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statements.at(i).get('itemtype').setvalue(event.value",{"_index":3251,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statements.at(i).get('itemtype').value",{"_index":3256,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statements.at(i).get('qualifiers",{"_index":3134,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statements.at(index",{"_index":3149,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statements.controls.foreach((statement",{"_index":3315,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.statements.controls.map(statement",{"_index":3425,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.statements.length",{"_index":3136,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statements.push(this.statement",{"_index":3174,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statements.removeat(i",{"_index":3194,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.statementvalues(this.projectlist",{"_index":85,"title":{},"body":{"components/AdvancedSearchListComponent.html":{}}}],["this.subclasseslistbuilding(id",{"_index":2489,"title":{},"body":{"injectables/ItemInfoService.html":{}}}],["this.subclasseslisttitle",{"_index":2388,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.subinfotitle",{"_index":2394,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.subjectoptions.asobservable",{"_index":1528,"title":{},"body":{"injectables/DataService-1.html":{}}}],["this.subjectoptions.next(item",{"_index":1534,"title":{},"body":{"injectables/DataService-1.html":{}}}],["this.subscribetostatementchanges(statement",{"_index":3316,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.subtitle",{"_index":3971,"title":{},"body":{"components/SearchComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["this.suffix1",{"_index":2400,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.technicalities",{"_index":2413,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.technicalities.length",{"_index":2424,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.technicalitiesdisplay.settechnicalitiesdisplay(item",{"_index":1727,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.technicalitiesnumber",{"_index":2423,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["this.text",{"_index":4585,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.titleheader",{"_index":2036,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["this.transcription",{"_index":4578,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.transformclaimswithp820(re",{"_index":1105,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["this.transformlistfromsparql(res",{"_index":2974,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["this.translateservice.currentlang",{"_index":1179,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["this.transpose(mutator",{"_index":2659,"title":{},"body":{"injectables/MutatorService.html":{}}}],["this.transpose(transposemutator",{"_index":2677,"title":{},"body":{"injectables/MutatorService.html":{}}}],["this.uniq([...items",{"_index":947,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.uniq([...properties",{"_index":921,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.uniq(properties.concat(this.uniq(qualifierproperties)).concat(this.uniq(referenceproperties",{"_index":1569,"title":{},"body":{"injectables/DetailsService.html":{}}}],["this.uniq(qualifierproperties",{"_index":920,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.uniq(referenceproperties",{"_index":907,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["this.updatedropdownoptions",{"_index":3328,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["this.url",{"_index":4760,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["this.value",{"_index":3139,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["this.wikidisplay.setwikidisplay(item",{"_index":1746,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["this.zoom",{"_index":2611,"title":{},"body":{"components/MapComponent.html":{}}}],["throwerror",{"_index":880,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["time",{"_index":784,"title":{},"body":{"components/CareerDisplayComponent.html":{},"interfaces/Data.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"components/MainDisplayComponent.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"injectables/SetTimeService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/TimeProperty.html":{},"interfaces/Variable.html":{}}}],["time.charat(0",{"_index":4268,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["time.service",{"_index":2252,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["time.service.ts",{"_index":4204,"title":{},"body":{"injectables/SetTimeService.html":{},"coverage.html":{}}}],["time.service.ts:10",{"_index":4264,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["time.service.ts:18",{"_index":4209,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["time.service.ts:25",{"_index":4212,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["time.service.ts:6",{"_index":4207,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["time.substring(1",{"_index":4269,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["timeorder",{"_index":2228,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["timeproperties",{"_index":4593,"title":{},"body":{"interfaces/TimeProperty.html":{},"coverage.html":{}}}],["timeproperty",{"_index":4590,"title":{"interfaces/TimeProperty.html":{}},"body":{"interfaces/TimeProperty.html":{},"coverage.html":{}}}],["timepropsorder",{"_index":4110,"title":{},"body":{"injectables/SetDataService.html":{}}}],["timevariable",{"_index":4669,"title":{"interfaces/TimeVariable.html":{}},"body":{"interfaces/TimeVariable.html":{},"coverage.html":{}}}],["timevariables",{"_index":4670,"title":{},"body":{"interfaces/TimeVariable.html":{},"coverage.html":{}}}],["title",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ItemInfoComponent.html":{},"interfaces/Lang.html":{},"components/SearchComponent.html":{},"components/TextDisplayComponent.html":{}}}],["titleheader",{"_index":2089,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["titleheader:string",{"_index":2000,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["to1",{"_index":4674,"title":{},"body":{"interfaces/TimeVariable.html":{}}}],["to2",{"_index":4675,"title":{},"body":{"interfaces/TimeVariable.html":{}}}],["to3",{"_index":4676,"title":{},"body":{"interfaces/TimeVariable.html":{}}}],["todo",{"_index":1783,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{},"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["toggle",{"_index":1975,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["togglereferences",{"_index":761,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["tool",{"_index":4883,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["top:40px",{"_index":2835,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["tosignal",{"_index":1468,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["toujours",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["további",{"_index":1806,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["toy",{"_index":2700,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["track",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["trackbyid",{"_index":2726,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["trackbyid(index",{"_index":2735,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["trackbyid(selecteditem",{"_index":2820,"title":{},"body":{"components/ParisSearchComponent.html":{}}}],["training",{"_index":1754,"title":{},"body":{"components/EducationDisplayComponent.html":{}}}],["traiter",{"_index":3020,"title":{},"body":{"injectables/PropertyDetailsService.html":{}}}],["trans",{"_index":4571,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["transcripción",{"_index":4580,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["transcript",{"_index":4679,"title":{},"body":{"injectables/TranscriptDisplayService.html":{}}}],["transcript(u",{"_index":4680,"title":{},"body":{"injectables/TranscriptDisplayService.html":{}}}],["transcriptdisplayservice",{"_index":4677,"title":{"injectables/TranscriptDisplayService.html":{}},"body":{"injectables/TranscriptDisplayService.html":{},"coverage.html":{}}}],["transcription",{"_index":4570,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["transcription:string",{"_index":4576,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["transcriptionservice",{"_index":4689,"title":{"injectables/TranscriptionService.html":{}},"body":{"injectables/TranscriptionService.html":{},"coverage.html":{}}}],["transform",{"_index":508,"title":{},"body":{"pipes/BackListIdPipe.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"pipes/CustomDatePipe.html":{},"pipes/JoinPipe.html":{},"pipes/SafeHtmlPipe.html":{},"pipes/UnitPipe.html":{}}}],["transform(id",{"_index":509,"title":{},"body":{"pipes/BackListIdPipe.html":{}}}],["transform(input",{"_index":1021,"title":{},"body":{"pipes/CommaJoinPipe.html":{},"pipes/JoinPipe.html":{}}}],["transform(value",{"_index":869,"title":{},"body":{"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CustomDatePipe.html":{},"pipes/SafeHtmlPipe.html":{},"pipes/UnitPipe.html":{}}}],["transformation",{"_index":1104,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["transformclaimswithp820",{"_index":1064,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["transformclaimswithp820(item",{"_index":1077,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["transformlistfromsparql",{"_index":2950,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["transformlistfromsparql(res",{"_index":2964,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["transkription",{"_index":4579,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["translate/core",{"_index":1158,"title":{},"body":{"pipes/CustomDatePipe.html":{},"dependencies.html":{}}}],["translate/http",{"_index":4846,"title":{},"body":{"dependencies.html":{}}}],["translateservice",{"_index":1156,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["translateservice:translateservice",{"_index":1166,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["transpose",{"_index":2644,"title":{},"body":{"injectables/MutatorService.html":{}}}],["transpose(arr",{"_index":2652,"title":{},"body":{"injectables/MutatorService.html":{}}}],["transposemutator",{"_index":2658,"title":{},"body":{"injectables/MutatorService.html":{}}}],["transposemutator[selectedcol",{"_index":2671,"title":{},"body":{"injectables/MutatorService.html":{}}}],["tre",{"_index":3640,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["tri",{"_index":2225,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["trier",{"_index":3650,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["trouv",{"_index":2298,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["troy",{"_index":2701,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["true",{"_index":22,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"pipes/BackListIdPipe.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"pipes/CommaJoinPipe.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"components/TextDisplayComponent.html":{},"pipes/UnitPipe.html":{}}}],["tslib",{"_index":4872,"title":{},"body":{"dependencies.html":{}}}],["txt",{"_index":4682,"title":{},"body":{"injectables/TranscriptDisplayService.html":{}}}],["typage",{"_index":881,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListDetailsService.html":{},"pipes/BackListIdPipe.html":{},"injectables/BackListService.html":{},"interfaces/Bank.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/ItemType.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/QuantityVariable.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"interfaces/StringVariable.html":{},"components/TextDisplayComponent.html":{},"interfaces/TimeProperty.html":{},"interfaces/TimeVariable.html":{},"pipes/UnitPipe.html":{},"interfaces/Variable.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{}}}],["type2.ts",{"_index":2523,"title":{},"body":{"interfaces/ItemType.html":{},"coverage.html":{}}}],["type:\"quantity",{"_index":1232,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["typeof",{"_index":3524,"title":{},"body":{"interfaces/Qualifier.html":{},"injectables/SortingDataAccessorService.html":{},"interfaces/Statement-1.html":{}}}],["types",{"_index":1181,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["types/file",{"_index":4849,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4874,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typeselectionchange",{"_index":3312,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["typology",{"_index":2201,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["typology.service",{"_index":2255,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["typologyservice",{"_index":2254,"title":{"injectables/TypologyService.html":{}},"body":{"injectables/ItemDetailsService.html":{},"injectables/TypologyService.html":{},"coverage.html":{}}}],["tête",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["u",{"_index":86,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/MutatorService.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RoleOfObjectRenderingService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetSelectedItemsListService.html":{},"interfaces/Snak.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{},"injectables/TypologyService.html":{}}}],["u$.pipe(map(res",{"_index":1480,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["u.mainsnak.datavalue.value.id",{"_index":1576,"title":{},"body":{"injectables/DetailsService.html":{}}}],["u.qualifiers",{"_index":1593,"title":{},"body":{"injectables/DetailsService.html":{}}}],["u.qualifiers[prop",{"_index":1594,"title":{},"body":{"injectables/DetailsService.html":{}}}],["u.qualifiers[prop].foreach((qualifier",{"_index":1595,"title":{},"body":{"injectables/DetailsService.html":{}}}],["u.references",{"_index":1564,"title":{},"body":{"injectables/DetailsService.html":{}}}],["u.references.foreach((ref",{"_index":1565,"title":{},"body":{"injectables/DetailsService.html":{}}}],["u.replace(\"https://database.factgrid.de/wiki",{"_index":4683,"title":{},"body":{"injectables/TranscriptDisplayService.html":{}}}],["u.subscribe(res",{"_index":4721,"title":{},"body":{"injectables/TypologyService.html":{}}}],["u1",{"_index":3858,"title":{},"body":{"injectables/RequestService.html":{}}}],["u2",{"_index":3860,"title":{},"body":{"injectables/RequestService.html":{},"injectables/TranscriptionService.html":{}}}],["u2=u.replace(regex2",{"_index":4696,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["u2=u2.replace(regex",{"_index":4697,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["u2=u2.replace(regex1",{"_index":4699,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["u2=u2.replaceall",{"_index":4702,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["u2=u2.replaceall(\"modifier",{"_index":4701,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["u2=u2.replaceall(\"span>edit",{"_index":4700,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["u:any",{"_index":3904,"title":{},"body":{"injectables/RoleOfObjectRenderingService.html":{}}}],["un",{"_index":589,"title":{},"body":{"injectables/BlockDisplayService.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemInfoService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"interfaces/Snak.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["una",{"_index":3993,"title":{},"body":{"components/SearchComponent.html":{}}}],["und",{"_index":1824,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["undefined",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockDisplayService.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"pipes/CustomDatePipe.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"components/ParisSearchComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"interfaces/Snak.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{}}}],["undefined){value",{"_index":871,"title":{},"body":{"pipes/ChangeUndefinedItemPipe.html":{}}}],["une",{"_index":989,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"components/SearchComponent.html":{},"interfaces/Snak.html":{},"interfaces/Statement-2.html":{}}}],["unidad",{"_index":4729,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["uniq",{"_index":1548,"title":{},"body":{"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["uniq(a",{"_index":1000,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Snak.html":{}}}],["uniq(arr",{"_index":1558,"title":{},"body":{"injectables/DetailsService.html":{}}}],["unique",{"_index":894,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/DisplayFlags.html":{},"interfaces/Entity.html":{},"injectables/ItemDisplayDispatcherService.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["uniqueitems",{"_index":3692,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["uniquelabels.sort((a",{"_index":3654,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["unit",{"_index":829,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"pipes/UnitPipe.html":{},"index.html":{}}}],["unit.pipe",{"_index":771,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["unit:any",{"_index":4727,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["united",{"_index":552,"title":{},"body":{"interfaces/Bank.html":{}}}],["unitpipe",{"_index":756,"title":{"pipes/UnitPipe.html":{}},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"pipes/UnitPipe.html":{},"coverage.html":{}}}],["universalis",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"interfaces/Lang.html":{},"components/SearchComponent.html":{}}}],["universalis'},{'name",{"_index":115,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"components/TextDisplayComponent.html":{}}}],["universalis.component').then(mod",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["universalis.component.html",{"_index":1983,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.scss",{"_index":1984,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts",{"_index":1939,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"coverage.html":{}}}],["universalis.component.ts:117",{"_index":2127,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:120",{"_index":2124,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:122",{"_index":2098,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:145",{"_index":2097,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:152",{"_index":2099,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:159",{"_index":2095,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:166",{"_index":2096,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:173",{"_index":2100,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:60",{"_index":2106,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:61",{"_index":2101,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:62",{"_index":2105,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:63",{"_index":2115,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:69",{"_index":2111,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:71",{"_index":2107,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:72",{"_index":2108,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:74",{"_index":2112,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:76",{"_index":2104,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:78",{"_index":2102,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:79",{"_index":2128,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:80",{"_index":2117,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:81",{"_index":2109,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:83",{"_index":2103,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:85",{"_index":2116,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:86",{"_index":2120,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:87",{"_index":2119,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:88",{"_index":2121,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:89",{"_index":2113,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:90",{"_index":2126,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:91",{"_index":2125,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:92",{"_index":2110,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:94",{"_index":2118,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:96",{"_index":2114,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis.component.ts:99",{"_index":2094,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["universalis/harmonia",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"coverage.html":{}}}],["universalis/services/hu",{"_index":2138,"title":{},"body":{"injectables/HuDatabaseService.html":{},"coverage.html":{}}}],["unknown",{"_index":2294,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["unnecessary",{"_index":1144,"title":{},"body":{"injectables/CreateItemToDisplayService.html":{}}}],["unselecteditemtypes",{"_index":3124,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["up",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{},"coverage.html":{}}}],["update",{"_index":3276,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["updatecurrentstatement",{"_index":1404,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updatecurrentstatement(i",{"_index":1416,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updateditemtypes",{"_index":3408,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["updateditemtypes.map(item",{"_index":3419,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["updateditemvalues",{"_index":3401,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["updatedropdownoptions",{"_index":3399,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["updateformeritemtypes",{"_index":1405,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updateformeritemtypes(itemtypes",{"_index":1418,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updateitemtypes",{"_index":1406,"title":{},"body":{"injectables/DataService.html":{}}}],["updateitemtypes(item",{"_index":1420,"title":{},"body":{"injectables/DataService.html":{}}}],["updateitemtypes1",{"_index":1407,"title":{},"body":{"injectables/DataService.html":{}}}],["updateitemtypes1(item",{"_index":1422,"title":{},"body":{"injectables/DataService.html":{}}}],["updateitemtypes2",{"_index":1408,"title":{},"body":{"injectables/DataService.html":{}}}],["updateitemtypes2(item",{"_index":1424,"title":{},"body":{"injectables/DataService.html":{}}}],["updatemutator",{"_index":1409,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updatemutator(mutator",{"_index":1426,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updatemutator(mutator:variable",{"_index":1533,"title":{},"body":{"injectables/DataService-1.html":{}}}],["updatemutatorforitemvalue",{"_index":1410,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updatemutatorforitemvalue(mutator",{"_index":1428,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updatemutatorfornextstatement",{"_index":1411,"title":{},"body":{"injectables/DataService.html":{}}}],["updatemutatorfornextstatement(mutator",{"_index":1430,"title":{},"body":{"injectables/DataService.html":{}}}],["updatenewoptions",{"_index":1494,"title":{},"body":{"injectables/DataService-1.html":{}}}],["updatenewoptions(item",{"_index":1503,"title":{},"body":{"injectables/DataService-1.html":{}}}],["updateobjectoptions",{"_index":1495,"title":{},"body":{"injectables/DataService-1.html":{}}}],["updateobjectoptions(item",{"_index":1505,"title":{},"body":{"injectables/DataService-1.html":{}}}],["updatepropertieslist",{"_index":1412,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updatepropertieslist(list",{"_index":1432,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataService-1.html":{}}}],["updatesujectoptions",{"_index":1496,"title":{},"body":{"injectables/DataService-1.html":{}}}],["updatesujectoptions(item",{"_index":1508,"title":{},"body":{"injectables/DataService-1.html":{}}}],["url",{"_index":480,"title":{},"body":{"injectables/ArrayToCsvService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/ParisSearchComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SetDataService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/WikiDisplayService.html":{}}}],["url.createobjecturl(blob",{"_index":481,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["use",{"_index":1163,"title":{},"body":{"pipes/CustomDatePipe.html":{},"index.html":{}}}],["used",{"_index":4891,"title":{},"body":{"index.html":{}}}],["useless",{"_index":3583,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["user",{"_index":4885,"title":{},"body":{"index.html":{}}}],["utiles",{"_index":1751,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["utilisation",{"_index":2402,"title":{},"body":{"components/ItemInfoComponent.html":{}}}],["utiliser",{"_index":3351,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["utilitaire",{"_index":3435,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["utility",{"_index":4149,"title":{},"body":{"injectables/SetLanguageService.html":{}}}],["v",{"_index":89,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"injectables/ArrayToCsvService.html":{},"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"interfaces/Qualifier.html":{},"injectables/SetTimeService.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TranscriptionService.html":{}}}],["v$]).pipe(map(res",{"_index":2050,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["v.replaceall",{"_index":465,"title":{},"body":{"injectables/ArrayToCsvService.html":{}}}],["v=this.request.gettranscript(v",{"_index":4685,"title":{},"body":{"injectables/TranscriptDisplayService.html":{}}}],["v=u2.replaceall",{"_index":4703,"title":{},"body":{"injectables/TranscriptionService.html":{}}}],["v=v.replace(\"#transcript",{"_index":4684,"title":{},"body":{"injectables/TranscriptDisplayService.html":{}}}],["v])).values()].reverse",{"_index":4370,"title":{},"body":{"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{}}}],["val",{"_index":902,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetItemToDisplayService.html":{},"interfaces/Snak.html":{}}}],["val.aliases",{"_index":2271,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["val.description",{"_index":2269,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["val.flatmap(claim",{"_index":918,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["val.foreach((u",{"_index":1563,"title":{},"body":{"injectables/DetailsService.html":{}}}],["val.id",{"_index":2264,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["val.label",{"_index":2267,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["val.map(claim",{"_index":915,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["val[2",{"_index":3511,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["val[3",{"_index":3727,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["valeur",{"_index":3253,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["valeurs",{"_index":3317,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["validateitemvalues(control",{"_index":3542,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["validators",{"_index":2904,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{}}}],["validators.required",{"_index":3137,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["valides",{"_index":965,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["validobjects",{"_index":969,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["validobjects.length",{"_index":974,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["validobjects.slice(1",{"_index":976,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["validobjects[0].entities",{"_index":975,"title":{},"body":{"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Reference.html":{},"interfaces/Snak.html":{}}}],["value",{"_index":47,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BackListService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"pipes/ChangeUndefinedItemPipe.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"pipes/CommaJoinPipe.html":{},"injectables/CreateCompleteItemService.html":{},"injectables/CreateItemToDisplayService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"injectables/FactgridSubtitlesService.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/HuDatabaseService.html":{},"injectables/ItemDetailsService.html":{},"injectables/ItemDisplayDispatcherService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"pipes/JoinPipe.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/MutatorService.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"injectables/ProjectsListService.html":{},"injectables/PropertiesListService.html":{},"injectables/PropertyDetailsService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/RequestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetItemToDisplayService.html":{},"injectables/SetLanguageService.html":{},"injectables/SetSelectedItemsListService.html":{},"injectables/SetSubtitleService.html":{},"injectables/SetTimeService.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"injectables/SortingDataAccessorService.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interceptors/SparqlInterceptor.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/StatementsControlsService.html":{},"components/TextDisplayComponent.html":{},"injectables/TranscriptDisplayService.html":{},"injectables/TypologyService.html":{},"pipes/UnitPipe.html":{},"injectables/WikiDisplayService.html":{}}}],["value.charat(0",{"_index":2285,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["value.label.tolowercase().includes(search",{"_index":3470,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["value.label.tolowercase().indexof(search",{"_index":3496,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["value.length",{"_index":2281,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["value.slice(0",{"_index":723,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["value.slice(2",{"_index":726,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["value.slice(5",{"_index":729,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["value.slice(7",{"_index":731,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["value.slice(value.length",{"_index":1169,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["value.substring(0",{"_index":2280,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["value.substring(1",{"_index":1175,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["value.touppercase",{"_index":4311,"title":{},"body":{"injectables/SortingDataAccessorService.html":{}}}],["value:string",{"_index":1982,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["value=value.replace('https://database.factgrid.de/entity",{"_index":4731,"title":{},"body":{"pipes/UnitPipe.html":{}}}],["values",{"_index":87,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"interfaces/Data.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"interfaces/Entity.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Reference.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"interfaces/Selection.html":{},"injectables/SetItemToDisplayService.html":{},"interfaces/Snak.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["values%20%3fproperties%20%7b%20wd%3a",{"_index":2969,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["values.foreach(val",{"_index":1562,"title":{},"body":{"injectables/DetailsService.html":{}}}],["values.reduce((result",{"_index":1591,"title":{},"body":{"injectables/DetailsService.html":{}}}],["valuesearchinput",{"_index":3158,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["valuesurl",{"_index":4040,"title":{},"body":{"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["valuevaluechanges",{"_index":3346,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["var",{"_index":98,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/FooterComponent.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"injectables/LongestWordService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"components/SearchComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"components/TextDisplayComponent.html":{}}}],["variable",{"_index":1184,"title":{"interfaces/Variable.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"injectables/MutatorService.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{},"coverage.html":{}}}],["variable.label.tolowercase().indexof(search",{"_index":3484,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["variable.ts",{"_index":3730,"title":{},"body":{"interfaces/QuantityVariable.html":{},"interfaces/StringVariable.html":{},"interfaces/TimeVariable.html":{},"coverage.html":{}}}],["verdict",{"_index":4666,"title":{},"body":{"interfaces/TimeProperty.html":{}}}],["version",{"_index":4893,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertiefte",{"_index":2984,"title":{},"body":{"injectables/PropertiesListService.html":{}}}],["via",{"_index":2227,"title":{},"body":{"injectables/ItemDetailsService.html":{},"injectables/RequestService.html":{},"index.html":{}}}],["vida",{"_index":1828,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["vide",{"_index":3560,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["vie",{"_index":1826,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["view",{"_index":3601,"title":{},"body":{"interfaces/Qualifier-1.html":{},"interfaces/Statement-2.html":{}}}],["viewchild",{"_index":1946,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["viewchild(\"paginator",{"_index":2030,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["viewchild('matref",{"_index":3305,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["viewchild('multiselect",{"_index":2891,"title":{},"body":{"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["viewchild('paginator",{"_index":2123,"title":{},"body":{"components/HarmoniaUniversalisComponent.html":{}}}],["viewchild('singleselect",{"_index":3310,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["viewchild(matsort",{"_index":2029,"title":{},"body":{"interfaces/HU.html":{},"components/HarmoniaUniversalisComponent.html":{}}}],["viewer",{"_index":4880,"title":{},"body":{"index.html":{}}}],["visit",{"_index":2785,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["visitado",{"_index":2786,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["visitato",{"_index":2788,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["visited",{"_index":2743,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["vita",{"_index":1831,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["vocabulary",{"_index":4559,"title":{},"body":{"injectables/TechnicalitiesDisplayService.html":{}}}],["void",{"_index":61,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/AppComponent.html":{},"injectables/ArrayToCsvService.html":{},"injectables/BlockDisplayService.html":{},"components/CareerDisplayComponent.html":{},"injectables/CreateItemToDisplayService.html":{},"injectables/DataService.html":{},"injectables/DataService-1.html":{},"components/EducationDisplayComponent.html":{},"injectables/FactgridSubtitlesService.html":{},"components/HarmoniaUniversalisComponent.html":{},"components/HeaderDisplayComponent.html":{},"injectables/IframesDisplayService-1.html":{},"injectables/ItemDetailsService.html":{},"components/ItemInfoComponent.html":{},"injectables/ItemInfoService.html":{},"interfaces/Lang.html":{},"injectables/ListDetailsService.html":{},"components/MainDisplayComponent.html":{},"components/MapComponent.html":{},"injectables/ParisDatabaseService.html":{},"components/ParisSearchComponent.html":{},"components/ProjectSelectComponent.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"injectables/RequestService.html":{},"injectables/RoleOfObjectRenderingService.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{},"injectables/SetDataService.html":{},"injectables/SetSubtitleService.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"components/Sparql0DisplayComponent.html":{},"components/Sparql1DisplayComponent.html":{},"components/Sparql2DisplayComponent.html":{},"components/Sparql3DisplayComponent.html":{},"components/Sparql4DisplayComponent.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"injectables/TechnicalitiesDisplayService.html":{},"components/TextDisplayComponent.html":{}}}],["voir",{"_index":3200,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["volet",{"_index":774,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/HeaderDisplayComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["votre",{"_index":1749,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["vous",{"_index":2783,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{}}}],["vue",{"_index":3365,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["vènement",{"_index":1886,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["wbsearchentities",{"_index":3806,"title":{},"body":{"injectables/RequestService.html":{}}}],["weakset",{"_index":3521,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["weight",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/ItemInfoComponent.html":{},"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"components/TextDisplayComponent.html":{}}}],["weight:550",{"_index":2434,"title":{},"body":{"components/ItemInfoComponent.html":{},"components/Sparql0DisplayComponent.html":{}}}],["weiteren",{"_index":1802,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["whith",{"_index":2815,"title":{},"body":{"components/ParisSearchComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchEngineService.html":{},"injectables/SelectedItemListService.html":{},"injectables/SelectedItemListService-1.html":{}}}],["width",{"_index":2625,"title":{},"body":{"components/MapComponent.html":{},"components/ParisSearchComponent.html":{}}}],["wiki",{"_index":1639,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["wikibase",{"_index":843,"title":{},"body":{"components/CareerDisplayComponent.html":{},"interfaces/Claim.html":{},"interfaces/ClaimsObject.html":{},"interfaces/Data.html":{},"injectables/DetailsService.html":{},"injectables/DetailsService-1.html":{},"components/EducationDisplayComponent.html":{},"interfaces/Entity.html":{},"components/HeaderDisplayComponent.html":{},"injectables/ItemDetailsService.html":{},"components/MainDisplayComponent.html":{},"interfaces/Reference.html":{},"interfaces/Selection.html":{},"interfaces/Snak.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{},"index.html":{}}}],["wikibaseitem",{"_index":3217,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{}}}],["wikidisplay",{"_index":1643,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{}}}],["wikidisplayservice",{"_index":1638,"title":{"injectables/WikiDisplayService.html":{}},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/WikiDisplayService.html":{},"coverage.html":{}}}],["wikis",{"_index":1744,"title":{},"body":{"interfaces/DisplayFlags.html":{},"injectables/ItemDisplayDispatcherService.html":{},"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.commonswiki",{"_index":4744,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.dewiki",{"_index":4748,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.dewikisource",{"_index":4770,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.enwiki",{"_index":4746,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.enwikisource",{"_index":4765,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.eswiki",{"_index":4756,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.frwiki",{"_index":4750,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.frwikisource",{"_index":4775,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.itwiki",{"_index":4752,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.nlwiki",{"_index":4754,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["wikis.push(item[0].sitelinks.wikidatawiki",{"_index":4758,"title":{},"body":{"injectables/WikiDisplayService.html":{}}}],["window.location.reload",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["window.open('https://database.factgrid.de/wiki/main_page",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lang.html":{}}}],["window.open(image",{"_index":781,"title":{},"body":{"components/CareerDisplayComponent.html":{},"components/EducationDisplayComponent.html":{},"components/ItemInfoComponent.html":{},"components/MainDisplayComponent.html":{},"components/SociabilityDisplayComponent.html":{},"components/SourcesDisplayComponent.html":{}}}],["witb",{"_index":3538,"title":{},"body":{"interfaces/Qualifier.html":{},"interfaces/Statement-1.html":{}}}],["word.service",{"_index":2258,"title":{},"body":{"injectables/ItemDetailsService.html":{}}}],["word.service.ts",{"_index":2555,"title":{},"body":{"injectables/LongestWordService.html":{},"coverage.html":{}}}],["word.service.ts:10",{"_index":2559,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["word.service.ts:6",{"_index":2557,"title":{},"body":{"injectables/LongestWordService.html":{}}}],["work",{"_index":1214,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["work1",{"_index":1287,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["work2",{"_index":1310,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["work3",{"_index":1332,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["work4",{"_index":1354,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["work5",{"_index":1376,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ItemType.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Variable.html":{}}}],["works",{"_index":91,"title":{},"body":{"components/AdvancedSearchListComponent.html":{},"components/Sparql1DisplayComponent.html":{}}}],["worktitle",{"_index":4408,"title":{},"body":{"components/Sparql1DisplayComponent.html":{}}}],["wrap",{"_index":4394,"title":{},"body":{"components/Sparql0DisplayComponent.html":{}}}],["write",{"_index":1228,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["www.adw.uni",{"_index":747,"title":{},"body":{"injectables/BlockDisplayService.html":{}}}],["x",{"_index":2693,"title":{},"body":{"injectables/ParisDatabaseService.html":{}}}],["y",{"_index":1829,"title":{},"body":{"injectables/FactgridSubtitlesService.html":{}}}],["year",{"_index":4270,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["yyyy",{"_index":1229,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Qualifier.html":{},"interfaces/Qualifier-1.html":{},"interfaces/Selection.html":{},"interfaces/Statement.html":{},"interfaces/Statement-1.html":{},"interfaces/Statement-2.html":{},"interfaces/Variable.html":{}}}],["z",{"_index":4287,"title":{},"body":{"injectables/SetTimeService.html":{}}}],["zone.js",{"_index":4876,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2582,"title":{},"body":{"components/MapComponent.html":{},"overview.html":{}}}],["zoom:12",{"_index":2637,"title":{},"body":{"injectables/MapService.html":{}}}],["zoom:this.zoom",{"_index":2616,"title":{},"body":{"components/MapComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdvancedSearchListComponent.html":{"url":"components/AdvancedSearchListComponent.html","title":"component - AdvancedSearchListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdvancedSearchListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-advanced-search-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./advanced-search-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./advanced-search-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                itemValue\n                            \n                            \n                                projectList\n                            \n                            \n                                projectStatement\n                            \n                            \n                                statementList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                statementValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                selectedItemValue\n                            \n                            \n                                selectedProjectList\n                            \n                            \n                                selectedStatementList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedItemValue\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedProjectList\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedStatementList\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statementValues\n                        \n                    \n                \n            \n            \n                \nstatementValues(value: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        itemValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectStatement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statementList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-advanced-search-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './advanced-search-list.component.html',\n  styleUrl: './advanced-search-list.component.scss'\n})\nexport class AdvancedSearchListComponent implements OnChanges {\n\n  @Input() selectedProjectList;\n  @Input() selectedStatementList;\n  @Input() selectedItemValue;\n  @Input() message = \"\";\n\n  projectList: string[];\n  statementList: string;\n  itemValue: string;\n  projectStatement: string;\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if (changes.selectedProjectList) {\n       this.projectList = changes.selectedProjectList.currentValue;\n    };\n\n    if (changes.selectedStatementList) {\n      this.statementList = changes.selectedStatementList.currentValue;\n    };\n\n    if (changes.selectedItemValue) {\n       this.itemValue = changes.selectedItemValue.currentValue;\n    };\n \n    this.projectStatement = this.statementValues(this.projectList);\n\n  }\n\n  statementValues(value: string[]) {\n    let u = \"VALUES ?proj { \";\n    let v = \"\";\n    for (let i = 0; i \n    \n\n    \n        advanced-search-list works!\n project: {{ projectList }}\n statement: {{ statementList }}\n {{ projectStatement }}\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'advanced-search-list works! project: {{ projectList }} statement: {{ statementList }} {{ projectStatement }}'\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdvancedSearchListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatToolbarModule\n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            NgFor\n                            NgIf\n                            RouterModule\n                            RouterLink\n                                FooterComponent\n                            MatTooltipModule\n                \n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDown\n                            \n                            \n                                itemId\n                            \n                            \n                                items\n                            \n                            \n                                labels\n                            \n                            \n                                langs\n                            \n                            \n                                newItem\n                            \n                            \n                                researchFields\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                searchInput\n                            \n                            \n                                searchToken\n                            \n                            \n                                    Public\n                                selectedItem\n                            \n                            \n                                selectedItems\n                            \n                            \n                                selectedLang\n                            \n                            \n                                selectedPage\n                            \n                            \n                                selectedParisItems\n                            \n                            \n                                selectedResearchField\n                            \n                            \n                                specialPages\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                            \n                                u\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isResearchFieldEnabled\n                            \n                            \n                                langSetting\n                            \n                            \n                                linking\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                researchFieldSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    researchFieldsSorted\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:88\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isResearchFieldEnabled\n                        \n                    \n                \n            \n            \n                \nisResearchFieldEnabled(researchField: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                researchField\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        langSetting\n                        \n                    \n                \n            \n            \n                \nlangSetting(lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linking\n                        \n                    \n                \n            \n            \n                \nlinking()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        researchFieldSelect\n                        \n                    \n                \n            \n            \n                \nresearchFieldSelect(researchField)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                researchField\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labels\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/app.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        langs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lang[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: 'English', code: 'en' },\n    { name: 'German', code: 'de' },\n    { name: 'French', code: 'fr' },\n    { name: 'Spanish', code: 'es' },\n    { name: 'Italian', code: 'it' },\n    { name: 'Hungarian', code: 'hu' },\n    { name: 'Swedish', code: 'se' }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newItem\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/app.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        researchFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: 'all', id: 'all' },\n    { name: 'Illuminati', id: 'Q10677' },\n    { name: 'student corporations', id: 'Q28115' },\n    { name: 'animal magnetism', id: 'Q172203' },\n    { name: 'freemasonry', id: 'Q10678' },\n    { name: 'prose fiction', id: 'Q195135' },\n    { name: 'Paris', id: 'Q10441' },\n    { name: 'Harmonia Universalis', id: 'Q99677' }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : (localStorage['selectedLang'] === undefined) ? 'en' : localStorage['selectedLang']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (sessionStorage['selectedPage'] === undefined)\n    ? JSON.stringify([{ name: 'FactGrid', address: '' }])\n    : sessionStorage['selectedPage']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedParisItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedResearchField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : localStorage['selectedResearchField']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        specialPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: 'Harmonia Universalis', address: 'harmonia_universalis' },\n    { name: 'Paris', address: 'paris' }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'factgrid'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        u\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        researchFieldsSorted\n                    \n                \n\n                \n                    \n                        getresearchFieldsSorted()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:107\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, switchMap, map, filter, takeWhile } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { SetLanguageService } from './services/set-language.service';\nimport { RequestService } from './services/request.service';\nimport { SlideUpAnimation } from './slide-up-animation';\nimport { RouterLink, RouterModule, Router } from '@angular/router';\nimport { NgFor, NgIf } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FooterComponent } from './footer/footer.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nexport interface Lang {\n  name: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [SlideUpAnimation],\n  standalone: true,\n  imports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    NgFor,\n    NgIf,\n    RouterModule,\n    RouterLink,\n    FooterComponent,\n    MatTooltipModule\n  ]\n})\nexport class AppComponent implements OnInit {\n  private router = inject(Router);\n\n  langs: Lang[] = [\n    { name: 'English', code: 'en' },\n    { name: 'German', code: 'de' },\n    { name: 'French', code: 'fr' },\n    { name: 'Spanish', code: 'es' },\n    { name: 'Italian', code: 'it' },\n    { name: 'Hungarian', code: 'hu' },\n    { name: 'Swedish', code: 'se' }\n  ];\n\n  specialPages = [\n    { name: 'Harmonia Universalis', address: 'harmonia_universalis' },\n    { name: 'Paris', address: 'paris' }\n  ];\n\n  researchFields: any[] = [\n    { name: 'all', id: 'all' },\n    { name: 'Illuminati', id: 'Q10677' },\n    { name: 'student corporations', id: 'Q28115' },\n    { name: 'animal magnetism', id: 'Q172203' },\n    { name: 'freemasonry', id: 'Q10678' },\n    { name: 'prose fiction', id: 'Q195135' },\n    { name: 'Paris', id: 'Q10441' },\n    { name: 'Harmonia Universalis', id: 'Q99677' }\n  ];\n\n  selectedLang: string = (localStorage['selectedLang'] === undefined) ? 'en' : localStorage['selectedLang'];\n  selectedPage = (sessionStorage['selectedPage'] === undefined)\n    ? JSON.stringify([{ name: 'FactGrid', address: '' }])\n    : sessionStorage['selectedPage'];\n  selectedItems: any[] = [];\n  selectedParisItems: any[] = [];\n  selectedResearchField: string = localStorage['selectedResearchField'];\n  title = 'factgrid';\n  subtitle: string;\n  searchInput = new FormControl();\n  public selectedItem: Observable;\n  searchToken: string = 'on';\n  public isDown: boolean = true;\n  u: string;\n  labels;\n  items = [];\n  newItem;\n  itemId: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if (localStorage['selectedLang'] === undefined) {\n      localStorage.setItem('selectedLang', 'en');\n    }\n    if (localStorage['selectedItems'] === undefined) {\n      localStorage.setItem('selectedItems', JSON.stringify([{ value: { id: 'Q152233' }, label: 'FactGrid' }]));\n    }\n    if (localStorage['selectedResearchField'] === undefined) {\n      localStorage.setItem('selectedResearchField', 'all');\n    }\n    if (localStorage['selectedParisItems'] === undefined) {\n      localStorage.setItem('selectedParisItems', JSON.stringify([{ value: { id: 'Q152233' }, label: 'FactGrid' }]));\n    }\n  }\n\n  get researchFieldsSorted() {\n    // \"all\" toujours en tête\n    const all = this.researchFields.find(f => f.id === 'all');\n    // Champ sélectionné (hors \"all\")\n    const selected = this.researchFields.find(f => f.id === this.selectedResearchField && f.id !== 'all');\n    // Paris et Harmonia Universalis (hors sélection)\n    const specials = this.researchFields.filter(f =>\n      (f.name === 'Paris' || f.name === 'Harmonia Universalis') &&\n      f.id !== (selected?.id)\n    );\n    // Les autres (hors all, specials, sélectionné)\n    const others = this.researchFields.filter(f =>\n      f.id !== 'all' &&\n      f.id !== (selected?.id) &&\n      f.name !== 'Paris' &&\n      f.name !== 'Harmonia Universalis'\n    );\n    // Construction de la liste\n    return [\n      all,\n      ...(selected && selected.id !== 'all' ? [selected] : []),\n      ...specials,\n      ...others\n    ].filter(Boolean);\n  }\n\n  isResearchFieldEnabled(researchField: any): boolean {\n    // Seuls Paris et Harmonia Universalis sont opérationnels, ainsi que \"all\"\n    return (\n      researchField.id === 'all' ||\n      researchField.name === 'Paris' ||\n      researchField.name === 'Harmonia Universalis'\n    );\n  }\n\n  langSetting(lang) {\n    if (lang !== undefined) {\n      this.selectedLang = lang.code;\n    }\n    localStorage['selectedLang'] = this.selectedLang;\n    window.location.reload();\n  }\n\n  researchFieldSelect(researchField) {\n    if (!researchField) {\n      this.selectedResearchField = 'all';\n    } else {\n      this.selectedResearchField = researchField.id;\n      // Toujours mettre à jour le localStorage avant de naviguer\n      localStorage['selectedResearchField'] = this.selectedResearchField;\n\n      // Navigation spécifique pour Paris et Harmonia Universalis\n      if (researchField.name === 'Paris') {\n        this.router.navigate(['/paris']);\n        return;\n      }\n      if (researchField.name === 'Harmonia Universalis') {\n        this.router.navigate(['/harmonia_universalis']);\n        return;\n      }\n    }\n    // Pour le cas où researchField est null\n    if (!researchField) {\n      localStorage['selectedResearchField'] = this.selectedResearchField;\n    }\n  }\n\n\n  linking() {\n    window.open('https://database.factgrid.de/wiki/Main_Page', '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n    \n\n      \n\n      \n\n      \n        info\n      \n\n      \n        language\n      \n      \n        @for (lang of langs; track lang) {\n        \n          \n           -->\n          {{lang.name}}\n          check_circle\n        \n        }\n      \n\n\n      \n        settings\n      \n      \n        @for (researchField of researchFieldsSorted; track researchField.id) {\n        \n          {{researchField.name}}\n          check_circle\n        \n        }\n      \n\n\n    \n\n    \n    \n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n.custom-toolbar {\n  display: flex;\n  flex-flow: row;\n  padding-top: 50px;\n  padding-bottom:20px;\n  background-color:white;\n\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n.language-menu .mat-menu-item.selected-lang {\n  background: #e3f2fd;\n  font-weight: bold;\n}\n\n.language-menu .mat-menu-item:hover {\n  background: #bbdefb;\n}\n\n.language-menu .mat-menu-item mat-icon {\n  margin-left: 8px;\n}\n\n.researchfield-menu .mat-menu-item.selected-researchfield {\n  background: #e3f2fd;\n  font-weight: bold;\n}\n\n.researchfield-menu .mat-menu-item:hover {\n  background: #bbdefb;\n}\n\n.researchfield-menu .mat-menu-item mat-icon {\n  margin-left: 8px;\n}\n\n\nhtml, body {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\nbody, app-root {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  height: 100%;\n}\n\n.main-content {\n  flex: 1 0 auto;\n}\n\nfooter, app-footer {\n  flex-shrink: 0;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  info                    language                    @for (lang of langs; track lang) {                             -->          {{lang.name}}          check_circle                }                    settings                    @for (researchField of researchFieldsSorted; track researchField.id) {                  {{researchField.name}}          check_circle                }                    '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, ExtraOptions } from '@angular/router';\nimport { DisplayComponent} from './display/display.component';\nimport { SearchComponent } from './search/search.component';\nimport { MapComponent } from './display/map/map.component';\nimport { ParisSearchComponent } from './paris-search/paris-search.component'\n\nexport const routingConfiguration: ExtraOptions = {\n  paramsInheritanceStrategy: 'always'\n}\n\nconst routes: Routes = [\n\n  { path: '', component:SearchComponent},\n/*  { path: 'item/:id',\n    component: DisplayComponent,  \n    children: [\n      { path: ':lat/:lng/:z', component:MapComponent}\n   ]\n  }*/\n  { path: 'item/:id', loadComponent: () => \"import('./display/display.component').then(mod => mod.DisplayComponent)\",\n  children: [{ path: ':lat/:lng/:z', component:MapComponent}\n  ]\n  },\n  { path: 'paris', loadComponent: () => \"import('./paris-search/paris-search.component').then(mod => mod.ParisSearchComponent)\" },\n  { path: 'harmonia_universalis', loadComponent: () => \"import('./harmonia-universalis/harmonia-universalis.component').then(mod => mod.HarmoniaUniversalisComponent)\" },\n  { path: 'advanced_search', loadComponent: () => \"import('./search/advanced-search/advanced-search.component').then(mod => mod.AdvancedSearchComponent)\" }\n\n]\n\nexport const Routing = RouterModule.forRoot(routes, routingConfiguration);\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled' })],\n  exports: [RouterModule]\n}\n)\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArrayToCsvService.html":{"url":"injectables/ArrayToCsvService.html","title":"injectable - ArrayToCsvService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArrayToCsvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/array-to-csv.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToCsv\n                            \n                            \n                                downloadBlob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/array-to-csv.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        arrayToCsv\n                        \n                    \n                \n            \n            \n                \narrayToCsv(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/array-to-csv.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \ndownloadBlob(content, filename, contentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/array-to-csv.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contentType\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArrayToCsvService {\n\n  constructor() { }\n\n  arrayToCsv(data){\n  return data.map(row =>\n    row\n    .map(String)  // convert every value to string\n    .map(v => v.replaceAll('\"', '\"\"'))  // escape double quotes\n   // .map(v => `\"${v}\"`)  // quote it\n    .join(',')  // comma-separated\n  ).join('\\r\\n');  // rows starting on new lines\n}\n\n downloadBlob(content, filename, contentType) {\n  // Create a blob\n  var blob = new Blob([content], { type: contentType });\n  var url = URL.createObjectURL(blob);\n\n  // Create a link to download it\n  var pom = document.createElement('a');\n  pom.href = url;\n  pom.setAttribute('download', filename);\n  pom.click();\n}\n\n\n// in general content-type is 'text/csv;charset=utf-8;'\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackListDetailsService.html":{"url":"injectables/BackListDetailsService.html","title":"injectable - BackListDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackListDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/back-list-details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setBackList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/back-list-details.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setBackList\n                        \n                    \n                \n            \n            \n                \nsetBackList(list: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/back-list-details.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                list\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackListDetailsService {\n\n  constructor() { }\n\nsetBackList(list:any[]) {\n  let backList:any[]=[];\n  for (let i=0;i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BackListIdPipe.html":{"url":"pipes/BackListIdPipe.html","title":"pipe - BackListIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BackListIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/back-list-id.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        backListId\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/back-list-id.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'backListId',\n    standalone: true\n})\nexport class BackListIdPipe implements PipeTransform {\n\n  transform(id: string): string {\n    let newId = id.substring(5);\n    return newId;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackListService.html":{"url":"injectables/BackListService.html","title":"injectable - BackListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/back-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backListDetails\n                            \n                            \n                                    Private\n                                langService\n                            \n                            \n                                linkedItems\n                            \n                            \n                                    Private\n                                requestService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backList\n                        \n                    \n                \n            \n            \n                \nbackList(item)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/back-list.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        backListDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BackListDetailsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/back-list.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        langService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/back-list.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkedItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/back-list.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/back-list.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service'  ;\nimport { BackListDetailsService} from './back-list-details.service'\nimport { SelectedLangService } from '../selected-lang.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackListService {\n  private requestService = inject(RequestService);\n  private backListDetails = inject(BackListDetailsService);\n  private langService = inject(SelectedLangService);\n\n  linkedItems: any[]; // backList\n\n  backList(item) {\n    const lang = this.langService.selectedLang;\n    return this.requestService.getBackList(item, lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bank.html":{"url":"interfaces/Bank.html","title":"interface - Bank","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bank\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/bank.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Bank {\n\n  id: string;\n  name: string;\n\n}\n\nexport const BANKS: Bank[] = [\n  { name: 'Bank A (Switzerland)', id: 'A' },\n  { name: 'Bank B (Switzerland)', id: 'B' },\n  { name: 'Bank C (France)', id: 'C' },\n  { name: 'Bank D (France)', id: 'D' },\n  { name: 'Bank E (France)', id: 'E' },\n  { name: 'Bank F (Italy)', id: 'F' },\n  { name: 'Bank G (Italy)', id: 'G' },\n  { name: 'Bank H (Italy)', id: 'H' },\n  { name: 'Bank I (Italy)', id: 'I' },\n  { name: 'Bank J (Italy)', id: 'J' },\n  { name: 'Bank Kolombia (United States of America)', id: 'K' },\n  { name: 'Bank L (Germany)', id: 'L' },\n  { name: 'Bank M (Germany)', id: 'M' },\n  { name: 'Bank N (Germany)', id: 'N' },\n  { name: 'Bank O (Germany)', id: 'O' },\n  { name: 'Bank P (Germany)', id: 'P' },\n  { name: 'Bank Q (Germany)', id: 'Q' },\n  { name: 'Bank R (Germany)', id: 'R' }\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockDisplayService.html":{"url":"injectables/BlockDisplayService.html","title":"injectable - BlockDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/services/block-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                populateDisplay\n                            \n                            \n                                setActivityDisplay\n                            \n                            \n                                setCareerDisplay\n                            \n                            \n                                setDocumentDisplay\n                            \n                            \n                                setEducationDisplay\n                            \n                            \n                                setEventDisplay\n                            \n                            \n                                setExternalLinksDisplay\n                            \n                            \n                                setHeaderDisplay\n                            \n                            \n                                setItemInfoDisplay\n                            \n                            \n                                setOrgDisplay\n                            \n                            \n                                setPersonDisplay\n                            \n                            \n                                setPlaceDisplay\n                            \n                            \n                                setSociabilityDisplay\n                            \n                            \n                                setSourcesDisplay\n                            \n                            \n                                    Private\n                                setUrl\n                            \n                            \n                                setUrlDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        populateDisplay\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateDisplay(item: any, targetArray: any[], properties: literal type[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Méthode générique pour peupler un tableau à partir d'une constante de propriétés.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetArray\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                properties\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActivityDisplay\n                        \n                    \n                \n            \n            \n                \nsetActivityDisplay(item: any, activityDetail: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                activityDetail\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCareerDisplay\n                        \n                    \n                \n            \n            \n                \nsetCareerDisplay(item: any, careerAndActivities: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                careerAndActivities\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDocumentDisplay\n                        \n                    \n                \n            \n            \n                \nsetDocumentDisplay(item: any, documentDetail: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentDetail\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEducationDisplay\n                        \n                    \n                \n            \n            \n                \nsetEducationDisplay(item: any, education: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                education\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEventDisplay\n                        \n                    \n                \n            \n            \n                \nsetEventDisplay(item: any, eventDetail: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                eventDetail\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExternalLinksDisplay\n                        \n                    \n                \n            \n            \n                \nsetExternalLinksDisplay(item: any, externalLinks: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                externalLinks\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHeaderDisplay\n                        \n                    \n                \n            \n            \n                \nsetHeaderDisplay(item: any, headerDetail: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headerDetail\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItemInfoDisplay\n                        \n                    \n                \n            \n            \n                \nsetItemInfoDisplay(item: any, target: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                target\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOrgDisplay\n                        \n                    \n                \n            \n            \n                \nsetOrgDisplay(item: any, locationAndContext: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                locationAndContext\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPersonDisplay\n                        \n                    \n                \n            \n            \n                \nsetPersonDisplay(item: any, lifeAndFamily: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lifeAndFamily\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlaceDisplay\n                        \n                    \n                \n            \n            \n                \nsetPlaceDisplay(item: any, locationAndSituation: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                locationAndSituation\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSociabilityDisplay\n                        \n                    \n                \n            \n            \n                \nsetSociabilityDisplay(item: any, sociabilityAndCulture: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sociabilityAndCulture\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSourcesDisplay\n                        \n                    \n                \n            \n            \n                \nsetSourcesDisplay(item: any, sourcesList: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sourcesList\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUrl(item: any, p: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                p\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUrlDisplay\n                        \n                    \n                \n            \n            \n                \nsetUrlDisplay(item: any, externalLinks: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/block-display.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                externalLinks\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  PERSON_DISPLAY_PROPERTIES,\n  PLACE_DISPLAY_PROPERTIES,\n  CAREER_DISPLAY_PROPERTIES,\n  DOCUMENT_DISPLAY_PROPERTIES,\n  ACTIVITY_DISPLAY_PROPERTIES,\n  EDUCATION_DISPLAY_PROPERTIES,\n  EVENT_DISPLAY_PROPERTIES,\n  ORG_DISPLAY_PROPERTIES,\n  SOCIABILITY_DISPLAY_PROPERTIES,\n  HEADER_DISPLAY_PROPERTIES,\n  SOURCES_DISPLAY_PROPERTIES,\n  EXTERNAL_LINKS_DISPLAY_PROPERTIES\n} from './properties-display.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlockDisplayService {\n\n  /**\n   * Méthode générique pour peupler un tableau à partir d'une constante de propriétés.\n   */\n  private populateDisplay(item: any, targetArray: any[], properties: { property: string }[]): any[] {\n    for (const { property } of properties) {\n      if (item[0].claims[property] !== undefined) {\n        item[1].splice(item[1].indexOf(property), 1);\n        targetArray.push(item[0].claims[property]);\n      }\n    }\n    return targetArray;\n  }\n\n  setHeaderDisplay(item: any, headerDetail: any[]): any[] {\n    return this.populateDisplay(item, headerDetail, HEADER_DISPLAY_PROPERTIES);\n  }\n\n  setPlaceDisplay(item: any, locationAndSituation: any[]): any[] {\n    return this.populateDisplay(item, locationAndSituation, PLACE_DISPLAY_PROPERTIES);\n  }\n\n  setPersonDisplay(item: any, lifeAndFamily: any[]): any[] {\n    return this.populateDisplay(item, lifeAndFamily, PERSON_DISPLAY_PROPERTIES);\n  }\n\n  setCareerDisplay(item: any, careerAndActivities: any[]): any[] {\n    return this.populateDisplay(item, careerAndActivities, CAREER_DISPLAY_PROPERTIES);\n  }\n\n  setSociabilityDisplay(item: any, sociabilityAndCulture: any[]): any[] {\n    return this.populateDisplay(item, sociabilityAndCulture, SOCIABILITY_DISPLAY_PROPERTIES);\n  }\n\n  setEducationDisplay(item: any, education: any[]): any[] {\n    return this.populateDisplay(item, education, EDUCATION_DISPLAY_PROPERTIES);\n  }\n\n  setOrgDisplay(item: any, locationAndContext: any[]): any[] {\n    return this.populateDisplay(item, locationAndContext, ORG_DISPLAY_PROPERTIES);\n  }\n\n  setActivityDisplay(item: any, activityDetail: any[]): any[] {\n    return this.populateDisplay(item, activityDetail, ACTIVITY_DISPLAY_PROPERTIES);\n  }\n\n  setEventDisplay(item: any, eventDetail: any[]): any[] {\n    return this.populateDisplay(item, eventDetail, EVENT_DISPLAY_PROPERTIES);\n  }\n\n  setDocumentDisplay(item: any, documentDetail: any[]): any[] {\n    return this.populateDisplay(item, documentDetail, DOCUMENT_DISPLAY_PROPERTIES);\n  }\n\n  setSourcesDisplay(item: any, sourcesList: any[]): any[] {\n    return this.populateDisplay(item, sourcesList, SOURCES_DISPLAY_PROPERTIES);\n  }\n\n \n\n\n  setItemInfoDisplay(item: any, target: any): void {\n    const infoList = item[0]?.infoList || [];\n\n    target.instancesList = Array.isArray(infoList[0]) ? [...infoList[0]] : [];\n    target.subclassesList = Array.isArray(infoList[1]) ? [...infoList[1]] : [];\n    target.classesList = Array.isArray(infoList[2]) ? [...infoList[2]] : [];\n    target.natureOfList = Array.isArray(infoList[3]) ? [...infoList[3]] : [];\n\n  }\n\n\n\n  setExternalLinksDisplay(item: any, externalLinks: any[]): any[] {\n    return this.setUrlDisplay(item, externalLinks);\n  }\n\n  setUrlDisplay(item: any, externalLinks: any[]): any[] {\n    const properties = Object.keys(item[0].claims);\n    for (const prop of properties) {\n      if (prop === 'P1306' || prop === 'P650') continue; // Exclure les propriétés obsolètes\n      const claim = item[0].claims[prop];\n      if (!claim || claim.datatype !== \"external-id\") continue;\n\n      // Retirer la propriété de l'affichage général\n      item[1].splice(item[1].indexOf(prop), 1);\n\n      // Générer l'URL selon la logique métier\n      this.setUrl(item, prop);\n\n      // Ajouter à la liste des liens externes\n      externalLinks.push(claim);\n    }\n    return externalLinks;\n  }\n\n  private setUrl(item: any, p: string): void {\n    const claim = item[0].claims[p];\n    if (!claim) return;\n\n    if (claim.externalLink !== undefined) {\n      claim.url = claim.externalLink.replace(\"$1\", claim[0].mainsnak.datavalue.value);\n    }\n\n    if (item[0].claims.P76 !== undefined) {\n      item[0].claims.P76.url = \"https://explore.gnd.network/gnd/\" + item[0].claims.P76[0].mainsnak.datavalue.value;\n    }\n    if (item[0].claims.P368 !== undefined) {\n      item[0].claims.P368.url = 'http://gateway-bayern.de/VD16+' + item[0].claims.P368[0].mainsnak.datavalue.value;\n    }\n    if (item[0].claims.P369 !== undefined) {\n      item[0].claims.P369.url = 'https://kxp.k10plus.de/DB=1.28/CMD?ACT=SRCHA&IKT=8079&TRM=%27:' +\n        item[0].claims.P369[0].mainsnak.datavalue.value + \"%27\";\n    }\n    if (item[0].claims.P370 !== undefined) {\n      item[0].claims.P370.url = 'https://kxp.k10plus.de/DB=1.65/CMD?ACT=SRCHA&IKT=8080&TRM=VD18' +\n        item[0].claims.P370[0].mainsnak.datavalue.value;\n    }\n    if (item[0].claims.P650 !== undefined) {\n      let value = item[0].claims.P650[0].mainsnak.datavalue.value;\n      let province = value.slice(0, 2);\n      let municipality = value.slice(2, 5);\n      let parish = value.slice(5, 7);\n      let es = value.slice(7, 9);\n      if (item[0].claims.P650.externalLink !== undefined) {\n        let url = item[0].claims.P650.externalLink.replace(\"$1\", province)\n          .replace(\"$2\", municipality)\n          .replace(\"$3\", parish)\n          .replace(\"$4\", es)\n          .replace(\"$5\", \"00\");\n        console.log(\"URL for P650:\", url); // Debug log\n        item[0].claims.P650.url = url;\n      }\n    }\n    if (item[0].claims.P882 !== undefined) {\n      item[0].claims.P882.url = 'https://drw-www.adw.uni-heidelberg.de/drw-cgi/zeige?index=lemmata&term=' +\n        item[0].claims.P882[0].mainsnak.datavalue.value + '&darstellung=V';\n    }\n  }\n\n\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CareerDisplayComponent.html":{"url":"components/CareerDisplayComponent.html","title":"component - CareerDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CareerDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/career-display/career-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-career-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            MatCardModule\n                            RouterLink\n                            UnitPipe\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./career-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./career-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openImage\n                            \n                            \n                                toggleReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                career\n                            \n                            \n                                careerAndActivities\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        career\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/career-display/career-display.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        careerAndActivities\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/career-display/career-display.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openImage\n                        \n                    \n                \n            \n            \n                \nopenImage(image)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/career-display/career-display.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleReferences\n                        \n                    \n                \n            \n            \n                \ntoggleReferences()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/career-display/career-display.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/career-display/career-display.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterLink } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { UnitPipe } from '../../unit.pipe';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\n\n@Component({\n  selector: 'app-career-display',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\n  templateUrl: './career-display.component.html',\n  styleUrl: './career-display.component.scss'\n})\nexport class CareerDisplayComponent {\n\n @Input() careerAndActivities;\n @Input() career;\n\n  showReferences = false; // état du volet\n\n  toggleReferences() {\n    this.showReferences = !this.showReferences;\n  }\n\n openImage(image){ //handling click for picture (open in new tab) \n    window.open(image);}\n\n}\n\n    \n\n    \n        \n  {{career}}\n  @for (P of careerAndActivities; track P) {\n  \n    \n      \n        {{P.label}}:\n      \n    \n    @for (M of P; track M) {\n    \n      \n        @if (M.mainsnak.datatype ==='time') {\n        {{M.mainsnak.datavalue.value.date}}\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\n        \n          greg.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\n        \n          jul.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        }\n        @if (M.mainsnak.datatype==='monolingualtext') {\n        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}\n        }\n        @if (M.mainsnak.datatype === 'string') {\n        {{M.mainsnak.datavalue.value }}\n        }\n        @if (M.mainsnak.datatype === 'url') {\n        \n          {{M.mainsnak.datavalue.value}}\n        \n        }\n        {{M.mainsnak.datavalue.value.amount}}\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\n        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}\n        }\n        @if (M.mainsnak.datatype==='commonsMedia') {\n        \n          \n            \n          \n        \n        }\n        @if (M.mainsnak.datatype==='wikibase-item') {\n        \n          {{M.mainsnak.label}}\n          \n            open_in_new\n          \n          &nbsp;&nbsp;&nbsp;\n        \n        {{M.mainsnak.separator}}\n        {{M.mainsnak.description}}&nbsp;\n        }\n        @if (M.rank=='deprecated') {\n         &nbsp;({{M.rank}})\n        }\n      \n      \n        @if (M['qualifiers-order']) {\n        \n          @for (Q of M.qualifiers2; track Q) {\n          \n            \n                {{Q.label}}:&nbsp;\n              \n              @for (D of Q.display; track D; let isLast = $last) {\n              \n                @if (D.datatype === 'time') {\n                \n                  {{D.date}}\n                  @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\n                  \n                    greg.\n                    \n                      open_in_new\n                    &nbsp;&nbsp;&nbsp;\n                  \n                  }\n                  @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\n                  \n                    jul.\n                    \n                      open_in_new\n                    &nbsp;&nbsp;&nbsp;\n                  \n                  }\n                \n                }\n                @if (D.datatype==='string') {\n                \n                  {{D.string}}\n                  @if (!isLast) {\n                  ,&nbsp;\n                  }\n                \n                }\n                @if (D.datatype==='monolingualtext') {\n                \n                  {{D.string.text}}\n                  @if (!isLast) {\n                  ,&nbsp;\n                  }\n                \n                }\n                {{D.amount}}\n                @if (D.unit) {\n                &nbsp;({{D.unit | unit |async}})&nbsp;\n                }\n                @if (D.datatype === 'external-id') {\n                \n                  {{D.string}}\n                \n                @if (!isLast) {\n                ,&nbsp;\n                }\n                }\n                @if (D.datatype === 'url') {\n                \n                  {{D.string}}\n                \n                @if (!isLast) {\n                ,&nbsp;\n                }\n                }\n                @if (D.datatype==='wikibase-item') {\n                \n                  {{D.label}}\n                  \n                    open_in_new\n                  \n                  @if(D.description){ &nbsp;&nbsp;&nbsp;}\n                  {{D.separator}}{{D.description}}\n                \n                }\n                @if (D.datatype==='commonsMedia') {\n                \n                  \n                    \n                  \n                \n                }\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n\n          }\n        \n        }\n      \n      \n      @if (M['references2'] && M['references2'].length > 0) {\n      \n        \n        Références\n      \n      @if (showReferences && M['references2']) {\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\n      \n        @for (N of Ma; track N; let isLast = $last) {\n        \n          \n          {{N.label}}:\n          \n          \n            @for (P of N.display; track P; let isLast = $last) {\n            @if (N.datatype === 'wikibase-item') {\n            \n              {{P.label}}\n              \n                open_in_new\n              &nbsp;&nbsp;&nbsp;\n              {{P.separator}}{{P.description}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype==='time') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype==='string') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype === 'url') {\n            \n              {{P}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype === 'external-id') {\n            \n              {{P.value}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            }\n          \n          @if (!isLast) {\n          ,&nbsp;\n          }\n        \n        }\n      \n      }\n      }\n      }\n    \n    }\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{career}}  @for (P of careerAndActivities; track P) {                    {{P.label}}:              @for (M of P; track M) {                  @if (M.mainsnak.datatype ===\\'time\\') {        {{M.mainsnak.datavalue.value.date}}        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {                  greg.                      open_in_new                             }        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {                  jul.                      open_in_new                             }        }        @if (M.mainsnak.datatype===\\'monolingualtext\\') {        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}        }        @if (M.mainsnak.datatype === \\'string\\') {        {{M.mainsnak.datavalue.value }}        }        @if (M.mainsnak.datatype === \\'url\\') {                  {{M.mainsnak.datavalue.value}}                }        {{M.mainsnak.datavalue.value.amount}}        @if (M.mainsnak.datatype === \\'globe-coordinate\\') {        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}        }        @if (M.mainsnak.datatype===\\'commonsMedia\\') {                                                        }        @if (M.mainsnak.datatype===\\'wikibase-item\\') {                  {{M.mainsnak.label}}                      open_in_new                                       {{M.mainsnak.separator}}        {{M.mainsnak.description}}         }        @if (M.rank==\\'deprecated\\') {          ({{M.rank}})        }                    @if (M[\\'qualifiers-order\\']) {                  @for (Q of M.qualifiers2; track Q) {                                      {{Q.label}}:                             @for (D of Q.display; track D; let isLast = $last) {                              @if (D.datatype === \\'time\\') {                                  {{D.date}}                  @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {                                      greg.                                          open_in_new                                                           }                  @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {                                      jul.                                          open_in_new                                                           }                                }                @if (D.datatype===\\'string\\') {                                  {{D.string}}                  @if (!isLast) {                  ,                   }                                }                @if (D.datatype===\\'monolingualtext\\') {                                  {{D.string.text}}                  @if (!isLast) {                  ,                   }                                }                {{D.amount}}                @if (D.unit) {                 ({{D.unit | unit |async}})                 }                @if (D.datatype === \\'external-id\\') {                                  {{D.string}}                                @if (!isLast) {                ,                 }                }                @if (D.datatype === \\'url\\') {                                  {{D.string}}                                @if (!isLast) {                ,                 }                }                @if (D.datatype===\\'wikibase-item\\') {                                  {{D.label}}                                      open_in_new                                    @if(D.description){    }                  {{D.separator}}{{D.description}}                                }                @if (D.datatype===\\'commonsMedia\\') {                                                                                                        }                            @if (!isLast) {              ,               }              }          }                }                  @if (M[\\'references2\\'] && M[\\'references2\\'].length > 0) {                      Références            @if (showReferences && M[\\'references2\\']) {      @for (Ma of M[\\'references2\\']; track Ma; let isLast = $last) {              @for (N of Ma; track N; let isLast = $last) {                            {{N.label}}:                                @for (P of N.display; track P; let isLast = $last) {            @if (N.datatype === \\'wikibase-item\\') {                          {{P.label}}                              open_in_new                               {{P.separator}}{{P.description}}                        @if (!isLast) {            ,             }            }            @if (N.datatype===\\'time\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype===\\'string\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype === \\'url\\') {                          {{P}}                        @if (!isLast) {            ,             }            }            @if (N.datatype === \\'external-id\\') {                          {{P.value}}                        @if (!isLast) {            ,             }            }            }                    @if (!isLast) {          ,           }                }            }      }      }        }    }'\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CareerDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ChangeUndefinedItemPipe.html":{"url":"pipes/ChangeUndefinedItemPipe.html","title":"pipe - ChangeUndefinedItemPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ChangeUndefinedItemPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/change-undefined-item.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        changeUndefinedItem\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/change-undefined-item.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'changeUndefinedItem',\n    standalone: true\n})\nexport class ChangeUndefinedItemPipe implements PipeTransform {\n\n  transform(value: any): any {\n    if (value === undefined){value ===\"?\"}\n    console.log(value);\n    return value;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Claim.html":{"url":"interfaces/Claim.html","title":"interface - Claim","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Claim\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/details.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mainsnak\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            qualifiers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            qualifiers-order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            references\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainsnak\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainsnak:         Snak\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Snak\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qualifiers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualifiers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qualifiers-order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualifiers-order:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { SetLanguageService } from './set-language.service';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n/** Interfaces pour un typage fort */\ninterface Snak {\n  property: string;\n  datatype?: string;\n  datavalue?: { value: { id: string } };\n}\n\ninterface Reference {\n  'snaks-order': string[];\n  snaks: { [key: string]: Snak[] };\n}\n\ninterface Claim {\n  mainsnak: Snak;\n  qualifiers?: { [key: string]: Snak[] };\n  'qualifiers-order'?: string[];\n  references?: Reference[];\n}\n\ninterface ClaimsObject {\n  [property: string]: Claim[];\n}\n\ninterface Entity {\n  claims: ClaimsObject;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailsService {\n  private requestService = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n\n  /**\n   * Retourne la liste unique des propriétés de référence d’une entité.\n   */\n  getReferenceProperties(u: Entity): string[] {\n    const referenceProperties = Object.values(u.claims)\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n    return this.uniq(referenceProperties);\n  }\n\n  /**\n   * Crée la liste des propriétés dans les statements, qualifiers et références.\n   * Retourne un Observable des propriétés enrichies.\n   */\n  setPropertiesList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let properties = claimsArray.flatMap(val => val.map(claim => claim.mainsnak.property));\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    properties = this.uniq([...properties, ...qualifierProperties, ...referenceProperties]);\n    const propertiesChunks = this.lessThanFifty(properties);\n\n    if (propertiesChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 propriétés)'));\n    }\n\n    const propertiesLists = propertiesChunks.map(list => this.createList(list).slice(1));\n    while (propertiesLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Crée la liste des items dans les statements, qualifiers et références.\n   * Retourne un Observable des items enrichis.\n   */\n  setItemsList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let items = claimsArray.flatMap(val =>\n      val\n        .filter(claim => claim.mainsnak.datavalue?.value?.id !== undefined)\n        .map(claim => claim.mainsnak.datavalue.value.id)\n    );\n\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    const qualifierItems = this.setQualifierItems(claimsArray, qualifierProperties).filter(Boolean);\n    const referenceItems = this.setReferenceItems(claimsArray, referenceProperties).filter(Boolean);\n\n    items = this.uniq([...items, ...qualifierItems, ...referenceItems]);\n    const itemsChunks = this.lessThanFifty(items);\n\n    if (itemsChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 items)'));\n    }\n\n    const itemsLists = itemsChunks.map(list => this.createList(list).slice(1));\n    while (itemsLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Retourne la liste unique des propriétés dans les qualifiers et références.\n   */\n  setProperties(arr: any[]): string[] {\n    return arr.flatMap(obj => Object.keys(obj));\n  }\n\n  /**\n   * Fusionne les objets contenus dans un tableau pour créer un seul objet.\n   */\n  mergeObjects(res: any[]): any {\n    // Filtrer les objets valides qui possèdent la propriété 'entities'\n    const validObjects = (res ?? []).filter(obj => obj && obj.entities);\n    let u = validObjects.length > 0 ? validObjects[0].entities : {};\n    for (const obj of validObjects.slice(1)) {\n      u = { ...u, ...obj.entities };\n    }\n    return u;\n  }\n\n\n  /**\n   * Retourne la liste des items dans les qualifiers.\n   */\n  setQualifierItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        for (const prop of arr) {\n          if (claim.qualifiers?.[prop]) {\n            for (const snak of claim.qualifiers[prop]) {\n              if (snak?.datavalue?.value?.id) {\n                result.push(snak.datavalue.value.id);\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Retourne la liste des items dans les références.\n   */\n  setReferenceItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        if (!claim.references) continue;\n        for (const ref of claim.references) {\n          for (const prop of arr) {\n            const snaks = ref.snaks[prop];\n            if (snaks && snaks[0]?.datatype === 'wikibase-item') {\n              for (const snak of snaks) {\n                if (snak?.datavalue?.value?.id) {\n                  result.push(snak.datavalue.value.id);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Crée une chaîne de caractères à partir d’un tableau, séparée par '|'.\n   */\n  createList(arr: string[]): string {\n    return Array.from(new Set(arr)).reduce((list, item) => list + '|' + item, '');\n  }\n\n  /**\n   * Retourne un tableau sans doublons.\n   */\n  uniq(a: T[]): T[] {\n    return Array.from(new Set(a.filter(Boolean)));\n  }\n\n  /**\n   * Découpe un tableau en sous-tableaux de 50 éléments maximum.\n   */\n  lessThanFifty(arr: T[]): T[][] {\n    const result: T[][] = [];\n    let u = arr.length;\n    let tempArr = arr.slice();\n    while (u > 0) {\n      result.push(tempArr.slice(0, 50));\n      tempArr = tempArr.slice(50);\n      u = tempArr.length;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClaimsObject.html":{"url":"interfaces/ClaimsObject.html","title":"interface - ClaimsObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClaimsObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/details.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [property: string]:        Claim[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/services/details.service.ts:26\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { SetLanguageService } from './set-language.service';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n/** Interfaces pour un typage fort */\ninterface Snak {\n  property: string;\n  datatype?: string;\n  datavalue?: { value: { id: string } };\n}\n\ninterface Reference {\n  'snaks-order': string[];\n  snaks: { [key: string]: Snak[] };\n}\n\ninterface Claim {\n  mainsnak: Snak;\n  qualifiers?: { [key: string]: Snak[] };\n  'qualifiers-order'?: string[];\n  references?: Reference[];\n}\n\ninterface ClaimsObject {\n  [property: string]: Claim[];\n}\n\ninterface Entity {\n  claims: ClaimsObject;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailsService {\n  private requestService = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n\n  /**\n   * Retourne la liste unique des propriétés de référence d’une entité.\n   */\n  getReferenceProperties(u: Entity): string[] {\n    const referenceProperties = Object.values(u.claims)\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n    return this.uniq(referenceProperties);\n  }\n\n  /**\n   * Crée la liste des propriétés dans les statements, qualifiers et références.\n   * Retourne un Observable des propriétés enrichies.\n   */\n  setPropertiesList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let properties = claimsArray.flatMap(val => val.map(claim => claim.mainsnak.property));\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    properties = this.uniq([...properties, ...qualifierProperties, ...referenceProperties]);\n    const propertiesChunks = this.lessThanFifty(properties);\n\n    if (propertiesChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 propriétés)'));\n    }\n\n    const propertiesLists = propertiesChunks.map(list => this.createList(list).slice(1));\n    while (propertiesLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Crée la liste des items dans les statements, qualifiers et références.\n   * Retourne un Observable des items enrichis.\n   */\n  setItemsList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let items = claimsArray.flatMap(val =>\n      val\n        .filter(claim => claim.mainsnak.datavalue?.value?.id !== undefined)\n        .map(claim => claim.mainsnak.datavalue.value.id)\n    );\n\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    const qualifierItems = this.setQualifierItems(claimsArray, qualifierProperties).filter(Boolean);\n    const referenceItems = this.setReferenceItems(claimsArray, referenceProperties).filter(Boolean);\n\n    items = this.uniq([...items, ...qualifierItems, ...referenceItems]);\n    const itemsChunks = this.lessThanFifty(items);\n\n    if (itemsChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 items)'));\n    }\n\n    const itemsLists = itemsChunks.map(list => this.createList(list).slice(1));\n    while (itemsLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Retourne la liste unique des propriétés dans les qualifiers et références.\n   */\n  setProperties(arr: any[]): string[] {\n    return arr.flatMap(obj => Object.keys(obj));\n  }\n\n  /**\n   * Fusionne les objets contenus dans un tableau pour créer un seul objet.\n   */\n  mergeObjects(res: any[]): any {\n    // Filtrer les objets valides qui possèdent la propriété 'entities'\n    const validObjects = (res ?? []).filter(obj => obj && obj.entities);\n    let u = validObjects.length > 0 ? validObjects[0].entities : {};\n    for (const obj of validObjects.slice(1)) {\n      u = { ...u, ...obj.entities };\n    }\n    return u;\n  }\n\n\n  /**\n   * Retourne la liste des items dans les qualifiers.\n   */\n  setQualifierItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        for (const prop of arr) {\n          if (claim.qualifiers?.[prop]) {\n            for (const snak of claim.qualifiers[prop]) {\n              if (snak?.datavalue?.value?.id) {\n                result.push(snak.datavalue.value.id);\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Retourne la liste des items dans les références.\n   */\n  setReferenceItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        if (!claim.references) continue;\n        for (const ref of claim.references) {\n          for (const prop of arr) {\n            const snaks = ref.snaks[prop];\n            if (snaks && snaks[0]?.datatype === 'wikibase-item') {\n              for (const snak of snaks) {\n                if (snak?.datavalue?.value?.id) {\n                  result.push(snak.datavalue.value.id);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Crée une chaîne de caractères à partir d’un tableau, séparée par '|'.\n   */\n  createList(arr: string[]): string {\n    return Array.from(new Set(arr)).reduce((list, item) => list + '|' + item, '');\n  }\n\n  /**\n   * Retourne un tableau sans doublons.\n   */\n  uniq(a: T[]): T[] {\n    return Array.from(new Set(a.filter(Boolean)));\n  }\n\n  /**\n   * Découpe un tableau en sous-tableaux de 50 éléments maximum.\n   */\n  lessThanFifty(arr: T[]): T[][] {\n    const result: T[][] = [];\n    let u = arr.length;\n    let tempArr = arr.slice();\n    while (u > 0) {\n      result.push(tempArr.slice(0, 50));\n      tempArr = tempArr.slice(50);\n      u = tempArr.length;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CommaJoinPipe.html":{"url":"pipes/CommaJoinPipe.html","title":"pipe - CommaJoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CommaJoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/comma-join.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        commaJoin\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(input: Array, sep: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/comma-join.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                sep\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ', '\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'commaJoin',\n    standalone: true\n})\nexport class CommaJoinPipe implements PipeTransform {\n\n  transform(input: Array, sep = ', '):string { if (input !==undefined) \n    return input.join(sep);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateCompleteItemService.html":{"url":"injectables/CreateCompleteItemService.html","title":"injectable - CreateCompleteItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateCompleteItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/create-complete-item.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createItem\n                            \n                            \n                                    Private\n                                itemInfo\n                            \n                            \n                                    Private\n                                itemSparql\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                    Private\n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                completeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        completeItem\n                        \n                    \n                \n            \n            \n                \ncompleteItem(res)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/create-complete-item.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createItem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CreateItemToDisplayService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/create-complete-item.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        itemInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ItemInfoService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/create-complete-item.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        itemSparql\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ItemSparqlService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/create-complete-item.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/create-complete-item.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SetLanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/create-complete-item.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { CreateItemToDisplayService } from './create-item-to-display.service';\nimport { ItemInfoService } from './item-info.service';\nimport { SetLanguageService } from './set-language.service';\nimport { SelectedLangService } from '../selected-lang.service';\nimport { ItemSparqlService } from './item-sparql.service';\nimport { map, takeWhile, tap, switchMap, take } from 'rxjs/operators';\nimport { Observable, forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateCompleteItemService {\n  private createItem = inject(CreateItemToDisplayService);\n  private itemInfo = inject(ItemInfoService);\n  private itemSparql = inject(ItemSparqlService);\n  private setLanguage = inject(SetLanguageService);\n  private lang = inject(SelectedLangService);\n\n\n  completeItem(res) { \n \n    let u = this.createItem.createItemToDisplay(res = this.setLanguage.item(res, this.lang.selectedLang)[0], this.lang.selectedLang);\n  \n    this.itemInfo.infoListBuilding(res);\n\n    this.itemSparql.itemSparql(res);\n\n  return u\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateItemToDisplayService.html":{"url":"injectables/CreateItemToDisplayService.html","title":"injectable - CreateItemToDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateItemToDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/create-item-to-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addItemDetails\n                            \n                            \n                                    Private\n                                addPropertyDetails\n                            \n                            \n                                    Private\n                                details\n                            \n                            \n                                    Private\n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createItemToDisplay\n                            \n                            \n                                    Private\n                                enrichClaims\n                            \n                            \n                                    Private\n                                transformClaimsWithP820\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createItemToDisplay\n                        \n                    \n                \n            \n            \n                \ncreateItemToDisplay(re, selectedLang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/create-item-to-display.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                selectedLang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enrichClaims\n                        \n                    \n                \n            \n            \n                \n                        \n                    enrichClaims(re, propertiesDetails, itemsDetails, itemProperties, selectedLang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/create-item-to-display.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Groups all claim enrichment steps for clarity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                propertiesDetails\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemsDetails\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                selectedLang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transformClaimsWithP820\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformClaimsWithP820(item: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/create-item-to-display.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Appends the P820 label (lowercase) in parentheses to the statement label and removes the qualifier\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addItemDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ItemDetailsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/create-item-to-display.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addPropertyDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PropertyDetailsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/create-item-to-display.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DetailsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/create-item-to-display.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SetLanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/create-item-to-display.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { SetLanguageService } from './set-language.service';\nimport { DetailsService } from './details.service';\nimport { PropertyDetailsService } from './property-details.service';\nimport { ItemDetailsService } from './item-details.service';\nimport { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateItemToDisplayService {\n  private setLanguage = inject(SetLanguageService);\n  private details = inject(DetailsService);\n  private addPropertyDetails = inject(PropertyDetailsService);\n  private addItemDetails = inject(ItemDetailsService);\n\n  createItemToDisplay(re, selectedLang) {\n    const itemProperties = Object.keys(re.claims);\n\n    return forkJoin({\n      properties: this.details.setPropertiesList(re),\n      items: this.details.setItemsList(re)\n    }).pipe(\n      map(res => {\n        // Prepare property and item metadata in the selected language\n        const propertiesDetails = this.setLanguage.item2(res.properties, selectedLang);\n        const itemsDetails = this.setLanguage.item2(res.items, selectedLang);\n\n        // Enrich the claims with all necessary details\n        this.enrichClaims(re, propertiesDetails, itemsDetails, itemProperties, selectedLang);\n\n        // Apply the P820 label transformation\n        this.transformClaimsWithP820(re);\n\n        // Retrieve qualifier and reference property lists\n        const qualifierProperties = this.addPropertyDetails.addQualifierPropertyDetails(propertiesDetails, re, itemProperties)[1];\n        const referenceProperties = this.details.getReferenceProperties(re);\n\n        // Build the final item structure\n        const item = this.addItemDetails.addReference2ItemDetails(itemsDetails, re, itemProperties);\n\n        return [item, itemProperties, qualifierProperties, referenceProperties];\n      })\n    );\n  }\n\n  /** Groups all claim enrichment steps for clarity */\n  private enrichClaims(re, propertiesDetails, itemsDetails, itemProperties, selectedLang) {\n    this.addItemDetails.addSitelinksDetails(re);\n    this.addPropertyDetails.addClaimPropertyDetails(propertiesDetails, re, itemProperties);\n    this.addPropertyDetails.addQualifierPropertyDetails(propertiesDetails, re, itemProperties);\n    this.addPropertyDetails.addQualifier2PropertyDetails(propertiesDetails, re, itemProperties);\n    this.addPropertyDetails.addReferencePropertyDetails(propertiesDetails, re, itemProperties);\n    this.addPropertyDetails.addReference2PropertyDetails(propertiesDetails, re, itemProperties);\n\n    this.addItemDetails.addClaimItemDetails(itemsDetails, re, itemProperties, selectedLang);\n    this.addItemDetails.addQualifierItemDetails(itemsDetails, re, itemProperties, selectedLang);\n    this.addItemDetails.addReferenceItemDetails(itemsDetails, re, itemProperties, selectedLang);\n  }\n\n  /** Appends the P820 label (lowercase) in parentheses to the statement label and removes the qualifier */\n  private transformClaimsWithP820(item: any) {\n    let claims = item.claims;\n    if (!claims) return;\n\n    for (const prop of Object.keys(claims)) {\n      for (const statement of claims[prop]) {\n        if (!statement.qualifiers2 || !statement.qualifiers) continue;\n\n        const p820Qualifier2 = statement.qualifiers2.find(q => q.id === 'P820');\n        if (p820Qualifier2 && p820Qualifier2.display && p820Qualifier2.display.length > 0) {\n          // Lowercase the first letter of each label\n          const roleLabels = p820Qualifier2.display\n            .map(d => d.label ? d.label.charAt(0).toLowerCase() + d.label.slice(1) : '')\n            .filter(label => !!label)\n            .join(', ');\n\n          if (roleLabels && statement.mainsnak.label) {\n            statement.mainsnak.label += ` (${roleLabels})`;\n          } else if (roleLabels) {\n            statement.mainsnak.label = `(${roleLabels})`;\n          }\n        }\n\n        // Remove the now-unnecessary P820 qualifier\n        if (statement.qualifiers['P820']) {\n          delete statement.qualifiers['P820'];\n        }\n        if (statement.qualifiers2) {\n          statement.qualifiers2 = statement.qualifiers2.filter(q => q.id !== 'P820');\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CustomDatePipe.html":{"url":"pipes/CustomDatePipe.html","title":"pipe - CustomDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CustomDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/custom-date.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        customDate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-date.pipe.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage['selectedLang']\n                    \n                \n                    \n                        \n                                Defined in src/app/custom-date.pipe.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe} from '@angular/common';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n  name: 'customDate',\n  pure: false\n})\nexport class CustomDatePipe implements PipeTransform { //transform FactGrid-date format into ISO-date format in order to use Angular Date Pipe\n  \n  // constructor(private translateService:TranslateService, private datePipe:DatePipe ) {super('customDate')}\n\n  currentLang= localStorage['selectedLang'];\n  \n  transform(value: any): any {\n    if (value !== undefined){\n      if (value.slice(value.length - 13) !== \"-00T00:00:00Z\" ||\n      value.slice(value.length - 15) !== \"01-01T00:00:00Z\"){\n         value = value.substring(1);\n        }\n  }\n //   return super.transform(value, pattern ='mediumDate', this.translateService.currentLang)\n  \n    return value\n    ;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/variable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            statement\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            types\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        statement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statement:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        types\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        types:         Statement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Statement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:         Statement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Statement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Data {\n  statement: number;\n  types?: Statement;\n  values?: Statement;\n}\n\nexport interface Statement {\n  options: Variable[];\n  selections?: Variable[];\n}\n\nexport interface Variable {\n  label: string;\n  id?: string;\n  type?: string;\n  order?: number;\n  col?: number;\n  originalLabel?: string;\n\n}\n\n\n\n\nexport interface Selection {\n  variable: number[];\n  label: string;\n  id: string;\n}\n\n\n\n\nexport const ITEMTYPES: Variable[] = [\n  { label: '?activity', id: 'Q256699', order:0 },\n  { label: '?archive', id: 'Q21870', order: 0 },\n  { label: '?artefact', id: 'Q101755', order: 0 },\n  { label: '?book', id: 'Q100626', order: 0 },\n  { label: '?career', id: 'Q77493', order: 0 },\n  { label: '?city', id: 'Q77500', order: 0 },\n  { label: '?context', id: 'Q77500', order: 0 },\n  { label: '?country', id: 'Q77500', order: 0 },\n  { label: '?date', id: \"Q77483\", order: 0 },\n  { label: '?document', id: 'Q21870', order: 0 },\n  { label: '?education', id: 'Q100631', order: 0 },\n  { label: '?event', id: 'Q77499', order: 0 },\n  { label: '?freemasonry', id: 'Q23197', order: 0 },\n  { label: '?group', id: 'Q77498', order: 0 },\n  { label: '?human', id: 'Q77478', order: 0 },\n  { label: '?human work', id: 'Q77495', order: 0 },\n  { label: '?name', id: 'Q77488', order: 0 },\n  { label: '?object', id: 'Q101755', order: 0 },\n  { label: '?organisation', id: 'Q77501', order: 0 },\n  { label: '?person', id: 'Q77478',  order: 0 },\n  { label: '?people', id: 'Q77478',  order: 0 },\n{ label: '?place', id: 'Q77500', order: 0 },\n{ label: '?printed document', id: 'Q100626', order: 0 },\n{ label: '?profession', id: 'Q256699', order: 0 },\n  { label: '?publication', id: 'Q77502', order: 0 },\n];\n\n\n\n\nexport const LITERALS: Variable[] = [\n  { label: \"write literal string\", type: \"String\", col: 0 },\n  { label: \"write date : YYYY-MM-DD\", type: \"Time\", col: 0 },\n  { label: \"write number\", type:\"Quantity\", col:0 },\n  { label: \"None\", type: \"Any\", col: 2 },\n  { label: \"None\", type: \"Any\", col: 3 },\n  { label: \"None\", type: \"Any\", col: 4 },\n  { label: '?date', type: \"Time\", col: 0 },\n  { label: '?date1', type: \"Time\", col: 1 },\n  { label: '?date2', type: \"Time\", col: 2 },\n  { label: '?date3', type: \"Time\", col: 3 },\n  { label: '?date4', type: \"Time\", col: 4 },\n  { label: '?date5', type: \"Time\", col: 5 },\n  { label: '?string', type: \"String\", col: 0 },\n  { label: '?string1', type: \"String\", col: 1 },\n  { label: '?string2', type: \"String\", col: 2 },\n  { label: '?string3', type: \"String\", col: 3 },\n  { label: '?string4', type: \"String\", col: 4 },\n  /*{ label: '?context', type: 'String', col: 0 },\n  { label: '?context1', type: 'String', col: 1 },\n  { label: '?context2', type: 'String', col: 2 },\n  { label: '?context3', type: 'String', col: 3 },\n  { label: '?context4', type: 'String', col: 4 },*/\n  { label: '?amount', type: \"Quantity\", col: 0 },\n  { label: '?amount1', type: \"Quantity\", col: 1 },\n  { label: '?amount2', type: \"Quantity\", col: 2 },\n  { label: '?amount3', type: \"Quantity\", col: 3 },\n  { label: '?number', type: \"Quantity\", col: 0 },\n  { label: '?number1', type: \"Quantity\", col: 1 },\n  { label: '?number2', type: \"Quantity\", col: 2 },\n  { label: '?number3', type: \"Quantity\", col: 3 }\n]\n\nexport const QUALIFIERTYPES: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23]; // list of columns for the qualifier types\n\nexport const MUTATOR: Variable[][] = [\n  [{ label: '?activity', id: 'Q256699', col: 0 }, { label: '?archive', id: 'Q21870', col: 1 }, { label: '?artefact', id: 'Q101755', col: 2 }, { label: '?book', id: 'Q100626', col: 3 }, { label: '?career', id: 'Q77493', col: 4 }, { label: '?city', id: 'Q77500', col: 5 }, { label: '?country', id: 'Q77500', col: 6 }, { label: '?date', id: \"Q77483\", col: 7 }, { label: '?document', id: 'Q21870', col: 8 }, { label: '?education', id: 'Q100631', col: 9 }, { label: '?event', id: 'Q77499', col: 10 }, { label: '?freemasonry', id: 'Q23197', col: 11 }, { label: '?group', id: 'Q77498', col: 12 }, { label: '?human', id: 'Q77478', col: 13 }, { label: '?human work', id: 'Q77495', col: 14 }, { label: '?name', id: 'Q77488', col: 15 }, { label: '?object', id: 'Q101755', col: 16 }, { label: '?organisation', id: 'Q77501', col: 17 }, { label: '?people', id: 'Q77478', col: 18 }, { label: '?person', id: 'Q77478', col: 19 }, { label: '?place', id: 'Q77500', col: 20 }, { label: '?printed document', id: 'Q100626', col: 21 }, { label: '?profession', id: 'Q256699', col: 22 }, { label: '?publication', id: 'Q77502', col: 23 }],\n  [{ label: '?activity1', id: 'Q256699', col: 0 }, { label: '?archive1', id: 'Q21870', col: 1 }, { label: '?artefact1', id: 'Q101755', col: 2 }, { label: '?book1', id: 'Q100626', col: 3 }, { label: '?career1', id: 'Q77493', col: 4 }, { label: '?city1', id: 'Q77500', col: 5 }, { label: '?country1', id: 'Q77500', col: 6 }, { label: '?date1', id: \"Q77483\", col: 7 }, { label: '?document1', id: 'Q21870', col: 8 }, { label: '?education1', id: 'Q100631', col: 9 }, { label: '?event1', id: 'Q77499', col: 10 }, { label: '?freemasonry1', id: 'Q23197', col: 11 }, { label: '?group1', id: 'Q77498', col: 12 }, { label: '?human1', id: 'Q77478', col: 13 }, { label: '?human work1', id: 'Q77495', col: 14 }, { label: '?name1', id: 'Q77488', col: 15 }, { label: '?object1', id: 'Q101755', col: 16 }, { label: '?organisation1', id: 'Q77501', col: 17 }, { label: '?people1', id: 'Q77478', col: 18 }, { label: '?person1', id: 'Q77478', col: 19 }, { label: '?place1', id: 'Q77500', col: 20 }, { label: '?printed document1', id: 'Q100626', col: 21 }, { label: '?profession1', id: 'Q256699', col: 22 }, { label: '?publication1', id: 'Q77502', col:23}],\n  [{ label: '?activity2', id: 'Q256699', col: 0 }, { label: '?archive2', id: 'Q21870', col: 1 }, { label: '?artefact2', id: 'Q101755', col: 2 }, { label: '?book2', id: 'Q100626', col: 3 }, { label: '?career2', id: 'Q77493', col: 4 }, { label: '?city2', id: 'Q77500', col: 5 }, { label: '?country2', id: 'Q77500', col: 6 }, { label: '?date2', id: \"Q77483\", col: 7 }, { label: '?document2', id: 'Q21870', col: 8 }, { label: '?education2', id: 'Q100631', col: 9 }, { label: '?event2', id: 'Q77499', col: 10 }, { label: '?freemasonry2', id: 'Q23197', col: 11 }, { label: '?group2', id: 'Q77498', col: 12 }, { label: '?human2', id: 'Q77478', col: 13 }, { label: '?human work2', id: 'Q77495', col: 14 }, { label: '?name2', id: 'Q77488', col: 15 }, { label: '?object2', id: 'Q101755', col: 16 }, { label: '?organisation2', id: 'Q77501', col: 17 }, { label: '?people2', id: 'Q77478', col: 18 }, { label: '?person2', id: 'Q77478', col: 19 }, { label: '?place2', id: 'Q77500', col: 20 }, { label: '?printed document2', id: 'Q100626', col: 21 }, { label: '?profession2', id: 'Q256699', col: 22 }, { label: '?publication2', id: 'Q77502', col:23}],\n  [{ label: '?activity3', id: 'Q256699', col: 0 }, { label: '?archive3', id: 'Q21870', col: 1 }, { label: '?artefact3', id: 'Q101755', col: 2 }, { label: '?book3', id: 'Q100626', col: 3 }, { label: '?career3', id: 'Q77493', col: 4 }, { label: '?city3', id: 'Q77500', col: 5 }, { label: '?country3', id: 'Q77500', col: 6 }, { label: '?date3', id: \"Q77483\", col: 7 }, { label: '?document3', id: 'Q21870', col: 8 }, { label: '?education3', id: 'Q100631', col: 9 }, { label: '?event3', id: 'Q77499', col: 10 }, { label: '?freemasonry3', id: 'Q23197', col: 11 }, { label: '?group3', id: 'Q77498', col: 12 }, { label: '?human3', id: 'Q77478', col: 13 }, { label: '?human work3', id: 'Q77495', col: 14 }, { label: '?name3', id: 'Q77488', col: 15 }, { label: '?object3', id: 'Q101755', col: 16 }, { label: '?organisation3', id: 'Q77501', col: 17 }, { label: '?people3', id: 'Q77478', col: 18 }, { label: '?person3', id: 'Q77478', col: 19 }, { label: '?place3', id: 'Q77500', col: 20 }, { label: '?printed document3', id: 'Q100626', col: 21 }, { label: '?profession3', id: 'Q256699', col: 22 }, { label: '?publication3', id: 'Q77502', col:23}],\n  [{ label: '?activity4', id: 'Q256699', col: 0 }, { label: '?archive4', id: 'Q21870', col: 1 }, { label: '?artefact4', id: 'Q101755', col: 2 }, { label: '?book4', id: 'Q100626', col: 3 }, { label: '?career4', id: 'Q77493', col: 4 }, { label: '?city4', id: 'Q77500', col: 5 }, { label: '?country4', id: 'Q77500', col: 6 }, { label: '?date4', id: \"Q77483\", col: 7 }, { label: '?document4', id: 'Q21870', col: 8 }, { label: '?education4', id: 'Q100631', col: 9 }, { label: '?event4', id: 'Q77499', col: 10 }, { label: '?freemasonry4', id: 'Q23197', col: 11 }, { label: '?group4', id: 'Q77498', col: 12 }, { label: '?human4', id: 'Q77478', col: 13 }, { label: '?human work4', id: 'Q77495', col: 14 }, { label: '?name4', id: 'Q77488', col: 15 }, { label: '?object4', id: 'Q101755', col: 16 }, { label: '?organisation4', id: 'Q77501', col: 17 }, { label: '?people4', id: 'Q77478', col: 18 }, { label: '?person4', id: 'Q77478', col: 19 }, { label: '?place4', id: 'Q77500', col: 20 }, { label: '?printed document4', id: 'Q100626', col: 21 }, { label: '?profession4', id: 'Q256699', col: 22 }, { label: '?publication4', id: 'Q77502', col:23}],\n  [{ label: '?activity5', id: 'Q256699', col: 0 }, { label: '?archive5', id: 'Q21870', col: 1 }, { label: '?artefact5', id: 'Q101755', col: 2 }, { label: '?book5', id: 'Q100626', col: 3 }, { label: '?career5', id: 'Q77493', col: 4 }, { label: '?city5', id: 'Q77500', col: 5 }, { label: '?country5', id: 'Q77500', col: 6 }, { label: '?date5', id: \"Q77483\", col: 7 }, { label: '?document5', id: 'Q21870', col: 8 }, { label: '?education5', id: 'Q100631', col: 9 }, { label: '?event5', id: 'Q77499', col: 10 }, { label: '?freemasonry5', id: 'Q23197', col: 11 }, { label: '?group5', id: 'Q77498', col: 12 }, { label: '?human5', id: 'Q77478', col: 13 }, { label: '?human work5', id: 'Q77495', col: 14 }, { label: '?name5', id: 'Q77488', col: 15 }, { label: '?object5', id: 'Q101755', col: 16 }, { label: '?organisation5', id: 'Q77501', col: 17 }, { label: '?people5', id: 'Q77478', col: 18 }, { label: '?person5', id: 'Q77478', col: 19 }, { label: '?place5', id: 'Q77500', col: 20 }, { label: '?printed document5', id: 'Q100626', col: 21 }, { label: '?profession5', id: 'Q256699', col: 22 }, { label: '?publication5', id: 'Q77502', col:23}]\n]\n\n\n\nexport const _MUTATOR: Variable[][] = [\n[{ label: '?activity', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date', id: '', col: 25, type: \"Time\" }, { label: '?string', id: '', col: 26, type: \"String\" }, { label: '?amount', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity1', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive1', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact1', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book1', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career1', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city1', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context1', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country1', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document1', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education1', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event1', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry1', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group1', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human1', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work1', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name1', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object1', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation1', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people1', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person1', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place1', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document1', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession1', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication1', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date1', id: '', col: 25, type: \"Time\" }, { label: '?string1', id: '', col: 26, type: \"String\" }, { label: '?amount1', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity2', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive2', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact2', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book2', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career2', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city2', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context2', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country2', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document2', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education2', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event2', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry2', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group2', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human2', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work2', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name2', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object2', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation2', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people2', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person2', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place2', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document2', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession2', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication2', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date2', id: '', col: 25, type: \"Time\" }, { label: '?string2', id: '', col: 26, type: \"String\" }, { label: '?amount2', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity3', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive3', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact3', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book3', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career3', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city3', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context3', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country3', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document3', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education3', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event3', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry3', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group3', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human3', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work3', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name3', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object3', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation3', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people3', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person3', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place3', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document3', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession3', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication3', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date3', id: '', col: 25, type: \"Time\" }, { label: '?string3', id: '', col: 26, type: \"String\" }, { label: '?amount3', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity4', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive4', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact4', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book4', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career4', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city4', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context4', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country4', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document4', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education4', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event4', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry4', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group4', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human4', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work4', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name4', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object4', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation4', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people4', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person4', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place4', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document4', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession4', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication4', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date4', id: '', col: 25, type: \"Time\" }, { label: '?string4', id: '', col: 26, type: \"String\" }, { label: '?amount4', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity5', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive5', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact5', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book5', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career5', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city5', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context5', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country5', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document5', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education5', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event5', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry5', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group5', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human5', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work5', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name5', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object5', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation5', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people5', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person5', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place5', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document5', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession5', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication5', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date5', id: '', col: 25, type: \"Time\" }, { label: '?string5', id: '', col: 26, type: \"String\" }, { label: '?amount5', id: '', col: 27, type: \"Quantity\" }]\n]\n\nexport const MUTATOR2: Variable[][] = [\n  [{ label: 'activity', id: 'Q256699', col: 0 }, { label: 'archive', id: 'Q21870', col: 1 }, { label: 'artefact', id: 'Q101755', col: 2 }, { label: 'book', id: 'Q100626', col: 3 }, { label: 'career', id: 'Q77493', col: 4 }, { label: 'city', id: 'Q77500', col: 5 }, { label: 'country', id: 'Q77500', col: 6 }, { label: 'date', id: \"Q77483\", col: 7 }, { label: 'document', id: 'Q21870', col: 8 }, { label: 'education', id: 'Q100631', col: 9 }, { label: 'event', id: 'Q77499', col: 10 }, { label: 'freemasonry', id: 'Q23197', col: 11 }, { label: 'group', id: 'Q77498', col: 12 }, { label: 'human', id: 'Q77478', col: 13 }, { label: 'human work', id: 'Q77495', col: 14 }, { label: 'name', id: 'Q77488', col: 15 }, { label: 'object', id: 'Q101755', col: 16 }, { label: 'organisation', id: 'Q77501', col: 17 }, { label: 'people', id: 'Q77478', col: 18 }, { label: 'person', id: 'Q77478', col: 19 }, { label: 'place', id: 'Q77500', col: 20 }, { label: 'printed document', id: 'Q100626', col: 21 }, { label: 'profession', id: 'Q256699', col: 22 }, { label: 'publication', id: 'Q77502', col: 23 }],\n  [{ label: 'activity1', id: 'Q256699', col: 0 }, { label: 'archive1', id: 'Q21870', col: 1 }, { label: 'artefact1', id: 'Q101755', col: 2 }, { label: 'book1', id: 'Q100626', col: 3 }, { label: 'career1', id: 'Q77493', col: 4 }, { label: 'city1', id: 'Q77500', col: 5 }, { label: 'country1', id: 'Q77500', col: 6 }, { label: 'date1', id: \"Q77483\", col: 7 }, { label: 'document1', id: 'Q21870', col: 8 }, { label: 'education1', id: 'Q100631', col: 9 }, { label: 'event1', id: 'Q77499', col: 10 }, { label: 'freemasonry1', id: 'Q23197', col: 11 }, { label: 'group1', id: 'Q77498', col: 12 }, { label: 'human1', id: 'Q77478', col: 13 }, { label: 'human work1', id: 'Q77495', col: 14 }, { label: 'name1', id: 'Q77488', col: 15 }, { label: 'object1', id: 'Q101755', col: 16 }, { label: 'organisation1', id: 'Q77501', col: 17 }, { label: 'people1', id: 'Q77478', col: 18 }, { label: 'person1', id: 'Q77478', col: 19 }, { label: 'place1', id: 'Q77500', col: 20 }, { label: 'printed document1', id: 'Q100626', col: 21 }, { label: 'profession1', id: 'Q256699', col: 22 }, { label: 'publication1', id: 'Q77502', col: 23 }],\n  [{ label: 'activity2', id: 'Q256699', col: 0 }, { label: 'archive2', id: 'Q21870', col: 1 }, { label: 'artefact2', id: 'Q101755', col: 2 }, { label: 'book2', id: 'Q100626', col: 3 }, { label: 'career2', id: 'Q77493', col: 4 }, { label: 'city2', id: 'Q77500', col: 5 }, { label: 'country2', id: 'Q77500', col: 6 }, { label: 'date2', id: \"Q77483\", col: 7 }, { label: 'document2', id: 'Q21870', col: 8 }, { label: 'education2', id: 'Q100631', col: 9 }, { label: 'event2', id: 'Q77499', col: 10 }, { label: 'freemasonry2', id: 'Q23197', col: 11 }, { label: 'group2', id: 'Q77498', col: 12 }, { label: 'human2', id: 'Q77478', col: 13 }, { label: 'human work2', id: 'Q77495', col: 14 }, { label: 'name2', id: 'Q77488', col: 15 }, { label: 'object2', id: 'Q101755', col: 16 }, { label: 'organisation2', id: 'Q77501', col: 17 }, { label: 'people2', id: 'Q77478', col: 18 }, { label: 'person2', id: 'Q77478', col: 19 }, { label: 'place2', id: 'Q77500', col: 20 }, { label: 'printed document2', id: 'Q100626', col: 21 }, { label: 'profession2', id: 'Q256699', col: 22 }, { label: 'publication2', id: 'Q77502', col: 23 }],\n  [{ label: 'activity3', id: 'Q256699', col: 0 }, { label: 'archive3', id: 'Q21870', col: 1 }, { label: 'artefact3', id: 'Q101755', col: 2 }, { label: 'book3', id: 'Q100626', col: 3 }, { label: 'career3', id: 'Q77493', col: 4 }, { label: 'city3', id: 'Q77500', col: 5 }, { label: 'country3', id: 'Q77500', col: 6 }, { label: 'date3', id: \"Q77483\", col: 7 }, { label: 'document3', id: 'Q21870', col: 8 }, { label: 'education3', id: 'Q100631', col: 9 }, { label: 'event3', id: 'Q77499', col: 10 }, { label: 'freemasonry3', id: 'Q23197', col: 11 }, { label: 'group3', id: 'Q77498', col: 12 }, { label: 'human3', id: 'Q77478', col: 13 }, { label: 'human work3', id: 'Q77495', col: 14 }, { label: 'name3', id: 'Q77488', col: 15 }, { label: 'object3', id: 'Q101755', col: 16 }, { label: 'organisation3', id: 'Q77501', col: 17 }, { label: 'people3', id: 'Q77478', col: 18 }, { label: 'person3', id: 'Q77478', col: 19 }, { label: 'place3', id: 'Q77500', col: 20 }, { label: 'printed document3', id: 'Q100626', col: 21 }, { label: 'profession3', id: 'Q256699', col: 22 }, { label: 'publication3', id: 'Q77502', col: 23 }],\n  [{ label: 'activity4', id: 'Q256699', col: 0 }, { label: 'archive4', id: 'Q21870', col: 1 }, { label: 'artefact4', id: 'Q101755', col: 2 }, { label: 'book4', id: 'Q100626', col: 3 }, { label: 'career4', id: 'Q77493', col: 4 }, { label: 'city4', id: 'Q77500', col: 5 }, { label: 'country4', id: 'Q77500', col: 6 }, { label: 'date4', id: \"Q77483\", col: 7 }, { label: 'document4', id: 'Q21870', col: 8 }, { label: 'education4', id: 'Q100631', col: 9 }, { label: 'event4', id: 'Q77499', col: 10 }, { label: 'freemasonry4', id: 'Q23197', col: 11 }, { label: 'group4', id: 'Q77498', col: 12 }, { label: 'human4', id: 'Q77478', col: 13 }, { label: 'human work4', id: 'Q77495', col: 14 }, { label: 'name4', id: 'Q77488', col: 15 }, { label: 'object4', id: 'Q101755', col: 16 }, { label: 'organisation4', id: 'Q77501', col: 17 }, { label: 'people4', id: 'Q77478', col: 18 }, { label: 'person4', id: 'Q77478', col: 19 }, { label: 'place4', id: 'Q77500', col: 20 }, { label: 'printed document4', id: 'Q100626', col: 21 }, { label: 'profession4', id: 'Q256699', col: 22 }, { label: 'publication4', id: 'Q77502', col: 23 }],\n  [{ label: 'activity5', id: 'Q256699', col: 0 }, { label: 'archive5', id: 'Q21870', col: 1 }, { label: 'artefact5', id: 'Q101755', col: 2 }, { label: 'book5', id: 'Q100626', col: 3 }, { label: 'career5', id: 'Q77493', col: 4 }, { label: 'city5', id: 'Q77500', col: 5 }, { label: 'country5', id: 'Q77500', col: 6 }, { label: 'date5', id: \"Q77483\", col: 7 }, { label: 'document5', id: 'Q21870', col: 8 }, { label: 'education5', id: 'Q100631', col: 9 }, { label: 'event5', id: 'Q77499', col: 10 }, { label: 'freemasonry5', id: 'Q23197', col: 11 }, { label: 'group5', id: 'Q77498', col: 12 }, { label: 'human5', id: 'Q77478', col: 13 }, { label: 'human work5', id: 'Q77495', col: 14 }, { label: 'name5', id: 'Q77488', col: 15 }, { label: 'object5', id: 'Q101755', col: 16 }, { label: 'organisation5', id: 'Q77501', col: 17 }, { label: 'people5', id: 'Q77478', col: 18 }, { label: 'person5', id: 'Q77478', col: 19 }, { label: 'place5', id: 'Q77500', col: 20 }, { label: 'printed document5', id: 'Q100626', col: 21 }, { label: 'profession5', id: 'Q256699', col: 22 }, { label: 'publication5', id: 'Q77502', col: 23 }]\n]\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/services/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentStatement\n                            \n                            \n                                currentStatement$\n                            \n                            \n                                formerItemTypes\n                            \n                            \n                                formerItemTypes$\n                            \n                            \n                                itemTypes\n                            \n                            \n                                itemTypes$\n                            \n                            \n                                itemTypes1\n                            \n                            \n                                itemTypes1$\n                            \n                            \n                                itemTypes2\n                            \n                            \n                                itemTypes2$\n                            \n                            \n                                mutator\n                            \n                            \n                                mutator$\n                            \n                            \n                                mutatorForItemValue\n                            \n                            \n                                mutatorForItemValue$\n                            \n                            \n                                mutatorForNextStatement\n                            \n                            \n                                mutatorForNextStatement$\n                            \n                            \n                                propertiesList\n                            \n                            \n                                propertiesList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                lastItemTypes$\n                            \n                            \n                                updateCurrentStatement\n                            \n                            \n                                updateFormerItemTypes\n                            \n                            \n                                updateItemTypes\n                            \n                            \n                                updateItemTypes1\n                            \n                            \n                                updateItemTypes2\n                            \n                            \n                                updateMutator\n                            \n                            \n                                updateMutatorForItemValue\n                            \n                            \n                                updateMutatorForNextStatement\n                            \n                            \n                                updatePropertiesList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/search/advanced-search/services/data.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        lastItemTypes$\n                        \n                    \n                \n            \n            \n                \nlastItemTypes$(u$: Observable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u$\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCurrentStatement\n                        \n                    \n                \n            \n            \n                \nupdateCurrentStatement(i)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFormerItemTypes\n                        \n                    \n                \n            \n            \n                \nupdateFormerItemTypes(itemTypes)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                itemTypes\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemTypes\n                        \n                    \n                \n            \n            \n                \nupdateItemTypes(item)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemTypes1\n                        \n                    \n                \n            \n            \n                \nupdateItemTypes1(item)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemTypes2\n                        \n                    \n                \n            \n            \n                \nupdateItemTypes2(item)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMutator\n                        \n                    \n                \n            \n            \n                \nupdateMutator(mutator: Variable[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mutator\n                                            \n                                                            Variable[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMutatorForItemValue\n                        \n                    \n                \n            \n            \n                \nupdateMutatorForItemValue(mutator: Variable[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mutator\n                                            \n                                                            Variable[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMutatorForNextStatement\n                        \n                    \n                \n            \n            \n                \nupdateMutatorForNextStatement(mutator: Variable[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mutator\n                                            \n                                                            Variable[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePropertiesList\n                        \n                    \n                \n            \n            \n                \nupdatePropertiesList(list)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/data.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                list\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentStatement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStatement$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.currentStatement.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formerItemTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([ITEMTYPES])\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formerItemTypes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.formerItemTypes.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(ITEMTYPES)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTypes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.itemTypes.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTypes1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTypes1$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.itemTypes1.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTypes2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTypes2$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.itemTypes2.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(MUTATOR)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutator$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.mutator.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutatorForItemValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(MUTATOR)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutatorForItemValue$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.mutator.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutatorForNextStatement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(MUTATOR)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutatorForNextStatement$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.mutatorForNextStatement.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesList$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.propertiesList.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/data.service.ts:68\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, computed } from '@angular/core';\nimport { BehaviorSubject, Observable, map, switchMap, combineLatest } from 'rxjs';\nimport { Variable, ITEMTYPES, LITERALS, MUTATOR } from './../variable';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  constructor() { }\n\n  mutator:BehaviorSubject = new BehaviorSubject(MUTATOR);\n\n  mutator$: Observable = this.mutator.asObservable();\n\n  mutatorForItemValue: BehaviorSubject = new BehaviorSubject(MUTATOR);\n\n  mutatorForItemValue$: Observable = this.mutator.asObservable();\n\n  mutatorForNextStatement:BehaviorSubject = new BehaviorSubject(MUTATOR);\n\n  mutatorForNextStatement$:Observable = this.mutatorForNextStatement.asObservable();\n\n\n  updateMutator(mutator: Variable[][]) { this.mutator.next(mutator) };\n\n  updateMutatorForItemValue(mutator: Variable[][]) { this.mutatorForItemValue.next(mutator) }\n\n  updateMutatorForNextStatement(mutator: Variable[][]) { this.mutatorForNextStatement.next(mutator) };\n\n  //  itemTypes: BehaviorSubject = new BehaviorSubject([ITEMTYPES]);\n\n  //  $currentItemTypes: Observable = this.itemTypes.asObservable();\n\n  itemTypes: BehaviorSubject = new BehaviorSubject(ITEMTYPES);\n\n  itemTypes$:Observable = this.itemTypes.asObservable();\n\n  itemTypes1: BehaviorSubject = new BehaviorSubject([]);\n\n  itemTypes1$: Observable = this.itemTypes1.asObservable();\n\n  itemTypes2: BehaviorSubject = new BehaviorSubject([]);\n\n  itemTypes2$: Observable = this.itemTypes2.asObservable();\n\n  formerItemTypes: BehaviorSubject = new BehaviorSubject([ITEMTYPES]);\n\n  formerItemTypes$: Observable = this.formerItemTypes.asObservable();\n\n \n\n  lastItemTypes$(u$:Observable) {\n    return u$.pipe(map(res => res[res.length - 1]))\n  }\n\n\n  updateItemTypes(item) { this.itemTypes.next(item) };\n\n  updateItemTypes1(item) { this.itemTypes1.next(item) };\n\n  updateItemTypes2(item) { this.itemTypes2.next(item) };\n\n  updateFormerItemTypes(itemTypes) { this.formerItemTypes.next(itemTypes) };\n\n  propertiesList:BehaviorSubject = new BehaviorSubject([]);\n\n  propertiesList$ = this.propertiesList.asObservable();\n\n  updatePropertiesList(list) { this.propertiesList.next(list) }\n\n  currentStatement: BehaviorSubject = new BehaviorSubject(0);\n\n  currentStatement$: Observable = this.currentStatement.asObservable();\n\n  updateCurrentStatement(i) { this.currentStatement.next(i) };\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService-1.html":{"url":"injectables/DataService-1.html","title":"injectable - DataService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/services/new-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $currentStatement\n                            \n                            \n                                $mutatorForItemValue\n                            \n                            \n                                $propertiesList\n                            \n                            \n                                currentStatement\n                            \n                            \n                                formerItemTypes\n                            \n                            \n                                formerItemTypes$\n                            \n                            \n                                mutator\n                            \n                            \n                                mutator$\n                            \n                            \n                                mutatorForItemValue\n                            \n                            \n                                newOptions\n                            \n                            \n                                newOptions$\n                            \n                            \n                                objectOptions\n                            \n                            \n                                objectOptions$\n                            \n                            \n                                propertiesList\n                            \n                            \n                                subjectOptions\n                            \n                            \n                                subjectOptions$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                lastItemTypes$\n                            \n                            \n                                updateCurrentStatement\n                            \n                            \n                                updateFormerItemTypes\n                            \n                            \n                                updateMutator\n                            \n                            \n                                updateMutatorForItemValue\n                            \n                            \n                                updateNewOptions\n                            \n                            \n                                updateObjectOptions\n                            \n                            \n                                updatePropertiesList\n                            \n                            \n                                updateSujectOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        lastItemTypes$\n                        \n                    \n                \n            \n            \n                \nlastItemTypes$(u$: Observable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/new-data.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u$\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCurrentStatement\n                        \n                    \n                \n            \n            \n                \nupdateCurrentStatement(i)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/new-data.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFormerItemTypes\n                        \n                    \n                \n            \n            \n                \nupdateFormerItemTypes(itemTypes)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/new-data.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                itemTypes\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMutator\n                        \n                    \n                \n            \n            \n                \nupdateMutator(mutator: Variable[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/new-data.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mutator\n                                            \n                                                            Variable[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMutatorForItemValue\n                        \n                    \n                \n            \n            \n                \nupdateMutatorForItemValue(mutator: Variable[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/new-data.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mutator\n                                            \n                                                            Variable[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNewOptions\n                        \n                    \n                \n            \n            \n                \nupdateNewOptions(item)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/new-data.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateObjectOptions\n                        \n                    \n                \n            \n            \n                \nupdateObjectOptions(item)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/new-data.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePropertiesList\n                        \n                    \n                \n            \n            \n                \nupdatePropertiesList(list)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/new-data.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                list\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSujectOptions\n                        \n                    \n                \n            \n            \n                \nupdateSujectOptions(item)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/new-data.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $currentStatement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.currentStatement.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $mutatorForItemValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.mutatorForItemValue.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $propertiesList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.propertiesList.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStatement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formerItemTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([ITEMTYPES])\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formerItemTypes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.formerItemTypes.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(MUTATOR)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutator$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.mutator.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutatorForItemValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(MUTATOR)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.newOptions.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.objectOptions.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(ITEMTYPES)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjectOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.subjectOptions.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/new-data.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, computed } from '@angular/core';\nimport { BehaviorSubject, Observable, map, switchMap, combineLatest } from 'rxjs';\nimport { Variable, ITEMTYPES, LITERALS, MUTATOR } from './../variable';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  constructor() { }\n\n  mutator:BehaviorSubject = new BehaviorSubject(MUTATOR);\n\n  mutator$:Observable = this.mutator.asObservable();\n\n  mutatorForItemValue:BehaviorSubject = new BehaviorSubject(MUTATOR);\n\n  $mutatorForItemValue:Observable = this.mutatorForItemValue.asObservable();\n\n\n  updateMutator(mutator:Variable[][]) { this.mutator.next(mutator) };\n\n  updateMutatorForItemValue(mutator: Variable[][]) { this.mutatorForItemValue.next(mutator) };\n\n  //  itemTypes: BehaviorSubject = new BehaviorSubject([ITEMTYPES]);\n\n  //  $currentItemTypes: Observable = this.itemTypes.asObservable();\n\n  subjectOptions: BehaviorSubject = new BehaviorSubject(ITEMTYPES);\n\n  subjectOptions$: Observable = this.subjectOptions.asObservable();\n\n  updateSujectOptions(item) { this.subjectOptions.next(item) };\n\n\n  objectOptions: BehaviorSubject = new BehaviorSubject([]);\n\n  objectOptions$: Observable = this.objectOptions.asObservable();\n\n  updateObjectOptions(item) { this.objectOptions.next(item) };\n\n\n  newOptions: BehaviorSubject = new BehaviorSubject([]);\n\n  newOptions$: Observable = this.newOptions.asObservable();\n\n  updateNewOptions(item) { this.newOptions.next(item) };\n\n\n  updateFormerItemTypes(itemTypes) { this.formerItemTypes.next(itemTypes) };\n\n  formerItemTypes: BehaviorSubject = new BehaviorSubject([ITEMTYPES]);\n\n  formerItemTypes$: Observable = this.formerItemTypes.asObservable();\n\n \n\n  lastItemTypes$(u$:Observable) {\n    return u$.pipe(map(res => res[res.length - 1]))\n  }\n\n\n  \n\n  propertiesList:BehaviorSubject = new BehaviorSubject([]);\n\n  $propertiesList = this.propertiesList.asObservable();\n\n  updatePropertiesList(list) { this.propertiesList.next(list) }\n\n  currentStatement: BehaviorSubject = new BehaviorSubject(0);\n\n  $currentStatement: Observable = this.currentStatement.asObservable();\n\n  updateCurrentStatement(i) { this.currentStatement.next(i) };\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DetailsService.html":{"url":"injectables/DetailsService.html","title":"injectable - DetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/details.service (2).ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                requestService\n                            \n                            \n                                    Private\n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                getReferenceProperties\n                            \n                            \n                                lessThanFifty\n                            \n                            \n                                mergeObjects\n                            \n                            \n                                setItemsList\n                            \n                            \n                                setProperties\n                            \n                            \n                                setPropertiesList\n                            \n                            \n                                setQualifierItems\n                            \n                            \n                                setReferenceItems\n                            \n                            \n                                uniq\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(arr: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceProperties\n                        \n                    \n                \n            \n            \n                \ngetReferenceProperties(u: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessThanFifty\n                        \n                    \n                \n            \n            \n                \nlessThanFifty(arr: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeObjects\n                        \n                    \n                \n            \n            \n                \nmergeObjects(res: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItemsList\n                        \n                    \n                \n            \n            \n                \nsetItemsList(u: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setProperties\n                        \n                    \n                \n            \n            \n                \nsetProperties(arr: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPropertiesList\n                        \n                    \n                \n            \n            \n                \nsetPropertiesList(u: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setQualifierItems\n                        \n                    \n                \n            \n            \n                \nsetQualifierItems(values: any[], arr: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                values\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReferenceItems\n                        \n                    \n                \n            \n            \n                \nsetReferenceItems(values: any[], arr: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                values\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uniq\n                        \n                    \n                \n            \n            \n                \nuniq(arr: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service (2).ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/details.service (2).ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SetLanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/details.service (2).ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { SetLanguageService } from './set-language.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailsService {\n  private requestService = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n\n  getReferenceProperties(u: any): any[] {\n    const values = Object.values(u.claims);\n    let referenceProperties: any[] = [];\n\n    values.forEach(val => {\n      val.forEach((u: any) => {\n        if (u.references) {\n          u.references.forEach((ref: any) => {\n            referenceProperties = referenceProperties.concat(ref[\"snaks-order\"]);\n          });\n        }\n      });\n    });\n\n    return this.uniq(referenceProperties);\n  }\n\n  setPropertiesList(u: any) {\n    const values = Object.values(u.claims);\n    let properties: any[] = [];\n    let qualifierProperties: any[] = [];\n    let referenceProperties: any[] = [];\n\n    values.forEach(val => {\n      val.forEach((u: any) => {\n        properties.push(u.mainsnak.property);\n        qualifierProperties = qualifierProperties.concat(u[\"qualifiers-order\"]);\n        if (u.references) {\n          u.references.forEach((ref: any) => {\n            referenceProperties = referenceProperties.concat(ref[\"snaks-order\"]);\n          });\n        }\n      });\n    });\n\n    properties = this.uniq(properties.concat(this.uniq(qualifierProperties)).concat(this.uniq(referenceProperties)));\n    properties = this.lessThanFifty(properties);\n\n    const propertiesLists = properties.map(this.createList).map(list => list.slice(1));\n    if (properties[8] !== undefined) { alert(\"too many statements\"); }\n\n    return this.requestService.requestProperties(...propertiesLists)\n      .pipe(\n        map(res => this.mergeObjects(res)),\n        map(res => Object.values(res))\n      );\n  }\n\n  setItemsList(u: any) {\n    const values = Object.values(u.claims);\n    let items: any[] = [];\n    let qualifierProperties: any[] = [];\n    let referenceProperties: any[] = [];\n\n    values.forEach(val => {\n      val.forEach((u: any) => {\n        if (u.mainsnak.datavalue.value.id) {\n          items.push(u.mainsnak.datavalue.value.id);\n        }\n        qualifierProperties = qualifierProperties.concat(u[\"qualifiers-order\"]);\n        if (u.references) {\n          u.references.forEach((ref: any) => {\n            referenceProperties = referenceProperties.concat(ref[\"snaks-order\"]);\n          });\n        }\n      });\n    });\n\n    items = items.concat(this.setQualifierItems(values, this.uniq(qualifierProperties)))\n      .concat(this.setReferenceItems(values, this.uniq(referenceProperties)))\n      .filter(Boolean);\n\n    items = this.lessThanFifty(this.uniq(items));\n\n    const itemsLists = items.map(this.createList).map(list => list.slice(1));\n    if (items[8] !== undefined) { alert(\"too many statements\"); }\n\n    return this.requestService.requestItems(...itemsLists)\n      .pipe(\n        map(res => this.mergeObjects(res)),\n        map(res => Object.values(res))\n      );\n  }\n\n  setProperties(arr: any[]): any[] {\n    return arr.reduce((result, item) => {\n      return result.concat(Object.keys(item));\n    }, []);\n  }\n\n  mergeObjects(res: any[]): any {\n    return res.reduce((acc, curr) => {\n      return { ...acc, ...curr.entities };\n    }, res[0].entities);\n  }\n\n  setQualifierItems(values: any[], arr: any[]): any[] {\n    return values.reduce((result, val) => {\n      val.forEach((u: any) => {\n        arr.forEach((prop: any) => {\n          if (u.qualifiers && u.qualifiers[prop]) {\n            u.qualifiers[prop].forEach((qualifier: any) => {\n              if (qualifier.datavalue.value.id) {\n                result.push(qualifier.datavalue.value.id);\n              }\n            });\n          }\n        });\n      });\n      return result;\n    }, []);\n  }\n\n  setReferenceItems(values: any[], arr: any[]): any[] {\n    return values.reduce((result, val) => {\n      val.forEach((u: any) => {\n        if (u.references) {\n          u.references.forEach((ref: any) => {\n            arr.forEach((prop: any) => {\n              if (ref.snaks[prop] && ref.snaks[prop].datatype === \"wikibase-item\") {\n                ref.snaks[prop].forEach((snak: any) => {\n                  if (snak.datavalue.value.id) {\n                    result.push(snak.datavalue.value.id);\n                  }\n                });\n              }\n            });\n          });\n        }\n      });\n      return result;\n    }, []);\n  }\n\n  createList(arr: any[]): string {\n    return arr.filter(Boolean).join('|');\n  }\n\n  uniq(arr: any[]): any[] {\n    return Array.from(new Set(arr));\n  }\n\n  lessThanFifty(arr: string[]): string[][] {\n    const result: string[][] = [];\n    while (arr.length > 0) {\n      result.push(arr.splice(0, 50));\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DetailsService-1.html":{"url":"injectables/DetailsService-1.html","title":"injectable - DetailsService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                requestService\n                            \n                            \n                                    Private\n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                getReferenceProperties\n                            \n                            \n                                lessThanFifty\n                            \n                            \n                                mergeObjects\n                            \n                            \n                                setItemsList\n                            \n                            \n                                setProperties\n                            \n                            \n                                setPropertiesList\n                            \n                            \n                                setQualifierItems\n                            \n                            \n                                setReferenceItems\n                            \n                            \n                                uniq\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(arr: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Crée une chaîne de caractères à partir d’un tableau, séparée par '|'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceProperties\n                        \n                    \n                \n            \n            \n                \ngetReferenceProperties(u: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Retourne la liste unique des propriétés de référence d’une entité.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessThanFifty\n                        \n                    \n                \n            \n            \n                \nlessThanFifty(arr: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:216\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Découpe un tableau en sous-tableaux de 50 éléments maximum.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeObjects\n                        \n                    \n                \n            \n            \n                \nmergeObjects(res: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Fusionne les objets contenus dans un tableau pour créer un seul objet.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItemsList\n                        \n                    \n                \n            \n            \n                \nsetItemsList(u: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Crée la liste des items dans les statements, qualifiers et références.\nRetourne un Observable des items enrichis.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setProperties\n                        \n                    \n                \n            \n            \n                \nsetProperties(arr: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Retourne la liste unique des propriétés dans les qualifiers et références.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPropertiesList\n                        \n                    \n                \n            \n            \n                \nsetPropertiesList(u: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Crée la liste des propriétés dans les statements, qualifiers et références.\nRetourne un Observable des propriétés enrichies.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setQualifierItems\n                        \n                    \n                \n            \n            \n                \nsetQualifierItems(values: Claim[][], arr: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Retourne la liste des items dans les qualifiers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                values\n                                            \n                                                            Claim[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arr\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReferenceItems\n                        \n                    \n                \n            \n            \n                \nsetReferenceItems(values: Claim[][], arr: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:176\n                        \n                    \n\n\n            \n                \n                        Retourne la liste des items dans les références.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                values\n                                            \n                                                            Claim[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arr\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uniq\n                        \n                    \n                \n            \n            \n                \nuniq(a: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/details.service.ts:209\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retourne un tableau sans doublons.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/details.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SetLanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/details.service.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { SetLanguageService } from './set-language.service';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n/** Interfaces pour un typage fort */\ninterface Snak {\n  property: string;\n  datatype?: string;\n  datavalue?: { value: { id: string } };\n}\n\ninterface Reference {\n  'snaks-order': string[];\n  snaks: { [key: string]: Snak[] };\n}\n\ninterface Claim {\n  mainsnak: Snak;\n  qualifiers?: { [key: string]: Snak[] };\n  'qualifiers-order'?: string[];\n  references?: Reference[];\n}\n\ninterface ClaimsObject {\n  [property: string]: Claim[];\n}\n\ninterface Entity {\n  claims: ClaimsObject;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailsService {\n  private requestService = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n\n  /**\n   * Retourne la liste unique des propriétés de référence d’une entité.\n   */\n  getReferenceProperties(u: Entity): string[] {\n    const referenceProperties = Object.values(u.claims)\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n    return this.uniq(referenceProperties);\n  }\n\n  /**\n   * Crée la liste des propriétés dans les statements, qualifiers et références.\n   * Retourne un Observable des propriétés enrichies.\n   */\n  setPropertiesList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let properties = claimsArray.flatMap(val => val.map(claim => claim.mainsnak.property));\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    properties = this.uniq([...properties, ...qualifierProperties, ...referenceProperties]);\n    const propertiesChunks = this.lessThanFifty(properties);\n\n    if (propertiesChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 propriétés)'));\n    }\n\n    const propertiesLists = propertiesChunks.map(list => this.createList(list).slice(1));\n    while (propertiesLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Crée la liste des items dans les statements, qualifiers et références.\n   * Retourne un Observable des items enrichis.\n   */\n  setItemsList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let items = claimsArray.flatMap(val =>\n      val\n        .filter(claim => claim.mainsnak.datavalue?.value?.id !== undefined)\n        .map(claim => claim.mainsnak.datavalue.value.id)\n    );\n\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    const qualifierItems = this.setQualifierItems(claimsArray, qualifierProperties).filter(Boolean);\n    const referenceItems = this.setReferenceItems(claimsArray, referenceProperties).filter(Boolean);\n\n    items = this.uniq([...items, ...qualifierItems, ...referenceItems]);\n    const itemsChunks = this.lessThanFifty(items);\n\n    if (itemsChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 items)'));\n    }\n\n    const itemsLists = itemsChunks.map(list => this.createList(list).slice(1));\n    while (itemsLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Retourne la liste unique des propriétés dans les qualifiers et références.\n   */\n  setProperties(arr: any[]): string[] {\n    return arr.flatMap(obj => Object.keys(obj));\n  }\n\n  /**\n   * Fusionne les objets contenus dans un tableau pour créer un seul objet.\n   */\n  mergeObjects(res: any[]): any {\n    // Filtrer les objets valides qui possèdent la propriété 'entities'\n    const validObjects = (res ?? []).filter(obj => obj && obj.entities);\n    let u = validObjects.length > 0 ? validObjects[0].entities : {};\n    for (const obj of validObjects.slice(1)) {\n      u = { ...u, ...obj.entities };\n    }\n    return u;\n  }\n\n\n  /**\n   * Retourne la liste des items dans les qualifiers.\n   */\n  setQualifierItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        for (const prop of arr) {\n          if (claim.qualifiers?.[prop]) {\n            for (const snak of claim.qualifiers[prop]) {\n              if (snak?.datavalue?.value?.id) {\n                result.push(snak.datavalue.value.id);\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Retourne la liste des items dans les références.\n   */\n  setReferenceItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        if (!claim.references) continue;\n        for (const ref of claim.references) {\n          for (const prop of arr) {\n            const snaks = ref.snaks[prop];\n            if (snaks && snaks[0]?.datatype === 'wikibase-item') {\n              for (const snak of snaks) {\n                if (snak?.datavalue?.value?.id) {\n                  result.push(snak.datavalue.value.id);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Crée une chaîne de caractères à partir d’un tableau, séparée par '|'.\n   */\n  createList(arr: string[]): string {\n    return Array.from(new Set(arr)).reduce((list, item) => list + '|' + item, '');\n  }\n\n  /**\n   * Retourne un tableau sans doublons.\n   */\n  uniq(a: T[]): T[] {\n    return Array.from(new Set(a.filter(Boolean)));\n  }\n\n  /**\n   * Découpe un tableau en sous-tableaux de 50 éléments maximum.\n   */\n  lessThanFifty(arr: T[]): T[][] {\n    const result: T[][] = [];\n    let u = arr.length;\n    let tempArr = arr.slice();\n    while (u > 0) {\n      result.push(tempArr.slice(0, 50));\n      tempArr = tempArr.slice(50);\n      u = tempArr.length;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DisplayFlags.html":{"url":"interfaces/DisplayFlags.html","title":"interface - DisplayFlags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DisplayFlags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/services/item-display-dispatcher.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActivity\n                                        \n                                \n                                \n                                        \n                                            isCareer\n                                        \n                                \n                                \n                                        \n                                            isDocument\n                                        \n                                \n                                \n                                        \n                                            isEvent\n                                        \n                                \n                                \n                                        \n                                            isExternalLinks\n                                        \n                                \n                                \n                                        \n                                            isFrames\n                                        \n                                \n                                \n                                        \n                                            isInfoList\n                                        \n                                \n                                \n                                        \n                                            isMain\n                                        \n                                \n                                \n                                        \n                                            isOrg\n                                        \n                                \n                                \n                                        \n                                            isOther\n                                        \n                                \n                                \n                                        \n                                            isPlace\n                                        \n                                \n                                \n                                        \n                                            isSociability\n                                        \n                                \n                                \n                                        \n                                            isSource\n                                        \n                                \n                                \n                                        \n                                            isTraining\n                                        \n                                \n                                \n                                        \n                                            isWikis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActivity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActivity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCareer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCareer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDocument\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDocument:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExternalLinks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExternalLinks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFrames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFrames:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isInfoList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isInfoList:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMain:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOrg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOrg:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOther\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOther:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPlace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPlace:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSociability\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSociability:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSource\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSource:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTraining\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isTraining:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isWikis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isWikis:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { BlockDisplayService } from './block-display.service';\n//import { IframesDisplayService } from './iframes-display.service';\nimport { TechnicalitiesDisplayService } from './technicalities-display.service';\nimport { WikiDisplayService } from './wiki-display.service';\n\n\nexport interface DisplayFlags {\n  isPlace: boolean;\n  isCareer: boolean;\n  isSociability: boolean;\n  isTraining: boolean;\n  isOrg: boolean;\n  isActivity: boolean;\n  isEvent: boolean;\n  isSource: boolean;\n  isDocument: boolean;\n  isOther: boolean;\n  isMain: boolean;\n  isWikis: boolean;\n  isInfoList: boolean;\n  isFrames: boolean;\n  isExternalLinks: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ItemDisplayDispatcherService {\n  \n  private blockDisplay = inject(BlockDisplayService);\n  private wikiDisplay = inject(WikiDisplayService);\n // private iframesDisplay = inject(IframesDisplayService);\n  private technicalitiesDisplay = inject(TechnicalitiesDisplayService);\n\n  dispatch(item: any, target: any): DisplayFlags {\n    const claims = item[0].claims;\n  \n    // Header\n    target.headerDetail = [];\n    this.blockDisplay.setHeaderDisplay(item, target.headerDetail);\n\n    // Place\n    target.locationAndSituation = [];\n    let isPlace = false;\n    if (claims.P2?.place !== undefined) {\n      this.blockDisplay.setPlaceDisplay(item, target.locationAndSituation);\n      isPlace = target.locationAndSituation.length > 0;\n    }\n\n    // Person\n    target.lifeAndFamily = [];\n    let isCareer = false;\n    let isSociability = false;\n    let isTraining = false;\n    if (claims.P2?.person !== undefined) {\n      this.blockDisplay.setPersonDisplay(item, target.lifeAndFamily);\n\n      // Career\n      target.careerAndActivities = [];\n      this.blockDisplay.setCareerDisplay(item, target.careerAndActivities);\n      isCareer = target.careerAndActivities.length > 0;\n      if (isCareer && claims.P2?.career !== undefined) {\n        target.career = claims.P2.career;\n      }\n\n      // Sociability\n      target.sociabilityAndCulture = [];\n      this.blockDisplay.setSociabilityDisplay(item, target.sociabilityAndCulture);\n      isSociability = target.sociabilityAndCulture.length > 0;\n      if (isSociability && claims.P2?.sociability !== undefined) {\n        target.sociability = claims.P2.sociability;\n      }\n\n      // Education\n      target.education = [];\n      this.blockDisplay.setEducationDisplay(item, target.education);\n      isTraining = target.education.length > 0;\n      if (isTraining && claims.P2?.training !== undefined) {\n        target.training = claims.P2.training;\n      }\n    }\n\n    // Organization\n    target.locationAndContext = [];\n    let isOrg = false;\n    if (claims.P2?.org !== undefined) {\n      this.blockDisplay.setOrgDisplay(item, target.locationAndContext);\n      isOrg = target.locationAndContext.length > 0;\n    }\n\n    // Activity\n    target.activityDetail = [];\n    let isActivity = false;\n    if (claims.P2?.activity !== undefined) {\n      this.blockDisplay.setActivityDisplay(item, target.activityDetail);\n      isActivity = target.activityDetail.length > 0;\n    }\n\n    // Event\n    target.eventDetail = [];\n    let isEvent = false;\n    if (claims.P2?.event !== undefined) {\n      this.blockDisplay.setEventDisplay(item, target.eventDetail);\n      isEvent = target.eventDetail.length > 0;\n    }\n\n    // Document\n    target.documentDetail = [];\n    let isDocument = false;\n    if (claims.P2?.document !== undefined) {\n      this.blockDisplay.setDocumentDisplay(item, target.documentDetail);\n      isDocument = target.documentDetail.length > 0;\n    }\n\n    // Sources\n    target.sourcesList = [];\n    let isSource = false;\n    this.blockDisplay.setSourcesDisplay(item, target.sourcesList);\n    isSource = target.sourcesList.length > 0;\n    target.sources = claims.P2?.sources;\n\n    // External links\n    target.externalLinks = [];\n    let isExternalLinks = false;\n    this.blockDisplay.setExternalLinksDisplay(item, target.externalLinks);\n    isExternalLinks = target.externalLinks.length > 0;\n\n    // Others\n    target.otherClaims = [];\n    let isOther = false;\n    if (item[1] && Array.isArray(item[1])) {\n      for (let i = 0; i  0;\n    }\n\n    // Item info\n\n\n\n    // MainList\n    target.mainList = [];\n    let isMain = false;\n\n    if (claims.P2 === undefined) {\n      if (claims.P3 !== undefined) {\n        target.mainList.push(claims.P3);\n      }\n    } else {\n      target.mainList = []\n        .concat(\n          target.lifeAndFamily || [],\n          target.locationAndContext || [],\n          target.locationAndSituation || [],\n          target.activityDetail || [],\n          target.eventDetail || [],\n          target.documentDetail || [],\n          target.otherClaims || []\n      );\n\n /*     Object.keys(claims).forEach(key => {\n        if (key.startsWith('Q') && Array.isArray(claims[key])) {\n          // Par exemple, pour les ajouter à mainList :\n          target.mainList.push(claims[key]);\n        }\n      });\n      */\n\n    }\n    isMain = target.mainList.length > 0;\n    if (claims.P2 !== undefined && claims.P2[0]?.mainsnak?.label !== undefined) {\n      target.mainTitle = claims.P2[0].mainsnak.label;\n    }\n\n    // ... après la construction de target.mainList\n\n\n\n    let isFrames = false;\n\n    /* iframes\n    target.iframes = [];\n    \n    this.iframesDisplay.setIframesDisplay(item, target.iframes);\n    isFrames = target.iframes.length > 0;\n    */\n\n    // InfoList\n   \n    this.blockDisplay.setItemInfoDisplay(item, target);\n\n    let technicalities: any[] = [];\n    this.technicalitiesDisplay.setTechnicalitiesDisplay(item, technicalities);\n\n    target.infoList = {\n      instancesList: target.instancesList,\n      subclassesList: target.subclassesList,\n      classesList: target.classesList,\n      natureOfList: target.natureOfList,\n      technicalities: technicalities\n    };\n\n    // Flag unique pour l'affichage\n    let isInfoList =\n      (target.infoList.instancesList && target.infoList.instancesList.length > 0) ||\n      (target.infoList.subclassesList && target.infoList.subclassesList.length > 0) ||\n      (target.infoList.classesList && target.infoList.classesList.length > 0) ||\n      (target.infoList.natureOfList && target.infoList.natureOfList.length > 0) ||\n      (target.infoList.technicalities && target.infoList.technicalities.length > 0);\n\n\n    // Wikis\n    target.wikis = [];\n    let isWikis = false;\n    this.wikiDisplay.setWikiDisplay(item, target.wikis);\n    isWikis = target.wikis.length > 0;\n\n\n    // ... (autres propriétés comme dans votre code)\n\n\n    // Retourne les flags utiles\n    return {\n      isPlace,\n      isCareer,\n      isSociability,\n      isTraining,\n      isActivity,\n      isDocument,\n      isEvent,\n      isSource,\n      isOrg,\n      isOther,\n      isInfoList,\n      isMain,\n      isWikis,\n      isFrames,\n      isExternalLinks\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EducationDisplayComponent.html":{"url":"components/EducationDisplayComponent.html","title":"component - EducationDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EducationDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/education-display/education-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-education-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            MatCardModule\n                            RouterLink\n                            UnitPipe\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./education-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./education-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openImage\n                            \n                            \n                                toggleReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                education\n                            \n                            \n                                training\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        education\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/education-display/education-display.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        training\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/education-display/education-display.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/education-display/education-display.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openImage\n                        \n                    \n                \n            \n            \n                \nopenImage(image)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/education-display/education-display.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleReferences\n                        \n                    \n                \n            \n            \n                \ntoggleReferences()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/education-display/education-display.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/education-display/education-display.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterLink } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { UnitPipe } from '../../unit.pipe';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Component({\n  selector: 'app-education-display',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\n  templateUrl: './education-display.component.html',\n  styleUrl: './education-display.component.scss'\n})\nexport class EducationDisplayComponent {\n\n @Input() education;\n @Input() training;\n\n  ngOnInit() {\n    console.log('education:', this.education);\n    // Pour chaque entrée, log les qualifiers2\n    this.education?.forEach(P => {\n      P?.forEach(M => {\n        if (M[\"qualifiers-order\"]) {\n          console.log('qualifiers-order', M[\"qualifiers-order\"]);\n        };\n        if (M.qualifiers2) {\n          console.log('qualifiers2:', M.qualifiers2);\n          M.qualifiers2.forEach(Q => {\n            console.log('Q.display:', Q.display);\n          });\n        }\n      });\n    });\n  }\n\n\n  showReferences = false; // état du volet\n\n  toggleReferences() {\n    this.showReferences = !this.showReferences;\n  }\n\n  openImage(image){ //handling click for picture (open in new tab) \n    window.open(image);}\n}\n\n    \n\n    \n        \n  {{training}}\n  @for (P of education; track P) {\n  \n    \n      \n        {{P.label}}:\n      \n    \n    @for (M of P; track M) {\n    \n      \n        @if (M.mainsnak.datatype ==='time') {\n        {{M.mainsnak.datavalue.value.date}}\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\n        \n          greg.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\n        \n          jul.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        }\n        @if (M.mainsnak.datatype==='monolingualtext') {\n        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}\n        }\n        @if (M.mainsnak.datatype === 'string') {\n        {{M.mainsnak.datavalue.value }}\n        }\n        @if (M.mainsnak.datatype === 'url') {\n        \n          {{M.mainsnak.datavalue.value}}\n        \n        }\n        {{M.mainsnak.datavalue.value.amount}}\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\n        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}\n        }\n        @if (M.mainsnak.datatype==='commonsMedia') {\n        \n          \n            \n          \n        \n        }\n        @if (M.mainsnak.datatype==='wikibase-item') {\n        \n          {{M.mainsnak.label}}\n          \n            open_in_new\n          \n          &nbsp;&nbsp;&nbsp;\n        \n        {{M.mainsnak.separator}}\n        {{M.mainsnak.description}}&nbsp;\n        }\n        @if (M.rank=='deprecated') {\n         &nbsp;({{M.rank}})\n        }\n      \n      \n        @if (M['qualifiers-order']) {\n        \n          @for (Q of M.qualifiers2; track Q) {\n          \n            \n              {{Q.label}}:&nbsp;\n            \n            @for (D of Q.display; track D; let isLast = $last) {\n            \n              @if (D.datatype === 'time') {\n              \n                {{D.date}}\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\n                \n                  greg.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\n                \n                  jul.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n              \n              }\n              @if (D.datatype==='string') {\n              \n                {{D.string}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              @if (D.datatype==='monolingualtext') {\n              \n                {{D.string.text}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              {{D.amount}}\n              @if (D.unit) {\n              &nbsp;({{D.unit | unit |async}})&nbsp;\n              }\n              @if (D.datatype === 'external-id') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype === 'url') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype==='wikibase-item') {\n              \n                {{D.label}}\n                \n                  open_in_new\n                \n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\n                {{D.separator}}{{D.description}}\n              \n              }\n              @if (D.datatype==='commonsMedia') {\n              \n                \n                  \n                \n              \n              }\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n          \n          }\n        \n        }\n      \n      \n      @if (M['references2'] && M['references2'].length > 0) {\n      \n        \n        Références\n      \n      @if (showReferences && M['references2']) {\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\n      \n        @for (N of Ma; track N; let isLast = $last) {\n        \n          \n            {{N.label}}:\n          \n          \n            @for (P of N.display; track P; let isLast = $last) {\n            @if (N.datatype === 'wikibase-item') {\n            \n              {{P.label}}\n              \n                open_in_new\n              &nbsp;&nbsp;&nbsp;\n              {{P.separator}}{{P.description}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype==='time') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype==='string') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype === 'url') {\n            \n              {{P}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype === 'external-id') {\n            \n              {{P.value}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            }\n          \n          @if (!isLast) {\n          ,&nbsp;\n          }\n        \n        }\n      \n      }\n      }\n      }\n    \n    }\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{training}}  @for (P of education; track P) {                    {{P.label}}:              @for (M of P; track M) {                  @if (M.mainsnak.datatype ===\\'time\\') {        {{M.mainsnak.datavalue.value.date}}        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {                  greg.                      open_in_new                             }        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {                  jul.                      open_in_new                             }        }        @if (M.mainsnak.datatype===\\'monolingualtext\\') {        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}        }        @if (M.mainsnak.datatype === \\'string\\') {        {{M.mainsnak.datavalue.value }}        }        @if (M.mainsnak.datatype === \\'url\\') {                  {{M.mainsnak.datavalue.value}}                }        {{M.mainsnak.datavalue.value.amount}}        @if (M.mainsnak.datatype === \\'globe-coordinate\\') {        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}        }        @if (M.mainsnak.datatype===\\'commonsMedia\\') {                                                        }        @if (M.mainsnak.datatype===\\'wikibase-item\\') {                  {{M.mainsnak.label}}                      open_in_new                                       {{M.mainsnak.separator}}        {{M.mainsnak.description}}         }        @if (M.rank==\\'deprecated\\') {          ({{M.rank}})        }                    @if (M[\\'qualifiers-order\\']) {                  @for (Q of M.qualifiers2; track Q) {                                    {{Q.label}}:                         @for (D of Q.display; track D; let isLast = $last) {                          @if (D.datatype === \\'time\\') {                              {{D.date}}                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {                                  greg.                                      open_in_new                                                     }                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {                                  jul.                                      open_in_new                                                     }                            }              @if (D.datatype===\\'string\\') {                              {{D.string}}                @if (!isLast) {                ,                 }                            }              @if (D.datatype===\\'monolingualtext\\') {                              {{D.string.text}}                @if (!isLast) {                ,                 }                            }              {{D.amount}}              @if (D.unit) {               ({{D.unit | unit |async}})               }              @if (D.datatype === \\'external-id\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype === \\'url\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype===\\'wikibase-item\\') {                              {{D.label}}                                  open_in_new                                @if(D.description){    }                {{D.separator}}{{D.description}}                            }              @if (D.datatype===\\'commonsMedia\\') {                                                                                            }                        @if (!isLast) {            ,             }            }                    }                }                  @if (M[\\'references2\\'] && M[\\'references2\\'].length > 0) {                      Références            @if (showReferences && M[\\'references2\\']) {      @for (Ma of M[\\'references2\\']; track Ma; let isLast = $last) {              @for (N of Ma; track N; let isLast = $last) {                              {{N.label}}:                                @for (P of N.display; track P; let isLast = $last) {            @if (N.datatype === \\'wikibase-item\\') {                          {{P.label}}                              open_in_new                               {{P.separator}}{{P.description}}                        @if (!isLast) {            ,             }            }            @if (N.datatype===\\'time\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype===\\'string\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype === \\'url\\') {                          {{P}}                        @if (!isLast) {            ,             }            }            @if (N.datatype === \\'external-id\\') {                          {{P.value}}                        @if (!isLast) {            ,             }            }            }                    @if (!isLast) {          ,           }                }            }      }      }        }    }'\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EducationDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/details.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            claims\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        claims\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claims:         ClaimsObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClaimsObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { SetLanguageService } from './set-language.service';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n/** Interfaces pour un typage fort */\ninterface Snak {\n  property: string;\n  datatype?: string;\n  datavalue?: { value: { id: string } };\n}\n\ninterface Reference {\n  'snaks-order': string[];\n  snaks: { [key: string]: Snak[] };\n}\n\ninterface Claim {\n  mainsnak: Snak;\n  qualifiers?: { [key: string]: Snak[] };\n  'qualifiers-order'?: string[];\n  references?: Reference[];\n}\n\ninterface ClaimsObject {\n  [property: string]: Claim[];\n}\n\ninterface Entity {\n  claims: ClaimsObject;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailsService {\n  private requestService = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n\n  /**\n   * Retourne la liste unique des propriétés de référence d’une entité.\n   */\n  getReferenceProperties(u: Entity): string[] {\n    const referenceProperties = Object.values(u.claims)\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n    return this.uniq(referenceProperties);\n  }\n\n  /**\n   * Crée la liste des propriétés dans les statements, qualifiers et références.\n   * Retourne un Observable des propriétés enrichies.\n   */\n  setPropertiesList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let properties = claimsArray.flatMap(val => val.map(claim => claim.mainsnak.property));\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    properties = this.uniq([...properties, ...qualifierProperties, ...referenceProperties]);\n    const propertiesChunks = this.lessThanFifty(properties);\n\n    if (propertiesChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 propriétés)'));\n    }\n\n    const propertiesLists = propertiesChunks.map(list => this.createList(list).slice(1));\n    while (propertiesLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Crée la liste des items dans les statements, qualifiers et références.\n   * Retourne un Observable des items enrichis.\n   */\n  setItemsList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let items = claimsArray.flatMap(val =>\n      val\n        .filter(claim => claim.mainsnak.datavalue?.value?.id !== undefined)\n        .map(claim => claim.mainsnak.datavalue.value.id)\n    );\n\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    const qualifierItems = this.setQualifierItems(claimsArray, qualifierProperties).filter(Boolean);\n    const referenceItems = this.setReferenceItems(claimsArray, referenceProperties).filter(Boolean);\n\n    items = this.uniq([...items, ...qualifierItems, ...referenceItems]);\n    const itemsChunks = this.lessThanFifty(items);\n\n    if (itemsChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 items)'));\n    }\n\n    const itemsLists = itemsChunks.map(list => this.createList(list).slice(1));\n    while (itemsLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Retourne la liste unique des propriétés dans les qualifiers et références.\n   */\n  setProperties(arr: any[]): string[] {\n    return arr.flatMap(obj => Object.keys(obj));\n  }\n\n  /**\n   * Fusionne les objets contenus dans un tableau pour créer un seul objet.\n   */\n  mergeObjects(res: any[]): any {\n    // Filtrer les objets valides qui possèdent la propriété 'entities'\n    const validObjects = (res ?? []).filter(obj => obj && obj.entities);\n    let u = validObjects.length > 0 ? validObjects[0].entities : {};\n    for (const obj of validObjects.slice(1)) {\n      u = { ...u, ...obj.entities };\n    }\n    return u;\n  }\n\n\n  /**\n   * Retourne la liste des items dans les qualifiers.\n   */\n  setQualifierItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        for (const prop of arr) {\n          if (claim.qualifiers?.[prop]) {\n            for (const snak of claim.qualifiers[prop]) {\n              if (snak?.datavalue?.value?.id) {\n                result.push(snak.datavalue.value.id);\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Retourne la liste des items dans les références.\n   */\n  setReferenceItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        if (!claim.references) continue;\n        for (const ref of claim.references) {\n          for (const prop of arr) {\n            const snaks = ref.snaks[prop];\n            if (snaks && snaks[0]?.datatype === 'wikibase-item') {\n              for (const snak of snaks) {\n                if (snak?.datavalue?.value?.id) {\n                  result.push(snak.datavalue.value.id);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Crée une chaîne de caractères à partir d’un tableau, séparée par '|'.\n   */\n  createList(arr: string[]): string {\n    return Array.from(new Set(arr)).reduce((list, item) => list + '|' + item, '');\n  }\n\n  /**\n   * Retourne un tableau sans doublons.\n   */\n  uniq(a: T[]): T[] {\n    return Array.from(new Set(a.filter(Boolean)));\n  }\n\n  /**\n   * Découpe un tableau en sous-tableaux de 50 éléments maximum.\n   */\n  lessThanFifty(arr: T[]): T[][] {\n    const result: T[][] = [];\n    let u = arr.length;\n    let tempArr = arr.slice();\n    while (u > 0) {\n      result.push(tempArr.slice(0, 50));\n      tempArr = tempArr.slice(50);\n      u = tempArr.length;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactgridSubtitlesService.html":{"url":"injectables/FactgridSubtitlesService.html","title":"injectable - FactgridSubtitlesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactgridSubtitlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/factgrid-subtitles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSubtitle1\n                            \n                            \n                                setSubtitle2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSubtitle1\n                        \n                    \n                \n            \n            \n                \nsetSubtitle1(re, propertyId, lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/factgrid-subtitles.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                propertyId\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSubtitle2\n                        \n                    \n                \n            \n            \n                \nsetSubtitle2(re, propertyId, number, lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/factgrid-subtitles.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                propertyId\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                number\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/factgrid-subtitles.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { SelectedLangService } from '../selected-lang.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FactgridSubtitlesService {\n  private lang = inject(SelectedLangService);\n\n\n  //TODO: pass the lang selection to the SelectedLangService\n\n  setSubtitle1(re,propertyId,lang){  //to add a subtitle with a condition on the property\n  if (propertyId === \"P320\"){\n   re.claims[propertyId].sparql = \"List of members\";\n   if ( lang === \"de\") {re.claims[propertyId].sparql = \"Mitgliederverzeichnis\"}\n   else if ( lang === \"fr\") {re.claims[propertyId].sparql = \"Liste des membres\"}\n   else if ( lang === \"es\") {re.claims[propertyId].sparql = \"Lista de miembros\"}\n   else if (lang === \"it\") {re.claims[propertyId].sparql = \"Elenco dei membri\"}\n    else if (lang === \"hu\") {re.claims[propertyId].sparql = \"A tagok listája\"};\n  }\n  if ( lang === \"en\") {re.claims[propertyId].other = \"further\"}\n  else if ( lang === \"de\") {re.claims[propertyId].other = \"weiteren\"}\n  else if ( lang === \"fr\") {re.claims[propertyId].other = \"autres\"}\n  else if ( lang === \"es\") {re.claims[propertyId].other = \"más\"}\n   else if ( lang === \"it\") {re.claims[propertyId].other = \"di più\"}\n   else if ( lang === \"hu\") {re.claims[propertyId].other = \"további\"};\n // if ( lang === \"en\") {re.claims[propertyId].place = \"place\"}\n // else if ( lang === \"de\") {re.claims[propertyId].place = \"Ort\"}\n // else if ( lang === \"fr\") {re.claims[propertyId].place = \"lieu\"};\n  if ( lang === \"en\") {re.claims[propertyId].sources = \"Sources\"}\n  else if ( lang === \"de\") {re.claims[propertyId].sources = \"Quellen\"}\n  else if ( lang === \"fr\") {re.claims[propertyId].sources = \"Sources\"}\n  else if ( lang === \"es\") {re.claims[propertyId].sources = \"Fuentes\"}\n  else if ( lang === \"it\") {re.claims[propertyId].sources = \"Fonti\"}\n  else if ( lang === \"hu\") {re.claims[propertyId].sources = \"Források\"};\n  }\n\nsetSubtitle2(re,propertyId,number,lang){  //to add a subtitle with a condition on the value of a property (in general the property P2)\n  let j = number;\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q7\") { //person\n    re.claims[propertyId].person = \"person\";\n    if ( lang === \"en\") {re.claims[propertyId].main = \"Life and family\"}\n    else if ( lang === \"de\") {re.claims[propertyId].main = \"Leben und Familie\"}\n    else if ( lang === \"fr\") {re.claims[propertyId].main = \"Vie et famille\"}\n    else if ( lang === \"es\") {re.claims[propertyId].main = \"Vida y familia\"}\n    else if ( lang === \"it\") {re.claims[propertyId].main = \"Vita e famiglia\"}\n    else if ( lang === \"hu\") {re.claims[propertyId].main = \"Élet és család\"};\n\n    if ( lang === \"en\") {re.claims[propertyId].training = \"Education\"}\n    else if ( lang === \"de\") {re.claims[propertyId].training = \"Ausbildung\"}\n    else if ( lang === \"fr\") {re.claims[propertyId].training = \"Éducation\"}\n    else if ( lang === \"es\") {re.claims[propertyId].training = \"Educación\"}\n    else if ( lang === \"it\") {re.claims[propertyId].training = \"Educazione\"}\n    else if ( lang === \"hu\") {re.claims[propertyId].training = \"Oktatás\"};\n\n    if ( lang === \"en\") {re.claims[propertyId].career = \"Career and activities\"}\n    else if ( lang === \"de\") {re.claims[propertyId].career = \"Beruf und Aktivitäten\"}\n    else if ( lang === \"fr\") {re.claims[propertyId].career = \"Carrière et activités\"}\n    else if ( lang === \"es\") {re.claims[propertyId].career = \"Carrera y actividades\"}\n    else if ( lang === \"it\") {re.claims[propertyId].career = \"Carriera e attività\"}\n    else if ( lang === \"hu\") {re.claims[propertyId].career = \"Karrier és tevékenységek\"};\n\n\n    if ( lang === \"en\") {re.claims[propertyId].sociability = \"Sociability and culture\"}\n    else if ( lang === \"de\") {re.claims[propertyId].sociability = \"Soziabilität und Kultur\"}\n    else if ( lang === \"fr\") {re.claims[propertyId].sociability = \"Sociabilité et culture\"}\n    else if ( lang === \"es\") {re.claims[propertyId].sociability = \"Sociabilidad y cultura\"}\n    else if ( lang === \"it\") {re.claims[propertyId].sociability = \"Sociabilità e cultura\"}\n    else if ( lang === \"hu\") {re.claims[propertyId].sociability = \"Szociabilitás és kultúra\"};\n      }\n /*   if (re.claims[propertyId][j].mainsnak.datavalue.value.id !== \"Q7\") { //person\n      re.claims[propertyId].person = undefined;\n      re.claims[propertyId].training = undefined;\n      re.claims[propertyId].career = undefined;\n      re.claims[propertyId].sociability = undefined;\n       } ;\n*/\n\n   if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q22\") { //basic object\n      if ( lang === \"en\") {re.claims[propertyId].main = \"Basic object\"}\n      else if ( lang === \"de\") {re.claims[propertyId].main = \"Fundamentalobjekt\"}\n      else if ( lang === \"fr\") {re.claims[propertyId].main = \"Objet de base\"}\n      else if ( lang === \"es\") {re.claims[propertyId].main = \"Objeto básico\"}\n      else if ( lang === \"it\") {re.claims[propertyId].main = \"Oggetto di base\"}\n      else if ( lang === \"hu\") {re.claims[propertyId].main = \"Alapobjektum\"};\n   };\n\n\n   if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q147829\") { //basic object\n    if ( lang === \"en\") {re.claims[propertyId].main = \"Database\"}\n    else if ( lang === \"de\") {re.claims[propertyId].main = \"Datenbank\"}\n    else if ( lang === \"fr\") {re.claims[propertyId].main = \"Base de données\"}\n    else if ( lang === \"es\") {re.claims[propertyId].main = \"Base de datos\"}\n    else if ( lang === \"it\") {re.claims[propertyId].main = \"Base dati\"}\n    else if ( lang === \"hu\") {re.claims[propertyId].main = \"Adatbázis\"};\n   };\n\n    if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q8\" || \n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q11174\" ||\n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q21925\" ||\n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q164344\") { //place\n      re.claims[propertyId].place = \"place\";\n      re.claims[propertyId].main = \"Place\";\n      if ( lang === \"en\") {re.claims[propertyId].main = \"Place\"}\n      else if ( lang === \"de\") {re.claims[propertyId].main = \"Ort\"}\n      else if ( lang === \"fr\") {re.claims[propertyId].main = \"Lieu\"}\n      else if ( lang === \"es\") {re.claims[propertyId].main = \"Lugar\"}\n      else if ( lang === \"it\") {re.claims[propertyId].main = \"Luogo\"}\n      else if ( lang === \"hu\") {re.claims[propertyId].main = \"Hely\"};\n        };\n //   if (re.claims[propertyId][j].mainsnak.datavalue.value.id !== \"Q8\") { //place\n //     re.claims[propertyId].place = undefined; }\n    if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q9\") { //event\n      if ( lang === \"en\") {re.claims[propertyId].main = \"Event\"}\n      else if ( lang === \"de\") {re.claims[propertyId].main = \"Ereignis\"}\n      else if ( lang === \"fr\") {re.claims[propertyId].main = \"Évènement\"}\n      else if ( lang === \"es\") {re.claims[propertyId].main = \"Evento\"}\n      else if ( lang === \"it\") {re.claims[propertyId].main = \"Evento\"}\n      else if ( lang === \"hu\") {re.claims[propertyId].main = \"Esemény\"};\n    }\n //   if (re.claims[propertyId][j].mainsnak.datavalue.value.id !== \"Q9\") { //event\n //     re.claims[propertyId].event = undefined; }\n    if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q12\" || //org\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q220833\" ||  \n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q140806\" ||\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q11214\" ) {\n      re.claims[propertyId].org = \"org\";\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Organisation\"}\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Organisation\"}\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Organisation\"}\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Organización\"}\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Organizzazione\"}\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Szervezet\"};\n          }\n  //  else re.claims[propertyId].org = undefined;\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q20\" ||\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q257227\") { //publication\n      re.claims[propertyId].document = \"publication\";\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Print publication\"}\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Druckpublikation\"}\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Publication imprimée\"}\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Publicación impresa\"}\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Pubblicazione stampata\"}\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Nyomtatott kiadvány\"};\n      }\n // if (re.claims[propertyId][j].mainsnak.datavalue.value.id !== \"Q20\") { //publication\n //     re.claims[propertyId].document = undefined; }\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q146602\" || //activity\n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q21909\" ||\n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q37073\") {\n      re.claims[propertyId].activity = \"activity\";\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Activity\"}\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Aktivität\"}\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Activité\"}\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Activitad\"}\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Attività\"}\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Tevékenység\"};\n      }\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q10671\" || //document\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q21407\") {\n      re.claims[propertyId].document = \"document\";\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Document\"}\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Dokument\"}\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Document\"}\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Documento\"}\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Documento\"}\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Dokumentum\"};\n         }\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q10671\" || //FactGrid query\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q21407\") {\n      re.claims[propertyId].document = \"document\";\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Document\"}\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Dokument\"}\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Document\"}\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Documento\"}\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Documento\"}\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Dokumentum\"};\n          }\n  //  else re.claims[propertyId].document = undefined;\n  }\n}\n\n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n  currentYear = new Date().getFullYear();\n}\n\n\n    \n\n    \n        \n  \n    {{ currentYear }} factgridviewer &nbsp;|&nbsp;\n    FactGrid\n    &nbsp;|&nbsp;\n    \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ currentYear }} factgridviewer  |     FactGrid     |                 '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GregorianToJulianCalendarService.html":{"url":"injectables/GregorianToJulianCalendarService.html","title":"injectable - GregorianToJulianCalendarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GregorianToJulianCalendarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/gregorian-to-julian-calendar.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/gregorian-to-julian-calendar.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GregorianToJulianCalendarService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HU.html":{"url":"interfaces/HU.html","title":"interface - HU","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HU\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/harmonia-universalis/harmonia-universalis.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { AfterViewInit, Component, OnInit, OnDestroy, ViewChild, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { SetDataService } from '../services/set-data.service';\nimport { ArrayToCsvService} from '../services/array-to-csv.service';\nimport { HuDatabaseService } from './services/hu-database.service';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSort, Sort, MatSortModule } from '@angular/material/sort';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, switchMap, tap, startWith } from 'rxjs/operators';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { JsonPipe } from '@angular/common';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { PageEvent, MatPaginatorModule } from '@angular/material/paginator';\nimport sortingAccessor from '../sortingAccessor';\nimport { SelectedLangService } from '../selected-lang.service';\n\n\n\nexport interface HU {\n  author:{ label:string, id:string };\n  title:{ label:string, id:string  };\n  location:{ label:string, id:string };\n  date:{ value:string };\n}\n\n\n@Component({\n  selector: 'app-harmonia-universalis',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    RouterModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatProgressSpinnerModule\n  ],\n  templateUrl: './harmonia-universalis.component.html',\n  styleUrl: './harmonia-universalis.component.scss'\n})\n\nexport class HarmoniaUniversalisComponent implements OnInit, AfterViewInit {\n  private database = inject(HuDatabaseService);\n  private _liveAnnouncer = inject(LiveAnnouncer);\n  private csv = inject(ArrayToCsvService);\n  private lang = inject(SelectedLangService);\n\n\n  //sessionStorage['selectedPage'] = JSON.stringify([{name:'Harmonia Universalis', address:\"harmonia_universalis\"}]);\n\n\n  public readonly displayedColumns:string[] = ['author','title','place','date'];\n\n  dataSource: MatTableDataSource = new MatTableDataSource;\n  dataSource$: Observable;\n\n  filtered;\n\n  biblioHU:string = \"Bibliography Harmonia Universalis\";\n\n  authorHeader:string =\"Author\";\n  titleHeader:string = \"Title\";\n  locationHeader:string =\"Place\";\n  dateHeader:string =\"Date\";\n\n  behavior$ = new BehaviorSubject('');\n\n  length = 50;\n  pageSize = 25;\n  pageIndex = 0;\n  pageSizeOptions = [10, 25, 50, 100, 500, 1000];\n  hidePageSize = false;\n  showPageSizeOptions = true;\n  showFirstLastButtons = true;\n  disabled = false;\n\n  pageEvent:PageEvent;\n\n  isSpinner: boolean = false;\n\n  //selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\n  myLang:string = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\";\n\n\n  constructor() {\n\n    this.dataSource.sortingDataAccessor = (data, sortHeaderId) => { return sortingAccessor.nestedCaseInsensitive(data, sortHeaderId); }\n    this.dataSource.filterPredicate = (data, filter: string) => {\n      return data.author.label.toLocaleLowerCase().includes(filter) ||\n         //    data.author.id.toLocaleLowerCase().includes(filter) ||\n             data.title.label.toLocaleLowerCase().includes(filter) ||\n        //    data.title.id.toLocaleLowerCase().includes(filter)||\n           data.location.label.toLocaleLowerCase().includes(filter) ||\n        //     data.location.id.toLocaleLowerCase().includes(filter) ||\n            data.date.value.toLocaleLowerCase().includes(filter)\n    }    \n    };\n\n@ViewChild(MatSort)\nsort: MatSort;\n\n@ViewChild(\"paginator\")\npaginator ;\n\nngOnInit() {\n\n  this.biblioHU = this.lang.getTranslation('$1', this.lang.selectedLang);\n\n  this.authorHeader = this.lang.getTranslation('$1', this.lang.selectedLang);\n  this.titleHeader = this.lang.getTranslation('$1', this.lang.selectedLang);\n  this.locationHeader = this.lang.getTranslation('$1', this.lang.selectedLang);\n  this.dateHeader = this.lang.getTranslation('$1', this.lang.selectedLang);\n  \n\n//this.isSpinner = true;\n\n // this.myLang = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\";\n\n  let u =this.database.sparqlBuilding(this.myLang);\n  let dataService = this.database.databaseToDisplay(u);\n  let v$ = dataService.pipe(map(res => this.database.listFromSparql(res)));\n\n  this.dataSource$ = combineLatest([this.behavior$, v$]).pipe(map(res => {\n                     this.dataSource.filter = res[0]; this.dataSource.data = res[1];\n                     return this.dataSource })); \n}\n\nngAfterViewInit() {\n\nthis.dataSource.sort=this.sort;\nthis.dataSource.paginator=this.paginator;\n\n}\n\nonClick(query){ //handling click for downlooding the filtered data\n let u= query;\n u = this.database.databaseToDownload(query);\n let v= this.csv.arrayToCsv(u);\n this.csv.downloadBlob(v, \"biblio_harmonia_universalis\", \"text/csv;charset=utf-8;\")\n    }\n\napplyFilter(event) {\n const filterValue = event.target.value.trim().toLowerCase();\n this.dataSource.filter = filterValue;\n this.dataSource.filteredData;\n this.filtered = this.dataSource.filteredData[0].author.label\n}\n\nhandlePageEvent(e: PageEvent) {\n    this.pageEvent = e;\n    this.length = e.length;\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n  }\n\nsetPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n}  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HarmoniaUniversalisComponent.html":{"url":"components/HarmoniaUniversalisComponent.html","title":"component - HarmoniaUniversalisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HarmoniaUniversalisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/harmonia-universalis/harmonia-universalis.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-harmonia-universalis\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatTableModule\n                            MatSortModule\n                            MatIconModule\n                            MatButtonModule\n                            MatCardModule\n                            RouterModule\n                            MatPaginatorModule\n                            MatInputModule\n                            MatFormFieldModule\n                            FormsModule\n                            ReactiveFormsModule\n                            MatSlideToggleModule\n                            MatProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./harmonia-universalis.component.html\n            \n\n\n\n            \n                styleUrl\n                ./harmonia-universalis.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _liveAnnouncer\n                            \n                            \n                                authorHeader\n                            \n                            \n                                behavior$\n                            \n                            \n                                biblioHU\n                            \n                            \n                                    Private\n                                csv\n                            \n                            \n                                    Private\n                                database\n                            \n                            \n                                dataSource\n                            \n                            \n                                dataSource$\n                            \n                            \n                                dateHeader\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayedColumns\n                            \n                            \n                                filtered\n                            \n                            \n                                hidePageSize\n                            \n                            \n                                isSpinner\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                length\n                            \n                            \n                                locationHeader\n                            \n                            \n                                myLang\n                            \n                            \n                                pageEvent\n                            \n                            \n                                pageIndex\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                    \n                                paginator\n                            \n                            \n                                showFirstLastButtons\n                            \n                            \n                                showPageSizeOptions\n                            \n                            \n                                    \n                                sort\n                            \n                            \n                                titleHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                handlePageEvent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                setPageSizeOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:99\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handlePageEvent\n                        \n                    \n                \n            \n            \n                \nhandlePageEvent(e: PageEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        PageEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPageSizeOptions\n                        \n                    \n                \n            \n            \n                \nsetPageSizeOptions(setPageSizeOptionsInput: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                setPageSizeOptionsInput\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _liveAnnouncer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LiveAnnouncer)\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Author\"\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        behavior$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        biblioHU\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bibliography Harmonia Universalis\"\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ArrayToCsvService)\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HuDatabaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                \n                    \n                        Default value : new MatTableDataSource\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Date\"\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['author','title','place','date']\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtered\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePageSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSpinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Place\"\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\"\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PageEvent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [10, 25, 50, 100, 500, 1000]\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('paginator')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFirstLastButtons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Title\"\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/harmonia-universalis.component.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { AfterViewInit, Component, OnInit, OnDestroy, ViewChild, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { SetDataService } from '../services/set-data.service';\nimport { ArrayToCsvService} from '../services/array-to-csv.service';\nimport { HuDatabaseService } from './services/hu-database.service';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSort, Sort, MatSortModule } from '@angular/material/sort';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, switchMap, tap, startWith } from 'rxjs/operators';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { JsonPipe } from '@angular/common';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { PageEvent, MatPaginatorModule } from '@angular/material/paginator';\nimport sortingAccessor from '../sortingAccessor';\nimport { SelectedLangService } from '../selected-lang.service';\n\n\n\nexport interface HU {\n  author:{ label:string, id:string };\n  title:{ label:string, id:string  };\n  location:{ label:string, id:string };\n  date:{ value:string };\n}\n\n\n@Component({\n  selector: 'app-harmonia-universalis',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    RouterModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatProgressSpinnerModule\n  ],\n  templateUrl: './harmonia-universalis.component.html',\n  styleUrl: './harmonia-universalis.component.scss'\n})\n\nexport class HarmoniaUniversalisComponent implements OnInit, AfterViewInit {\n  private database = inject(HuDatabaseService);\n  private _liveAnnouncer = inject(LiveAnnouncer);\n  private csv = inject(ArrayToCsvService);\n  private lang = inject(SelectedLangService);\n\n\n  //sessionStorage['selectedPage'] = JSON.stringify([{name:'Harmonia Universalis', address:\"harmonia_universalis\"}]);\n\n\n  public readonly displayedColumns:string[] = ['author','title','place','date'];\n\n  dataSource: MatTableDataSource = new MatTableDataSource;\n  dataSource$: Observable;\n\n  filtered;\n\n  biblioHU:string = \"Bibliography Harmonia Universalis\";\n\n  authorHeader:string =\"Author\";\n  titleHeader:string = \"Title\";\n  locationHeader:string =\"Place\";\n  dateHeader:string =\"Date\";\n\n  behavior$ = new BehaviorSubject('');\n\n  length = 50;\n  pageSize = 25;\n  pageIndex = 0;\n  pageSizeOptions = [10, 25, 50, 100, 500, 1000];\n  hidePageSize = false;\n  showPageSizeOptions = true;\n  showFirstLastButtons = true;\n  disabled = false;\n\n  pageEvent:PageEvent;\n\n  isSpinner: boolean = false;\n\n  //selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\n  myLang:string = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\";\n\n\n  constructor() {\n\n    this.dataSource.sortingDataAccessor = (data, sortHeaderId) => { return sortingAccessor.nestedCaseInsensitive(data, sortHeaderId); }\n    this.dataSource.filterPredicate = (data, filter: string) => {\n      return data.author.label.toLocaleLowerCase().includes(filter) ||\n         //    data.author.id.toLocaleLowerCase().includes(filter) ||\n             data.title.label.toLocaleLowerCase().includes(filter) ||\n        //    data.title.id.toLocaleLowerCase().includes(filter)||\n           data.location.label.toLocaleLowerCase().includes(filter) ||\n        //     data.location.id.toLocaleLowerCase().includes(filter) ||\n            data.date.value.toLocaleLowerCase().includes(filter)\n    }    \n    };\n\n@ViewChild(MatSort)\nsort: MatSort;\n\n@ViewChild(\"paginator\")\npaginator ;\n\nngOnInit() {\n\n  this.biblioHU = this.lang.getTranslation('$1', this.lang.selectedLang);\n\n  this.authorHeader = this.lang.getTranslation('$1', this.lang.selectedLang);\n  this.titleHeader = this.lang.getTranslation('$1', this.lang.selectedLang);\n  this.locationHeader = this.lang.getTranslation('$1', this.lang.selectedLang);\n  this.dateHeader = this.lang.getTranslation('$1', this.lang.selectedLang);\n  \n\n//this.isSpinner = true;\n\n // this.myLang = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\";\n\n  let u =this.database.sparqlBuilding(this.myLang);\n  let dataService = this.database.databaseToDisplay(u);\n  let v$ = dataService.pipe(map(res => this.database.listFromSparql(res)));\n\n  this.dataSource$ = combineLatest([this.behavior$, v$]).pipe(map(res => {\n                     this.dataSource.filter = res[0]; this.dataSource.data = res[1];\n                     return this.dataSource })); \n}\n\nngAfterViewInit() {\n\nthis.dataSource.sort=this.sort;\nthis.dataSource.paginator=this.paginator;\n\n}\n\nonClick(query){ //handling click for downlooding the filtered data\n let u= query;\n u = this.database.databaseToDownload(query);\n let v= this.csv.arrayToCsv(u);\n this.csv.downloadBlob(v, \"biblio_harmonia_universalis\", \"text/csv;charset=utf-8;\")\n    }\n\napplyFilter(event) {\n const filterValue = event.target.value.trim().toLowerCase();\n this.dataSource.filter = filterValue;\n this.dataSource.filteredData;\n this.filtered = this.dataSource.filteredData[0].author.label\n}\n\nhandlePageEvent(e: PageEvent) {\n    this.pageEvent = e;\n    this.length = e.length;\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n  }\n\nsetPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n}  \n\n    \n\n    \n        \n\n\n\t\n\n\n\n\n\n\t\n\t\t{{biblioHU}}\n\t\t\n\t\t\t\n\t\t\t\tsparql query\n\t\t\t\n\t\t\t&nbsp;&nbsp;|&nbsp;&nbsp;\n\t\t\tFactGrid  \n\t\t\n\t\n\n\n\t\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\n\n\t\t\t\n\n\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{authorHeader}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{{biblio.author.label}}\n\t\t\t\t\t\t\t\topen_in_new\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{titleHeader}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{{biblio.title.label}}\n\t\t\t\t\t\t\t\topen_in_new\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{locationHeader}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{{biblio.location.label}}\n\t\t\t\t\t\t\t\topen_in_new\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{dateHeader}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{biblio.date.value}}\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t\n\n\t\t\t\n\t\t\t\tdownload&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\n\n\t\t\n\n\t\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t{{biblioHU}}\t\t\t\t\t\t\t\t\tsparql query\t\t\t\t\t\t  |  \t\t\tFactGrid  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{authorHeader}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{biblio.author.label}}\t\t\t\t\t\t\t\topen_in_new\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{titleHeader}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{biblio.title.label}}\t\t\t\t\t\t\t\topen_in_new\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{locationHeader}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{biblio.location.label}}\t\t\t\t\t\t\t\topen_in_new\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{dateHeader}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{biblio.date.value}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdownload      \t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HarmoniaUniversalisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderDisplayComponent.html":{"url":"components/HeaderDisplayComponent.html","title":"component - HeaderDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/header-display/header-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            MatCardModule\n                            RouterLink\n                            UnitPipe\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                headerDetail\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        headerDetail\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/header-display/header-display.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleReferences\n                        \n                    \n                \n            \n            \n                \ntoggleReferences()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/header-display/header-display.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/header-display/header-display.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterLink } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { UnitPipe } from '../../unit.pipe';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\n@Component({\n  selector: 'app-header-display',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\n  templateUrl: './header-display.component.html',\n  styleUrl: './header-display.component.scss'\n})\nexport class HeaderDisplayComponent {\n\n  @Input() headerDetail;\n\n  showReferences = false; // état du volet\n\n  toggleReferences() {\n    this.showReferences = !this.showReferences;\n  }\n\n\n\n}\n\n    \n\n    \n        \n  @for (P of headerDetail; track P) {\n  \n    \n      \n        {{P.label}}:\n      \n    \n    @for (M of P; track M) {\n    \n      \n        @if (M.mainsnak.datatype ==='time') {\n        {{M.mainsnak.datavalue.value.date}}\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\n        \n          greg.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\n        \n          jul.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        }\n        @if (M.mainsnak.datatype==='monolingualtext') {\n        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}\n        }\n        @if (M.mainsnak.datatype === 'string') {\n        {{M.mainsnak.datavalue.value }}\n        }\n        @if (M.mainsnak.datatype === 'url') {\n        \n          {{M.mainsnak.datavalue.value}}\n        \n        }\n        {{M.mainsnak.datavalue.value.amount}}\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\n        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}\n        }\n        @if (M.mainsnak.datatype==='commonsMedia') {\n        \n          \n            \n          \n        \n        }\n        @if (M.mainsnak.datatype==='wikibase-item') {\n        \n          {{M.mainsnak.label}}\n          \n            open_in_new\n          \n          &nbsp;&nbsp;&nbsp;\n        \n        {{M.mainsnak.separator}}\n        {{M.mainsnak.description}}&nbsp;\n        }\n        @if (M.rank=='deprecated') {\n         &nbsp;({{M.rank}})\n        }\n      \n      \n        @if (M['qualifiers-order']) {\n        \n          @for (Q of M.qualifiers2; track Q) {\n          \n            \n              {{Q.label}}:&nbsp;\n            \n            @for (D of Q.display; track D; let isLast = $last) {\n            \n              @if (D.datatype === 'time') {\n              \n                {{D.date}}\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\n                \n                  greg.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\n                \n                  jul.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n              \n              }\n              @if (D.datatype==='string') {\n              \n                {{D.string}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              @if (D.datatype==='monolingualtext') {\n              \n                {{D.string.text}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              {{D.amount}}\n              @if (D.unit) {\n              &nbsp;({{D.unit | unit |async}})&nbsp;\n              }\n              @if (D.datatype === 'external-id') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype === 'url') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype==='wikibase-item') {\n              \n                {{D.label}}\n                \n                  open_in_new\n                \n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\n                {{D.separator}}{{D.description}}\n              \n              }\n              @if (D.datatype==='commonsMedia') {\n              \n                \n                  \n                \n              \n              }\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n          \n          }\n        \n        }\n      \n      \n      @if (M['references2'] && M['references2'].length > 0) {\n      \n        \n        Références\n      \n      @if (showReferences && M['references2']) {\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\n      \n        @for (N of Ma; track N; let isLast = $last) {\n        \n          \n            {{N.label}}:\n          \n          \n            @for (P of N.display; track P; let isLast = $last) {\n            @if (N.datatype === 'wikibase-item') {\n            \n              {{P.label}}\n              \n                open_in_new\n              &nbsp;&nbsp;&nbsp;\n              {{P.separator}}{{P.description}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype==='time') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype==='string') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype === 'url') {\n            \n              {{P}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype === 'external-id') {\n            \n              {{P.value}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            }\n          \n          @if (!isLast) {\n          ,&nbsp;\n          }\n        \n        }\n      \n      }\n      }\n      }\n    \n    }\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (P of headerDetail; track P) {                    {{P.label}}:              @for (M of P; track M) {                  @if (M.mainsnak.datatype ===\\'time\\') {        {{M.mainsnak.datavalue.value.date}}        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {                  greg.                      open_in_new                             }        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {                  jul.                      open_in_new                             }        }        @if (M.mainsnak.datatype===\\'monolingualtext\\') {        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}        }        @if (M.mainsnak.datatype === \\'string\\') {        {{M.mainsnak.datavalue.value }}        }        @if (M.mainsnak.datatype === \\'url\\') {                  {{M.mainsnak.datavalue.value}}                }        {{M.mainsnak.datavalue.value.amount}}        @if (M.mainsnak.datatype === \\'globe-coordinate\\') {        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}        }        @if (M.mainsnak.datatype===\\'commonsMedia\\') {                                                        }        @if (M.mainsnak.datatype===\\'wikibase-item\\') {                  {{M.mainsnak.label}}                      open_in_new                                       {{M.mainsnak.separator}}        {{M.mainsnak.description}}         }        @if (M.rank==\\'deprecated\\') {          ({{M.rank}})        }                    @if (M[\\'qualifiers-order\\']) {                  @for (Q of M.qualifiers2; track Q) {                                    {{Q.label}}:                         @for (D of Q.display; track D; let isLast = $last) {                          @if (D.datatype === \\'time\\') {                              {{D.date}}                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {                                  greg.                                      open_in_new                                                     }                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {                                  jul.                                      open_in_new                                                     }                            }              @if (D.datatype===\\'string\\') {                              {{D.string}}                @if (!isLast) {                ,                 }                            }              @if (D.datatype===\\'monolingualtext\\') {                              {{D.string.text}}                @if (!isLast) {                ,                 }                            }              {{D.amount}}              @if (D.unit) {               ({{D.unit | unit |async}})               }              @if (D.datatype === \\'external-id\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype === \\'url\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype===\\'wikibase-item\\') {                              {{D.label}}                                  open_in_new                                @if(D.description){    }                {{D.separator}}{{D.description}}                            }              @if (D.datatype===\\'commonsMedia\\') {                                                                                            }                        @if (!isLast) {            ,             }            }                    }                }                  @if (M[\\'references2\\'] && M[\\'references2\\'].length > 0) {                      Références            @if (showReferences && M[\\'references2\\']) {      @for (Ma of M[\\'references2\\']; track Ma; let isLast = $last) {              @for (N of Ma; track N; let isLast = $last) {                              {{N.label}}:                                @for (P of N.display; track P; let isLast = $last) {            @if (N.datatype === \\'wikibase-item\\') {                          {{P.label}}                              open_in_new                               {{P.separator}}{{P.description}}                        @if (!isLast) {            ,             }            }            @if (N.datatype===\\'time\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype===\\'string\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype === \\'url\\') {                          {{P}}                        @if (!isLast) {            ,             }            }            @if (N.datatype === \\'external-id\\') {                          {{P.value}}                        @if (!isLast) {            ,             }            }            }                    @if (!isLast) {          ,           }                }            }      }      }        }    }'\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HuDatabaseService.html":{"url":"injectables/HuDatabaseService.html","title":"injectable - HuDatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HuDatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/harmonia-universalis/services/hu-database.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                databaseToDisplay\n                            \n                            \n                                databaseToDownload\n                            \n                            \n                                listFromSparql\n                            \n                            \n                                newSparqlAdress\n                            \n                            \n                                sparqlBuilding\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        databaseToDisplay\n                        \n                    \n                \n            \n            \n                \ndatabaseToDisplay(sparql)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/services/hu-database.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sparql\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseToDownload\n                        \n                    \n                \n            \n            \n                \ndatabaseToDownload(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/services/hu-database.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listFromSparql\n                        \n                    \n                \n            \n            \n                \nlistFromSparql(res)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/services/hu-database.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSparqlAdress\n                        \n                    \n                \n            \n            \n                \nnewSparqlAdress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/services/hu-database.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparqlBuilding\n                        \n                    \n                \n            \n            \n                \nsparqlBuilding(lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/harmonia-universalis/services/hu-database.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/harmonia-universalis/services/hu-database.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from '../../services/request.service';\nimport { switchMap, map, tap } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HuDatabaseService {\n  private request = inject(RequestService);\n\n\n\n sparqlBuilding(lang){   // this is the sparql query\n   let u = \"https://database.factgrid.de/query/#%23biblio%0ASELECT%20DISTINCT%20%3Ftitle%20%3FtitleLabel%20%3Fauthor%20%3FauthorLabel%20%3Fdate%20%3Flocation%20%3FlocationLabel%20%3F\" +\n     \"country%20%3FcountryLabel%0AWHERE%20%0A%7B%20VALUES%20%3Fc%20%7B%20wd%3AQ21925%20wd%3AQ11317%20%7D%0A%20%20%3Ftitle%20wdt%3AP2%20wd%3AQ20%3B%0A%20%20%20%20%20%20%20%20wdt%3AP243%20wd%3AQ172203%3B%0A%20%20%20%20%20%20%20%20wdt%3AP21%20%3F\" +\n     \"author%3B%0A%20%20%20%20%20%20%20%20wdt%3AP222%20%3Fdate%3B%0A%20%20%20%20%20%20%20%20wdt%3AP241%20%3Flocation%20.%0A%20%20%3Fcountry%20%5Ewdt%3AP297%20%3Flocation%3B%0A%20%20%20%20%20%20%20%20%20%20wdt%3AP2%20%20%20%3Fc%20%20\" + lang;\n    return u\n  }\n\n  listFromSparql(res) {  // create the qid in the results.bindings\n  if (res !== undefined){\n    if (res.results !== undefined) {\n     for (let i = 0; i  | undefined;\n//   if(sparql.includes(\"item\")) {\n    let selectedSparql = this.newSparqlAdress(sparql); // this.newSparqlAdress(sparql,this.selectedLang); //handle sparql queries 1. create the address \n    sparqlResult = this.request.getList(selectedSparql); \n      //handle sparql queries 2. list ready to display  \n//  };\n    return sparqlResult    \n  }\n\n  newSparqlAdress(address:string) : string {  // create a query of the API\n      const newPrefix = \"https://database.factgrid.de/sparql?query=\";\n      let oldPrefix = \"https://database.factgrid.de/query/#\";\n      if (address.includes('embed.html')){oldPrefix =\"https://database.factgrid.de/query/embed.html#\"};\n      if (address !== undefined) address = address.replace(oldPrefix, newPrefix);\n      return address\n      }\n\n  databaseToDownload(data){\n      let dataToDownload:any[][] = [ [\"author\",\"author.id\",\"title\",\"title.id\",\"location\",\"location.id\",\"country\",\"country.id\",\"date\" ] ];\n      for (let i=0; i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IframesDisplayService.html":{"url":"injectables/IframesDisplayService.html","title":"injectable - IframesDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IframesDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/iframes-display.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/display/iframes-display.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IframesDisplayService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IframesDisplayService-1.html":{"url":"injectables/IframesDisplayService-1.html","title":"injectable - IframesDisplayService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IframesDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/services/iframes-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setHouseNumbersQuery\n                            \n                            \n                                setIframesDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setHouseNumbersQuery\n                        \n                    \n                \n            \n            \n                \nsetHouseNumbersQuery(res)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/iframes-display.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIframesDisplay\n                        \n                    \n                \n            \n            \n                \nsetIframesDisplay(item, iframes)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/iframes-display.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                iframes\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IframesDisplayService {\n \nsetIframesDisplay(item, iframes){\n\n  if (item[0].claims.P309 !==undefined){  //FactGrid table of contents     \n    console.log(item[0].claims.P309[0].mainsnak.datavalue.value);\n    item[1].splice(item[1].indexOf(\"P309\"),1);\n    for (let i=0; i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemDetailsService.html":{"url":"injectables/ItemDetailsService.html","title":"injectable - ItemDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ItemDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/item-details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseWikimediaURL\n                            \n                            \n                                    Private\n                                factgrid\n                            \n                            \n                                    Private\n                                itemInfo\n                            \n                            \n                                    Private\n                                longestLength\n                            \n                            \n                                qualifiers2\n                            \n                            \n                                    Private\n                                setDate\n                            \n                            \n                                    Private\n                                typology\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClaimItemDetails\n                            \n                            \n                                addItemInfo\n                            \n                            \n                                addLongestWordLength\n                            \n                            \n                                addQualifierItemDetails\n                            \n                            \n                                addReference2ItemDetails\n                            \n                            \n                                addReferenceItemDetails\n                            \n                            \n                                addSitelinksDetails\n                            \n                            \n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClaimItemDetails\n                        \n                    \n                \n            \n            \n                \naddClaimItemDetails(items, re, itemProperties, lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-details.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addItemInfo\n                        \n                    \n                \n            \n            \n                \naddItemInfo(re)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-details.service.ts:289\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLongestWordLength\n                        \n                    \n                \n            \n            \n                \naddLongestWordLength(re)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-details.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQualifierItemDetails\n                        \n                    \n                \n            \n            \n                \naddQualifierItemDetails(items, re, itemProperties, lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-details.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Enrichit chaque statement avec qualifiers2 (pour l'affichage).\nPour chaque qualifier, ajoute dans display un objet enrichi (id, label, description, aliases...).\nGère aussi le tri chronologique via timeOrder si un qualifier de type \"time\" existe.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addReference2ItemDetails\n                        \n                    \n                \n            \n            \n                \naddReference2ItemDetails(items, re, itemProperties)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-details.service.ts:229\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addReferenceItemDetails\n                        \n                    \n                \n            \n            \n                \naddReferenceItemDetails(items, re, itemProperties, lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-details.service.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSitelinksDetails\n                        \n                    \n                \n            \n            \n                \naddSitelinksDetails(re)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-details.service.ts:267\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUrl\n                        \n                    \n                \n            \n            \n                \nsetUrl(u, p)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-details.service.ts:295\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                p\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseWikimediaURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://commons.wikimedia.org/wiki/Special:FilePath/'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-details.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factgrid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FactgridSubtitlesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-details.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        itemInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ItemInfoService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-details.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        longestLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LongestWordService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-details.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qualifiers2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-details.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SetTimeService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-details.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        typology\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TypologyService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-details.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { SetTimeService } from './set-time.service';\nimport { FactgridSubtitlesService } from './factgrid-subtitles.service'\nimport { TypologyService } from './typology.service';\nimport { ItemInfoService } from './item-info.service';\nimport { LongestWordService } from './longest-word.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemDetailsService {\n  private setDate = inject(SetTimeService);\n  private factgrid = inject(FactgridSubtitlesService);\n  private typology = inject(TypologyService);\n  private itemInfo = inject(ItemInfoService);\n  private longestLength = inject(LongestWordService);\n\n\n  private baseWikimediaURL = 'http://commons.wikimedia.org/wiki/Special:FilePath/';\n\n  qualifiers2: any[];\n\n  addLongestWordLength(re) { re.longestWordLength = this.longestLength.findLongestWord(re.label) };\n\n  addClaimItemDetails(items, re, itemProperties, lang) { // add labels, descriptions and aliases to the items in the mainsnaks   \n    for (let i = 0; i  it.id === val.id);\n              display.push({\n                id: val.id,\n                label: enriched?.label || val.label || val.id,\n                description: enriched?.description || val.description || \"\",\n                aliases: enriched?.aliases || val.aliases || [],\n                datatype: \"wikibase-item\"\n              });\n            } else if (q.datatype === \"commonsMedia\" && q.datavalue?.value) {\n              display.push({\n                label: q.datavalue.value.label || q.datavalue.value,\n                description: q.datavalue.value.description || \"\",\n                aliases: q.datavalue.value.aliases || [],\n                datatype: \"commonsMedia\"\n              });\n            } else if (q.datatype === \"external-id\" && q.datavalue?.value) {\n              display.push({\n                value: q.datavalue.value,\n                datatype: \"external-id\"\n              });\n            } else if (q.datatype === \"time\" && q.datavalue?.value) {\n              let value = q.datavalue.value.time;\n              value = value.substring(0, value.length - 10);\n              const date = this.setDate.setDate(value, lang);\n              statement.mainsnak.timeOrder = value;\n              let era = value.charAt(0);\n              statement.mainsnak.timeOrder = Number(value.replace(/\\-/g, \"\").replace(/\\+/g, \"\").substring(0, 8));\n              if (era !== \"+\") {\n                statement.mainsnak.timeOrder = -Math.abs(statement.mainsnak.timeOrder);\n              }\n              display.push({\n                value,\n                date,\n                datatype: \"time\"\n              });\n            } else if (q.datatype === \"quantity\" && q.datavalue?.value) {\n              // Gestion du type quantity\n              display.push({\n                amount: q.datavalue.value.amount,\n                unit: q.datavalue.value.unit,\n                datatype: \"quantity\"\n              });\n            } else if (q.datatype === \"string\" && q.datavalue?.value) {\n              display.push({\n                value: q.datavalue.value,\n                datatype: \"string\"\n              });\n            } else if (q.datatype === \"monolingualtext\" && q.datavalue?.value) {\n              display.push({\n                value: q.datavalue.value,\n                datatype: \"monolingualtext\"\n              });\n            } else if (q.datavalue?.value) {\n              display.push({\n                value: q.datavalue.value,\n                datatype: q.datatype || \"unknown\"\n              });\n            }\n          }\n\n          // Ajoute le display enrichi à l'objet de qualifiers2\n          qualifier2.display = display;\n        }\n\n        // Si la propriété est \"P2\", on force timeOrder à \"0\"\n        if (prop === \"P2\") {\n          statement.mainsnak.timeOrder = \"0\";\n        }\n      }\n\n      // Tri chronologique des statements si un timeOrder a été trouvé\n      if (re.claims[prop].length > 1 && re.claims[prop][0].mainsnak.timeOrder !== undefined) {\n        re.claims[prop].sort((a, b) => {\n          if (a.mainsnak.timeOrder  b.mainsnak.timeOrder) return 1;\n          return 0;\n        });\n      }\n    }\n    return re;\n  }\n\n\n\n\n  addReferenceItemDetails(items, re, itemProperties, lang) {  //add labels, definitions and aliases of items in the references\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemDisplayDispatcherService.html":{"url":"injectables/ItemDisplayDispatcherService.html","title":"injectable - ItemDisplayDispatcherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ItemDisplayDispatcherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/services/item-display-dispatcher.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blockDisplay\n                            \n                            \n                                    Private\n                                technicalitiesDisplay\n                            \n                            \n                                    Private\n                                wikiDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(item: any, target: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/item-display-dispatcher.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                target\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         DisplayFlags\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        blockDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BlockDisplayService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/services/item-display-dispatcher.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        technicalitiesDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TechnicalitiesDisplayService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/services/item-display-dispatcher.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        wikiDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WikiDisplayService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/services/item-display-dispatcher.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { BlockDisplayService } from './block-display.service';\n//import { IframesDisplayService } from './iframes-display.service';\nimport { TechnicalitiesDisplayService } from './technicalities-display.service';\nimport { WikiDisplayService } from './wiki-display.service';\n\n\nexport interface DisplayFlags {\n  isPlace: boolean;\n  isCareer: boolean;\n  isSociability: boolean;\n  isTraining: boolean;\n  isOrg: boolean;\n  isActivity: boolean;\n  isEvent: boolean;\n  isSource: boolean;\n  isDocument: boolean;\n  isOther: boolean;\n  isMain: boolean;\n  isWikis: boolean;\n  isInfoList: boolean;\n  isFrames: boolean;\n  isExternalLinks: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ItemDisplayDispatcherService {\n  \n  private blockDisplay = inject(BlockDisplayService);\n  private wikiDisplay = inject(WikiDisplayService);\n // private iframesDisplay = inject(IframesDisplayService);\n  private technicalitiesDisplay = inject(TechnicalitiesDisplayService);\n\n  dispatch(item: any, target: any): DisplayFlags {\n    const claims = item[0].claims;\n  \n    // Header\n    target.headerDetail = [];\n    this.blockDisplay.setHeaderDisplay(item, target.headerDetail);\n\n    // Place\n    target.locationAndSituation = [];\n    let isPlace = false;\n    if (claims.P2?.place !== undefined) {\n      this.blockDisplay.setPlaceDisplay(item, target.locationAndSituation);\n      isPlace = target.locationAndSituation.length > 0;\n    }\n\n    // Person\n    target.lifeAndFamily = [];\n    let isCareer = false;\n    let isSociability = false;\n    let isTraining = false;\n    if (claims.P2?.person !== undefined) {\n      this.blockDisplay.setPersonDisplay(item, target.lifeAndFamily);\n\n      // Career\n      target.careerAndActivities = [];\n      this.blockDisplay.setCareerDisplay(item, target.careerAndActivities);\n      isCareer = target.careerAndActivities.length > 0;\n      if (isCareer && claims.P2?.career !== undefined) {\n        target.career = claims.P2.career;\n      }\n\n      // Sociability\n      target.sociabilityAndCulture = [];\n      this.blockDisplay.setSociabilityDisplay(item, target.sociabilityAndCulture);\n      isSociability = target.sociabilityAndCulture.length > 0;\n      if (isSociability && claims.P2?.sociability !== undefined) {\n        target.sociability = claims.P2.sociability;\n      }\n\n      // Education\n      target.education = [];\n      this.blockDisplay.setEducationDisplay(item, target.education);\n      isTraining = target.education.length > 0;\n      if (isTraining && claims.P2?.training !== undefined) {\n        target.training = claims.P2.training;\n      }\n    }\n\n    // Organization\n    target.locationAndContext = [];\n    let isOrg = false;\n    if (claims.P2?.org !== undefined) {\n      this.blockDisplay.setOrgDisplay(item, target.locationAndContext);\n      isOrg = target.locationAndContext.length > 0;\n    }\n\n    // Activity\n    target.activityDetail = [];\n    let isActivity = false;\n    if (claims.P2?.activity !== undefined) {\n      this.blockDisplay.setActivityDisplay(item, target.activityDetail);\n      isActivity = target.activityDetail.length > 0;\n    }\n\n    // Event\n    target.eventDetail = [];\n    let isEvent = false;\n    if (claims.P2?.event !== undefined) {\n      this.blockDisplay.setEventDisplay(item, target.eventDetail);\n      isEvent = target.eventDetail.length > 0;\n    }\n\n    // Document\n    target.documentDetail = [];\n    let isDocument = false;\n    if (claims.P2?.document !== undefined) {\n      this.blockDisplay.setDocumentDisplay(item, target.documentDetail);\n      isDocument = target.documentDetail.length > 0;\n    }\n\n    // Sources\n    target.sourcesList = [];\n    let isSource = false;\n    this.blockDisplay.setSourcesDisplay(item, target.sourcesList);\n    isSource = target.sourcesList.length > 0;\n    target.sources = claims.P2?.sources;\n\n    // External links\n    target.externalLinks = [];\n    let isExternalLinks = false;\n    this.blockDisplay.setExternalLinksDisplay(item, target.externalLinks);\n    isExternalLinks = target.externalLinks.length > 0;\n\n    // Others\n    target.otherClaims = [];\n    let isOther = false;\n    if (item[1] && Array.isArray(item[1])) {\n      for (let i = 0; i  0;\n    }\n\n    // Item info\n\n\n\n    // MainList\n    target.mainList = [];\n    let isMain = false;\n\n    if (claims.P2 === undefined) {\n      if (claims.P3 !== undefined) {\n        target.mainList.push(claims.P3);\n      }\n    } else {\n      target.mainList = []\n        .concat(\n          target.lifeAndFamily || [],\n          target.locationAndContext || [],\n          target.locationAndSituation || [],\n          target.activityDetail || [],\n          target.eventDetail || [],\n          target.documentDetail || [],\n          target.otherClaims || []\n      );\n\n /*     Object.keys(claims).forEach(key => {\n        if (key.startsWith('Q') && Array.isArray(claims[key])) {\n          // Par exemple, pour les ajouter à mainList :\n          target.mainList.push(claims[key]);\n        }\n      });\n      */\n\n    }\n    isMain = target.mainList.length > 0;\n    if (claims.P2 !== undefined && claims.P2[0]?.mainsnak?.label !== undefined) {\n      target.mainTitle = claims.P2[0].mainsnak.label;\n    }\n\n    // ... après la construction de target.mainList\n\n\n\n    let isFrames = false;\n\n    /* iframes\n    target.iframes = [];\n    \n    this.iframesDisplay.setIframesDisplay(item, target.iframes);\n    isFrames = target.iframes.length > 0;\n    */\n\n    // InfoList\n   \n    this.blockDisplay.setItemInfoDisplay(item, target);\n\n    let technicalities: any[] = [];\n    this.technicalitiesDisplay.setTechnicalitiesDisplay(item, technicalities);\n\n    target.infoList = {\n      instancesList: target.instancesList,\n      subclassesList: target.subclassesList,\n      classesList: target.classesList,\n      natureOfList: target.natureOfList,\n      technicalities: technicalities\n    };\n\n    // Flag unique pour l'affichage\n    let isInfoList =\n      (target.infoList.instancesList && target.infoList.instancesList.length > 0) ||\n      (target.infoList.subclassesList && target.infoList.subclassesList.length > 0) ||\n      (target.infoList.classesList && target.infoList.classesList.length > 0) ||\n      (target.infoList.natureOfList && target.infoList.natureOfList.length > 0) ||\n      (target.infoList.technicalities && target.infoList.technicalities.length > 0);\n\n\n    // Wikis\n    target.wikis = [];\n    let isWikis = false;\n    this.wikiDisplay.setWikiDisplay(item, target.wikis);\n    isWikis = target.wikis.length > 0;\n\n\n    // ... (autres propriétés comme dans votre code)\n\n\n    // Retourne les flags utiles\n    return {\n      isPlace,\n      isCareer,\n      isSociability,\n      isTraining,\n      isActivity,\n      isDocument,\n      isEvent,\n      isSource,\n      isOrg,\n      isOther,\n      isInfoList,\n      isMain,\n      isWikis,\n      isFrames,\n      isExternalLinks\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemInfoComponent.html":{"url":"components/ItemInfoComponent.html","title":"component - ItemInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/item-info/item-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-info\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgClass\n                            MatCardModule\n                            NgFor\n                            NgIf\n                            RouterLink\n                            MatIconModule\n                            UnitPipe\n                \n            \n\n            \n                styleUrls\n                ./item-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classesListTitle\n                            \n                            \n                                instancesListTitle\n                            \n                            \n                                isInfo\n                            \n                            \n                                isList1\n                            \n                            \n                                isList2\n                            \n                            \n                                isList3\n                            \n                            \n                                isList4\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                list1\n                            \n                            \n                                list1Number\n                            \n                            \n                                list2\n                            \n                            \n                                list2Number\n                            \n                            \n                                list3\n                            \n                            \n                                list3Number\n                            \n                            \n                                list4\n                            \n                            \n                                list4Number\n                            \n                            \n                                natureOfListTitle\n                            \n                            \n                                prefix1\n                            \n                            \n                                prefix2\n                            \n                            \n                                selectedLang\n                            \n                            \n                                subclassesListTitle\n                            \n                            \n                                subInfoTitle\n                            \n                            \n                                suffix1\n                            \n                            \n                                technicalities\n                            \n                            \n                                technicalitiesNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                openImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        infoList\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/item-info/item-info.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/item-info/item-info.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openImage\n                        \n                    \n                \n            \n            \n                \nopenImage(image)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/item-info/item-info.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classesListTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"classes of the Q-item:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        instancesListTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"instances of the Q-item:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isList1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isList2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isList3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isList4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list1Number\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list2Number\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list3Number\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list4\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list4Number\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        natureOfListTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"instance of\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"class hierarchy: class depending on \"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefix2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"class hierarchy: class with \"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang']\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subclassesListTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"subclasses of the Q-item:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subInfoTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Information on the Q-item\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suffix1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"classes:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technicalities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technicalitiesNumber\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/display/item-info/item-info.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterLink } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { NgClass, NgFor, NgIf } from '@angular/common';\nimport { SelectedLangService } from '../../selected-lang.service';\nimport { UnitPipe } from '../../unit.pipe';\n\n\n\n\n@Component({\n    selector: 'app-item-info',\n    templateUrl: './item-info.component.html',\n    styleUrls: ['./item-info.component.scss'],\n    standalone: true,\n    imports: [CommonModule, NgClass, MatCardModule, NgFor, NgIf, RouterLink, MatIconModule, UnitPipe]\n})\nexport class ItemInfoComponent implements OnChanges {\n  private lang = inject(SelectedLangService);\n\n\n  @Input() infoList;\n  \n\n  \n  selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\n  list1:any[] = [];\n  list2:any[] = [];\n  list3:any[] = [];\n  list4: any[] = [];\n  technicalities: any[] = [];\n  list1Number;\n  list2Number;\n  list3Number;\n  list4Number;\n  technicalitiesNumber;\n  isList1:boolean = false;\n  isList2:boolean = false;\n  isList3:boolean = false;\n  isList4:boolean = false;\n  isInfo:boolean = false;\n  instancesListTitle = \"instances of the Q-item:\";\n  subclassesListTitle = \"subclasses of the Q-item:\"\n  subInfoTitle:string = \"Information on the Q-item\";\n  classesListTitle:string = \"classes of the Q-item:\"\n  natureOfListTitle:string = \"instance of\";\n  prefix1:string = \"class hierarchy: class depending on \";\n  prefix2:string = \"class hierarchy: class with \";\n  suffix1: string = \"classes:\";\n\n\n  openImage(image) { //handling click for picture (open in new tab) \n    window.open(image);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    this.instancesListTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n    this.subclassesListTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n    this.classesListTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n    this.natureOfListTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n    this.subInfoTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n    this.prefix1 = this.lang.getTranslation('$1', this.lang.selectedLang);\n    this.prefix2 = this.lang.getTranslation('$1', this.lang.selectedLang);\n    this.suffix1 = this.lang.getTranslation('$1', this.lang.selectedLang);\n\n    // Utilisation des listes depuis infoList\n    this.list1 = this.infoList?.subclassesList ?? [];\n    this.list2 = this.infoList?.instancesList ?? [];\n    this.list3 = this.infoList?.classesList ?? [];\n    this.list4 = this.infoList?.natureOfList ?? [];\n    this.technicalities = this.infoList?.technicalities ?? [];\n\n    this.list1Number = this.list1.length;\n    this.list2Number = this.list2.length;\n    this.list3Number = this.list3.length;\n    this.list4Number = this.list4.length;\n    this.technicalitiesNumber = this.technicalities.length;\n\n    this.isInfo =\n      this.list1Number + this.list2Number + this.list3Number + this.list4Number + this.technicalitiesNumber > 0;\n\n    this.isList1 = this.list1.length > 0;\n    this.isList2 = this.list2.length > 0;\n    this.isList3 = this.list3.length > 0;\n    this.isList4 = this.list4.length > 0;\n  }\n\n    } \n\n\n\n\n\n  \n\n\n\n    \n\n    \n        \n\n  \n    \n\n      {{ subInfoTitle }}\n\n      \n       0\">\n        Technicalities\n        \n          \n            {{ P.label }}:\n            \n            {{ P.value }}\n            \n          \n        \n        \n      \n\n      \n      \n        \n          \n            {{ natureOfListTitle }} {{ list4Number }} {{ suffix1 }} \n          \n          \n          \n            \n              \n                \n                  {{ L.itemLabel.value }}\n                  ({{ L.itemDescription.value }})\n                  \n                    open_in_new\n                  \n                \n              \n              \n            \n          \n        \n      \n\n      \n      \n        {{ prefix1 }} {{ list3Number }} {{ classesListTitle }}\n        \n        \n          \n            \n              \n                {{ L.itemLabel.value }}\n                ({{ L.itemDescription.value }})\n                \n                  open_in_new\n                \n              \n            \n            \n          \n        \n      \n\n      \n      \n        {{ prefix2 }} {{ list1Number }} {{ subclassesListTitle }}\n        \n        \n          \n            \n              \n                {{ L.itemLabel.value }}\n                ({{ L.itemDescription.value }})\n                \n                  open_in_new\n                \n              \n            \n            \n          \n        \n      \n\n      \n      \n        {{ list2Number }} {{ instancesListTitle }}\n        \n        \n          \n            \n              \n                {{ L.itemLabel.value }}\n                ({{ L.itemDescription.value }})\n                \n                  open_in_new\n                \n              \n            \n            \n          \n        \n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./item-info.component.scss\n                \n                .property2 {\n    color:#3F51B5;\n    font-weight:550;\n  }\n\n.hide-division {\n    display: none;\n    }\n  \n.show-division {\n    display: block;\n    }\n\n.subdivision-title {\n        color:#AD1457;\n        font-size: 20px !important;\n        font-weight: 360;\n        padding: 5 px;\n        margin-left: auto;\n        margin-bottom: 10px;\n        height:40px;\n        display:flex;\n        align-items: center;\n      }\n      \n.itemInformation-mat-card{\n        height: fit-content;\n        background-color:#f6f8f9 !important;\n        margin-bottom: 2px;\n        margin-right: 2px;\n        margin-left: 2px;\n      }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ subInfoTitle }}             0\">        Technicalities                              {{ P.label }}:                        {{ P.value }}                                                                                      {{ natureOfListTitle }} {{ list4Number }} {{ suffix1 }}                                                                                           {{ L.itemLabel.value }}                  ({{ L.itemDescription.value }})                                      open_in_new                                                                                                                      {{ prefix1 }} {{ list3Number }} {{ classesListTitle }}                                                                    {{ L.itemLabel.value }}                ({{ L.itemDescription.value }})                                  open_in_new                                                                                                  {{ prefix2 }} {{ list1Number }} {{ subclassesListTitle }}                                                                    {{ L.itemLabel.value }}                ({{ L.itemDescription.value }})                                  open_in_new                                                                                                  {{ list2Number }} {{ instancesListTitle }}                                                                    {{ L.itemLabel.value }}                ({{ L.itemDescription.value }})                                  open_in_new                                                                                    '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemInfoService.html":{"url":"injectables/ItemInfoService.html","title":"injectable - ItemInfoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ItemInfoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/item-info.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                            \n                                langService\n                            \n                            \n                                    Private\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                classesListBuilding\n                            \n                            \n                                infoListBuilding\n                            \n                            \n                                instancesListBuilding\n                            \n                            \n                                listFromSparql\n                            \n                            \n                                natureOfListBuilding\n                            \n                            \n                                newSparqlAddress\n                            \n                            \n                                subclassesListBuilding\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        classesListBuilding\n                        \n                    \n                \n            \n            \n                \nclassesListBuilding(id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-info.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoListBuilding\n                        \n                    \n                \n            \n            \n                \ninfoListBuilding(item)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-info.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        instancesListBuilding\n                        \n                    \n                \n            \n            \n                \ninstancesListBuilding(id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-info.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listFromSparql\n                        \n                    \n                \n            \n            \n                \nlistFromSparql(res)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-info.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        natureOfListBuilding\n                        \n                    \n                \n            \n            \n                \nnatureOfListBuilding(id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-info.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSparqlAddress\n                        \n                    \n                \n            \n            \n                \nnewSparqlAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-info.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subclassesListBuilding\n                        \n                    \n                \n            \n            \n                \nsubclassesListBuilding(id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/item-info.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-info.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        langService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-info.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/item-info.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable, forkJoin } from 'rxjs';\nimport { RequestService } from './request.service';\nimport { SelectedLangService } from '../selected-lang.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemInfoService {\n  private request = inject(RequestService);\n  private lang = inject(SelectedLangService);\n\n\n // selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\n\n  langService:string = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\";\n\n  infoListBuilding(item) {\n    let id = item.id;\n    let instancesListQuery;\n    let subclassesListQuery:Observable | undefined ;\n    let classesListQuery:Observable | undefined ;\n    let natureOfListQuery:Observable | undefined;\n    let infoList:any[];\n\n    instancesListQuery = this.instancesListBuilding(id);\n    subclassesListQuery = this.subclassesListBuilding(id)  ;\n    classesListQuery = this.classesListBuilding(id);\n    natureOfListQuery = this.natureOfListBuilding(id);\n  //  result=classesListQuery;\n   forkJoin([instancesListQuery,subclassesListQuery,classesListQuery,natureOfListQuery])\n  .subscribe(res => {infoList = res, item.infoList = infoList}); //ici on pourrait mettre un behaviorSubject pour l'infolist'\n   //item.infolist = result; // I made this change; to be checked .\n    //  return result  // the return does'nt seem to be necessary\n    \n    } \n\n  instancesListBuilding(id){\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%0AWHERE%20%7B%20%3Fitem%20wdt%3AP2%20wd%3A\";\n    let suffix = \"ORDER%20by%20%3FitemLabel\";\n    let suffix2 = \"%20%0ALIMIT%20200\";\n    let u = this.newSparqlAddress(prefix+id+this.langService+suffix+suffix2);\n//    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\n //     let u = prefix + id + this.langService + suffix + suffix2;\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\n        } \n\n  subclassesListBuilding(id){   \n    let prefix = \"https://database.factgrid.de/query/#SELECT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%0AWHERE%20%7B%20%3Fitem%20wdt%3AP3%2B%20wd%3A\";\n    let suffix = \"ORDER%20by%20%3FitemLabel\";\n    let u = this.newSparqlAddress(prefix+id+this.langService+suffix);\n  //  return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\n //   let u = prefix + id + this.langService + suffix;\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));;\n     } \n     \n  classesListBuilding(id){\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%7B%20%0A%3Fitem%20%5E%28wdt%3AP3%2Fwdt%3AP3%2a%29%20wd%3A\";\n    let suffix = \"ORDER%20by%20%3FitemLabel\";\n    let u = this.newSparqlAddress(prefix+id+this.langService+suffix);\n //   return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\n //   let u = prefix + id + this.langService + suffix;\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));;\n      }\n\n  natureOfListBuilding(id){\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%7B%20%3Fobject%20wdt%3AP3%2a%20%3Fitem%3B%20%5Ewdt%3AP2%20wd%3A\"\n    let u = this.newSparqlAddress(prefix+id+this.langService);\n //   return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\n //   let u = prefix + id + this.langService;\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));;\n      }\n  \n  listFromSparql(res) {\n    if (res !== undefined){\n    if (res.results !== undefined) {\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemType.html":{"url":"interfaces/ItemType.html","title":"interface - ItemType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/item-type2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            label1\n                                        \n                                \n                                \n                                        \n                                            label2\n                                        \n                                \n                                \n                                        \n                                            label3\n                                        \n                                \n                                \n                                        \n                                            label4\n                                        \n                                \n                                \n                                        \n                                            label5\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label3\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label4\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label4:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label5\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label5:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ItemType {\n  id: string;\n  label: string;\n  label1: string;\n  label2: string;\n  label3: string;\n  label4: string;\n  label5: string;\n}\n\n\nexport const ITEMTYPES: ItemType[] = [\n  { id: 'Q256699', label: '?activity', label1: '?activity1', label2: '?activity2', label3: '?activity3', label4: '?activity4', label5: '?activity5' },\n  { id: 'Q21870', label: '?archive', label1: '?archive1', label2: '?archive2', label3: '?archive3', label4: '?archive4', label5: '?archive5' },\n  { id: 'Q101755', label: '?artefact', label1: '?artefact1', label2: '?artefact2', label3: '?artefact3', label4: '?artefact4', label5: '?artefact5' },\n  { id: 'Q100626', label: '?book', label1: '?book1', label2: '?book2', label3: '?book3', label4: '?book4', label5: '?book5' },\n  { id: 'Q77493', label: '?career', label1: '?career1', label2: '?career2', label3: '?career3', label4: '?career4', label5: '?career5' },\n  { id: 'Q77500', label: '?city', label1: '?city1', label2: '?city2', label3: '?city3', label4: '?city4', label5: '?city5' },\n  { id: 'Q77500', label: '?country', label1: '?country1', label2: '?country2', label3: '?country3', label4: '?country4', label5: '?country5' },\n  { id: 'Q77483', label: '?date', label1: '?date1', label2: '?date2', label3: '?date3', label4: '?date4', label5: '?date5' },\n  { id: 'Q21870', label: '?document', label1: '?document1', label2: '?document2', label3: '?document3', label4: '?document4', label5: '?document5' },\n  { id: 'Q100631', label: '?education', label1: '?education1', label2: '?education2', label3: '?education3', label4: '?education4', label5: '?education5' },\n  { id: 'Q77499', label: '?event', label1: '?event1', label2: '?event2', label3: '?event3', label4: '?event4', label5: '?event5' },\n  { id: 'Q23197', label: '?freemasonry', label1: '?freemasonry1', label2: '?freemasonry2', label3: '?freemasonry3', label4: '?freemasonry4', label5: '?freemasonry5' },\n  { id: 'Q77498', label: '?group', label1: '?group1', label2: '?group2', label3: '?group3', label4: '?group4', label5: '?group5' },\n  { id: 'Q77478', label: '?human', label1: '?human1', label2: '?human2', label3: '?human3', label4: '?human4', label5: '?human5' },\n  { id: 'Q77495', label: '?human work', label1: '?human work1', label2: '?human work2', label3: '?human work3', label4: '?human work4', label5: '?human work5' },\n  { id: 'Q77488', label: '?name', label1: '?name1', label2: '?name2', label3: '?name3', label4: '?name4', label5: '?name5' },\n  { id: 'Q101755', label: '?object', label1: '?object1', label2: '?object2', label3: '?object3', label4: '?object4', label5: '?object5' },\n  { id: 'Q77501,', label: '?organisation', label1: '?organisation1', label2: '?organisation2', label3: '?organisation3', label4: '?organisation4', label5: '?organisation5' },\n  { id: 'Q77478', label: '?people', label1: '?people1', label2: '?people2', label3: '?people3', label4: '?people4', label5: '?people5' },\n  { id: 'Q77478', label: '?person', label1: '?person1', label2: '?person2', label3: '?person3', label4: '?person4', label5: '?person5' },\n  { id: 'Q77500', label: '?place', label1: '?place1', label2: '?place2', label3: '?place3', label4: '?place4', label5: '?place5' },\n  { id: 'Q100626', label: '?printed document', label1: '?printed document1', label2: '?printed document2', label3: '?printed document3', label4: '?printed document4', label5: '?printed document5' },\n  { id: 'Q256699', label: '?profession', label1: '?profession1', label2: '?profession2', label3: '?profession3', label4: '?profession4', label5: '?profession5' },\n  { id: 'Q77502', label: '?publication', label1: '?publication1', label2: '?publication2', label3: '?publication3', label4: '?publication4', label5: '?publication5' },\n  { id: 'Q77499', label: '?text', label1: '?text1', label2: '?text2', label3: '?text3', label4: '?text4', label5: '?text5' },\n\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/JoinPipe.html":{"url":"pipes/JoinPipe.html","title":"pipe - JoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  JoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/join.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        join\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(input: Array, sep: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/join.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                sep\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ' | '\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'join',\n    standalone: true\n})\nexport class JoinPipe implements PipeTransform {\n  transform(input: Array, sep = ' | '):string { if (input !==undefined)\n  { return input.join(sep) };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Lang.html":{"url":"interfaces/Lang.html","title":"interface - Lang","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Lang\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, switchMap, map, filter, takeWhile } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { SetLanguageService } from './services/set-language.service';\nimport { RequestService } from './services/request.service';\nimport { SlideUpAnimation } from './slide-up-animation';\nimport { RouterLink, RouterModule, Router } from '@angular/router';\nimport { NgFor, NgIf } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FooterComponent } from './footer/footer.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nexport interface Lang {\n  name: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [SlideUpAnimation],\n  standalone: true,\n  imports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    NgFor,\n    NgIf,\n    RouterModule,\n    RouterLink,\n    FooterComponent,\n    MatTooltipModule\n  ]\n})\nexport class AppComponent implements OnInit {\n  private router = inject(Router);\n\n  langs: Lang[] = [\n    { name: 'English', code: 'en' },\n    { name: 'German', code: 'de' },\n    { name: 'French', code: 'fr' },\n    { name: 'Spanish', code: 'es' },\n    { name: 'Italian', code: 'it' },\n    { name: 'Hungarian', code: 'hu' },\n    { name: 'Swedish', code: 'se' }\n  ];\n\n  specialPages = [\n    { name: 'Harmonia Universalis', address: 'harmonia_universalis' },\n    { name: 'Paris', address: 'paris' }\n  ];\n\n  researchFields: any[] = [\n    { name: 'all', id: 'all' },\n    { name: 'Illuminati', id: 'Q10677' },\n    { name: 'student corporations', id: 'Q28115' },\n    { name: 'animal magnetism', id: 'Q172203' },\n    { name: 'freemasonry', id: 'Q10678' },\n    { name: 'prose fiction', id: 'Q195135' },\n    { name: 'Paris', id: 'Q10441' },\n    { name: 'Harmonia Universalis', id: 'Q99677' }\n  ];\n\n  selectedLang: string = (localStorage['selectedLang'] === undefined) ? 'en' : localStorage['selectedLang'];\n  selectedPage = (sessionStorage['selectedPage'] === undefined)\n    ? JSON.stringify([{ name: 'FactGrid', address: '' }])\n    : sessionStorage['selectedPage'];\n  selectedItems: any[] = [];\n  selectedParisItems: any[] = [];\n  selectedResearchField: string = localStorage['selectedResearchField'];\n  title = 'factgrid';\n  subtitle: string;\n  searchInput = new FormControl();\n  public selectedItem: Observable;\n  searchToken: string = 'on';\n  public isDown: boolean = true;\n  u: string;\n  labels;\n  items = [];\n  newItem;\n  itemId: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if (localStorage['selectedLang'] === undefined) {\n      localStorage.setItem('selectedLang', 'en');\n    }\n    if (localStorage['selectedItems'] === undefined) {\n      localStorage.setItem('selectedItems', JSON.stringify([{ value: { id: 'Q152233' }, label: 'FactGrid' }]));\n    }\n    if (localStorage['selectedResearchField'] === undefined) {\n      localStorage.setItem('selectedResearchField', 'all');\n    }\n    if (localStorage['selectedParisItems'] === undefined) {\n      localStorage.setItem('selectedParisItems', JSON.stringify([{ value: { id: 'Q152233' }, label: 'FactGrid' }]));\n    }\n  }\n\n  get researchFieldsSorted() {\n    // \"all\" toujours en tête\n    const all = this.researchFields.find(f => f.id === 'all');\n    // Champ sélectionné (hors \"all\")\n    const selected = this.researchFields.find(f => f.id === this.selectedResearchField && f.id !== 'all');\n    // Paris et Harmonia Universalis (hors sélection)\n    const specials = this.researchFields.filter(f =>\n      (f.name === 'Paris' || f.name === 'Harmonia Universalis') &&\n      f.id !== (selected?.id)\n    );\n    // Les autres (hors all, specials, sélectionné)\n    const others = this.researchFields.filter(f =>\n      f.id !== 'all' &&\n      f.id !== (selected?.id) &&\n      f.name !== 'Paris' &&\n      f.name !== 'Harmonia Universalis'\n    );\n    // Construction de la liste\n    return [\n      all,\n      ...(selected && selected.id !== 'all' ? [selected] : []),\n      ...specials,\n      ...others\n    ].filter(Boolean);\n  }\n\n  isResearchFieldEnabled(researchField: any): boolean {\n    // Seuls Paris et Harmonia Universalis sont opérationnels, ainsi que \"all\"\n    return (\n      researchField.id === 'all' ||\n      researchField.name === 'Paris' ||\n      researchField.name === 'Harmonia Universalis'\n    );\n  }\n\n  langSetting(lang) {\n    if (lang !== undefined) {\n      this.selectedLang = lang.code;\n    }\n    localStorage['selectedLang'] = this.selectedLang;\n    window.location.reload();\n  }\n\n  researchFieldSelect(researchField) {\n    if (!researchField) {\n      this.selectedResearchField = 'all';\n    } else {\n      this.selectedResearchField = researchField.id;\n      // Toujours mettre à jour le localStorage avant de naviguer\n      localStorage['selectedResearchField'] = this.selectedResearchField;\n\n      // Navigation spécifique pour Paris et Harmonia Universalis\n      if (researchField.name === 'Paris') {\n        this.router.navigate(['/paris']);\n        return;\n      }\n      if (researchField.name === 'Harmonia Universalis') {\n        this.router.navigate(['/harmonia_universalis']);\n        return;\n      }\n    }\n    // Pour le cas où researchField est null\n    if (!researchField) {\n      localStorage['selectedResearchField'] = this.selectedResearchField;\n    }\n  }\n\n\n  linking() {\n    window.open('https://database.factgrid.de/wiki/Main_Page', '_blank');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListDetailsService.html":{"url":"injectables/ListDetailsService.html","title":"injectable - ListDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ListDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/list-details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                object\n                            \n                            \n                                    Private\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setListDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setListDetails\n                        \n                    \n                \n            \n            \n                \nsetListDetails(list)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/list-details.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                list\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/list-details.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/list-details.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/list-details.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListDetailsService {\n  private request = inject(RequestService);\n\n\n  list: any[] \n  object:any[] = [];\n\n /* setListDetails(sparql){\t\n    let observedList = this.request.getList(sparql).pipe(\n    map(res => {\n      let selectToDisplay:string[] = res.head.vars,\n      itemData:any[] = res.results.bindings\t \n      for (let i=0; i console.log(re));\n    return observedList\n  }\n  */\n\n setListDetails(list){\t\n  list\n  console.log(typeof(list))\n   /*.pipe(\n  map(res => { console.log(res) })\n  )\n   let keys:string[] = res.head.vars,\n    itemData:any[] = res.results.bindings\n    for (let i=0;i console.log(re));\nreturn observedList\n*/\n\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LongestWordService.html":{"url":"injectables/LongestWordService.html","title":"injectable - LongestWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LongestWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/longest-word.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findLongestWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/longest-word.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findLongestWord\n                        \n                    \n                \n            \n            \n                \nfindLongestWord(str)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/longest-word.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LongestWordService {\n\n  constructor() { }\n\nfindLongestWord(str) {\n  var longestWord = str.split(' ').reduce(function(longest, currentWord) {\n    return currentWord.length > longest.length ? currentWord : longest;\n  }, \"\");\n  return longestWord.length;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainDisplayComponent.html":{"url":"components/MainDisplayComponent.html","title":"component - MainDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/main-display/main-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            MatCardModule\n                            RouterLink\n                            RouterOutlet\n                            UnitPipe\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openImage\n                            \n                            \n                                toggleReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                mainList\n                            \n                            \n                                mainTitle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/main-display/main-display.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mainList\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/main-display/main-display.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mainTitle\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/main-display/main-display.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openImage\n                        \n                    \n                \n            \n            \n                \nopenImage(image)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/main-display/main-display.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleReferences\n                        \n                    \n                \n            \n            \n                \ntoggleReferences()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/main-display/main-display.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/main-display/main-display.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { UnitPipe } from '../../unit.pipe';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Component({\n  selector: 'app-main-display',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, RouterOutlet, UnitPipe, MatTooltipModule],\n  templateUrl: './main-display.component.html',\n  styleUrl: './main-display.component.scss'\n})\nexport class MainDisplayComponent {\n\n  @Input() mainList;\n  @Input() mainTitle;\n  @Input() list;\n\n  \n\n \n  showReferences = false; // état du volet\n\n  toggleReferences() {\n    this.showReferences = !this.showReferences;\n  }\n\n\n openImage(image){ //handling click for picture (open in new tab) \n    window.open(image);\n  }\n\n}\n\n    \n\n    \n        \n  {{mainTitle}}\n\n  \n\n  @for (P of mainList; track P.id) {\n  \n    \n      \n        {{P.label}}:\n      \n    \n    @for (M of P; track M) {\n    \n      \n        @if (M.mainsnak.datatype ==='time') {\n        {{M.mainsnak.datavalue.value.date}}\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\n        \n          greg.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\n        \n          jul.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        }\n        @if (M.mainsnak.datatype==='monolingualtext') {\n        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}\n        }\n        @if (M.mainsnak.datatype === 'string') {\n        {{M.mainsnak.datavalue.value }}\n        }\n        @if (M.mainsnak.datatype === 'url') {\n        \n          {{M.mainsnak.datavalue.value}}\n        \n        }\n        {{M.mainsnak.datavalue.value.amount}}\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\n        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}\n        }\n        @if (M.mainsnak.datatype==='commonsMedia') {\n        \n          \n            \n          \n        \n        }\n        @if (M.mainsnak.datatype==='wikibase-item') {\n        \n          {{M.mainsnak.label}}\n          \n            open_in_new\n          \n          &nbsp;&nbsp;&nbsp;\n        \n        {{M.mainsnak.separator}}\n        {{M.mainsnak.description}}&nbsp;\n        }\n        @if (M.rank=='deprecated') {\n         &nbsp;({{M.rank}})\n        }\n      \n      \n        @if (M['qualifiers-order']) {\n        \n          @for (Q of M.qualifiers2; track Q) {\n          \n            \n              {{Q.label}}:&nbsp;\n            \n            @for (D of Q.display; track D; let isLast = $last) {\n            \n              @if (D.datatype === 'time') {\n              \n                {{D.date}}\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\n                \n                  greg.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\n                \n                  jul.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n              \n              }\n              @if (D.datatype==='string') {\n              \n                {{D.string}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              @if (D.datatype==='monolingualtext') {\n              \n                {{D.string.text}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              {{D.amount}}\n              @if (D.unit) {\n              &nbsp;({{D.unit | unit |async}})&nbsp;\n              }\n              @if (D.datatype === 'external-id') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype === 'url') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype==='wikibase-item') {\n              \n                {{D.label}}\n                \n                  open_in_new\n                \n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\n                {{D.separator}}{{D.description}}\n              \n              }\n              @if (D.datatype==='commonsMedia') {\n              \n                \n                  \n                \n              \n              }\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n          \n          }\n        \n        }\n      \n      \n      @if (M['references2'] && M['references2'].length > 0) {\n      \n        \n        Références\n      \n      @if (showReferences && M['references2']) {\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\n      \n        @for (N of Ma; track N; let isLast = $last) {\n        \n          \n            {{N.label}}:\n          \n          \n            @for (P of N.display; track P; let isLast = $last) {\n            @if (N.datatype === 'wikibase-item') {\n            \n              {{P.label}}\n              \n                open_in_new\n              &nbsp;&nbsp;&nbsp;\n              {{P.separator}}{{P.description}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype==='time') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype==='string') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype === 'url') {\n            \n              {{P}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype === 'external-id') {\n            \n              {{P.value}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            }\n          \n          @if (!isLast) {\n          ,&nbsp;\n          }\n        \n        }\n      \n      }\n      }\n      }\n    \n    }\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{mainTitle}}    @for (P of mainList; track P.id) {                    {{P.label}}:              @for (M of P; track M) {                  @if (M.mainsnak.datatype ===\\'time\\') {        {{M.mainsnak.datavalue.value.date}}        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {                  greg.                      open_in_new                             }        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {                  jul.                      open_in_new                             }        }        @if (M.mainsnak.datatype===\\'monolingualtext\\') {        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}        }        @if (M.mainsnak.datatype === \\'string\\') {        {{M.mainsnak.datavalue.value }}        }        @if (M.mainsnak.datatype === \\'url\\') {                  {{M.mainsnak.datavalue.value}}                }        {{M.mainsnak.datavalue.value.amount}}        @if (M.mainsnak.datatype === \\'globe-coordinate\\') {        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}        }        @if (M.mainsnak.datatype===\\'commonsMedia\\') {                                                        }        @if (M.mainsnak.datatype===\\'wikibase-item\\') {                  {{M.mainsnak.label}}                      open_in_new                                       {{M.mainsnak.separator}}        {{M.mainsnak.description}}         }        @if (M.rank==\\'deprecated\\') {          ({{M.rank}})        }                    @if (M[\\'qualifiers-order\\']) {                  @for (Q of M.qualifiers2; track Q) {                                    {{Q.label}}:                         @for (D of Q.display; track D; let isLast = $last) {                          @if (D.datatype === \\'time\\') {                              {{D.date}}                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {                                  greg.                                      open_in_new                                                     }                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {                                  jul.                                      open_in_new                                                     }                            }              @if (D.datatype===\\'string\\') {                              {{D.string}}                @if (!isLast) {                ,                 }                            }              @if (D.datatype===\\'monolingualtext\\') {                              {{D.string.text}}                @if (!isLast) {                ,                 }                            }              {{D.amount}}              @if (D.unit) {               ({{D.unit | unit |async}})               }              @if (D.datatype === \\'external-id\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype === \\'url\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype===\\'wikibase-item\\') {                              {{D.label}}                                  open_in_new                                @if(D.description){    }                {{D.separator}}{{D.description}}                            }              @if (D.datatype===\\'commonsMedia\\') {                                                                                            }                        @if (!isLast) {            ,             }            }                    }                }                  @if (M[\\'references2\\'] && M[\\'references2\\'].length > 0) {                      Références            @if (showReferences && M[\\'references2\\']) {      @for (Ma of M[\\'references2\\']; track Ma; let isLast = $last) {              @for (N of Ma; track N; let isLast = $last) {                              {{N.label}}:                                @for (P of N.display; track P; let isLast = $last) {            @if (N.datatype === \\'wikibase-item\\') {                          {{P.label}}                              open_in_new                               {{P.separator}}{{P.description}}                        @if (!isLast) {            ,             }            }            @if (N.datatype===\\'time\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype===\\'string\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype === \\'url\\') {                          {{P}}                        @if (!isLast) {            ,             }            }            @if (N.datatype === \\'external-id\\') {                          {{P.value}}                        @if (!isLast) {            ,             }            }            }                    @if (!isLast) {          ,           }                }            }      }      }        }    }'\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/map/map.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeDetector\n                            \n                            \n                                lat\n                            \n                            \n                                latitude\n                            \n                            \n                                lng\n                            \n                            \n                                longitude\n                            \n                            \n                                mapZoom\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/map/map.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/map/map.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeDetector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/map/map.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/map/map.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/map/map.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/map/map.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/map/map.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapZoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/map/map.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/map/map.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/map/map.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ChangeDetectorRef, inject } from '@angular/core';\nimport { ActivatedRoute, ParamMap} from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport * as Leaflet from 'leaflet';\n\n\n@Component({\n    selector: 'app-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    standalone: true\n})\n\nexport class MapComponent implements OnInit {\n  private changeDetector = inject(ChangeDetectorRef);\n  private route = inject(ActivatedRoute);\n\n  \n  latitude:string;\n  longitude: string;\n  mapZoom: string;\n  lat: number;\n  lng: number;\n  zoom: number;\n\n  ngOnInit(): void {\n  \n  this.route.params.\n  subscribe( \n    params => {\n      let latitude = params['lat']; let longitude = params['lng']; let zoom =params['z']; \n    this.lat = Number(latitude);\n      this.lng = Number(longitude);\n      this.zoom = Number(zoom);\n      const itemLocation = { coords: new Leaflet.LatLng(this.lat, this.lng),\n      zoom:this.zoom };\n                        \n       let map = Leaflet.map('map');\n  \n        Leaflet.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png')\n        .addTo(map);\n  \n        Leaflet.marker([this.lat, this.lng]).addTo(map);\n   \n        map.setView(itemLocation.coords, itemLocation.zoom);\n\n      })\n   }\n\n   ngOnDestroy(): void {\n    \n   }\n \n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                :host {\n    height: 100%;\n}\n\n#map{\n    width: 100%;\n    height: 400px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/services/map.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/display/services/map.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayMap\n                        \n                    \n                \n            \n            \n                \ndisplayMap(coords)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/map.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                coords\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as Leaflet from 'leaflet';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  constructor() { }\n\n  displayMap(coords) { \n\n    console.log(coords);\n \n    let lat=coords.datavalue.value.latitude;\n    let lng=coords.datavalue.value.longitude;\n     const itemLocation = { coords: new Leaflet.LatLng(lat, lng),\n       zoom:12 };\n\n        \n /*    let map = Leaflet.map('map');\n   \n         Leaflet.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png')\n         .addTo(map);\n   \n         Leaflet.marker([lat, lng]).addTo(map);\n    \n         map.setView(itemLocation.coords, itemLocation.zoom);\n  */\n\n         return [lat, lng, coords, itemLocation]\n    \n      }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MutatorService.html":{"url":"injectables/MutatorService.html","title":"injectable - MutatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MutatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/services/mutator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                circularInversePermutation\n                            \n                            \n                                circularPermutation\n                            \n                            \n                                mutator\n                            \n                            \n                                transpose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/search/advanced-search/services/mutator.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        circularInversePermutation\n                        \n                    \n                \n            \n            \n                \ncircularInversePermutation(arr)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/mutator.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        circularPermutation\n                        \n                    \n                \n            \n            \n                \ncircularPermutation(arr)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/mutator.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutator\n                        \n                    \n                \n            \n            \n                \nmutator(itemType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/mutator.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                itemType\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transpose\n                        \n                    \n                \n            \n            \n                \ntranspose(arr)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/mutator.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DataService)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/services/mutator.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Variable, LITERALS, MUTATOR } from './../variable';\nimport { DataService } from '../services/data.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MutatorService {\n  constructor() { }\n\n // protected mutator: Variable[][] = MUTATOR;\n\n  //  transposeMutator = this.transpose(MUTATOR);\n\n  private data = inject(DataService);\n\n\n  mutator(itemType) {\n    console.log(itemType);\n    let mutator = [];\n    this.data.mutator$.subscribe(res => { mutator = res });\n    let transposeMutator = this.transpose(mutator); // transpose of the  mutator\n  //  let i = itemType[0]; // statement name (in the formArray \"statements\"); \n    let selectedItemType = itemType[1]; // name of the selectedItemType\n    let selectedItemId = itemType[3]; // id of the selected ItemTuype\n    let selectedCol = itemType[2];  // column of the selectedItemType in the mutator\n    let array = transposeMutator[selectedCol]; // list of names for the selected itemType ;\n    let permutedArray = this.circularPermutation(array);\n    transposeMutator[selectedCol] = permutedArray; // permuted list of names for the selected itemType\n    let newMutator = this.transpose(transposeMutator);  // mutator after the selection of the itemType;\n   // this.data.updateMutator(newMutator);\n    console.log(newMutator);\n    return newMutator\n\n  }\n\n\n transpose(arr) {\n    let newArr = arr[0].map((_, colIndex) => arr.map(row => row[colIndex]));\n    return newArr\n  }\n\n  circularPermutation(arr) {\n    let newArr = [];\n    let u = arr[0];\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParisDatabaseService.html":{"url":"injectables/ParisDatabaseService.html","title":"injectable - ParisDatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParisDatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/paris-search/services/paris-database.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Private\n                                data$\n                            \n                            \n                                    Private\n                                seed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/paris-search/services/paris-database.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addData\n                        \n                    \n                \n            \n            \n                \naddData(x: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/paris-search/services/paris-database.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.data$.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/services/paris-database.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.seed)\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/services/paris-database.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        seed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['jaw', 'jar', 'toy', 'troy', 'hip', 'hop']\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/services/paris-database.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParisDatabaseService {\n\n  constructor() { }\n\n   // seed data\n    private seed = ['jaw', 'jar', 'toy', 'troy', 'hip', 'hop'];\n    private data$ = new BehaviorSubject(this.seed);\n\n    // expose Observable\n    data = this.data$.asObservable();\n\n  // this.data.subscribe(res =>console.log(res));\n\n    // enable adding, and emitting fresh dataset\n    addData(x: string) {\n        const newData = this.data$.getValue().concat(x);\n        this.data$.next(newData);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParisSearchComponent.html":{"url":"components/ParisSearchComponent.html","title":"component - ParisSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ParisSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/paris-search/paris-search.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-paris-search\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatInputModule\n                            MatFormFieldModule\n                            MatTableModule\n                            MatIconModule\n                            MatButtonModule\n                            MatCardModule\n                \n            \n\n            \n                styleUrls\n                ./paris-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./paris-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseGetURL\n                            \n                            \n                                    Private\n                                changeDetector\n                            \n                            \n                                data$\n                            \n                            \n                                    Private\n                                dataService\n                            \n                            \n                                formerVisitsTitle\n                            \n                            \n                                    Private\n                                getUrlSuffix\n                            \n                            \n                                    Public\n                                isDisplay\n                            \n                            \n                                itemId\n                            \n                            \n                                items\n                            \n                            \n                                labels\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                newItem\n                            \n                            \n                                    Private\n                                request\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                searchInput\n                            \n                            \n                                searchQuery$\n                            \n                            \n                                    Public\n                                selectedItem\n                            \n                            \n                                selectedParisItemsList\n                            \n                            \n                                    Private\n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addParis\n                            \n                            \n                                createList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openItem\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addParis\n                        \n                    \n                \n            \n            \n                \naddParis(re)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/paris-search/paris-search.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(re)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/paris-search/paris-search.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/paris-search/paris-search.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/paris-search/paris-search.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openItem\n                        \n                    \n                \n            \n            \n                \nopenItem(item: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/paris-search/paris-search.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackById\n                        \n                    \n                \n            \n            \n                \ntrackById(index: number, item: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/paris-search/paris-search.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseGetURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids='\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeDetector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ParisDatabaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formerVisitsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"you have visited:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUrlSuffix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '&format=json&origin=*'\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labels\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newItem\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedParisItemsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : (JSON.parse(localStorage.getItem('selectedItems')) || []).filter(item => item && item.value && item.value.id)\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SetLanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/paris-search/paris-search.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { map, switchMap, tap, debounceTime, takeWhile, filter } from 'rxjs/operators';\nimport { ParisDatabaseService } from './services/paris-database.service';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n//import { RouterLinkActive, RouterLink, RouterOutlet } from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { SetLanguageService } from '../services/set-language.service';\nimport { RequestService } from '../services/request.service';\nimport { SelectedLangService } from '../selected-lang.service';\nimport { Router } from '@angular/router';\n\n\n\n\n\n@Component({\n  selector: 'app-paris-search',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n  ],\n  templateUrl: './paris-search.component.html',\n  styleUrls: ['./paris-search.component.scss']\n})\n\n\n\n\nexport class ParisSearchComponent implements OnInit {\n private dataService = inject(ParisDatabaseService);\n private changeDetector = inject(ChangeDetectorRef);\n private request = inject(RequestService);\n private setLanguage = inject(SetLanguageService);\n private lang = inject(SelectedLangService);\n private router = inject(Router);\n\n\n\n  //  selectedLang: string = (localStorage['selectedLang']===undefined)? \"en\": localStorage['selectedLang']; //initialization of the storage of the selected language (english)\n\n\n    searchInput = new FormControl();\n\n    public selectedItem:Observable;\n    public isDisplay:boolean = false;\n\n    data$ = new Observable();\n    searchQuery$ = new BehaviorSubject('');\n    \n    labels\n    items = [];\n    newItem;\n    itemId:string;\n\n    private baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=' ;\n    private getUrlSuffix= '&format=json&origin=*' ;\n\n    formerVisitsTitle:string =\"you have visited:\";\n    selectedParisItemsList: any[] = (JSON.parse(localStorage.getItem('selectedItems')) || []).filter(item => item && item.value && item.value.id);\n\n\n  openItem(item: any) {\n    console.log('openItem called with:', item);\n    sessionStorage.setItem('from', 'paris-search');\n    this.router.navigate(['/item', item.id], { state: { from: 'paris-search' } });\n  }\n\n  ngOnInit(): void {\n\n   /*\n    this.formerVisitsTitle = \"you have visited:\"\n    if(this.selectedLang === \"de\") {this.formerVisitsTitle = \"Sie haben besucht:\"};\n    if(this.selectedLang === \"fr\") {this.formerVisitsTitle = \"vous avez visité :\"};\n    if(this.selectedLang === \"es\") {this.formerVisitsTitle = \"has visitado :\"}\n    if(this.selectedLang === \"it\") {this.formerVisitsTitle = \"hai visitato :\"}\n    */\n\n      this.formerVisitsTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n      console.log('selectedParisItemsList:', this.selectedParisItemsList);\n\n    this.labels = this.searchInput.valueChanges   //search engine\n    .pipe(\n    debounceTime(400),\n    map( res => \"Paris, \" + res ),\n    tap(res => console.log(res)),\n    //switchMap(label => this.request.searchItem(label, this.selectedLang)),\n     switchMap(label => this.request.searchItem(label, this.lang.selectedLang)),\n\n    map( res => this.createList(res)),\n    map(res => res == \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin=*\"? \n   \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=Q220375&format=json&origin=*\" : res ),\n    debounceTime(200),\n    switchMap(url => this.request.getItem(url)),\n  //  takeWhile (res => res !== undefined),\n    filter (res => res !== undefined),\n    filter (res => res.entities !== undefined && res.entities !==null),\n   // filter (res => res.entities !== null),\n    map(res => Object.values(res.entities))\n   )\n    .subscribe(re => { \n  //  this.items = this.setLanguage.item(re, this.selectedLang);\n     this.items = this.setLanguage.item(re, this.lang.selectedLang);\n  //  this.items = this.filterResearchField(this.items, this.selectedResearchField);\n      this.isDisplay = true ;\n      if (this.items[0].id == \"Q220375\") { this.isDisplay = false };\n   this.changeDetector.detectChanges();\n      })\n    }\n\n   createList(re) {  //create an url whith the elements of an array\n    let list = \"\";\n    let url = \"\";\n    let arr = re.search;\n    if ( arr === undefined ) { arr = []}\n    else { arr = arr };\n    for (let i = 0; i \n    \n\n    \n        \n\n  \n\n\n\n\n\n\n\n\n\n     Paris on FactGrid\n\n\n\n  \n    \n      \n        \n      \n    \n  \n\n  \n    @if (isDisplay == true) {\n    \n      \n      \n        @for (item of items; track item) {\n        \n          {{item.label}}&nbsp;\n          \n            open_in_new\n          \n          &nbsp;&nbsp;&nbsp;\n          @if (item.description) {\n          , {{item.description }}\n          }\n          \n        \n        }\n      \n    \n    }\n\n    @if (isDisplay == false) {\n    \n      \n        \n          sparql query\n        \n        &nbsp;&nbsp;|&nbsp;&nbsp;\n        FactGrid  \n      \n      \n        \n          {{formerVisitsTitle}}\n          \n            \n            \n              \n                @for (selectedItem of selectedParisItemsList; track trackById(selectedItem)) {\n                \n                  @if (selectedItem) {\n                  \n                    {{selectedItem.label}}&nbsp;\n                    open_in_new&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  \n                  }\n                  \n                \n                }\n              \n            \n          \n        \n      \n    \n    }\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./paris-search.component.scss\n                \n                .example-container {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n}\n\n.example-header {\n  min-height: 64px;\n  padding: 8px 24px 0;\n}\n\n.mat-form-field {\n  font-size: 14px;\n  width: 100%;\n}\n\n.mat-table {\n  overflow: auto;\n  max-height: 500px;\n}\n\n.search-center {  \n  display: flex;\n  justify-content: center;\n}\n\n\n.search-center2 {\n  margin-top:40px;\n  display: flex;\n  justify-content: center;\n}\n\n.search-label { // style of the labels of the items\n  font-weight: bold;\n}\n\n.search-itemSelected { // put a margin on top of the box of selected items\n  margin-top: 50px;\n}\n\n\n\n.selectedItemSize {\n   font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Paris on FactGrid                                      @if (isDisplay == true) {                        @for (item of items; track item) {                  {{item.label}}                       open_in_new                                 @if (item.description) {          , {{item.description }}          }                          }              }    @if (isDisplay == false) {                            sparql query                  |          FactGrid                                {{formerVisitsTitle}}                                                                @for (selectedItem of selectedParisItemsList; track trackById(selectedItem)) {                                  @if (selectedItem) {                                      {{selectedItem.label}}                     open_in_new                                         }                                                  }                                                          }  '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ParisSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectSelectComponent.html":{"url":"components/ProjectSelectComponent.html","title":"component - ProjectSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/advanced-search/project-select/project-select.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-select\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatCardModule\n                            MatIconModule\n                            MatButtonModule\n                            MatSelectModule\n                            MatFormFieldModule\n                            MatSelect\n                            NgxMatSelectSearchModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./project-select.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-select.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                            \n                                    Protected\n                                _onDestroy\n                            \n                            \n                                    Public\n                                filteredProjectMulti\n                            \n                            \n                                    Private\n                                formBuilder\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                    \n                                multiSelect\n                            \n                            \n                                    Public\n                                projectMultiFilterCtrl\n                            \n                            \n                                    Public\n                                projectSearchInput\n                            \n                            \n                                    Private\n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                filterProjectMulti\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectChange\n                            \n                            \n                                onSelection\n                            \n                            \n                                    Protected\n                                setInitialValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                placeholderLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search/advanced-search/project-select/project-select.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/search/advanced-search/project-select/project-select.component.ts:43\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search/advanced-search/project-select/project-select.component.ts:67\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        filterProjectMulti\n                        \n                    \n                \n            \n            \n                \n                        \n                    filterProjectMulti()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/project-select/project-select.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/project-select/project-select.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/project-select/project-select.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/project-select/project-select.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectChange\n                        \n                    \n                \n            \n            \n                \nonSelectChange($event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/project-select/project-select.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelection\n                        \n                    \n                \n            \n            \n                \nonSelection(event: MatSelectChange)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/project-select/project-select.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSelectChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setInitialValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setInitialValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/project-select/project-select.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/project-select/project-select.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _onDestroy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/project-select/project-select.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filteredProjectMulti\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/project-select/project-select.component.ts:62\n                        \n                    \n\n            \n                \n                    list of projects filtered by search keyword\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/project-select/project-select.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/project-select/project-select.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        multiSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSelect\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('multiSelect', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/project-select/project-select.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectMultiFilterCtrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/project-select/project-select.component.ts:59\n                        \n                    \n\n            \n                \n                    control for the MatSelect filter keyword multi-selection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectSearchInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/project-select/project-select.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SetLanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/advanced-search/project-select/project-select.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/search/advanced-search/project-select/project-select.component.ts:50\n                                \n                            \n\n                \n                    \n                        setdata(data: any[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/search/advanced-search/project-select/project-select.component.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                        any[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, OnDestroy, AfterViewInit, ViewChild, EventEmitter, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, ReactiveFormsModule, FormsModule, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { SetLanguageService } from '../../../services/set-language.service';\nimport { SelectedLangService } from '../../../selected-lang.service';\n\n@Component({\n\n  selector: 'app-project-select',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatSelect,\n    NgxMatSelectSearchModule,\n  ],\n  templateUrl: './project-select.component.html',\n  styleUrl: './project-select.component.scss',\n})\n\nexport class ProjectSelectComponent implements OnInit, AfterViewInit, OnDestroy\n{\n  private setLanguage = inject(SetLanguageService);\n  private lang = inject(SelectedLangService);\n  private formBuilder = inject(FormBuilder);\n\n\n  @Input() placeholderLabel = 'Search';\n\n  @Input() set data(data: any[]) {\n    this._data = data;\n    // load the initial project list\n    this.filteredProjectMulti.next(this.data.slice());\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  private _data: any[];\n\n  public projectSearchInput = new FormControl();\n\n  /** control for the MatSelect filter keyword multi-selection */\n  public projectMultiFilterCtrl: FormControl = new FormControl('');\n\n  /** list of projects filtered by search keyword */\n  public filteredProjectMulti: ReplaySubject = new ReplaySubject(1);\n\n\n  @ViewChild('multiSelect', { static: true }) multiSelect: MatSelect;\n\n  @Output() selectionChange: EventEmitter = new EventEmitter();\n\n  protected _onDestroy = new Subject();\n\n  ngOnInit(): void {\n\n    this.projectMultiFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterProjectMulti();\n      });\n\n  }\n\n  ngAfterViewInit() {\n    this.setInitialValue();\n  }\n\n  protected setInitialValue() {\n    this.filteredProjectMulti;\n  }\n\n  onSelectChange($event): void {\n  }\n  \n  protected filterProjectMulti() {\n    if (!this.data) {\n      return;\n    }\n    // get the search keyword\n    let search = this.projectMultiFilterCtrl.value;\n    if (!search) {\n      this.filteredProjectMulti.next(this.data.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the projects\n    this.filteredProjectMulti.next(\n      this.data.filter(entity => entity.itemLabel.value.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n  onSelection(event: MatSelectChange) {\n    this.selectionChange.emit(new MatSelectChange(this.multiSelect, event.value));\n  }\n\n  ngOnDestroy(): void {\n   \n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        \n          {{project.itemLabel.value}}\n        \n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{project.itemLabel.value}}                    '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsListService.html":{"url":"injectables/ProjectsListService.html","title":"injectable - ProjectsListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/projects-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                            \n                                langService\n                            \n                            \n                                    Private\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listFromSparql\n                            \n                            \n                                newSparqlAddress\n                            \n                            \n                                projectsListBuilding\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listFromSparql\n                        \n                    \n                \n            \n            \n                \nlistFromSparql(res)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/projects-list.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSparqlAddress\n                        \n                    \n                \n            \n            \n                \nnewSparqlAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/projects-list.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectsListBuilding\n                        \n                    \n                \n            \n            \n                \nprojectsListBuilding(id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/projects-list.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/projects-list.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        langService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\" + this.lang.selectedLang + \"%22%2C%22en%22.%20%7D%0A\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/projects-list.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/projects-list.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\nimport { Observable, forkJoin } from 'rxjs';\nimport { RequestService } from './request.service';\nimport { SelectedLangService } from '../selected-lang.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsListService {\n  private request = inject(RequestService);\n  private lang = inject(SelectedLangService);\n\n\n  langService: string = \"%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\" + this.lang.selectedLang + \"%22%2C%22en%22.%20%7D%0A\";\n\n  projectsListBuilding(id) {\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20WHERE%20%7B\";\n    let suffix = \"%3Fitem%20wdt%3AP2%20wd%3A\";\n    let suffix2 = \".%7D%0A\";\n    let u = this.newSparqlAddress(prefix + this.langService + suffix + id + suffix2);\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\n  }\n\n  listFromSparql(res) {\n    if (res !== undefined) {\n      if (res.results !== undefined) {\n        let v = res.results.bindings;\n        for (let i = 0; i  {\n          if(a.itemLabel.value.toUpperCase()b.itemLabel.value.toUpperCase()) { return 1; }\n          return 0;\n        });\n  \n      }\n    }\n    return res.results.bindings\n  }\n\n  newSparqlAddress(address: string): string {\n    const newPrefix = \"https://database.factgrid.de/sparql?query=\";\n    let oldPrefix = \"https://database.factgrid.de/query/#\";\n    if (address.includes('embed.html')) { oldPrefix = \"https://database.factgrid.de/query/embed.html#\" };\n    if (address !== undefined) address = address.replace(oldPrefix, newPrefix);\n    return address\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertiesListService.html":{"url":"injectables/PropertiesListService.html","title":"injectable - PropertiesListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertiesListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/properties-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                            \n                                langService\n                            \n                            \n                                    Private\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeList\n                            \n                            \n                                deepNatureOf\n                            \n                            \n                                listFromSparql\n                            \n                            \n                                newSparqlAddress\n                            \n                            \n                                propertiesList2Building\n                            \n                            \n                                propertiesListBuilding\n                            \n                            \n                                removeSubstring\n                            \n                            \n                                transformListFromSparql\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    qualifierPropertiesListBuilding\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeList\n                        \n                    \n                \n            \n            \n                \nchangeList(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/properties-list.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deepNatureOf\n                        \n                    \n                \n            \n            \n                \ndeepNatureOf()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/properties-list.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listFromSparql\n                        \n                    \n                \n            \n            \n                \nlistFromSparql(res)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/properties-list.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSparqlAddress\n                        \n                    \n                \n            \n            \n                \nnewSparqlAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/properties-list.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesList2Building\n                        \n                    \n                \n            \n            \n                \npropertiesList2Building(id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/properties-list.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesListBuilding\n                        \n                    \n                \n            \n            \n                \npropertiesListBuilding(id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/properties-list.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSubstring\n                        \n                    \n                \n            \n            \n                \nremoveSubstring(str, substring)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/properties-list.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                substring\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformListFromSparql\n                        \n                    \n                \n            \n            \n                \ntransformListFromSparql(res)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/properties-list.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/properties-list.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        langService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\" + this.lang.selectedLang + \"%22%2C%22en%22.%20%7D%0A\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/properties-list.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/properties-list.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        qualifierPropertiesListBuilding\n                    \n                \n\n                \n                    \n                        getqualifierPropertiesListBuilding()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/properties-list.service.ts:39\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\nimport { Observable, forkJoin } from 'rxjs';\nimport { RequestService } from './request.service';\nimport { SelectedLangService } from '../selected-lang.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertiesListService {\n  private request = inject(RequestService);\n  private lang = inject(SelectedLangService);\n\n\n  langService: string = \"%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\" + this.lang.selectedLang + \"%22%2C%22en%22.%20%7D%0A\";\n\n\n  propertiesListBuilding(id) {\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FpropertyType%20WHERE%20%7B\";\n    let prefix2 = \"VALUES%20%3Fproperties%20%7B%20wd%3A\";\n    let suffix = \"%20wd%3AQ1089730%7D%20%3Fitem%20wdt%3AP8%20%3Fproperties%3B%20wikibase%3ApropertyType%20%3FpropertyType%20MINUS%20%7B%20%3Fproperty%20wikibase%3ApropertyType%20wikibase%3AUrl%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3AExternalId%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3AUrl%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3AGlobeCoordinate%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3AGeoShape%20%7D%20MINUS%20%7B%20%3Fitem%20wikibase%3ApropertyType%20wikibase%3ACommonsMedia%20%7D%20%7D%20ORDER%20BY%20%3FitemLabel%0A\";\n    let address = prefix + this.langService + prefix2 + id + suffix;\n    console.log(address);\n    let u = this.newSparqlAddress(address);\n    console.log(u);\n    return this.request.getList(u).pipe(map(res => this.transformListFromSparql(res)));\n  }\n\n  propertiesList2Building(id) {\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20WHERE%20%7B\";\n    let suffix = \"%3Fitem%20wdt%3AP2%20wd%3A\";\n    let suffix2 = \".%7D%0A\";\n    console.log(prefix + this.langService + suffix + id + suffix2);\n    let u = this.newSparqlAddress(prefix + this.langService + suffix + id + suffix2);\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\n  }\n\n  get qualifierPropertiesListBuilding() {\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FpropertyType%20%20WHERE%20%7B%20\"\n    let suffix = \"%20VALUES%20%3Fqualifier%20%7B%20wd%3AQ514317%20wd%3AQ21403%20%7D%0A%20%3Fitem%20wikibase%3ApropertyType%20%3FpropertyType%3B%0A%20%20%20%20%20%20%20%20%20%20%20wdt%3AP8%20%3Fqualifier.%0A%7D%0AORDER%20BY%20%3FitemLabel\";\n    let v: any[];\n    let u = this.newSparqlAddress(prefix + this.langService + suffix);\n    //  this.request.getList(u).pipe(map(res => this.listFromSparql(res)), map(res => this.changeList(res))).subscribe(res => console.log(res));\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)), map(res => this.transformListFromSparql(res)));\n  }\n\n \n\n  listFromSparql(res) {\n    if (res !== undefined) {\n      if (res.results !== undefined) {\n        let v = res.results.bindings;\n        for (let i = 0; i  {\n          if (a.itemLabel.value.toUpperCase()  b.itemLabel.value.toUpperCase()) { return 1; }\n          return 0;\n        });\n\n      }\n    }\n    return res.results.bindings\n  }\n\n  newSparqlAddress(address: string): string {\n    const newPrefix = \"https://database.factgrid.de/sparql?query=\";\n    let oldPrefix = \"https://database.factgrid.de/query/#\";\n    if (address.includes('embed.html')) { oldPrefix = \"https://database.factgrid.de/query/embed.html#\" };\n    if (address !== undefined) address = address.replace(oldPrefix, newPrefix);\n    return address\n  }\n\n  deepNatureOf() {\n    let u = \"Instance of (deep search)\"\n    if (this.lang.selectedLang === \"de\") { u = \"Ist ein(e) (vertiefte Suche)\" };\n    if (this.lang.selectedLang === \"fr\") { u = \"Nature de l'élément (recherche approfondie)\" };\n    if (this.lang.selectedLang === \"es\") { u = \"Instancia de (investigación en profundidad)\" };\n    if (this.lang.selectedLang === \"it\") { u = \"È (ricerca approfondita)\" };\n    return u\n  }\n\n  changeList(data) {\n    if (data !== undefined) {\n      for (let i = 0; i  {\n        const value = item.itemLabel.value;\n        const type = item.propertyType.value.replace(\"http://wikiba.se/ontology#\", \"\");\n        return {\n          value: value,\n          id: item.item.value.replace(\"https://database.factgrid.de/entity/\", \"\"),\n          type: type,\n          label: `${value} (${type})` // Ajouter la propriété label\n        };\n      }).sort((a, b) => {\n        if (a.value.toUpperCase()  b.value.toUpperCase()) { return 1; }\n        return 0;\n      });\n    }\n    return [];\n  }\n\n\n removeSubstring(str, substring) {\n  const regex = new RegExp(substring, 'g');\n  return str.replace(regex, '');\n}\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyDetailsService.html":{"url":"injectables/PropertyDetailsService.html","title":"injectable - PropertyDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertyDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/property-details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClaimPropertyDetails\n                            \n                            \n                                addQualifier2PropertyDetails\n                            \n                            \n                                addQualifierPropertyDetails\n                            \n                            \n                                addReference2PropertyDetails\n                            \n                            \n                                addReferencePropertyDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/property-details.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClaimPropertyDetails\n                        \n                    \n                \n            \n            \n                \naddClaimPropertyDetails(properties, re, itemProperties)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/property-details.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                properties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQualifier2PropertyDetails\n                        \n                    \n                \n            \n            \n                \naddQualifier2PropertyDetails(properties, re, itemProperties)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/property-details.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Ajoute à chaque statement un tableau qualifiers2 enrichi avec les métadonnées\n(id, label, description, aliases, externalLink) des propriétés de qualifiers,\nen respectant l'ordre défini dans \"qualifiers-order\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                properties\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Liste des propriétés enrichies (avec label, description, etc.)\n\n                                            \n                                        \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'objet item à enrichir\n\n                                            \n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Liste des propriétés à traiter (ex: [\"P247\", ...])\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                L'objet item enrichi\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQualifierPropertyDetails\n                        \n                    \n                \n            \n            \n                \naddQualifierPropertyDetails(properties, re, itemProperties)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/property-details.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                properties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addReference2PropertyDetails\n                        \n                    \n                \n            \n            \n                \naddReference2PropertyDetails(properties, re, itemProperties)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/property-details.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                properties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addReferencePropertyDetails\n                        \n                    \n                \n            \n            \n                \naddReferencePropertyDetails(properties, re, itemProperties)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/property-details.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                properties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemProperties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertyDetailsService {\n\n  constructor() { }\n\n  addClaimPropertyDetails(properties, re, itemProperties) { // add labels, descriptions and aliases to the properties in the mainsnaks\n   for (let i = 0; i  p.id === qualifierId);\n\n          // Toujours créer un nouvel objet pour chaque qualifier2\n          const qualifier2Obj = {\n            id: propertyMeta ? propertyMeta.id : qualifierId,\n            label: propertyMeta ? propertyMeta.label : qualifierId,\n            description: propertyMeta ? propertyMeta.description : \"\",\n            aliases: propertyMeta ? propertyMeta.aliases : [],\n            externalLink: propertyMeta ? propertyMeta.externalLink : undefined,\n            value: {\n              id: undefined,\n              time: undefined,\n              string: undefined,\n              label: undefined,\n              description: undefined,\n              aliases: undefined\n            }\n          };\n\n          statement.qualifiers2.push(qualifier2Obj);\n        }\n\n        // Debug\n        console.log('qualifiers-order:', qualifierOrder);\n        console.log('qualifiers2 créé:', statement.qualifiers2);\n      }\n    }\n    return re;\n  }\n\n\n\n\n  addReferencePropertyDetails(properties, re, itemProperties) {  //add labels, definitions and aliases of properties in the references\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Qualifier.html":{"url":"interfaces/Qualifier.html","title":"interface - Qualifier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Qualifier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/statement-search/statement-search.component#.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            qualifierProperty\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        qualifierProperty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualifierProperty:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, effect, inject, input, AfterViewInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelect, MatSelectChange, MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { Observable, ReplaySubject, Subject, BehaviorSubject, map, tap, takeUntil, switchMap, debounceTime, combineLatest, forkJoin, filter, iif, of, delay, startWith } from 'rxjs';\n//import { takeUntil } from 'rxjs/operators';\nimport { SelectedLangService } from '../../../selected-lang.service';\nimport { PropertiesListService } from '../../../services/properties-list.service';\nimport { RequestService } from '../../../services/request.service';\nimport { SearchEngineService } from '../../../services/search-engine.service';\nimport { SetLanguageService } from '../../../services/set-language.service';\nimport { DataService } from '../services/data.service';\nimport { StatementsControlsService } from '../services/statements-controls.service';\nimport { ITEMTYPES, MUTATOR, QUALIFIERTYPES, Selection, Variable } from '../variable';\n\nexport interface Statement {\n  itemType: FormControl,\n  properties: FormControl,\n  value?: FormGroup,\n  optional: FormControl,\n  qualifiers?: FormArray\n}\n\nexport interface Qualifier {\n  qualifierProperty: FormControl,\n  value?: FormGroup\n}\n\n@Component({\n  selector: 'app-statement-search',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    NgxMatSelectSearchModule,\n    MatSelect,\n    MatCheckboxModule,\n    MatOption,\n    MatSlideToggleModule,\n  ],\n  templateUrl: './statement-search.component.html',\n  styleUrl: './statement-search.component.scss'\n})\n\nexport class StatementSearchComponent\n  implements OnInit, OnDestroy, AfterViewInit {\n\n  private changeDetector = inject(ChangeDetectorRef);\n  private request = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n  private lang = inject(SelectedLangService);\n  private propertyList = inject(PropertiesListService);\n  private fb = inject(FormBuilder);\n  private searchEngine = inject(SearchEngineService);\n  private data = inject(DataService);\n  private controls = inject(StatementsControlsService);\n  //  private data = inject(DataService);\n  @Output() propertyDatatype: EventEmitter = new EventEmitter();\n\n  @Output() selectedItemType: EventEmitter = new EventEmitter();\n\n  @Output() selectedValue: EventEmitter = new EventEmitter();\n\n\n  @Output() selectedQualifierValue: EventEmitter = new EventEmitter();\n\n  @Output() qualifierPropertyDatatype: EventEmitter = new EventEmitter();\n\n  @Output() datatype;\n\n\n  dropdownOptions: BehaviorSubject = new BehaviorSubject(ITEMTYPES);\n\n\n  itemTypes = input([0, ITEMTYPES]);\n\n  dynamicInfoList: BehaviorSubject = new BehaviorSubject([]);\n\n  previousItemTypes: string[] = []; // propriété stockant les itemTypes précédents\n  previousItemValues: string[] = []; // propriété stockant les itemTypes précédents\n\n\n\n  // filteredItemTypes = input();\n\n  currentItemTypes: any[];\n  statementName: number = 0;\n\n  placeholderForLiteralValue: string = \"literal value?\"\n  placeholderForLiteralString: string = \"write string? | date? | number?\";\n\n  selections: Selection[][];\n\n  selection: Selection[];\n\n  propertiesValues: any[] = [\"property?\"];\n  subjectsValues: any[] = [\"subject?\"];\n\n  /*  get propertiesList(): any[] {\n      return this._propertiesList;\n    }\n    */\n\n  @Input() set literalVariables(literalVariables: any[]) {\n    this._literalVariables = literalVariables;\n    if (this.literalVariables) {\n      this.filteredLiteralVariables.next(this.literalVariables.slice())\n    }\n  }\n\n  @Input() set qualifierLiteralVariables(qualifierLiteralVariables: any[]) {\n    this._qualifierLiteralVariables = qualifierLiteralVariables;\n    if (this.qualifierLiteralVariables) {\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice())\n    }\n  }\n  get literalVariables(): any[] {\n    return this._literalVariables;\n  }\n\n  get qualifierLiteralVariables(): any[] {\n    return this._qualifierLiteralVariables;\n  }\n\n  private isUpdatingDynamicInfoList = false;\n \n\n  private _propertiesList: any[];\n  private propertiesToSelect: any[];\n  private _literalVariables: any[];\n  private _qualifierLiteralVariables: any[];\n\n\n  private qualifierPropertiesToSelect: any[];\n\n  protected entityValues: any[] = []; //\n  protected currentMutator: Variable[][] = MUTATOR;\n\n  protected selectedLiteralVariables: Variable[] = []; // probablement à supprimer\n\n  isWikibaseItemOnStatement: boolean = true;\n  isLiteralOnStatement: boolean = false;\n  isLiteralStringOnStatement: boolean = false;\n \n\n  isWikibaseItemOnQualifier: boolean = true;\n  isLiteralOnQualifier: boolean = false;\n  isLiteralStringOnQualifier: boolean = false;\n\n  isLastStatement: boolean = false;\n  isAddStatement: boolean = false;\n  isRemoveStatement: boolean = false;\n\n  isAddQualifier: boolean = false;\n  isRemoveQualifier: boolean = false;\n  isQualifier: boolean = false;\n\n  isItemValue: boolean = true;\n//  isTimeToggle: boolean = false;\n \n\n  isLiteralVariableSelected: boolean = true;\n\n // stringToogle: boolean = true;\n\n  selectedItemTypes: any[] = [];\n\n // unSelectedItemTypes: any[] = [];\n\n // itemTypesAsItemValues: any[];\n\n  query = this.fb.group({\n    statements: this.fb.array([this.statement])\n  });\n\n  get statements(): FormArray { return this.query.get('statements') as FormArray; } // getter for statements as form array\n\n\n  // on pourrait aussi bien écrire : get statements() { return this.query.controls['statements'] as FormArray; }\n  qualifiers(i: number): FormArray { return this.statements.at(i).get('qualifiers') as FormArray; }\n\n  get lastStatementIndex(): number { return this.statements.length > 0 ? this.statements.length - 1 : 0; }\n\n\n\n  get statement(): FormGroup {\n    return this.fb.group(\n      {\n        itemType: new FormControl({ value: \"\", disabled: false }),\n        properties: new FormControl({ value: [], disabled: true }, [Validators.required, this.datatypeValidator]),\n        value: this.value,\n        optional: new FormControl({ value: false, disabled: false }),\n        qualifiers: this.fb.array([this.qualifier])\n      }\n    );\n  }\n\n  get value(): FormGroup {\n    return this.fb.group({\n      itemValue: new FormControl({ value: \"\", disabled: true }),\n      literalValue: new FormControl({ value: \"\", disabled: true }),\n      literalString: new FormControl({ value: \"\", disabled: true })\n    }\n    );\n  }\n\n  get qualifier(): FormGroup {\n    return this.fb.group({\n      qualifierProperty: new FormControl({ value: \"\", disabled: false }),\n      value: this.qualifierValue,\n      optional: new FormControl({ value: false, disabled: false }),\n    }\n    );\n  }\n\n  get qualifierValue(): FormGroup {\n    return this.fb.group({\n      qualifierValue: new FormControl({ value: \"\", disabled: true }),\n      qualifierLiteralValue: new FormControl({ value: \"\", disabled: true }),\n      qualifierLiteralString: new FormControl({ value: \"\", disabled: true })\n    }\n    );\n  }\n\n  isPropertiesInvalid(index: number): boolean {\n    const statementGroup = this.statements.at(index) as FormGroup;\n    const propertiesControl = statementGroup.get('properties') as FormControl;\n    return propertiesControl.invalid\n//      && (propertiesControl.dirty || propertiesControl.touched);\n  }\n\n  public itemTypeFilterCtrl: FormControl = new FormControl('');\n\n // public filteredItemTypes: ReplaySubject = new ReplaySubject(1);\n  public filteredItemTypes: ReplaySubject = new ReplaySubject(1);\n\n\n  /** control for the MatSelect filter keyword multi-selection */\n  public propertytMultiFilterCtrl: FormControl = new FormControl('');\n\n  /** list of properties filtered by search keyword */\n  public filteredPropertyMulti: ReplaySubject = new ReplaySubject(1);\n\n  //  public valueSearchInput: FormControl = new FormControl();\n  /** control for the MatSelect filter keyword single-selection */\n  public itemValueFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredItemValues: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public literalFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredLiteralVariables: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierPropertyFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierProperties: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierValueFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierValues: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierLiteralFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierLiteralVariables: ReplaySubject = new ReplaySubject(1);\n\n\n  addStatements() {\n    let formerItemType: Variable[][] = []\n    let itemTypes:Variable[]\n    let itemTypesList;\n    let mutator;\n    this.statements.push(this.statement);\n    this.isRemoveStatement = true;\n\n    // Initialiser dynamicInfoList pour la nouvelle déclaration\n    const initialDynamicInfo = { itemTypes: Array(ITEMTYPES.length).fill(0), itemValues: Array(ITEMTYPES.length).fill(0) };\n    const currentDynamicInfoList = this.dynamicInfoList.getValue();\n    currentDynamicInfoList.push(initialDynamicInfo);\n    this.dynamicInfoList.next(currentDynamicInfoList);\n\n\n\n    this.data.itemTypes2$.subscribe(res => { \n      itemTypes = res;\n      formerItemType.push(itemTypes);\n      this.data.updateItemTypes(itemTypes);\n      this.data.updateFormerItemTypes(formerItemType);\n    });\n    this.data.mutatorForNextStatement$.subscribe(res => {\n      mutator = res;\n      console.log(mutator);\n      this.data.updateMutator(mutator);\n      this.data.mutator$.subscribe(res => console.log(res));\n    }\n    )\n  }\n\n  removeStatements(i: number) {\n    this.statements.removeAt(i);\n    let itemTypes: any[] = [];\n    let formerItemTypesList: Variable[][];\n    let formerItemTypes: Variable[];\n    if (i === 0) { this.data.updateMutator(MUTATOR), this.data.updateItemTypes(ITEMTYPES); };\n    this.data.formerItemTypes$.subscribe(res => formerItemTypesList = res);\n    this.data.updateFormerItemTypes(formerItemTypesList.slice(-1));\n    this.data.formerItemTypes$.subscribe(res => formerItemTypesList = res);\n    this.data.updateItemTypes(formerItemTypesList[formerItemTypesList.length -1])\n    this.propertiesValues.splice(i, 1); // à voir de quoi il s'agit.\n  }\n\n  addQualifiers(i: number) {\n    let m = this.qualifiers(i).controls.length -1\n    if (this.qualifiers(i).pristine) { this.qualifiers(i).removeAt(m) };\n    this.isQualifier = true;\n    this.qualifiers(i).push(this.qualifier);\n     let qual = this.controls.qualifiers(this.statements, i);\n      this.isQualifier = true;\n   \n  }\n\n  addFirstQualifier(i) {\n    this.controls.qualifiers(this.statements, i).enable();\n    if (i === 0) { this.isQualifier = true; }\n  }\n\n  removeQualifiers(i: number, j: number) {\n    this.qualifiers(i).removeAt(j);\n  }\n\n  statementControllerDisplay(u, i) {\n    if (u === \"WikibaseItem\") {\n      this.isWikibaseItemOnStatement = true;\n      this.isLiteralOnStatement = false;\n      this.controls.itemValue(this.statements, i).enable();\n      this.controls.literalValue(this.statements, i).disable();\n      this.controls.literalString(this.statements, i).disable();\n    } else {\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\n        console.log(u);\n        this.controls.itemValue(this.statements, i).disable();\n        this.controls.literalValue(this.statements, i).enable();\n        this.controls.literalString(this.statements, i).enable();\n        this.isWikibaseItemOnStatement = false;\n        this.isLiteralStringOnStatement = false;\n        this.isLiteralOnStatement = true;\n      }\n    }\n  }\n\n  literalControllerDisplay(label, i) {\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\") {\n      this.controls.literalValue(this.statements, i).enable(); this.controls.literalString(this.statements, i).enable();\n      this.controls.literalValue(this.statements, i).patchValue(\"\");\n      this.isLiteralStringOnStatement = true;\n      this.placeholderForLiteralValue = \"write below\";\n    }\n    else {\n        this.controls.literalValue(this.statements, i).enable();\n        this.controls.literalString(this.statements, i).disable();\n      this.isLiteralStringOnStatement = false;\n      this.placeholderForLiteralString = \"disabled\";\n    }\n  }\n\n  qualifierControllerDisplay(u, i, j) {\n    console.log(u);\n    let qual = this.controls.qualifiers(this.statements, i);\n    if (u === \"WikibaseItem\") {\n      let value = this.controls.qualifierValue(qual, j);\n      console.log(value);\n      this.isWikibaseItemOnQualifier = true;\n      this.isLiteralOnQualifier = false;\n      this.controls.qualifierValue(qual, j).enable();\n      this.controls.qualifierLiteralValue(qual, j).disable();\n      this.controls.qualifierLiteralString(qual, j).disable();\n    //  this.controls.qualifierValue(qual, j).patchvalue(value);\n    } else {\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\n        this.controls.qualifierLiteralValue(qual, j).enable(); \n        this.controls.qualifierLiteralString(qual, j).enable();\n        this.isWikibaseItemOnQualifier = false;\n        this.isLiteralOnQualifier = true; \n      }\n    }\n  }\n\n  qualifierLiteralControllerDisplay(label, i, j) {\n    let qual = this.controls.qualifiers(this.statements, i);\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\" ) {\n      this.controls.qualifierLiteralValue(qual, j).enable(); this.controls.qualifierLiteralString(qual, j).enable();\n  //    this.controls.qualifierLiteralValue(qual, j).patchValue(\"\");\n      this.isLiteralStringOnQualifier = true;\n    }\n    else {\n      this.controls.literalValue(qual, j).enable();\n      this.controls.literalString(qual, j).disable();\n      this.isLiteralStringOnQualifier = false;\n    }\n  }\n\n  onItemTypeSelect(event: MatSelectChange): void {\n    console.log('Selected itemType:', event.value);\n    let i = event.value[0]; // name of the statement \"i\" in the form array \"statements\"\n    this.controls.propertyValues(this.statements, i).enable();\n    this.selectedItemType.emit(event.value); // output to advanced-search-component (see selectedItemType(itemType))\n    this.statements.at(i).get('itemType').setValue(event.value, { emitEvent: false }); // Mettre à jour la valeur du contrôle\n    console.log('Updated itemType control value:', this.statements.at(i).get('itemType').value);\n    this.changeDetector.detectChanges(); // Forcer la détection des changements\n  }\n\n  onPropertySelect(event: MatSelectChange): void {\n  //  this.data.updateItemTypes([]); //test TODO il faut rénitialiser au prochain statement.\n    let propertyValue = [];\n    if (event.value[0] !== undefined) {\n      let i = event.value[0][0];\n      this.datatype = event.value[0][2];\n      this.statementControllerDisplay(this.datatype, i); // to display the right controls\n      this.propertyDatatype.emit([i, this.datatype]);  // output to advanced-search-component (see propertyDatatype(itemType))\n      this.controls.itemValue(this.statements, i).enable();\n    //  this.controls.propertyValues(this.statements, i).updateValueAndValidity();\n    }\n  }\n\n  onValueSelect(event: MatSelectChange): void {  // to update the mutator and add the selected value type to the current itemTypes\n    let i = event.value[0];\n    let label = event.value[1];\n    let dataType = event.value[2];\n    console.log(event.value);\n    if (label.charAt(0) === \"?\") {\n     this.selectedValue.emit(event.value); // output to advanced-search-component (see selectedValue(itemType))\n    }\n    this.isAddQualifier = true;\n    this.isAddStatement = true;\n  };\n\n  onLiteralValueSelect(event: MatSelectChange): void {\n    let i = event.value[0];\n    let label = event.value[1];\n    this.placeholderForLiteralString = label;\n    this.literalControllerDisplay(label, i); // to display and enable the right controls\n    if (label.charAt(0) === \"?\") {\n      console.log(label);\n     this.selectedValue.emit(event.value); // output to advanced-search-component (see selectedValueType(itemType)). ?string is not an itemType\n    }\n    this.isAddStatement = true;\n    this.isAddQualifier = true;\n  }\n\n  onQualifierPropertySelect(event: MatSelectChange): void {\n    console.log(event.value);\n    let i = event.value[0];\n    let j = event.value[1];\n    let datatype = event.value[3];\n    this.qualifierPropertyDatatype.emit([i, j, datatype]);\n    this.qualifierControllerDisplay(datatype, i, j); // to display the right controls\n\n  }\n\n  onQualifierValueSelect(event: MatSelectChange): void {\n    console.log(event.value);\n    let i = event.value[0];\n    let j = event.value[1];\n    let dataType = event.value[2];\n    let col = event.value[3];\n    let id = event.value[4];\n    let u = [ i, dataType, col, id ];\n    if (dataType.charAt(0) === \"?\") {\n      this.selectedQualifierValue.emit(u);\n    }\n    this.isRemoveQualifier = true;\n    let qual = this.controls.qualifiers(this.statements, i);\n    let value = this.controls.qualifierValue(qual, j);\n    console.log(value);\n    this.controls.patchQualifierValue(value, qual, j)\n  };\n\n  onQualifierLiteralValueSelect(event: MatSelectChange): void {\n    console.log(event.value);\n    let i = event.value[0];\n    let label = event.value[2];\n   // let dataType = event.value[2];\n    if (label.charAt(0) === \"?\") {\n      this.selectedQualifierValue.emit(event.value);\n      this.isLiteralStringOnQualifier = false;\n    } else this.isLiteralStringOnQualifier = true;\n    this.isRemoveQualifier = true;\n  };\n\n  public items = [];\n\n  //  public datatype = \"WikibaseItem\";\n  public isQualifier2Display: boolean = false;\n  //propertiesList: any[];\n  selectedPropertiesList: string[];\n\n  // private baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\n  //  private getUrlSuffix = '&format=json&origin=*';\n  //  public selectedItemType: Observable;\n  // public selectedValue: Observable;\n  // public itemTypeSearchInput = new FormControl();\n  @ViewChild('matRef') matRef: MatSelect;\n\n  clear() {\n    this.matRef.options.forEach((data: MatOption) => data.deselect());\n  }\n \n\n  @ViewChild('singleSelect', { static: true }) singleSelect: MatSelect;\n\n  @ViewChild('multiSelect', { static: true }) multiSelect: MatSelect;\n\n  //  @Output() typeSelectionChange: EventEmitter = new EventEmitter();\n  @Output() selectionChange: EventEmitter = new EventEmitter();\n\n  @Output() propertySelectionChange: EventEmitter = new EventEmitter();\n\n  protected _onDestroy = new Subject();\n\n  ngOnInit(): void {\n    console.log(ITEMTYPES);\n    this.statements.controls.forEach((statement, index) => {\n      this.subscribeToStatementChanges(statement, index);\n      // Initialiser dynamicInfoList avec des valeurs par défaut\n      const initialDynamicInfo = { itemTypes: Array(ITEMTYPES.length).fill(0), itemValues: Array(ITEMTYPES.length).fill(0) };\n      const currentDynamicInfoList = this.dynamicInfoList.getValue();\n      currentDynamicInfoList[index] = initialDynamicInfo;\n      this.dynamicInfoList.next(currentDynamicInfoList);\n    });\n\n    // Initialiser les ITEMTYPES indépendamment\n    this.filteredItemValues.next(this.addOrderToItemValues(ITEMTYPES));\n\n    console.log(this.dynamicInfoList);\n\n\n    this.propertyList.qualifierPropertiesListBuilding.subscribe(res => this.qualifierPropertiesToSelect = res);\n\n    // S'abonner aux changements de dynamicInfoList\n    this.dynamicInfoList\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.updateDropdownOptions();\n      });\n\n\n  \n\n\n    this.itemTypeFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterItemTypes();\n      });\n\n    this.propertytMultiFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterPropertyMulti();\n      });\n\n    this.itemValueFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterItemValues();\n      });\n\n    this.literalFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterLiteralVariables();\n      });\n\n\n    this.qualifierPropertyFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierProperties();\n      });\n\n\n    this.qualifierValueFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierValues();\n      });\n\n    this.qualifierLiteralFilterCtrl.valueChanges    \n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierValues();\n      });\n\n\n    var propertyValueChanges: Observable = this.query.get('statements').valueChanges\n      .pipe(map(res => res[0][\"property\"]));\n\n    var valueValueChanges: Observable = this.query.get('statements').valueChanges\n      .pipe(map(res => res[0][\"itemValue\"]));\n\n  }\n\n  ngAfterContentInit() {\n    console.log('ngAfterContentInit called');\n  }\n\n  ngAfterViewInit() {\n\n    console.log('ngAfterViewInit called');\n\n    // Utiliser setTimeout pour différer l'exécution\n    setTimeout(() => {\n      this.setInitialItemTypeValue();\n      this.setInitialPropertyValue();\n      this.setInitialValueValue();\n      this.setInitialLiteralVariable();\n      this.setInitialQualifierPropertyValue();\n      this.setInitialQualifierValueValue();\n      this.setInitialQualifierLiteralVariable();\n\n      // Réappliquer les valeurs sélectionnées après l'initialisation de la vue\n     \n\n      // Forcer la détection des changements\n      this.changeDetector.detectChanges();\n    }, 0);\n  \n\n  }\n\n  protected setInitialItemTypeValue() {\n  this.data.itemTypes$.subscribe(res => { if (this.lastStatementIndex !== 0) { this.filteredItemTypes.next(res) } });\n    this.filteredItemTypes;\n  }\n\n\n  protected setInitialPropertyValue() {\n    this.filteredPropertyMulti;\n  }\n\n  protected setInitialValueValue() {\n    this.filteredItemValues;\n  }\n\n  protected setInitialLiteralVariable() {\n    this.filteredLiteralVariables;\n  }\n\n  protected setInitialQualifierPropertyValue() {\n    this.filteredQualifierProperties;\n  }\n\n  protected setInitialQualifierValueValue() {\n    this.filteredQualifierValues;\n  }\n\n  protected setInitialQualifierLiteralVariable() {\n    this.filterQualifierLiteralVariables;\n  }\n\n\n  private addOrderToItemValues(itemValues: any[]): any[] {\n    const dynamicInfoListValue = this.dynamicInfoList.getValue();\n    if (this.statements.length === 0 || !dynamicInfoListValue[this.lastStatementIndex]) {\n      return itemValues;\n    }\n    return itemValues.map((itemValue, itemIndex) => {\n      if (itemValue && dynamicInfoListValue[this.lastStatementIndex].itemValues[itemIndex] !== undefined) {\n        const newItemValue = { ...itemValue }; // Cloner l'objet itemValue\n        newItemValue.order = dynamicInfoListValue[this.lastStatementIndex].itemValues[itemIndex];\n        newItemValue.originalLabel = itemValue.label; // Stocker la valeur originale du label\n        newItemValue.label = `${newItemValue.label}${newItemValue.order.toString()}`; // Concaténer le label et l'ordre\n        return newItemValue;\n      }\n      return itemValue;\n    });\n  }\n\n  private updateDropdownOptions() {\n    const dynamicInfoListValue = this.dynamicInfoList.getValue();\n    if (this.statements.length === 0 || !dynamicInfoListValue[this.lastStatementIndex]) {\n      this.dropdownOptions.next(ITEMTYPES);\n      return;\n    }\n    const updatedItemValues = ITEMTYPES.map((itemValue, itemIndex) => {\n      if (itemValue && dynamicInfoListValue[this.lastStatementIndex].itemValues[itemIndex] !== undefined) {\n        const newItemValue: Variable = { ...itemValue }; // Cloner l'objet itemValue\n        newItemValue.order = dynamicInfoListValue[this.lastStatementIndex].itemValues[itemIndex];\n        newItemValue.originalLabel = this.getOriginalItemLabel(itemValue.label); // Utiliser getOriginalItemLabel pour obtenir l'étiquette originale\n        newItemValue.label = `${newItemValue.originalLabel}${newItemValue.order.toString()}`; // Concaténer le label et l'ordre\n        return newItemValue;\n      }\n      return itemValue;\n    });\n\n    // Mettre à jour itemTypes dans dynamicInfoList\n    const updatedItemTypes = ITEMTYPES.map((itemType, itemIndex) => {\n      if (itemType && dynamicInfoListValue[this.lastStatementIndex].itemTypes[itemIndex] !== undefined) {\n        const newItemType: Variable = { ...itemType }; // Cloner l'objet itemType\n        newItemType.order = dynamicInfoListValue[this.lastStatementIndex].itemTypes[itemIndex];\n        newItemType.originalLabel = this.getOriginalItemLabel(itemType.label); // Utiliser getOriginalItemLabel pour obtenir l'étiquette originale\n        newItemType.label = `${newItemType.originalLabel}${newItemType.order.toString()}`; // Concaténer le label et l'ordre\n        return newItemType;\n      }\n      return itemType;\n    });\n\n    // Mettre à jour dynamicInfoList avec les nouvelles valeurs de itemTypes\n    dynamicInfoListValue[this.lastStatementIndex].itemTypes = updatedItemTypes.map(item => item.order).filter(order => order !== null);\n\n    this.dropdownOptions.next(updatedItemValues);\n  }\n\n\n\n\n  protected filterItemTypes() {\n    let search = this.itemTypeFilterCtrl.value;\n    const selectedValues = this.statements.controls.map(statement => statement.get('itemType').value); // Conserver les valeurs sélectionnées\n\n    this.dropdownOptions.pipe(takeUntil(this._onDestroy)).subscribe((options) => {\n      if (!search) {\n        this.filteredItemTypes.next(options);\n      } else {\n        search = search.toLowerCase();\n        this.filteredItemTypes.next(\n          options.filter(itemType => itemType.label.toLowerCase().indexOf(search) > -1)\n        );\n      }\n\n      // Réappliquer les valeurs sélectionnées\n      this.statements.controls.forEach((statement, index) => {\n        statement.get('itemType').setValue(selectedValues[index], { emitEvent: false });\n      });\n    });\n  }\n\n\n\n \n// Fonction utilitaire pour obtenir le label original\n  getOriginalItemLabel(itemLabel: string): string {\n    if (itemLabel.length > 1) {\n      const lastChar = itemLabel.charAt(itemLabel.length - 1);\n      const secondLastChar = itemLabel.charAt(itemLabel.length - 2);\n      if (!isNaN(parseInt(lastChar)) && !isNaN(parseInt(secondLastChar))) {\n        return itemLabel.slice(0, -2); // Supprimer les 2 derniers caractères\n      } else if (!isNaN(parseInt(lastChar))) {\n        return itemLabel.slice(0, -1); // Supprimer le dernier caractère si c'est un chiffre\n      }\n    }\n    return itemLabel;\n  }\n\n\n\n  \n  protected filterPropertyMulti() {\n    this.data.$propertiesList.subscribe(res => {\n      this.propertiesToSelect = res[1];\n      console.log(this.propertiesToSelect);\n      /*   if (!this.propertiesToSelect) {\n           return;\n         }*/\n      let search = this.propertytMultiFilterCtrl.value;\n      if (!search) {\n        this.filteredPropertyMulti.next(this.propertiesToSelect.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n        // filter the projects\n      \n          this.filteredPropertyMulti.next(\n            this.propertiesToSelect.filter(entity => entity.itemLabel.label.toLowerCase().indexOf(search) > -1));\n      }\n    }\n    );\n  }\n\n\n  protected filterItemValues() {\n    let search = this.itemValueFilterCtrl.value;\n    if (!search) {\n      this.filteredItemValues.next(this.addOrderToItemValues([...ITEMTYPES, ...this.entityValues]));\n      return;\n    } else {\n      search = search.toLowerCase();\n      this.itemValueFilterCtrl.valueChanges // moteur de recherche\n        .pipe(\n          debounceTime(400),\n          switchMap(label => this.itemValuesList2(label, this.lang.selectedLang, 20)),\n          map(re => {\n            this.entityValues = re;\n            this.setSeparator(this.entityValues);\n            return this.addOrderToItemValues([...ITEMTYPES, ...this.entityValues]).filter(value => value.label.toLowerCase().includes(search));\n          })\n        ).subscribe(filteredItems => {\n          this.filteredItemValues.next(filteredItems);\n        });\n    }\n  }\n\n\n\n  itemValuesList1(label) { \n    return  this.data.mutator$.pipe(map(re => re[0]))\n      }\n\n\n  itemValuesList2(label, lang, number) {\n   let entityValues:any[] = [];\n    return  this.request.searchItem(label, lang).pipe(\n      map(res => this.createList(res)),\n      switchMap(url => this.request.getItem(url)),\n      filter(res => res !== undefined && res !== null),\n      filter(res => res.entities !== undefined && res.entities !== null),\n      map(res => Object.values(res.entities)),\n      map(res => this.setLanguage.item(res, this.lang.selectedLang))\n    )\n} \n\n\n  protected filterLiteralVariables() {\n    if (this.literalVariables === undefined) {\n      return;\n    }\n    // get the search keyword\n    let search = this.literalFilterCtrl.value;\n    if (!search) {\n      this.filteredLiteralVariables.next(this.literalVariables.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.filteredLiteralVariables.next(\n      this.literalVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n  protected filterQualifierProperties() {\n\n    if (!this.qualifierPropertiesToSelect) {\n      return;\n    }\n    let search = this.qualifierPropertyFilterCtrl.value;\n    if (!search) {\n      this.filteredQualifierProperties.next(this.qualifierPropertiesToSelect.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the \n    this.filteredQualifierProperties.next(\n      this.qualifierPropertiesToSelect.filter(entity => entity.itemLabel.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n  protected filterQualifierValues() {\n    let search = this.qualifierValueFilterCtrl.value;\n    let firstCharacter = search.charAt(0);\n    if (!search) {\n      this.filteredQualifierValues.next(this.entityValues.slice());\n      return;\n    } else {\n      if (firstCharacter !== \"?\") {\n        search = search.toLowerCase();\n        this.qualifierValueFilterCtrl.valueChanges //search engine\n          .pipe(\n            debounceTime(400),\n            switchMap(label => this.request.searchItem(label, this.lang.selectedLang)),\n            map(res => this.createList(res)),\n            debounceTime(400),\n            switchMap(url => this.request.getItem(url)),\n            filter(res => res !== undefined && res !== null),\n            filter(res => res.entities !== undefined && res.entities !== null),\n            map(res => Object.values(res.entities))\n          ).subscribe(re => {\n            this.entityValues = this.setLanguage.item(re, this.lang.selectedLang);\n            this.setSeparator(this.entityValues);\n            this.filteredQualifierValues.next(this.entityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\n          }\n          );\n      }\n      else {\n        this.data.mutator$.subscribe(re => {\n          this.entityValues = re[0];\n          let qualifierEntityValues = [];\n      //    let qualifierTypes: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23];\n          qualifierEntityValues = this.entityValues.filter(entityValue => QUALIFIERTYPES.includes(entityValue.col))  // filter the options for the qualifier values\n          if (search === '?*') {\n            this.filteredQualifierValues.next(qualifierEntityValues);\n          } else {\n            search = search.slice(1);\n            this.filteredQualifierValues.next(qualifierEntityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\n          }\n        }\n        );\n      }\n    }\n  }\n\n  protected filterQualifierLiteralVariables() {\n    console.log(this.qualifierLiteralVariables);\n    if (this.qualifierLiteralVariables === undefined) {\n      return;\n    }\n    // get the search keyword\n    let search = this.qualifierLiteralFilterCtrl.value;\n    console.log(search);\n    if (!search) {\n      console.log(this.qualifierLiteralVariables);\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.filteredQualifierLiteralVariables.next(\n      this.qualifierLiteralVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n\n\n  setSeparator(entityValues: any[]) {\n    for (let i = 0; i  val[2] === control.value[0][2]);\n        if (equalDatatype) { return { 'differentDatatype': true }; }\n      }\n    }\n    return null;\n  }\n\n  subscribeToStatementChanges(statement: AbstractControl, index: number): void {\n    this.previousItemTypes[index] = statement.get('itemType').value;\n    this.previousItemValues[index] = statement.get('value').get('itemValue').value;\n  }\n\n  \n\n\n\n  isCircular(obj: any): boolean {\n  const seenObjects = new WeakSet();\n\n  function detect(obj: any): boolean {\n    if (obj && typeof obj === 'object') {\n      if (seenObjects.has(obj)) {\n        return true;\n      }\n      seenObjects.add(obj);\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key) && detect(obj[key])) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  return detect(obj);\n  }\n\n  safeStringify(obj: any): string {\n    const seen = new WeakSet();\n    return JSON.stringify(obj, (key, value) => {\n      if (typeof value === \"object\" && value !== null) {\n        if (seen.has(value)) {\n          return \"[Circular]\";\n        }\n        seen.add(value);\n      }\n      return value;\n    });\n  }\n\n\n  \n\n\n  compare(u, v) {\n    if (u === undefined) { return v } else return u\n}; //TODO: if u = [] then u =v else u = u and return u; (see if its possible to create a method witb filter or something else)\n\n  newQualifier(): FormGroup {\n    return this.fb.group({\n      qualifierProperty: \"\",\n      qualifierValue: \"\",\n    }\n    );\n  }\n\n\n  onVariableSelect(event: MatSelectChange): void {\n    console.log(event.value);\n  };\n\n\n  validateItemValues(control) {\n    //   console.log(control.value.cb);\n    if (!control.value.cb.some((item: any) => item)) {\n      return { checkboxSectionValid: true };\n    }\n    return null;\n  }\n\n  notFound(res) {\n    res == \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin=*\" ?\n      res = \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=Q220375&format=json&origin=*\" : res;\n    return res;\n  }\n\n  createList(re) {\n    let baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\n    let getUrlSuffix = '&format=json&origin=*';\n    let list: string = \"\";\n    let url: string = \"\";\n    let arr = re.search;\n    if (arr === undefined) { arr = []; }\n    else { arr = arr; };\n    for (let i = 0; i  i && j \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Qualifier-1.html":{"url":"interfaces/Qualifier-1.html","title":"interface - Qualifier-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Qualifier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/statement-search/statement-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            qualifierProperty\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        qualifierProperty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualifierProperty:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, effect, inject, input, AfterViewInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelect, MatSelectChange, MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { Observable, ReplaySubject, Subject, BehaviorSubject, map, tap, takeUntil, switchMap, debounceTime, combineLatest, forkJoin, filter, iif, of, delay, startWith } from 'rxjs';\n//import { takeUntil } from 'rxjs/operators';\nimport { SelectedLangService } from '../../../selected-lang.service';\nimport { PropertiesListService } from '../../../services/properties-list.service';\nimport { RequestService } from '../../../services/request.service';\nimport { SearchEngineService } from '../../../services/search-engine.service';\nimport { SetLanguageService } from '../../../services/set-language.service';\nimport { DataService } from '../services/data.service';\nimport { StatementsControlsService } from '../services/statements-controls.service';\nimport { ITEMTYPES, MUTATOR, QUALIFIERTYPES, Selection, Variable } from '../variable';\n\nexport interface Statement {\n  itemType: FormControl,\n  properties: FormControl,\n  value?: FormGroup,\n  optional: FormControl,\n  qualifiers?: FormArray\n}\n\nexport interface Qualifier {\n  qualifierProperty: FormControl,\n  value?: FormGroup\n}\n\n@Component({\n  selector: 'app-statement-search',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    NgxMatSelectSearchModule,\n    MatSelect,\n    MatCheckboxModule,\n    MatOption,\n    MatSlideToggleModule,\n  ],\n  templateUrl: './statement-search.component.html',\n  styleUrl: './statement-search.component.scss'\n})\n\nexport class StatementSearchComponent\n  implements OnInit, OnDestroy, AfterViewInit {\n\n  private changeDetector = inject(ChangeDetectorRef);\n  private request = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n  private lang = inject(SelectedLangService);\n  private propertyList = inject(PropertiesListService);\n  private fb = inject(FormBuilder);\n  private searchEngine = inject(SearchEngineService);\n  private data = inject(DataService);\n  private controls = inject(StatementsControlsService);\n  //  private data = inject(DataService);\n\n\n  @Input() set literalVariables(literalVariables: any[]) {\n    this._literalVariables = literalVariables;\n    if (this.literalVariables) {\n      this.filteredLiteralVariables.next(this.literalVariables.slice())\n    }\n  }\n\n  @Input() set qualifierLiteralVariables(qualifierLiteralVariables: any[]) {\n    this._qualifierLiteralVariables = qualifierLiteralVariables;\n    if (this.qualifierLiteralVariables) {\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice())\n    }\n  }\n  get literalVariables(): any[] {\n    return this._literalVariables;\n  }\n\n  get qualifierLiteralVariables(): any[] {\n    return this._qualifierLiteralVariables;\n  }\n\n  @Output() datatype;\n\n\n  @Output() selectedItemType: EventEmitter = new EventEmitter();\n\n\n  protected currentItemTypes: any[] = [];\n  protected currentItemTypesArray: any[][] = [];\n\n  public statementOptions: BehaviorSubject[] = [];\n\n\n  private _propertiesList: any[];\n  private propertiesToSelect: any[];\n  private _literalVariables: any[];\n  private _qualifierLiteralVariables: any[];\n  propertiesList: any[];\n\n\n  private qualifierPropertiesToSelect: any[];\n\n  protected entityValues: any[] = []; //\n  protected currentMutator: Variable[][] = MUTATOR;\n\n  protected selectedLiteralVariables: Variable[] = []; // probablement à supprimer\n\n  isWikibaseItemOnStatement: boolean = true;\n  isLiteralOnStatement: boolean = false;\n  isLiteralStringOnStatement: boolean = false;\n\n\n  isWikibaseItemOnQualifier: boolean = true;\n  isLiteralOnQualifier: boolean = false;\n  isLiteralStringOnQualifier: boolean = false;\n\n  isLastStatement: boolean = false;\n  isAddStatement: boolean = false;\n  isRemoveStatement: boolean = false;\n\n  isAddQualifier: boolean = false;\n  isRemoveQualifier: boolean = false;\n  isQualifier: boolean = false;\n\n  isItemValue: boolean = true;\n\n\n  isLiteralVariableSelected: boolean = true;\n\n  selectedItemTypes: any[] = [];\n\n\n\n  placeholderForLiteralValue: string = \"literal value?\"\n  placeholderForLiteralString: string = \"write string? | date? | number?\";\n\n  query = this.fb.group({\n    statements: this.fb.array([this.statement])\n  });\n\n  get statements(): FormArray { return this.query.get('statements') as FormArray; } // getter for statements as form array\n\n\n  // on pourrait aussi bien écrire : get statements() { return this.query.controls['statements'] as FormArray; }\n  qualifiers(i: number): FormArray { return this.statements.at(i).get('qualifiers') as FormArray; }\n\n  get lastStatementIndex(): number {\n    const index = this.statements.length > 0 ? this.statements.length - 1 : 0;\n    console.log('lastStatementIndex:', index);\n    return index;\n  }\n\n\n  get statement(): FormGroup {\n    return this.fb.group(\n      {\n        itemType: new FormControl({ value: \"\", disabled: false }),\n        properties: new FormControl({ value: [], disabled: true }, [Validators.required, this.datatypeValidator]),\n        value: this.value,\n        optional: new FormControl({ value: false, disabled: false }),\n        qualifiers: this.fb.array([this.qualifier])\n      }\n    );\n  }\n\n  get value(): FormGroup {\n    return this.fb.group({\n      itemValue: new FormControl({ value: \"\", disabled: true }),\n      literalValue: new FormControl({ value: \"\", disabled: true }),\n      literalString: new FormControl({ value: \"\", disabled: true })\n    }\n    );\n  }\n\n  get qualifier(): FormGroup {\n    return this.fb.group({\n      qualifierProperty: new FormControl({ value: \"\", disabled: false }),\n      value: this.qualifierValue,\n      optional: new FormControl({ value: false, disabled: false }),\n    }\n    );\n  }\n\n  get qualifierValue(): FormGroup {\n    return this.fb.group({\n      qualifierValue: new FormControl({ value: \"\", disabled: true }),\n      qualifierLiteralValue: new FormControl({ value: \"\", disabled: true }),\n      qualifierLiteralString: new FormControl({ value: \"\", disabled: true })\n    }\n    );\n  }\n\n  isPropertiesInvalid(index: number): boolean {\n    const statementGroup = this.statements.at(index) as FormGroup;\n    const propertiesControl = statementGroup.get('properties') as FormControl;\n    return propertiesControl.invalid\n    //      && (propertiesControl.dirty || propertiesControl.touched);\n  }\n\n  public itemTypeFilterCtrl: FormControl = new FormControl('');\n\n  public filteredItemTypesArray: ReplaySubject[] = [];\n\n\n\n  /** control for the MatSelect filter keyword multi-selection */\n  public propertytMultiFilterCtrl: FormControl = new FormControl('');\n\n  public filteredPropertyMultiArray: ReplaySubject[] = [];\n\n\n  //  public valueSearchInput: FormControl = new FormControl();\n  /** control for the MatSelect filter keyword single-selection */\n  public itemValueFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredItemValuesArray: ReplaySubject[] = [];\n\n  /** control for the MatSelect filter keyword single-selection */\n  public literalFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredLiteralVariables: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierPropertyFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierProperties: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierValueFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierValues: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierLiteralFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierLiteralVariables: ReplaySubject = new ReplaySubject(1);\n\n\n  addStatements() {\n    this.statements.push(this.statement);\n    console.log('Added statement, new statements length:', this.statements.length);\n    this.isRemoveStatement = true;\n    this.filteredItemTypesArray.push(new ReplaySubject(1)); // Initialiser un nouveau ReplaySubject pour la nouvelle déclaration\n    this.filteredItemValuesArray.push(new ReplaySubject(1)); // Initialiser un nouveau ReplaySubject pour la nouvelle déclaration\n    this.filteredPropertyMultiArray.push(new ReplaySubject(1)); // Initialiser un nouveau ReplaySubject pour la nouvelle déclaration\n    this.statementOptions.push(new BehaviorSubject([])); // Initialiser un nouveau BehaviorSubject pour la nouvelle déclaration\n\n\n    // Initialiser les valeurs des nouveaux ReplaySubject avec une liste vide pour filterItemTypes et un observable de liste vide pour filterPropertyMulti\n    this.filteredItemTypesArray[this.lastStatementIndex].next([]);\n    this.filteredItemValuesArray[this.lastStatementIndex].next([]);\n    this.filteredPropertyMultiArray[this.lastStatementIndex].next([]);\n\n\n    this.setCurrentItemTypes(this.lastStatementIndex);\n    this.filterItemTypes(this.lastStatementIndex);\n    this.filterItemValues(this.lastStatementIndex);\n    this.filterPropertyMulti(this.lastStatementIndex, of([]));\n  }\n\n\n  removeStatements(i: number) {\n    this.statements.removeAt(i);\n    console.log('Removed statement at index', i, 'new statements length:', this.statements.length);\n    this.currentItemTypesArray.splice(i, 1); // Supprimer les currentItemTypes correspondants\n    this.filteredItemTypesArray.splice(i, 1); // Supprimer le ReplaySubject correspondant\n    this.setCurrentItemTypes(this.lastStatementIndex);\n    this.filterItemTypes(this.lastStatementIndex);\n  }\n\n  addQualifiers(i: number) {\n    let m = this.qualifiers(i).controls.length - 1\n    if (this.qualifiers(i).pristine) { this.qualifiers(i).removeAt(m) };\n    this.isQualifier = true;\n    this.qualifiers(i).push(this.qualifier);\n    let qual = this.controls.qualifiers(this.statements, i);\n    this.isQualifier = true;\n\n  }\n\n  addFirstQualifier(i) {\n    this.controls.qualifiers(this.statements, i).enable();\n    if (i === 0) { this.isQualifier = true; }\n  }\n\n  removeQualifiers(i: number, j: number) {\n    this.qualifiers(i).removeAt(j);\n  }\n\n  statementControllerDisplay(u, i) {\n    const statement = this.statements.at(i) as FormGroup;\n    const itemValueControl = statement.get('value.itemValue') as FormControl;\n\n    if (u === \"WikibaseItem\") {\n      this.isWikibaseItemOnStatement = true;\n      this.isLiteralOnStatement = false;\n      itemValueControl.enable();\n      statement.get('value.literalValue').disable();\n      statement.get('value.literalString').disable();\n    } else {\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\n        console.log(u);\n        itemValueControl.disable();\n        statement.get('value.literalValue').enable();\n        statement.get('value.literalString').enable();\n        this.isWikibaseItemOnStatement = false;\n        this.isLiteralStringOnStatement = false;\n        this.isLiteralOnStatement = true;\n      }\n    }\n  }\n\n\n  literalControllerDisplay(label, i) {\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\") {\n      this.controls.literalValue(this.statements, i).enable(); this.controls.literalString(this.statements, i).enable();\n      this.controls.literalValue(this.statements, i).patchValue(\"\");\n      this.isLiteralStringOnStatement = true;\n      this.placeholderForLiteralString = \"write below\";\n    }\n    else {\n      this.controls.literalValue(this.statements, i).enable();\n      this.controls.literalString(this.statements, i).disable();\n      this.isLiteralStringOnStatement = false;\n      this.placeholderForLiteralString = \"disabled\";\n    }\n  }\n\n  qualifierControllerDisplay(u, i, j) {\n    console.log(u);\n    let qual = this.controls.qualifiers(this.statements, i);\n    if (u === \"WikibaseItem\") {\n      let value = this.controls.qualifierValue(qual, j);\n      console.log(value);\n      this.isWikibaseItemOnQualifier = true;\n      this.isLiteralOnQualifier = false;\n      this.controls.qualifierValue(qual, j).enable();\n      this.controls.qualifierLiteralValue(qual, j).disable();\n      this.controls.qualifierLiteralString(qual, j).disable();\n      //  this.controls.qualifierValue(qual, j).patchvalue(value);\n    } else {\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\n        this.controls.qualifierLiteralValue(qual, j).enable();\n        this.controls.qualifierLiteralString(qual, j).enable();\n        this.isWikibaseItemOnQualifier = false;\n        this.isLiteralOnQualifier = true;\n      }\n    }\n  }\n\n  qualifierLiteralControllerDisplay(label, i, j) {\n    let qual = this.controls.qualifiers(this.statements, i);\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\") {\n      this.controls.qualifierLiteralValue(qual, j).enable(); this.controls.qualifierLiteralString(qual, j).enable();\n      //    this.controls.qualifierLiteralValue(qual, j).patchValue(\"\");\n      this.isLiteralStringOnQualifier = true;\n    }\n    else {\n      this.controls.literalValue(qual, j).enable();\n      this.controls.literalString(qual, j).disable();\n      this.isLiteralStringOnQualifier = false;\n    }\n  }\n\n  onItemTypeSelect(event: MatSelectChange): void {\n    console.log(event.value),\n      console.log('Selected itemType:', event.value);\n    let i = event.value[0]; // name of the statement \"i\" in the form array \"statements\"\n    this.controls.propertyValues(this.statements, i).enable();\n    const options$ = this.propertyList.propertiesListBuilding(event.value[3]); // create the list of properties; useless?\n    this.filterPropertyMulti(i, options$); // Appeler filterPropertyMulti avec l'observable\n    this.selectedItemType.emit(event.value); // output to advanced-search-component (see selectedItemType(itemType))\n    this.statements.at(i).get('itemType').setValue(event.value, { emitEvent: false }); // Mettre à jour la valeur du contrôle\n    console.log('Updated itemType control value:', this.statements.at(i).get('itemType').value);\n    this.changeDetector.detectChanges(); // Forcer la détection des changements\n  }\n\n\n  onPropertySelect(event: MatSelectChange): void {\n    let propertyValue = [];\n    console.log('Event value:', event.value);\n    let i = event.value[0][0];\n    console.log(i);\n\n    // Itérer sur chaque élément de event.value\n    for (let j = 0; j  data.deselect());\n  }\n\n\n  @ViewChild('singleSelect', { static: true }) singleSelect: MatSelect;\n\n  @ViewChild('multiSelect', { static: true }) multiSelect: MatSelect;\n\n  //  @Output() typeSelectionChange: EventEmitter = new EventEmitter();\n  @Output() selectionChange: EventEmitter = new EventEmitter();\n\n  @Output() propertySelectionChange: EventEmitter = new EventEmitter();\n\n  protected _onDestroy = new Subject();\n\n\n\n  ngOnInit(): void {\n    console.log('Initial statements length:', this.statements.length);\n\n    this.propertyList.qualifierPropertiesListBuilding.subscribe(res => this.qualifierPropertiesToSelect = res);\n\n    this.itemTypeFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterItemTypes(this.lastStatementIndex);\n      });\n\n    this.propertytMultiFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterPropertyMulti(this.lastStatementIndex, of([]));\n      });\n\n    this.itemValueFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterItemValues(this.lastStatementIndex);\n      });\n\n    this.literalFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterLiteralVariables();\n      });\n\n    this.qualifierPropertyFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierProperties();\n      });\n\n    this.qualifierValueFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierValues();\n      });\n\n    this.qualifierLiteralFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierValues();\n      });\n\n    // Initialiser statementOptions pour l'index 0\n    this.statementOptions[0] = new BehaviorSubject([]);\n\n    // Problème 1 et 2: Ajouter le deuxième argument manquant pour filterPropertyMulti\n    \n\n    // Problème 3, 4 et 5: Corriger l'initialisation des ReplaySubject\n    this.filteredItemTypesArray.push(new ReplaySubject(1));\n   this.filteredItemValuesArray.push(new ReplaySubject(1));\n    this.filteredPropertyMultiArray.push(new ReplaySubject(1));\n   \n\n    this.setCurrentItemTypes(this.lastStatementIndex);\n    this.filterItemTypes(this.lastStatementIndex);\n    this.filterItemValues(this.lastStatementIndex);\n    this.filterPropertyMulti(this.lastStatementIndex, of([]));\n  }\n\n\n\n  ngAfterViewInit() {\n\n    console.log('Statements length after view init:', this.statements.length);\n\n //   this.setInitialItemTypeValue();\n //   this.setInitialPropertyValue();\n//    this.setInitialItemValue();\n    this.setInitialLiteralVariable();\n    this.setInitialQualifierPropertyValue();\n    this.setInitialQualifierValueValue();\n    this.setInitialQualifierLiteralVariable();\n\n  }\n\n\n  protected setInitialItemTypeValue() {\n    this.data.itemTypes$.subscribe(res => {\n      this.filteredItemTypesArray.forEach((filteredItemTypes, index) => {\n        console.log(res);\n        filteredItemTypes.next(res);\n        this.filterItemTypes(index);\n      });\n    });\n  }\n\n  protected setInitialPropertyValue() {\n    this.filteredPropertyMultiArray.forEach((filteredProperties, index) => {\n      filteredProperties\n    });\n}\n\n\n  protected setInitialItemValue() {\n    this.filteredItemValuesArray.forEach((filteredItemValues, index) => {\n      filteredItemValues;\n  });\n}\n\n  protected setInitialLiteralVariable() {\n    this.filteredLiteralVariables;\n  }\n\n  protected setInitialQualifierPropertyValue() {\n    this.filteredQualifierProperties;\n  }\n\n  protected setInitialQualifierValueValue() {\n    this.filteredQualifierValues;\n  }\n\n  protected setInitialQualifierLiteralVariable() {\n    this.filterQualifierLiteralVariables;\n  }\n\n\n  protected filterItemTypes(index: number) {\n    console.log('Calling setCurrentItemTypes with index:', index);\n    this.setCurrentItemTypes(index);\n    console.log('currentItemTypes after setCurrentItemTypes:', this.currentItemTypesArray[index]);\n\n    let search = this.itemTypeFilterCtrl.value;\n    if (!search) {\n      this.filteredItemTypesArray[index].next(this.currentItemTypesArray[index].slice());\n    } else {\n      search = search.toLowerCase();\n      this.filteredItemTypesArray[index].next(\n        this.currentItemTypesArray[index].filter(itemType => itemType.label.toLowerCase().indexOf(search) > -1)\n      );\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n\n\n  /**\n * Initialise et met à jour la liste des types d'éléments disponibles pour chaque déclaration.\n * Cette fonction est appelée chaque fois qu'une nouvelle déclaration est ajoutée ou qu'une déclaration existante est modifiée.\n * Elle s'assure que la liste des types d'éléments est toujours à jour et reflète les sélections actuelles.\n * \n * @param index L'index de la déclaration pour laquelle les types d'éléments doivent être mis à jour.\n */\n  protected setCurrentItemTypes(index: number): void {\n    console.log('setCurrentItemTypes called with index:', index);\n    if (index === 0) {\n      if (!ITEMTYPES || ITEMTYPES.length === 0) {\n        console.error('ITEMTYPES is undefined or empty');\n        this.currentItemTypesArray[index] = [];\n      } else {\n        this.currentItemTypesArray[index] = ITEMTYPES;\n        console.log('Updated currentItemTypes:', this.currentItemTypesArray[index]);\n      }\n    } else {\n      let labels: any[] = [];\n\n      for (let j = 0; j  JSON.stringify(label))))\n        .map(str => JSON.parse(str));\n\n      // Trier les objets par ordre alphabétique selon leurs propriétés\n      this.currentItemTypesArray[index] = uniqueLabels.sort((a, b) => a.label.localeCompare(b.label));\n      console.log('Updated currentItemTypes:', this.currentItemTypesArray[index]);\n    }\n  }\n\n\n\n  protected filterPropertyMulti(index: number, options$: Observable): void {\n    options$\n      .pipe(\n        switchMap(options => {\n          if (!options || options.length === 0) {\n            console.error(\"Les données ne sont pas correctement chargées dans options.\");\n            return of([]);\n          }\n          console.log(options);\n\n          let search = this.propertytMultiFilterCtrl.value;\n          if (!search) {\n            return of(options.slice());\n          } else {\n            search = search.toLowerCase();\n            // filter the projects\n            return of(options.filter(entity => entity.value.toLowerCase().indexOf(search) > -1));\n          }\n        })\n      )\n      .subscribe(filteredOptions => {\n        this.filteredPropertyMultiArray[index].next(filteredOptions);\n      });\n  }\n\n\n/*  protected filterItemValues(index: number) {\n    const initialSearch = this.itemValueFilterCtrl.value ? this.itemValueFilterCtrl.value.toLowerCase() : '';\n    this.itemValueFilterCtrl.valueChanges\n      .pipe(\n        startWith(initialSearch),\n        debounceTime(400),\n        switchMap(search => {\n          search = search ? search.toLowerCase() : '';\n          return this.itemValuesList2(search, this.lang.selectedLang, 20).pipe(\n            map(filteredItems => {\n              const selectedOptions = this.getSelectedOptionsUpToIndex(index); // Utiliser l'index actuel\n              const selectedLabels = this.getLabelsFromSelectedOptions(selectedOptions);\n              const augmentedItems = [...selectedLabels.map(label => ({ label, col: null, id: null, separator: '' })), ...filteredItems];\n\n              if (search.startsWith('?')) {\n                return augmentedItems.filter(item => item.label.toLowerCase().startsWith(search));\n              } else {\n                return augmentedItems.filter(item => item.label.toLowerCase().includes(search));\n              }\n            }),\n            map(items => {\n              const uniqueItems = items.filter((item, index, self) =>\n                index === self.findIndex((t) => (\n                  t.label === item.label\n                ))\n              );\n              if (!this.statementOptions[index]) {\n                this.statementOptions[index] = new BehaviorSubject([]);\n              }\n              this.statementOptions[index].next(uniqueItems); // Stocker les options dans le BehaviorSubject\n              return uniqueItems;\n            })\n          );\n        })\n      )\n      .subscribe(augmentedItems => {\n        console.log(`Augmented Items for statement ${index}:`, augmentedItems);\n        if (!this.filteredItemValuesArray[index]) {\n          this.filteredItemValuesArray[index] = new ReplaySubject(1);\n        }\n        this.filteredItemValuesArray[index].next(augmentedItems); // Utiliser l'index actuel\n        this.resetPreviousItemValues(index); // Réinitialiser les valeurs des statements précédents\n      });\n\n    // Utiliser les options stockées lors des changements\n    if (this.statementOptions[index]) {\n      this.statementOptions[index].subscribe(options => {\n        this.filteredItemValuesArray[index].next(options);\n      });\n    }\n  } */\n\n\n  protected filterItemValues(index: number) {\n    // Obtenir les options sélectionnées jusqu'à l'index actuel\n    const selectedOptions = this.getSelectedOptionsUpToIndex(index);\n\n    // Obtenir les labels des options sélectionnées\n    const selectedLabels = this.getLabelsFromSelectedOptions(selectedOptions);\n\n    // Créer les éléments augmentés à partir des labels sélectionnés\n    const augmentedItems = selectedLabels.map(label => ({ label, col: null, id: null, separator: '' }));\n\n    console.log(augmentedItems)\n\n    // Mettre à jour le BehaviorSubject avec les éléments augmentés\n    if (!this.statementOptions[index]) {\n      this.statementOptions[index] = new BehaviorSubject([]);\n    }\n    this.statementOptions[index].next(augmentedItems);\n\n    // Mettre à jour le ReplaySubject avec les éléments augmentés\n    if (!this.filteredItemValuesArray[index]) {\n      this.filteredItemValuesArray[index] = new ReplaySubject(1);\n    }\n    this.filteredItemValuesArray[index].next(augmentedItems);\n\n    // Réinitialiser les valeurs des statements précédents\n   this.resetPreviousItemValues(index);\n  }\n\n\n\n\n  protected resetPreviousItemValues(currentIndex: number): void {\n    for (let i = 0; i  option[1] === newLabel)) {\n              selectedOptions.push([itemTypeControl.value[0], newLabel]);\n            }\n          }\n        }\n\n        selectedOptions.push(itemTypeValue);\n      }\n    }\n    return selectedOptions;\n  }\n\n  getLabelsFromSelectedOptions(options: any[]): string[] {\n    return options.map(option => option[1]); // Supposons que le label soit à l'index 1\n  }\n\n\n  itemValuesList1(label) { \n    return  this.data.mutator$.pipe(map(re => re[0]))\n      }\n\n\n  itemValuesList2(label, lang, number) {\n   let entityValues:any[] = [];\n    return  this.request.searchItem(label, lang).pipe(\n      map(res => this.createList(res)),\n      switchMap(url => this.request.getItem(url)),\n      filter(res => res !== undefined && res !== null),\n      filter(res => res.entities !== undefined && res.entities !== null),\n      map(res => Object.values(res.entities)),\n      map(res => this.setLanguage.item(res, this.lang.selectedLang))\n    )\n} \n\n\n  protected filterLiteralVariables() {\n    if (this.literalVariables === undefined) {\n      return;\n    }\n    // get the search keyword\n    let search = this.literalFilterCtrl.value;\n    if (!search) {\n      this.filteredLiteralVariables.next(this.literalVariables.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.filteredLiteralVariables.next(\n      this.literalVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n  protected filterQualifierProperties() {\n\n    if (!this.qualifierPropertiesToSelect) {\n      return;\n    }\n    let search = this.qualifierPropertyFilterCtrl.value;\n    if (!search) {\n      this.filteredQualifierProperties.next(this.qualifierPropertiesToSelect.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the \n    this.filteredQualifierProperties.next(\n      this.qualifierPropertiesToSelect.filter(entity => entity.itemLabel.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n  protected filterQualifierValues() {\n    let search = this.qualifierValueFilterCtrl.value;\n    let firstCharacter = search.charAt(0);\n    if (!search) {\n      this.filteredQualifierValues.next(this.entityValues.slice());\n      return;\n    } else {\n      if (firstCharacter !== \"?\") {\n        search = search.toLowerCase();\n        this.qualifierValueFilterCtrl.valueChanges //search engine\n          .pipe(\n            debounceTime(400),\n            switchMap(label => this.request.searchItem(label, this.lang.selectedLang)),\n            map(res => this.createList(res)),\n            debounceTime(400),\n            switchMap(url => this.request.getItem(url)),\n            filter(res => res !== undefined && res !== null),\n            filter(res => res.entities !== undefined && res.entities !== null),\n            map(res => Object.values(res.entities))\n          ).subscribe(re => {\n            this.entityValues = this.setLanguage.item(re, this.lang.selectedLang);\n            this.setSeparator(this.entityValues);\n            this.filteredQualifierValues.next(this.entityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\n          }\n          );\n      }\n      else {\n        this.data.mutator$.subscribe(re => {\n          this.entityValues = re[0];\n          let qualifierEntityValues = [];\n      //    let qualifierTypes: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23];\n          qualifierEntityValues = this.entityValues.filter(entityValue => QUALIFIERTYPES.includes(entityValue.col))  // filter the options for the qualifier values\n          if (search === '?*') {\n            this.filteredQualifierValues.next(qualifierEntityValues);\n          } else {\n            search = search.slice(1);\n            this.filteredQualifierValues.next(qualifierEntityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\n          }\n        }\n        );\n      }\n    }\n  }\n\n  protected filterQualifierLiteralVariables() {\n    console.log(this.qualifierLiteralVariables);\n    if (this.qualifierLiteralVariables === undefined) {\n      return;\n    }\n    // get the search keyword\n    let search = this.qualifierLiteralFilterCtrl.value;\n    console.log(search);\n    if (!search) {\n      console.log(this.qualifierLiteralVariables);\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.filteredQualifierLiteralVariables.next(\n      this.qualifierLiteralVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n\n\n  setSeparator(entityValues: any[]) {\n    for (let i = 0; i  1) {\n      const firstType = control.value[0][3]; // Supposons que le type soit à l'index 3\n      const allSameType = control.value.every((val: any) => val[3] === firstType);\n      if (!allSameType) {\n        return { 'differentDatatype': true };\n      }\n    }\n    return null;\n  }\n\n\n\n  notFound(res) {\n    res == \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin=*\" ?\n      res = \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=Q220375&format=json&origin=*\" : res;\n    return res;\n  }\n\n  createList(re) {\n    let baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\n    let getUrlSuffix = '&format=json&origin=*';\n    let list: string = \"\";\n    let url: string = \"\";\n    let arr = re.search;\n    if (arr === undefined) { arr = []; }\n    else { arr = arr; };\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuantityVariable.html":{"url":"interfaces/QuantityVariable.html","title":"interface - QuantityVariable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuantityVariable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/quantity-variable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QuantityVariable {\n  id: string;\n  label: string;\n}\n\nexport const QUANTITYVARIABLES: QuantityVariable[] = [\n  { label: '?amount', id: '' },\n  { label: '?amount1', id: '' },\n  { label: '?amount2', id: '' },\n  { label: '?amount3', id: '' }\n ]\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Reference.html":{"url":"interfaces/Reference.html","title":"interface - Reference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/details.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            snaks\n                                        \n                                \n                                \n                                        \n                                            snaks-order\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        snaks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snaks:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snaks-order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snaks-order:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { SetLanguageService } from './set-language.service';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n/** Interfaces pour un typage fort */\ninterface Snak {\n  property: string;\n  datatype?: string;\n  datavalue?: { value: { id: string } };\n}\n\ninterface Reference {\n  'snaks-order': string[];\n  snaks: { [key: string]: Snak[] };\n}\n\ninterface Claim {\n  mainsnak: Snak;\n  qualifiers?: { [key: string]: Snak[] };\n  'qualifiers-order'?: string[];\n  references?: Reference[];\n}\n\ninterface ClaimsObject {\n  [property: string]: Claim[];\n}\n\ninterface Entity {\n  claims: ClaimsObject;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailsService {\n  private requestService = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n\n  /**\n   * Retourne la liste unique des propriétés de référence d’une entité.\n   */\n  getReferenceProperties(u: Entity): string[] {\n    const referenceProperties = Object.values(u.claims)\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n    return this.uniq(referenceProperties);\n  }\n\n  /**\n   * Crée la liste des propriétés dans les statements, qualifiers et références.\n   * Retourne un Observable des propriétés enrichies.\n   */\n  setPropertiesList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let properties = claimsArray.flatMap(val => val.map(claim => claim.mainsnak.property));\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    properties = this.uniq([...properties, ...qualifierProperties, ...referenceProperties]);\n    const propertiesChunks = this.lessThanFifty(properties);\n\n    if (propertiesChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 propriétés)'));\n    }\n\n    const propertiesLists = propertiesChunks.map(list => this.createList(list).slice(1));\n    while (propertiesLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Crée la liste des items dans les statements, qualifiers et références.\n   * Retourne un Observable des items enrichis.\n   */\n  setItemsList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let items = claimsArray.flatMap(val =>\n      val\n        .filter(claim => claim.mainsnak.datavalue?.value?.id !== undefined)\n        .map(claim => claim.mainsnak.datavalue.value.id)\n    );\n\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    const qualifierItems = this.setQualifierItems(claimsArray, qualifierProperties).filter(Boolean);\n    const referenceItems = this.setReferenceItems(claimsArray, referenceProperties).filter(Boolean);\n\n    items = this.uniq([...items, ...qualifierItems, ...referenceItems]);\n    const itemsChunks = this.lessThanFifty(items);\n\n    if (itemsChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 items)'));\n    }\n\n    const itemsLists = itemsChunks.map(list => this.createList(list).slice(1));\n    while (itemsLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Retourne la liste unique des propriétés dans les qualifiers et références.\n   */\n  setProperties(arr: any[]): string[] {\n    return arr.flatMap(obj => Object.keys(obj));\n  }\n\n  /**\n   * Fusionne les objets contenus dans un tableau pour créer un seul objet.\n   */\n  mergeObjects(res: any[]): any {\n    // Filtrer les objets valides qui possèdent la propriété 'entities'\n    const validObjects = (res ?? []).filter(obj => obj && obj.entities);\n    let u = validObjects.length > 0 ? validObjects[0].entities : {};\n    for (const obj of validObjects.slice(1)) {\n      u = { ...u, ...obj.entities };\n    }\n    return u;\n  }\n\n\n  /**\n   * Retourne la liste des items dans les qualifiers.\n   */\n  setQualifierItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        for (const prop of arr) {\n          if (claim.qualifiers?.[prop]) {\n            for (const snak of claim.qualifiers[prop]) {\n              if (snak?.datavalue?.value?.id) {\n                result.push(snak.datavalue.value.id);\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Retourne la liste des items dans les références.\n   */\n  setReferenceItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        if (!claim.references) continue;\n        for (const ref of claim.references) {\n          for (const prop of arr) {\n            const snaks = ref.snaks[prop];\n            if (snaks && snaks[0]?.datatype === 'wikibase-item') {\n              for (const snak of snaks) {\n                if (snak?.datavalue?.value?.id) {\n                  result.push(snak.datavalue.value.id);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Crée une chaîne de caractères à partir d’un tableau, séparée par '|'.\n   */\n  createList(arr: string[]): string {\n    return Array.from(new Set(arr)).reduce((list, item) => list + '|' + item, '');\n  }\n\n  /**\n   * Retourne un tableau sans doublons.\n   */\n  uniq(a: T[]): T[] {\n    return Array.from(new Set(a.filter(Boolean)));\n  }\n\n  /**\n   * Découpe un tableau en sous-tableaux de 50 éléments maximum.\n   */\n  lessThanFifty(arr: T[]): T[][] {\n    const result: T[][] = [];\n    let u = arr.length;\n    let tempArr = arr.slice();\n    while (u > 0) {\n      result.push(tempArr.slice(0, 50));\n      tempArr = tempArr.slice(50);\n      u = tempArr.length;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseGetURL\n                            \n                            \n                                    Private\n                                baseSearchURL\n                            \n                            \n                                    Private\n                                getUrlSuffix\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                searchUrlSuffix\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downLoadFile\n                            \n                            \n                                downLoadList\n                            \n                            \n                                getAsk\n                            \n                            \n                                getBackList\n                            \n                            \n                                getExpandedUrl\n                            \n                            \n                                getItem\n                            \n                            \n                                getItemTalkPageHtml\n                            \n                            \n                                getList\n                            \n                            \n                                getProjectList\n                            \n                            \n                                getQidsList\n                            \n                            \n                                getStat\n                            \n                            \n                                getTranscript\n                            \n                            \n                                newSparqlAddress\n                            \n                            \n                                requestItems\n                            \n                            \n                                requestProperties\n                            \n                            \n                                searchItem\n                            \n                            \n                                searchProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downLoadFile\n                        \n                    \n                \n            \n            \n                \ndownLoadFile(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downLoadList\n                        \n                    \n                \n            \n            \n                \ndownLoadList(sparql: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sparql\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsk\n                        \n                    \n                \n            \n            \n                \ngetAsk(re: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBackList\n                        \n                    \n                \n            \n            \n                \ngetBackList(item: string, lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpandedUrl\n                        \n                    \n                \n            \n            \n                \ngetExpandedUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(re: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItemTalkPageHtml\n                        \n                    \n                \n            \n            \n                \ngetItemTalkPageHtml(itemId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                itemId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getList\n                        \n                    \n                \n            \n            \n                \ngetList(sparql: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sparql\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProjectList\n                        \n                    \n                \n            \n            \n                \ngetProjectList(re: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQidsList\n                        \n                    \n                \n            \n            \n                \ngetQidsList(search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStat\n                        \n                    \n                \n            \n            \n                \ngetStat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTranscript\n                        \n                    \n                \n            \n            \n                \ngetTranscript(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSparqlAddress\n                        \n                    \n                \n            \n            \n                \nnewSparqlAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestItems\n                        \n                    \n                \n            \n            \n                \nrequestItems(itemsLists: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Récupère les items via un tableau de listes (max 8).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                itemsLists\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestProperties\n                        \n                    \n                \n            \n            \n                \nrequestProperties(propertiesLists: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Récupère les propriétés via un tableau de listes (max 8).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                propertiesLists\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchItem\n                        \n                    \n                \n            \n            \n                \nsearchItem(label: string, lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchProperty\n                        \n                    \n                \n            \n            \n                \nsearchProperty(label: string, lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/request.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseGetURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids='\n                    \n                \n                    \n                        \n                                Defined in src/app/services/request.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseSearchURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://database.factgrid.de//w/api.php?action=wbsearchentities&search='\n                    \n                \n                    \n                        \n                                Defined in src/app/services/request.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUrlSuffix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '&format=json&origin=*'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/request.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/request.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchUrlSuffix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '&language=en&uselang=fr&limit=50&format=json&origin=*'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/request.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { saveAs } from 'file-saver-es';\nimport { expand, map, reduce, catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n  private http = inject(HttpClient);\n\n  private baseSearchURL = 'https://database.factgrid.de//w/api.php?action=wbsearchentities&search=';\n  private baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\n  private searchUrlSuffix = '&language=en&uselang=fr&limit=50&format=json&origin=*';\n  private getUrlSuffix = '&format=json&origin=*';\n\n  /**\n   * Récupère les propriétés via un tableau de listes (max 8).\n   */\n  requestProperties(propertiesLists: string[]): Observable {\n    const lists = [...propertiesLists];\n    while (lists.length \n      list\n        ? this.http.get(this.baseGetURL + list + this.getUrlSuffix).pipe(\n          catchError(() => of(undefined))\n        )\n        : of(undefined)\n    );\n\n    return forkJoin(requests);\n  }\n\n  /**\n   * Récupère les items via un tableau de listes (max 8).\n   */\n  requestItems(itemsLists: string[]): Observable {\n    const lists = [...itemsLists];\n    while (lists.length \n      list\n        ? this.http.get(this.baseGetURL + list + this.getUrlSuffix).pipe(\n          catchError(() => of(undefined))\n        )\n        : of(undefined)\n    );\n\n    return forkJoin(requests);\n  }\n\n  searchItem(label: string, lang: string) {\n    const params = new HttpParams()\n      .set('action', 'wbsearchentities')\n      .set('search', label)\n      .set('language', lang)\n      .set('uselang', lang)\n      .set('limit', '50')\n      .set('format', 'json')\n      .set('origin', '*');\n    return this.http.get('https://database.factgrid.de//w/api.php', { params });\n  }\n\n  searchProperty(label: string, lang: string) {\n    const params = new HttpParams()\n      .set('action', 'wbsearchentities')\n      .set('type', 'property')\n      .set('search', label)\n      .set('language', lang)\n      .set('uselang', lang)\n      .set('limit', '50')\n      .set('format', 'json')\n      .set('origin', '*');\n    return this.http.get('https://database.factgrid.de//w/api.php', { params });\n  }\n\n  getAsk(re: string): Observable {\n    return this.http.get(re).pipe(catchError(() => of(false)));\n  }\n\n  getItem(re: string): Observable {\n    return this.http.get(re).pipe(catchError(() => of(undefined)));\n  }\n\n  getList(sparql: string): Observable {\n    if (sparql !== undefined) {\n      const params = new HttpParams().set('format', 'json');\n      return this.http.get(sparql, { params }).pipe(catchError(() => of([])));\n    }\n    return of([]);\n  }\n\n  downLoadList(sparql: string) {\n    if (sparql !== undefined) {\n      const headers = new HttpHeaders().set('Accept', 'text/csv');\n      const params = new HttpParams();\n      this.http.get(sparql, { headers, responseType: 'arraybuffer', params })\n        .subscribe(response => this.downLoadFile(response));\n    }\n  }\n\n  getTranscript(id: string) {\n    const params = new HttpParams()\n      .set('page', id)\n      .set('format', 'json')\n      .set('prop', 'text')\n      .set('formatversion', '2')\n      .set('origin', '*');\n    return this.http.get('https://database.factgrid.de//w/api.php?action=parse', { params });\n  }\n\n  getItemTalkPageHtml(itemId: string): Observable {\n    const pageTitle = `Item_talk:${itemId}`;\n    const params = new HttpParams()\n      .set('action', 'query')\n      .set('format', 'json')\n      .set('prop', 'revisions')\n      .set('titles', pageTitle)\n      .set('rvprop', 'content')\n      .set('origin', '*');\n    const url = 'https://database.factgrid.de/w/api.php';\n    return this.http.get(url, { params }).pipe(catchError(() => of(undefined)));\n  }\n\n  getStat() {\n    const params = new HttpParams()\n      .set('format', 'json')\n      .set('meta', 'siteinfo')\n      .set('siprop', 'statistics')\n      .set('origin', '*');\n    return this.http.get('https://database.factgrid.de//w/api.php?action=query', { params });\n  }\n\n  newSparqlAddress(address: string) {\n    const newPrefix = 'https://database.factgrid.de/sparql?query=';\n    const oldPrefix = 'https://database.factgrid.de/query/#';\n    return address.replace(oldPrefix, newPrefix);\n  }\n\n  downLoadFile(data: any) {\n    const blob = new Blob([data], { type: 'text/csv' });\n    saveAs(blob, 'list.csv');\n  }\n\n  getExpandedUrl(url: string) {\n    if (url !== undefined) {\n      const headers = new HttpHeaders().set('Accept', 'text/csv');\n      const params = new HttpParams();\n      this.http.get(url, { headers, responseType: 'arraybuffer', params })\n        .subscribe(response => this.downLoadFile(response));\n    }\n  }\n\n  getProjectList(re: string): Observable {\n    return this.http.get(re).pipe(catchError(() => of(false)));\n  }\n\n  getBackList(item: string, lang: string): Observable {\n    item = 'Item:' + item;\n    const prefix = `https://database.factgrid.de/w/api.php?`;\n    const params1 = new HttpParams()\n      .set('action', 'query')\n      .set('format', 'json')\n      .set('prop', 'entityterms')\n      .set('generator', 'backlinks')\n      .set('formatversion', '2')\n      .set('wbetterms', 'label')\n      .set('gbllimit', '500')\n      .set('gblnamespace', '120')\n      .set('uselang', lang)\n      .set('gbltitle', item)\n      .set('origin', '*');\n    const params2 = params1.set('uselang', 'en');\n    const u1 = this.http.get(prefix, { params: params1 }).pipe(catchError(() => of(undefined)));\n    const u2 = this.http.get(prefix, { params: params2 }).pipe(catchError(() => of(undefined)));\n    return forkJoin([u1, u2]);\n  }\n\n\n\n  getQidsList(search: string): Observable {\n    const baseParams = new HttpParams()\n      .set('action', 'query')\n      .set('list', 'search')\n      .set('srsearch', search)\n      .set('format', 'json')\n      .set('srlimit', '5000')\n      .set('origin', '*');\n\n    const fetch = (sroffset?: number) => {\n      let params = baseParams;\n      if (sroffset !== undefined) {\n        params = params.set('sroffset', sroffset.toString());\n      }\n      return this.http.get('https://database.factgrid.de/w/api.php', { params });\n    };\n\n    return fetch().pipe(\n      expand(response => {\n        if (response.continue && response.continue.sroffset !== undefined) {\n          return fetch(response.continue.sroffset);\n        }\n        return of();\n      }),\n      map(response => response.query?.search.map(item => item.title) ?? []),\n      reduce((acc, value) => acc.concat(value), [])\n    );\n  }\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleOfObjectRenderingService.html":{"url":"injectables/RoleOfObjectRenderingService.html","title":"injectable - RoleOfObjectRenderingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleOfObjectRenderingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/role-of-object-rendering.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datatype\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                mainsnak\n                            \n                            \n                                R1\n                            \n                            \n                                R2\n                            \n                            \n                                R3\n                            \n                            \n                                R4\n                            \n                            \n                                u\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                roleOfObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/role-of-object-rendering.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        roleOfObject\n                        \n                    \n                \n            \n            \n                \nroleOfObject(re)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/role-of-object-rendering.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        datatype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/role-of-object-rendering.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/role-of-object-rendering.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/role-of-object-rendering.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainsnak\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/role-of-object-rendering.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        R1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/role-of-object-rendering.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        R2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/role-of-object-rendering.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        R3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/role-of-object-rendering.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        R4\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/role-of-object-rendering.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        u\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/role-of-object-rendering.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleOfObjectRenderingService {\n\n  constructor() { }\n  \n  label:string;\n  id:string;\n  datatype:string;\n  mainsnak:any;\n  u:any;\n  R1:any[];\n  R2:any[];\n  R3:any[];\n  R4:any[];\n\n  roleOfObject(re){\n    \n    let claims:any[][]= Object.values(re.claims);\n    console.log(re.claims);\n    for (const claim of claims) { \n     for (const snak of claim) { \n       if(snak.mainsnak.property == \"P247\" || snak.mainsnak.property == \"P208\"){\n        if(snak.qualifiers2){\n          for (const qualif2 of snak.qualifiers2){\n            if (qualif2.id == \"P820\") {  \n              for (let j=0; j\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeHtmlPipe.html":{"url":"pipes/SafeHtmlPipe.html","title":"pipe - SafeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/safe-html.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeHtml\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/safe-html.pipe.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sanitizer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in src/app/safe-html.pipe.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safeHtml',\n    standalone: true\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  private sanitizer = inject(DomSanitizer);\n\n\n\n  transform(value) {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MatInputModule\n                            MatFormFieldModule\n                            MatTableModule\n                            MatIconModule\n                            MatButtonModule\n                            MatCardModule\n                \n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                advanced_search\n                            \n                            \n                                    Private\n                                baseGetURL\n                            \n                            \n                                c\n                            \n                            \n                                    Private\n                                changeDetector\n                            \n                            \n                                data$\n                            \n                            \n                                fields\n                            \n                            \n                                formerVisitsTitle\n                            \n                            \n                                    Private\n                                getUrlSuffix\n                            \n                            \n                                    Public\n                                isDisplay\n                            \n                            \n                                itemId\n                            \n                            \n                                items\n                            \n                            \n                                labels\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                newItem\n                            \n                            \n                                pages\n                            \n                            \n                                projects\n                            \n                            \n                                    Private\n                                request\n                            \n                            \n                                searchInput\n                            \n                            \n                                searchQuery$\n                            \n                            \n                                    Public\n                                selectedItem\n                            \n                            \n                                selectedItemsList\n                            \n                            \n                                    Private\n                                setLanguage\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addParis\n                            \n                            \n                                createList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addParis\n                        \n                    \n                \n            \n            \n                \naddParis(re)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/search.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(re)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/search.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/search.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/search.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        advanced_search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"advanced search\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseGetURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids='\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        c\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/search/search.component.ts:184\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeDetector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"fields of reserach\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formerVisitsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"you have visited:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUrlSuffix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '&format=json&origin=*'\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labels\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/search/search.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newItem\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/search/search.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"research projects\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedItemsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(localStorage.getItem('selectedItems'))\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SetLanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"a database for historians\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'factgrid'\n                    \n                \n                    \n                        \n                                Defined in src/app/search/search.component.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { map, switchMap, tap, debounceTime, takeWhile, filter } from 'rxjs/operators';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n//import { RouterLinkActive, RouterLink, RouterOutlet } from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { SetLanguageService } from '../services/set-language.service';\nimport { RequestService } from '../services/request.service';\nimport { SelectedLangService } from '../selected-lang.service';\n\n\n\n\n\n@Component({\n  selector: 'app-search',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n  ],\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\n\n\n\n\nexport class SearchComponent implements OnInit {\n private changeDetector = inject(ChangeDetectorRef);\n private request = inject(RequestService);\n private setLanguage = inject(SetLanguageService);\n private lang = inject(SelectedLangService);\n\n\n  //  selectedLang: string = (localStorage['selectedLang']===undefined)? \"en\": localStorage['selectedLang']; //initialization of the storage of the selected language (english)\n\n    title = 'factgrid';\n    subtitle:string = \"a database for historians\";\n    advanced_search:string = \"advanced search\";\n    projects:string = \"research projects\";\n    fields: string = \"fields of reserach\";\n\n \n   \n\n    searchInput = new FormControl();\n\n    public selectedItem:Observable;\n    public isDisplay:boolean = false;\n\n    data$ = new Observable();\n    searchQuery$ = new BehaviorSubject('');\n    \n    labels\n    items = [];\n    newItem;\n    itemId: string;\n    pages: any\n\n    private baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=' ;\n    private getUrlSuffix= '&format=json&origin=*' ;\n\n    formerVisitsTitle:string = \"you have visited:\";\n    selectedItemsList: any[] = JSON.parse(localStorage.getItem('selectedItems'));\n\n\n  \n  //  this.request.getStat();\n\n\n  ngOnInit(): void {\n\n    this.subtitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n\n    this.advanced_search = this.lang.getTranslation('$1', this.lang.selectedLang);\n\n    this.projects = this.lang.getTranslation('$1', this.lang.selectedLang);\n\n    this.fields = this.lang.getTranslation('$1', this.lang.selectedLang);\n\n    this.formerVisitsTitle = this.lang.getTranslation('$1', this.lang.selectedLang)\n\n    this.selectedItemsList = this.selectedItemsList.filter(function (el) { return (el !== null) });\n\n    this.pages = this.request.getStat().pipe(map(res => Object.values(res)[1].statistics.pages));\n    //  this.pages.subscribe(res => console.log(res));\n\n    //   this.pages = this.stat();\n\n    //   console.log(this.pages);\n    /*\n     this.subtitle = \"a database for historians\"\n      if (this.selectedLang === \"de\") { this.subtitle = \"eine Databank für Historiker*innen\" }\n      if (this.selectedLang === \"fr\") { this.subtitle = \"une base de données pour historien.nes\"}\n      if (this.selectedLang === \"es\") { this.subtitle = \"una base de datos para historiadores\"}\n      if (this.selectedLang === \"it\") { this.subtitle = \"un database per gli storici\"}\n  \n      this.advanced_search = \"advanced search\"\n      if (this.selectedLang === \"de\") { this.advanced_search = \"erweiterte Suche\" }\n      if (this.selectedLang === \"fr\") { this.advanced_search = \"recherche avancée\"}\n      if (this.selectedLang === \"es\") { this.advanced_search = \"búsqueda avanzada\"}\n      if (this.selectedLang === \"it\") { this.advanced_search = \"ricerca avanzata\"}\n  \n      this.projects = \"research projects\"\n      if (this.selectedLang === \"de\") { this.projects = \"Forschungsprojekten\" }\n      if (this.selectedLang === \"fr\") { this.projects = \"projets de recherche\"}\n      if (this.selectedLang === \"es\") { this.projects = \"proyectos de investigación\"}\n      if (this.selectedLang === \"it\") { this.projects = \"progetti di ricerca\"}\n  \n      this.fields = \"fields of research\"\n      if (this.selectedLang === \"de\") { this.fields = \"Forschungsfelder\" }\n      if (this.selectedLang === \"fr\") { this.fields = \"domaines de recherche\"}\n      if (this.selectedLang === \"es\") { this.projects = \"campos de investigación\"}\n      if (this.selectedLang === \"it\") { this.projects = \"aree di ricerca\"}\n        \n      this.formerVisitsTitle = \"you have visited:\"\n      if(this.selectedLang === \"de\") {this.formerVisitsTitle = \"Sie haben besucht:\"};\n      if(this.selectedLang === \"fr\") {this.formerVisitsTitle = \"vous avez visité :\"};\n      if(this.selectedLang === \"es\") {this.formerVisitsTitle = \"has visitado :\"}\n      if(this.selectedLang === \"it\") {this.formerVisitsTitle = \"hai visitato :\"}\n  \n      */\n\n    console.log(this.selectedItemsList);\n\n\n    this.labels = this.searchInput.valueChanges   //search engine\n      .pipe(\n        debounceTime(400),\n        switchMap(label => this.request.searchItem(label, this.lang.selectedLang)),\n        map(res => this.createList(res)),\n        map(res => res == \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin=*\" ?\n          \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=Q220375&format=json&origin=*\" : res),\n        debounceTime(200),\n        switchMap(url => this.request.getItem(url)),\n        //  takeWhile (res => res !== undefined),\n        filter(res => res !== undefined),\n        filter(res => res.entities !== undefined && res.entities !==null),\n   // filter (res => res.entities !== null),\n        map(res => Object.values(res.entities))\n      )\n    .subscribe(re => { \n    this.items = this.setLanguage.item(re, this.lang.selectedLang);\n  //  this.items = this.filterResearchField(this.items, this.selectedResearchField);\n      this.isDisplay = true ;\n      if (this.items[0].id == \"Q220375\") { this.isDisplay = false };\n   this.changeDetector.detectChanges();\n      })\n    }\n\n   createList(re) {  //create an url whith the elements of an array\n    let list = \"\";\n    let url = \"\";\n    let arr = re.search;\n    if ( arr === undefined ) { arr = []}\n    else { arr = arr };\n    for (let i = 0; i \n    \n\n    \n        \n\n  \n\n\n\n\n\n \n       \n        FactGrid\n        {{subtitle}}\n       \n-->\n \n        FactGrid\n        {{subtitle}}\n\n\n\n  \n      \n         \n           \n             \n             {{this.pages | async }} items\n           \n         \n      \n  \n\n   \n           @if (isDisplay == true) {\n                \n                \n                      @for (item of items; track item) {\n                          \n                            {{item.label}}&nbsp;\n                            open_in_new&nbsp;&nbsp;&nbsp;       \n                            @if (item.description) {\n                            , {{item.description }}\n                            }                           \n                            \n                          \n                          }\n                \n             \n             }\n\n          @if (isDisplay == false) {\n             \n               \n                 {{advanced_search}} &nbsp;&nbsp;|&nbsp;&nbsp;\n                 \n                   sparql query\n                 \n                 &nbsp;&nbsp;|&nbsp;&nbsp;\n                 Harmonia Universalis --->\n               \n\n                    \n                        \n                          {{formerVisitsTitle}}\n                          \n                            \n                            \n                              \n                                @for (selectedItem of selectedItemsList; track selectedItem) {\n                                \n                                  @if (selectedItem) {\n                                  \n                                    {{selectedItem.label}}&nbsp;\n                                    open_in_new&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                  \n                                  }\n                                  \n                                \n                                }\n                              \n                            \n                         \n                        \n                    \n               \n              }\n        \n\n     \n\n  \n\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n\n.search-container {\n  display: flex;\n  flex-direction: column;\n \n}\n\n.FactGrid-div { // box styling the factgrid title\n  height: 150px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n  \n.FactGridTitle-div {  //font of the title FactGrid\n    padding-left:10px;\n    color:#AD1457;\n    font-weight: 600;\n    font-size: 60px;\n  }\n\n.search-label { // style of the labels of the items\n  font-weight: bold;\n}\n\n.search-itemSelected { // put a margin on top of the box of selected items\n  margin-top: 50px;\n}\n\n\n\n//style the card of selected items\n\n \n\n.selectedItemSize {\n   font-size: 14px;\n}\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  FactGrid        {{subtitle}}       -->         FactGrid        {{subtitle}}                                                      {{this.pages | async }} items                                          @if (isDisplay == true) {                                                      @for (item of items; track item) {                                                      {{item.label}}                             open_in_new                                      @if (item.description) {                            , {{item.description }}                            }                                                                                                           }                                          }          @if (isDisplay == false) {                                             {{advanced_search}}   |                                      sparql query                                    |                   Harmonia Universalis --->                                                                                     {{formerVisitsTitle}}                                                                                                                                                @for (selectedItem of selectedItemsList; track selectedItem) {                                                                  @if (selectedItem) {                                                                      {{selectedItem.label}}                                     open_in_new                                                                         }                                                                                                  }                                                                                                                                                            }               '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchEngineService.html":{"url":"injectables/SearchEngineService.html","title":"injectable - SearchEngineService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchEngineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search-engine.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseGetURL\n                            \n                            \n                                    Private\n                                getUrlSuffix\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                    Private\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(re)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search-engine.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                re\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n            \n                \ninput(de: Observable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search-engine.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                de\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseGetURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids='\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search-engine.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUrlSuffix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '&format=json&origin=*'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search-engine.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search-engine.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search-engine.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, switchMap, tap, debounceTime, takeWhile, filter } from 'rxjs/operators';\nimport { RequestService } from '../services/request.service';\nimport { SelectedLangService } from '../selected-lang.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchEngineService {\n  private request = inject(RequestService);\n  private lang = inject(SelectedLangService);\n\n\n \n\n  private baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\n  private getUrlSuffix = '&format=json&origin=*';\n\n  input(de:Observable) {   //search engine\n   de.pipe(\n    debounceTime(400),\n    switchMap(label => this.request.searchItem(label, this.lang.selectedLang)),\n    map(res => this.createList(res)),\n    map(res => res == \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin=*\" ?\n      \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=Q220375&format=json&origin=*\" : res),\n    debounceTime(200),\n    switchMap(url => this.request.getItem(url)),\n    // tap(res => console.log(res)),\n    //  takeWhile (res => res !== undefined),\n    filter(res => res !== undefined),\n  )\n  }\n\n\n  createList(re) {  //create an url whith the elements of an array\n    let list = \"\";\n    let url = \"\";\n    let arr = re.search;\n    if (arr === undefined) { arr = [] }\n    else { arr = arr };\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SelectedItemListService.html":{"url":"injectables/SelectedItemListService.html","title":"injectable - SelectedItemListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SelectedItemListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/selected-item-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                            \n                                setProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                requestItems\n                            \n                            \n                                setItems\n                            \n                            \n                                setPropertiesAndValues\n                            \n                            \n                                uniq\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(arr)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/selected-item-list.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestItems\n                        \n                    \n                \n            \n            \n                \nrequestItems(valuesUrl: string, propertiesUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/selected-item-list.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valuesUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                propertiesUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItems\n                        \n                    \n                \n            \n            \n                \nsetItems(arr)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/selected-item-list.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPropertiesAndValues\n                        \n                    \n                \n            \n            \n                \nsetPropertiesAndValues(u)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/selected-item-list.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uniq\n                        \n                    \n                \n            \n            \n                \nuniq(a)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/selected-item-list.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/selected-item-list.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setProperties\n                        \n                    \n                \n            \n                \n                    \n                        Default value : function setProperties(arr){ // create an array of the properties in the qualifiers and references\n  let result = [];\n  arr.forEach(x => result.push(Object.values(x)[0][0].property));\n  return result }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/selected-item-list.service.ts:99\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectedItemListService {\n  private http = inject(HttpClient);\n\n  \n  setPropertiesAndValues(u) {\n  \n  let values: any[] = Object.values(u.claims) ;\n  let items = [];\n  let properties = [];\n  let qualifiers = [];\n  let references = [];\n  let mainsnaks = [];\n  let mainsnaks2 = [];\n\n//\tconst baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=' ;\n//\tconst getUrlSuffix= '&props=labels|descriptions&format=json' ;\n\n//  console.log(values);\n  \n  for (const val of values) { //mainsnaks\n    let i:number;\n    for (i=0; i { return this.http.get(url) };\n\n  requestItems(valuesUrl:string, propertiesUrl:string): Observable {\n    let response1 = this.http.get(valuesUrl);\n    let response2 = this.http.get(propertiesUrl);\n    return forkJoin([response1, response2]);\n  }\n\n  setProperties = function setProperties(arr){ // create an array of the properties in the qualifiers and references\n  let result = [];\n  arr.forEach(x => result.push(Object.values(x)[0][0].property));\n  return result }\n  \n  setItems(arr){ // create an array of the items in the qualifiers and references\n  let result = [];\n  arr.forEach(x => result.push(Object.values(x)[0][0].datavalue.value.id));\n  return result }\n  \n  createList(arr){  //create a string whith the elements of an array\n    arr = [...new Set(arr)];\n    let list = \"\";\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SelectedItemListService-1.html":{"url":"injectables/SelectedItemListService-1.html","title":"injectable - SelectedItemListService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SelectedItemListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/services/selected-items-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                            \n                                setProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                requestItems\n                            \n                            \n                                setItems\n                            \n                            \n                                setPropertiesAndValues\n                            \n                            \n                                uniq\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(arr)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/selected-items-list.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestItems\n                        \n                    \n                \n            \n            \n                \nrequestItems(valuesUrl: string, propertiesUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/selected-items-list.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valuesUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                propertiesUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItems\n                        \n                    \n                \n            \n            \n                \nsetItems(arr)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/selected-items-list.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPropertiesAndValues\n                        \n                    \n                \n            \n            \n                \nsetPropertiesAndValues(u)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/selected-items-list.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uniq\n                        \n                    \n                \n            \n            \n                \nuniq(a)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/selected-items-list.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/services/selected-items-list.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setProperties\n                        \n                    \n                \n            \n                \n                    \n                        Default value : function setProperties(arr){ // create an array of the properties in the qualifiers and references\n  let result = [];\n  arr.forEach(x => result.push(Object.values(x)[0][0].property));\n  return result }\n                    \n                \n                    \n                        \n                                Defined in src/app/display/services/selected-items-list.service.ts:101\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectedItemListService {\n  private http = inject(HttpClient);\n\n  \n  setPropertiesAndValues(u) {\n  \n  let values: any[] = Object.values(u.claims) ;\n  let items = [];\n  let properties = [];\n  let qualifiers = [];\n  let references = [];\n  let mainsnaks = [];\n  let mainsnaks2 = [];\n\n\tconst baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=' ;\n\tconst getUrlSuffix= '&props=labels|descriptions&format=json' ;\n\n  console.log(values);\n  \n  for (const val of values) { //mainsnaks\n    let i:number;\n    for (i=0; i { return this.http.get(url) };\n\n  requestItems(valuesUrl:string, propertiesUrl:string): Observable {\n    let response1 = this.http.get(valuesUrl);\n    let response2 = this.http.get(propertiesUrl);\n    return forkJoin([response1, response2]);\n  }\n\n  setProperties = function setProperties(arr){ // create an array of the properties in the qualifiers and references\n  let result = [];\n  arr.forEach(x => result.push(Object.values(x)[0][0].property));\n  return result }\n  \n  setItems(arr){ // create an array of the items in the qualifiers and references\n  let result = [];\n  arr.forEach(x => result.push(Object.values(x)[0][0].datavalue.value.id));\n  return result }\n  \n  createList(arr){  //create a string whith the elements of an array\n    arr = [...new Set(arr)];\n    let list = \"\";\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Selection.html":{"url":"interfaces/Selection.html","title":"interface - Selection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Selection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/variable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            variable\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variable:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Data {\n  statement: number;\n  types?: Statement;\n  values?: Statement;\n}\n\nexport interface Statement {\n  options: Variable[];\n  selections?: Variable[];\n}\n\nexport interface Variable {\n  label: string;\n  id?: string;\n  type?: string;\n  order?: number;\n  col?: number;\n  originalLabel?: string;\n\n}\n\n\n\n\nexport interface Selection {\n  variable: number[];\n  label: string;\n  id: string;\n}\n\n\n\n\nexport const ITEMTYPES: Variable[] = [\n  { label: '?activity', id: 'Q256699', order:0 },\n  { label: '?archive', id: 'Q21870', order: 0 },\n  { label: '?artefact', id: 'Q101755', order: 0 },\n  { label: '?book', id: 'Q100626', order: 0 },\n  { label: '?career', id: 'Q77493', order: 0 },\n  { label: '?city', id: 'Q77500', order: 0 },\n  { label: '?context', id: 'Q77500', order: 0 },\n  { label: '?country', id: 'Q77500', order: 0 },\n  { label: '?date', id: \"Q77483\", order: 0 },\n  { label: '?document', id: 'Q21870', order: 0 },\n  { label: '?education', id: 'Q100631', order: 0 },\n  { label: '?event', id: 'Q77499', order: 0 },\n  { label: '?freemasonry', id: 'Q23197', order: 0 },\n  { label: '?group', id: 'Q77498', order: 0 },\n  { label: '?human', id: 'Q77478', order: 0 },\n  { label: '?human work', id: 'Q77495', order: 0 },\n  { label: '?name', id: 'Q77488', order: 0 },\n  { label: '?object', id: 'Q101755', order: 0 },\n  { label: '?organisation', id: 'Q77501', order: 0 },\n  { label: '?person', id: 'Q77478',  order: 0 },\n  { label: '?people', id: 'Q77478',  order: 0 },\n{ label: '?place', id: 'Q77500', order: 0 },\n{ label: '?printed document', id: 'Q100626', order: 0 },\n{ label: '?profession', id: 'Q256699', order: 0 },\n  { label: '?publication', id: 'Q77502', order: 0 },\n];\n\n\n\n\nexport const LITERALS: Variable[] = [\n  { label: \"write literal string\", type: \"String\", col: 0 },\n  { label: \"write date : YYYY-MM-DD\", type: \"Time\", col: 0 },\n  { label: \"write number\", type:\"Quantity\", col:0 },\n  { label: \"None\", type: \"Any\", col: 2 },\n  { label: \"None\", type: \"Any\", col: 3 },\n  { label: \"None\", type: \"Any\", col: 4 },\n  { label: '?date', type: \"Time\", col: 0 },\n  { label: '?date1', type: \"Time\", col: 1 },\n  { label: '?date2', type: \"Time\", col: 2 },\n  { label: '?date3', type: \"Time\", col: 3 },\n  { label: '?date4', type: \"Time\", col: 4 },\n  { label: '?date5', type: \"Time\", col: 5 },\n  { label: '?string', type: \"String\", col: 0 },\n  { label: '?string1', type: \"String\", col: 1 },\n  { label: '?string2', type: \"String\", col: 2 },\n  { label: '?string3', type: \"String\", col: 3 },\n  { label: '?string4', type: \"String\", col: 4 },\n  /*{ label: '?context', type: 'String', col: 0 },\n  { label: '?context1', type: 'String', col: 1 },\n  { label: '?context2', type: 'String', col: 2 },\n  { label: '?context3', type: 'String', col: 3 },\n  { label: '?context4', type: 'String', col: 4 },*/\n  { label: '?amount', type: \"Quantity\", col: 0 },\n  { label: '?amount1', type: \"Quantity\", col: 1 },\n  { label: '?amount2', type: \"Quantity\", col: 2 },\n  { label: '?amount3', type: \"Quantity\", col: 3 },\n  { label: '?number', type: \"Quantity\", col: 0 },\n  { label: '?number1', type: \"Quantity\", col: 1 },\n  { label: '?number2', type: \"Quantity\", col: 2 },\n  { label: '?number3', type: \"Quantity\", col: 3 }\n]\n\nexport const QUALIFIERTYPES: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23]; // list of columns for the qualifier types\n\nexport const MUTATOR: Variable[][] = [\n  [{ label: '?activity', id: 'Q256699', col: 0 }, { label: '?archive', id: 'Q21870', col: 1 }, { label: '?artefact', id: 'Q101755', col: 2 }, { label: '?book', id: 'Q100626', col: 3 }, { label: '?career', id: 'Q77493', col: 4 }, { label: '?city', id: 'Q77500', col: 5 }, { label: '?country', id: 'Q77500', col: 6 }, { label: '?date', id: \"Q77483\", col: 7 }, { label: '?document', id: 'Q21870', col: 8 }, { label: '?education', id: 'Q100631', col: 9 }, { label: '?event', id: 'Q77499', col: 10 }, { label: '?freemasonry', id: 'Q23197', col: 11 }, { label: '?group', id: 'Q77498', col: 12 }, { label: '?human', id: 'Q77478', col: 13 }, { label: '?human work', id: 'Q77495', col: 14 }, { label: '?name', id: 'Q77488', col: 15 }, { label: '?object', id: 'Q101755', col: 16 }, { label: '?organisation', id: 'Q77501', col: 17 }, { label: '?people', id: 'Q77478', col: 18 }, { label: '?person', id: 'Q77478', col: 19 }, { label: '?place', id: 'Q77500', col: 20 }, { label: '?printed document', id: 'Q100626', col: 21 }, { label: '?profession', id: 'Q256699', col: 22 }, { label: '?publication', id: 'Q77502', col: 23 }],\n  [{ label: '?activity1', id: 'Q256699', col: 0 }, { label: '?archive1', id: 'Q21870', col: 1 }, { label: '?artefact1', id: 'Q101755', col: 2 }, { label: '?book1', id: 'Q100626', col: 3 }, { label: '?career1', id: 'Q77493', col: 4 }, { label: '?city1', id: 'Q77500', col: 5 }, { label: '?country1', id: 'Q77500', col: 6 }, { label: '?date1', id: \"Q77483\", col: 7 }, { label: '?document1', id: 'Q21870', col: 8 }, { label: '?education1', id: 'Q100631', col: 9 }, { label: '?event1', id: 'Q77499', col: 10 }, { label: '?freemasonry1', id: 'Q23197', col: 11 }, { label: '?group1', id: 'Q77498', col: 12 }, { label: '?human1', id: 'Q77478', col: 13 }, { label: '?human work1', id: 'Q77495', col: 14 }, { label: '?name1', id: 'Q77488', col: 15 }, { label: '?object1', id: 'Q101755', col: 16 }, { label: '?organisation1', id: 'Q77501', col: 17 }, { label: '?people1', id: 'Q77478', col: 18 }, { label: '?person1', id: 'Q77478', col: 19 }, { label: '?place1', id: 'Q77500', col: 20 }, { label: '?printed document1', id: 'Q100626', col: 21 }, { label: '?profession1', id: 'Q256699', col: 22 }, { label: '?publication1', id: 'Q77502', col:23}],\n  [{ label: '?activity2', id: 'Q256699', col: 0 }, { label: '?archive2', id: 'Q21870', col: 1 }, { label: '?artefact2', id: 'Q101755', col: 2 }, { label: '?book2', id: 'Q100626', col: 3 }, { label: '?career2', id: 'Q77493', col: 4 }, { label: '?city2', id: 'Q77500', col: 5 }, { label: '?country2', id: 'Q77500', col: 6 }, { label: '?date2', id: \"Q77483\", col: 7 }, { label: '?document2', id: 'Q21870', col: 8 }, { label: '?education2', id: 'Q100631', col: 9 }, { label: '?event2', id: 'Q77499', col: 10 }, { label: '?freemasonry2', id: 'Q23197', col: 11 }, { label: '?group2', id: 'Q77498', col: 12 }, { label: '?human2', id: 'Q77478', col: 13 }, { label: '?human work2', id: 'Q77495', col: 14 }, { label: '?name2', id: 'Q77488', col: 15 }, { label: '?object2', id: 'Q101755', col: 16 }, { label: '?organisation2', id: 'Q77501', col: 17 }, { label: '?people2', id: 'Q77478', col: 18 }, { label: '?person2', id: 'Q77478', col: 19 }, { label: '?place2', id: 'Q77500', col: 20 }, { label: '?printed document2', id: 'Q100626', col: 21 }, { label: '?profession2', id: 'Q256699', col: 22 }, { label: '?publication2', id: 'Q77502', col:23}],\n  [{ label: '?activity3', id: 'Q256699', col: 0 }, { label: '?archive3', id: 'Q21870', col: 1 }, { label: '?artefact3', id: 'Q101755', col: 2 }, { label: '?book3', id: 'Q100626', col: 3 }, { label: '?career3', id: 'Q77493', col: 4 }, { label: '?city3', id: 'Q77500', col: 5 }, { label: '?country3', id: 'Q77500', col: 6 }, { label: '?date3', id: \"Q77483\", col: 7 }, { label: '?document3', id: 'Q21870', col: 8 }, { label: '?education3', id: 'Q100631', col: 9 }, { label: '?event3', id: 'Q77499', col: 10 }, { label: '?freemasonry3', id: 'Q23197', col: 11 }, { label: '?group3', id: 'Q77498', col: 12 }, { label: '?human3', id: 'Q77478', col: 13 }, { label: '?human work3', id: 'Q77495', col: 14 }, { label: '?name3', id: 'Q77488', col: 15 }, { label: '?object3', id: 'Q101755', col: 16 }, { label: '?organisation3', id: 'Q77501', col: 17 }, { label: '?people3', id: 'Q77478', col: 18 }, { label: '?person3', id: 'Q77478', col: 19 }, { label: '?place3', id: 'Q77500', col: 20 }, { label: '?printed document3', id: 'Q100626', col: 21 }, { label: '?profession3', id: 'Q256699', col: 22 }, { label: '?publication3', id: 'Q77502', col:23}],\n  [{ label: '?activity4', id: 'Q256699', col: 0 }, { label: '?archive4', id: 'Q21870', col: 1 }, { label: '?artefact4', id: 'Q101755', col: 2 }, { label: '?book4', id: 'Q100626', col: 3 }, { label: '?career4', id: 'Q77493', col: 4 }, { label: '?city4', id: 'Q77500', col: 5 }, { label: '?country4', id: 'Q77500', col: 6 }, { label: '?date4', id: \"Q77483\", col: 7 }, { label: '?document4', id: 'Q21870', col: 8 }, { label: '?education4', id: 'Q100631', col: 9 }, { label: '?event4', id: 'Q77499', col: 10 }, { label: '?freemasonry4', id: 'Q23197', col: 11 }, { label: '?group4', id: 'Q77498', col: 12 }, { label: '?human4', id: 'Q77478', col: 13 }, { label: '?human work4', id: 'Q77495', col: 14 }, { label: '?name4', id: 'Q77488', col: 15 }, { label: '?object4', id: 'Q101755', col: 16 }, { label: '?organisation4', id: 'Q77501', col: 17 }, { label: '?people4', id: 'Q77478', col: 18 }, { label: '?person4', id: 'Q77478', col: 19 }, { label: '?place4', id: 'Q77500', col: 20 }, { label: '?printed document4', id: 'Q100626', col: 21 }, { label: '?profession4', id: 'Q256699', col: 22 }, { label: '?publication4', id: 'Q77502', col:23}],\n  [{ label: '?activity5', id: 'Q256699', col: 0 }, { label: '?archive5', id: 'Q21870', col: 1 }, { label: '?artefact5', id: 'Q101755', col: 2 }, { label: '?book5', id: 'Q100626', col: 3 }, { label: '?career5', id: 'Q77493', col: 4 }, { label: '?city5', id: 'Q77500', col: 5 }, { label: '?country5', id: 'Q77500', col: 6 }, { label: '?date5', id: \"Q77483\", col: 7 }, { label: '?document5', id: 'Q21870', col: 8 }, { label: '?education5', id: 'Q100631', col: 9 }, { label: '?event5', id: 'Q77499', col: 10 }, { label: '?freemasonry5', id: 'Q23197', col: 11 }, { label: '?group5', id: 'Q77498', col: 12 }, { label: '?human5', id: 'Q77478', col: 13 }, { label: '?human work5', id: 'Q77495', col: 14 }, { label: '?name5', id: 'Q77488', col: 15 }, { label: '?object5', id: 'Q101755', col: 16 }, { label: '?organisation5', id: 'Q77501', col: 17 }, { label: '?people5', id: 'Q77478', col: 18 }, { label: '?person5', id: 'Q77478', col: 19 }, { label: '?place5', id: 'Q77500', col: 20 }, { label: '?printed document5', id: 'Q100626', col: 21 }, { label: '?profession5', id: 'Q256699', col: 22 }, { label: '?publication5', id: 'Q77502', col:23}]\n]\n\n\n\nexport const _MUTATOR: Variable[][] = [\n[{ label: '?activity', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date', id: '', col: 25, type: \"Time\" }, { label: '?string', id: '', col: 26, type: \"String\" }, { label: '?amount', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity1', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive1', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact1', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book1', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career1', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city1', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context1', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country1', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document1', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education1', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event1', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry1', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group1', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human1', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work1', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name1', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object1', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation1', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people1', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person1', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place1', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document1', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession1', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication1', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date1', id: '', col: 25, type: \"Time\" }, { label: '?string1', id: '', col: 26, type: \"String\" }, { label: '?amount1', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity2', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive2', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact2', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book2', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career2', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city2', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context2', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country2', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document2', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education2', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event2', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry2', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group2', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human2', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work2', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name2', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object2', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation2', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people2', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person2', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place2', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document2', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession2', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication2', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date2', id: '', col: 25, type: \"Time\" }, { label: '?string2', id: '', col: 26, type: \"String\" }, { label: '?amount2', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity3', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive3', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact3', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book3', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career3', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city3', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context3', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country3', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document3', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education3', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event3', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry3', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group3', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human3', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work3', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name3', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object3', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation3', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people3', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person3', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place3', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document3', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession3', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication3', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date3', id: '', col: 25, type: \"Time\" }, { label: '?string3', id: '', col: 26, type: \"String\" }, { label: '?amount3', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity4', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive4', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact4', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book4', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career4', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city4', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context4', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country4', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document4', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education4', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event4', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry4', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group4', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human4', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work4', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name4', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object4', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation4', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people4', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person4', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place4', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document4', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession4', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication4', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date4', id: '', col: 25, type: \"Time\" }, { label: '?string4', id: '', col: 26, type: \"String\" }, { label: '?amount4', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity5', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive5', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact5', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book5', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career5', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city5', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context5', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country5', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document5', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education5', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event5', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry5', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group5', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human5', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work5', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name5', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object5', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation5', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people5', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person5', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place5', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document5', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession5', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication5', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date5', id: '', col: 25, type: \"Time\" }, { label: '?string5', id: '', col: 26, type: \"String\" }, { label: '?amount5', id: '', col: 27, type: \"Quantity\" }]\n]\n\nexport const MUTATOR2: Variable[][] = [\n  [{ label: 'activity', id: 'Q256699', col: 0 }, { label: 'archive', id: 'Q21870', col: 1 }, { label: 'artefact', id: 'Q101755', col: 2 }, { label: 'book', id: 'Q100626', col: 3 }, { label: 'career', id: 'Q77493', col: 4 }, { label: 'city', id: 'Q77500', col: 5 }, { label: 'country', id: 'Q77500', col: 6 }, { label: 'date', id: \"Q77483\", col: 7 }, { label: 'document', id: 'Q21870', col: 8 }, { label: 'education', id: 'Q100631', col: 9 }, { label: 'event', id: 'Q77499', col: 10 }, { label: 'freemasonry', id: 'Q23197', col: 11 }, { label: 'group', id: 'Q77498', col: 12 }, { label: 'human', id: 'Q77478', col: 13 }, { label: 'human work', id: 'Q77495', col: 14 }, { label: 'name', id: 'Q77488', col: 15 }, { label: 'object', id: 'Q101755', col: 16 }, { label: 'organisation', id: 'Q77501', col: 17 }, { label: 'people', id: 'Q77478', col: 18 }, { label: 'person', id: 'Q77478', col: 19 }, { label: 'place', id: 'Q77500', col: 20 }, { label: 'printed document', id: 'Q100626', col: 21 }, { label: 'profession', id: 'Q256699', col: 22 }, { label: 'publication', id: 'Q77502', col: 23 }],\n  [{ label: 'activity1', id: 'Q256699', col: 0 }, { label: 'archive1', id: 'Q21870', col: 1 }, { label: 'artefact1', id: 'Q101755', col: 2 }, { label: 'book1', id: 'Q100626', col: 3 }, { label: 'career1', id: 'Q77493', col: 4 }, { label: 'city1', id: 'Q77500', col: 5 }, { label: 'country1', id: 'Q77500', col: 6 }, { label: 'date1', id: \"Q77483\", col: 7 }, { label: 'document1', id: 'Q21870', col: 8 }, { label: 'education1', id: 'Q100631', col: 9 }, { label: 'event1', id: 'Q77499', col: 10 }, { label: 'freemasonry1', id: 'Q23197', col: 11 }, { label: 'group1', id: 'Q77498', col: 12 }, { label: 'human1', id: 'Q77478', col: 13 }, { label: 'human work1', id: 'Q77495', col: 14 }, { label: 'name1', id: 'Q77488', col: 15 }, { label: 'object1', id: 'Q101755', col: 16 }, { label: 'organisation1', id: 'Q77501', col: 17 }, { label: 'people1', id: 'Q77478', col: 18 }, { label: 'person1', id: 'Q77478', col: 19 }, { label: 'place1', id: 'Q77500', col: 20 }, { label: 'printed document1', id: 'Q100626', col: 21 }, { label: 'profession1', id: 'Q256699', col: 22 }, { label: 'publication1', id: 'Q77502', col: 23 }],\n  [{ label: 'activity2', id: 'Q256699', col: 0 }, { label: 'archive2', id: 'Q21870', col: 1 }, { label: 'artefact2', id: 'Q101755', col: 2 }, { label: 'book2', id: 'Q100626', col: 3 }, { label: 'career2', id: 'Q77493', col: 4 }, { label: 'city2', id: 'Q77500', col: 5 }, { label: 'country2', id: 'Q77500', col: 6 }, { label: 'date2', id: \"Q77483\", col: 7 }, { label: 'document2', id: 'Q21870', col: 8 }, { label: 'education2', id: 'Q100631', col: 9 }, { label: 'event2', id: 'Q77499', col: 10 }, { label: 'freemasonry2', id: 'Q23197', col: 11 }, { label: 'group2', id: 'Q77498', col: 12 }, { label: 'human2', id: 'Q77478', col: 13 }, { label: 'human work2', id: 'Q77495', col: 14 }, { label: 'name2', id: 'Q77488', col: 15 }, { label: 'object2', id: 'Q101755', col: 16 }, { label: 'organisation2', id: 'Q77501', col: 17 }, { label: 'people2', id: 'Q77478', col: 18 }, { label: 'person2', id: 'Q77478', col: 19 }, { label: 'place2', id: 'Q77500', col: 20 }, { label: 'printed document2', id: 'Q100626', col: 21 }, { label: 'profession2', id: 'Q256699', col: 22 }, { label: 'publication2', id: 'Q77502', col: 23 }],\n  [{ label: 'activity3', id: 'Q256699', col: 0 }, { label: 'archive3', id: 'Q21870', col: 1 }, { label: 'artefact3', id: 'Q101755', col: 2 }, { label: 'book3', id: 'Q100626', col: 3 }, { label: 'career3', id: 'Q77493', col: 4 }, { label: 'city3', id: 'Q77500', col: 5 }, { label: 'country3', id: 'Q77500', col: 6 }, { label: 'date3', id: \"Q77483\", col: 7 }, { label: 'document3', id: 'Q21870', col: 8 }, { label: 'education3', id: 'Q100631', col: 9 }, { label: 'event3', id: 'Q77499', col: 10 }, { label: 'freemasonry3', id: 'Q23197', col: 11 }, { label: 'group3', id: 'Q77498', col: 12 }, { label: 'human3', id: 'Q77478', col: 13 }, { label: 'human work3', id: 'Q77495', col: 14 }, { label: 'name3', id: 'Q77488', col: 15 }, { label: 'object3', id: 'Q101755', col: 16 }, { label: 'organisation3', id: 'Q77501', col: 17 }, { label: 'people3', id: 'Q77478', col: 18 }, { label: 'person3', id: 'Q77478', col: 19 }, { label: 'place3', id: 'Q77500', col: 20 }, { label: 'printed document3', id: 'Q100626', col: 21 }, { label: 'profession3', id: 'Q256699', col: 22 }, { label: 'publication3', id: 'Q77502', col: 23 }],\n  [{ label: 'activity4', id: 'Q256699', col: 0 }, { label: 'archive4', id: 'Q21870', col: 1 }, { label: 'artefact4', id: 'Q101755', col: 2 }, { label: 'book4', id: 'Q100626', col: 3 }, { label: 'career4', id: 'Q77493', col: 4 }, { label: 'city4', id: 'Q77500', col: 5 }, { label: 'country4', id: 'Q77500', col: 6 }, { label: 'date4', id: \"Q77483\", col: 7 }, { label: 'document4', id: 'Q21870', col: 8 }, { label: 'education4', id: 'Q100631', col: 9 }, { label: 'event4', id: 'Q77499', col: 10 }, { label: 'freemasonry4', id: 'Q23197', col: 11 }, { label: 'group4', id: 'Q77498', col: 12 }, { label: 'human4', id: 'Q77478', col: 13 }, { label: 'human work4', id: 'Q77495', col: 14 }, { label: 'name4', id: 'Q77488', col: 15 }, { label: 'object4', id: 'Q101755', col: 16 }, { label: 'organisation4', id: 'Q77501', col: 17 }, { label: 'people4', id: 'Q77478', col: 18 }, { label: 'person4', id: 'Q77478', col: 19 }, { label: 'place4', id: 'Q77500', col: 20 }, { label: 'printed document4', id: 'Q100626', col: 21 }, { label: 'profession4', id: 'Q256699', col: 22 }, { label: 'publication4', id: 'Q77502', col: 23 }],\n  [{ label: 'activity5', id: 'Q256699', col: 0 }, { label: 'archive5', id: 'Q21870', col: 1 }, { label: 'artefact5', id: 'Q101755', col: 2 }, { label: 'book5', id: 'Q100626', col: 3 }, { label: 'career5', id: 'Q77493', col: 4 }, { label: 'city5', id: 'Q77500', col: 5 }, { label: 'country5', id: 'Q77500', col: 6 }, { label: 'date5', id: \"Q77483\", col: 7 }, { label: 'document5', id: 'Q21870', col: 8 }, { label: 'education5', id: 'Q100631', col: 9 }, { label: 'event5', id: 'Q77499', col: 10 }, { label: 'freemasonry5', id: 'Q23197', col: 11 }, { label: 'group5', id: 'Q77498', col: 12 }, { label: 'human5', id: 'Q77478', col: 13 }, { label: 'human work5', id: 'Q77495', col: 14 }, { label: 'name5', id: 'Q77488', col: 15 }, { label: 'object5', id: 'Q101755', col: 16 }, { label: 'organisation5', id: 'Q77501', col: 17 }, { label: 'people5', id: 'Q77478', col: 18 }, { label: 'person5', id: 'Q77478', col: 19 }, { label: 'place5', id: 'Q77500', col: 20 }, { label: 'printed document5', id: 'Q100626', col: 21 }, { label: 'profession5', id: 'Q256699', col: 22 }, { label: 'publication5', id: 'Q77502', col: 23 }]\n]\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SetDataService.html":{"url":"injectables/SetDataService.html","title":"injectable - SetDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SetDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/set-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseGetURL\n                            \n                            \n                                    Private\n                                createCompleteItem\n                            \n                            \n                                    Private\n                                createItem\n                            \n                            \n                                getUrlSuffix\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                    Private\n                                request\n                            \n                            \n                                selectedLang\n                            \n                            \n                                    Private\n                                setLanguage\n                            \n                            \n                                sparqlResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemToDisplay\n                            \n                            \n                                newSparqlAdress\n                            \n                            \n                                reorderQualifiersOrder\n                            \n                            \n                                sparqlAsk\n                            \n                            \n                                sparqlToDisplay\n                            \n                            \n                                sparqlToDownload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemToDisplay\n                        \n                    \n                \n            \n            \n                \nitemToDisplay(id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-data.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSparqlAdress\n                        \n                    \n                \n            \n            \n                \nnewSparqlAdress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-data.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reorderQualifiersOrder\n                        \n                    \n                \n            \n            \n                \nreorderQualifiersOrder(qualifiersOrder: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-data.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qualifiersOrder\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparqlAsk\n                        \n                    \n                \n            \n            \n                \nsparqlAsk(sparql)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-data.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sparql\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparqlToDisplay\n                        \n                    \n                \n            \n            \n                \nsparqlToDisplay(sparql)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-data.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sparql\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparqlToDownload\n                        \n                    \n                \n            \n            \n                \nsparqlToDownload(sparql)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-data.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sparql\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseGetURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids='\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-data.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createCompleteItem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CreateCompleteItemService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-data.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createItem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CreateItemToDisplayService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-data.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUrlSuffix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '&format=json&origin=*'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-data.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-data.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-data.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : (localStorage['selectedLang']===undefined)? \"en\": localStorage['selectedLang']\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-data.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SetLanguageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-data.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparqlResult\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-data.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { SetLanguageService } from './set-language.service';\nimport { SelectedLangService } from '../selected-lang.service';\nimport { RequestService } from './request.service';\nimport { switchMap, map, tap, takeWhile } from 'rxjs/operators';\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs';\nimport { CreateCompleteItemService } from './create-complete-item.service';\nimport { CreateItemToDisplayService } from './create-item-to-display.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SetDataService {\n\tprivate createItem = inject(CreateItemToDisplayService);\n\tprivate createCompleteItem = inject(CreateCompleteItemService);\n\tprivate setLanguage = inject(SetLanguageService);\n\tprivate request = inject(RequestService);\n\tprivate lang = inject(SelectedLangService);\n\n\nsparqlResult = new Subject(); // In  case of BehaviorSubject I have to give an initial value\n\nselectedLang: string = (localStorage['selectedLang']===undefined)? \"en\": localStorage['selectedLang']; //initialization of the storage of the selected language (english)\nbaseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=' ;\ngetUrlSuffix= '&format=json&origin=*' ; \n\t\n  itemToDisplay(id) {\n    let labelLength: number = 0\n    let url = this.baseGetURL + id + this.getUrlSuffix;\n    let completeItem = this.request.getItem(url).pipe(\n      map(res => Object.values(res.entities)),\n      map(res => {\n        // Réordonne qualifiers-order pour chaque claim de chaque propriété\n        res.forEach((entity: any) => {\n          if (entity.claims) {\n            Object.values(entity.claims).forEach((claimArray: any[]) => {\n              claimArray.forEach((claim: any) => {\n                if (claim[\"qualifiers-order\"]) {\n                  claim[\"qualifiers-order\"] = this.reorderQualifiersOrder(claim[\"qualifiers-order\"]);\n                }\n              });\n            });\n          }\n        });\n\n        return res;\n      }),\n      switchMap(res => this.createCompleteItem.completeItem(res)),\n    );\n    return completeItem;\n  }\n\n\n sparqlAsk(sparql) {\n\t\tlet u = \"\";\n\t\tlet sparqlResult: Observable | undefined;\n\t\tlet selectedSparql = this.newSparqlAdress(sparql);\n\t\tsparqlResult = this.request.getAsk(selectedSparql);\n\t\tsparqlResult.subscribe(re => { u = re.boolean ; return u });\n\t\treturn sparqlResult\n\t}\n\t \n\tsparqlToDisplay(sparql) {\n\t\t\tlet sparqlResult:Observable | undefined;\n\t\t\tif(sparql.includes(\"item\")){\n\t\tlet selectedSparql = this.newSparqlAdress(sparql); //handle sparql queries 1. create the address \n\t\tsparqlResult = this.request.getList(selectedSparql);\n\t\t\t//handle sparql queries 2. list ready to display  \n\t}\n\t\treturn sparqlResult\n\t}\n\n sparqlToDownload(sparql){\n\t\tlet selectedSparql = this.newSparqlAdress(sparql);//handle sparql queries 1. create the address\n\t\tthis.request.downLoadList(selectedSparql);     //handle sparql queries 2. list ready to download  \n\t}\n\n\t\tnewSparqlAdress(address:string) : string { \n\t\t \n\t\t\tconst newPrefix = \"https://database.factgrid.de/sparql?query=\";\n\t\t\tlet oldPrefix = \"https://database.factgrid.de/query/#\";\n\t\t\tif (address.includes('embed.html')){oldPrefix =\"https://database.factgrid.de/query/embed.html#\"};\n\t\t\tif (address !== undefined) address = address.replace(oldPrefix, newPrefix);\n\t\t\treturn address\n  }\n\n\n  reorderQualifiersOrder(qualifiersOrder: string[]): string[] {\n  const timePropsOrder = [\n    \"P290\", \"P77\", \"P49\", \"P45\", \"P1124\", \"P1126\", \"P06\", \"P412\", \"P\", \"P41\", \"P38\", \"P50\", \"P1123\", \"P1125\", \"P291\", \"P612\"\n  ];\n  let ordered: string[] = [];\n  if (qualifiersOrder.includes(\"P47\")) ordered.push(\"P47\");\n  for (const p of timePropsOrder) if (qualifiersOrder.includes(p) && !ordered.includes(p)) ordered.push(p);\n  for (const p of qualifiersOrder) if (!ordered.includes(p)) ordered.push(p);\n  return ordered;\n}\n\n\t}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SetItemToDisplayService.html":{"url":"injectables/SetItemToDisplayService.html","title":"injectable - SetItemToDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SetItemToDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/#set-item-to-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDetails\n                            \n                            \n                                setItemToDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDetails\n                        \n                    \n                \n            \n            \n                \naddDetails(properties, claims)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/#set-item-to-display.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                properties\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                claims\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItemToDisplay\n                        \n                    \n                \n            \n            \n                \nsetItemToDisplay(u)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/#set-item-to-display.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DetailsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/#set-item-to-display.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { DetailsService } from './details.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetItemToDisplayService {\n  private details = inject(DetailsService);\n\n\n  setItemToDisplay(u) {\n\n    let values: any[] = Object.values(u.claims) ;\n    let mainsnaks = [];\n    let mainsnaks2 = [];\n  \n  //  const baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=' ;\n  //  const getUrlSuffix= '&props=labels|descriptions&format=json' ;\n    \n    for (const val of values) { //mainsnaks\n      let i:number;\n      for (i=0; i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SetLanguageService.html":{"url":"injectables/SetLanguageService.html","title":"injectable - SetLanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SetLanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/set-language.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAliases\n                            \n                            \n                                    Private\n                                getLangValue\n                            \n                            \n                                item\n                            \n                            \n                                item2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/set-language.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAliases\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAliases(obj: any, lang: string, fallbackOrder: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-language.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Utility: get aliases as array of strings for the preferred language\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fallbackOrder\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ['en', 'fr', 'de', 'es', 'it', 'hu']\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLangValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLangValue(obj: any, lang: string, fallbackOrder: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-language.service.ts:13\n                        \n                    \n\n\n            \n                \n                        Utility: get the value for a field in the preferred language, with fallback\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fallbackOrder\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ['en', 'fr', 'de', 'es', 'it', 'hu']\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n            \n                \nitem(res, lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-language.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Returns an array of items with id, label, description, aliases, claims, sitelinks, datatype\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item2\n                        \n                    \n                \n            \n            \n                \nitem2(res, lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-language.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Returns an array of items with id, label, description, aliases, externalLink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-language.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetLanguageService {\n\n  constructor() { }\n\n  lang: string;\n\n  /** Utility: get the value for a field in the preferred language, with fallback */\n  private getLangValue(obj: any, lang: string, fallbackOrder: string[] = ['en', 'fr', 'de', 'es', 'it', 'hu']) {\n    if (!obj) return undefined;\n    if (obj[lang]) return obj[lang];\n    for (const code of fallbackOrder) {\n      if (obj[code]) return obj[code];\n    }\n    // fallback: first available\n    const keys = Object.keys(obj);\n    return keys.length > 0 ? obj[keys[0]] : undefined;\n  }\n\n  /** Utility: get aliases as array of strings for the preferred language */\n  private getAliases(obj: any, lang: string, fallbackOrder: string[] = ['en', 'fr', 'de', 'es', 'it', 'hu']) {\n    const aliasesObj = this.getLangValue(obj, lang, fallbackOrder);\n    return Array.isArray(aliasesObj) ? aliasesObj.map(a => a.value) : [];\n  }\n\n  /** Returns an array of items with id, label, description, aliases, claims, sitelinks, datatype */\n  item(res, lang) {\n    if (!Array.isArray(res)) return [];\n    return res.map(item => {\n      const labelObj = this.getLangValue(item.labels, lang);\n      const descObj = this.getLangValue(item.descriptions, lang);\n      const aliases = this.getAliases(item.aliases, lang);\n\n      const label = labelObj?.value ?? undefined;\n      const description = descObj?.value ?? undefined;\n\n      // Only add properties if they exist\n      const result: any = {\n        id: item.id,\n        label,\n        claims: item.claims,\n        sitelinks: item.sitelinks,\n        datatype: item.datatype\n      };\n      if (description) result.description = description;\n      if (aliases.length > 0) result.aliases = aliases;\n      return result;\n    });\n  }\n\n  /** Returns an array of items with id, label, description, aliases, externalLink */\n  item2(res, lang) {\n    if (!Array.isArray(res)) return [];\n    return res.map(item => {\n      const labelObj = this.getLangValue(item.labels, lang);\n      const descObj = this.getLangValue(item.descriptions, lang);\n      const aliases = this.getAliases(item.aliases, lang);\n\n      const label = labelObj?.value ?? undefined;\n      const description = descObj?.value ?? undefined;\n\n      let externalLink: string | undefined;\n      if (item.datatype === \"external-id\" && item.claims?.P236?.[0]?.mainsnak?.datavalue?.value) {\n        externalLink = item.claims.P236[0].mainsnak.datavalue.value;\n      }\n\n      const result: any = {\n        id: item.id,\n        label,\n        externalLink\n      };\n      if (description) result.description = description;\n      if (aliases.length > 0) result.aliases = aliases;\n      return result;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SetSelectedItemsListService.html":{"url":"injectables/SetSelectedItemsListService.html","title":"injectable - SetSelectedItemsListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SetSelectedItemsListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/set-selected-items-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToSelectedItemsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/set-selected-items-list.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToSelectedItemsList\n                        \n                    \n                \n            \n            \n                \naddToSelectedItemsList(item)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-selected-items-list.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetSelectedItemsListService {\n\n  constructor() { }\n\n  addToSelectedItemsList(item) {let u = { value: {id: item.id}, label: item.label }\n  let selectedItemsList:any[] = JSON.parse(localStorage.getItem('selectedItems'));\n  if (selectedItemsList !== undefined){   //remove duplicates\n    for (let i=0; i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SetSubtitleService.html":{"url":"injectables/SetSubtitleService.html","title":"injectable - SetSubtitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SetSubtitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/set-subtitle.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/set-subtitle.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(lang)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-subtitle.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-subtitle.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : localStorage['selectedLang']\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-subtitle.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetSubtitleService {\n\n  private lang:string = localStorage['selectedLang'];\n\n  show(lang);\n\n  show(){x =>console.log(x)};\n\n\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SetTimeService.html":{"url":"injectables/SetTimeService.html","title":"injectable - SetTimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SetTimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/set-time.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                months\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                daySuffix\n                            \n                            \n                                setDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/set-time.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        daySuffix\n                        \n                    \n                \n            \n            \n                \n                        \n                    daySuffix(day: string, lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-time.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                day\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDate\n                        \n                    \n                \n            \n            \n                \nsetDate(time: string, lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/set-time.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                time\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        months\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    en: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    fr: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    de: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    es: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    it: [\"gennaio\", \"febbraio\", \"marzo\", \"aprile\", \"maggio\", \"giugno\", \"luglio\", \"agosto\", \"settembre\", \"ottobre\", \"novembre\", \"dicembre\"]\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/set-time.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetTimeService {\n\n  constructor() { }\n\n  private months: { [lang: string]: string[] } = {\n    en: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    fr: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    de: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    es: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    it: [\"gennaio\", \"febbraio\", \"marzo\", \"aprile\", \"maggio\", \"giugno\", \"luglio\", \"agosto\", \"settembre\", \"ottobre\", \"novembre\", \"dicembre\"]\n  };\n\n  private daySuffix(day: string, lang: string): string {\n    if (day === \"00\") return \"\";\n    if (lang === \"en\") return day === \"01\" ? \"1st\" : String(Number(day));\n    if (lang === \"fr\") return day === \"01\" ? \"1er\" : String(Number(day));\n    return String(Number(day));\n  }\n\n  setDate(time: string, lang: string): string {\n    if (!time) return \"\";\n\n    const era = time.charAt(0);\n    let date = time.substring(1);\n    let year = date.substring(0, 4).replace(/^0+/, '') || \"0\";\n    const monthNum = date.substring(5, 7);\n    const dayNum = date.substring(8, 10);\n\n    // Format day and month\n    const day = this.daySuffix(dayNum, lang);\n    const monthIdx = parseInt(monthNum, 10) - 1;\n    const month = monthNum !== \"00\" && this.months[lang]?.[monthIdx] ? this.months[lang][monthIdx] : \"\";\n\n    // Date string by language\n    let firstPart = \"\";\n    if (day && month) {\n      if (lang === \"de\") firstPart = `${day}. ${month} `;\n      else if (lang === \"es\") firstPart = `${day} de ${month} de `;\n      else firstPart = `${day} ${month} `;\n    } else if (month) {\n      firstPart = `${month} `;\n    }\n\n    let result = `${firstPart}${year}`;\n\n    // Era suffixes\n    if (era === \"-\") {\n      const suffixes = { en: \"BCE\", de: \"v. d. Z.\", fr: \"AEC\", es: \"a.e.c.\", it: \"a. C.\" };\n      result += \" \" + (suffixes[lang] || \"BCE\");\n    } else if (era === \"+\" && Number(year) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Snak.html":{"url":"interfaces/Snak.html","title":"interface - Snak","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Snak\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/details.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaces pour un typage fort\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            datatype\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            datavalue\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datatype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datatype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datavalue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datavalue:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { SetLanguageService } from './set-language.service';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n/** Interfaces pour un typage fort */\ninterface Snak {\n  property: string;\n  datatype?: string;\n  datavalue?: { value: { id: string } };\n}\n\ninterface Reference {\n  'snaks-order': string[];\n  snaks: { [key: string]: Snak[] };\n}\n\ninterface Claim {\n  mainsnak: Snak;\n  qualifiers?: { [key: string]: Snak[] };\n  'qualifiers-order'?: string[];\n  references?: Reference[];\n}\n\ninterface ClaimsObject {\n  [property: string]: Claim[];\n}\n\ninterface Entity {\n  claims: ClaimsObject;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailsService {\n  private requestService = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n\n  /**\n   * Retourne la liste unique des propriétés de référence d’une entité.\n   */\n  getReferenceProperties(u: Entity): string[] {\n    const referenceProperties = Object.values(u.claims)\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n    return this.uniq(referenceProperties);\n  }\n\n  /**\n   * Crée la liste des propriétés dans les statements, qualifiers et références.\n   * Retourne un Observable des propriétés enrichies.\n   */\n  setPropertiesList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let properties = claimsArray.flatMap(val => val.map(claim => claim.mainsnak.property));\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    properties = this.uniq([...properties, ...qualifierProperties, ...referenceProperties]);\n    const propertiesChunks = this.lessThanFifty(properties);\n\n    if (propertiesChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 propriétés)'));\n    }\n\n    const propertiesLists = propertiesChunks.map(list => this.createList(list).slice(1));\n    while (propertiesLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Crée la liste des items dans les statements, qualifiers et références.\n   * Retourne un Observable des items enrichis.\n   */\n  setItemsList(u: Entity): Observable {\n    const claimsArray = Object.values(u.claims);\n\n    let items = claimsArray.flatMap(val =>\n      val\n        .filter(claim => claim.mainsnak.datavalue?.value?.id !== undefined)\n        .map(claim => claim.mainsnak.datavalue.value.id)\n    );\n\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\n    let referenceProperties = claimsArray\n      .flatMap(val => val)\n      .flatMap(claim => claim.references ?? [])\n      .flatMap(ref => ref['snaks-order'] ?? []);\n\n    qualifierProperties = this.uniq(qualifierProperties);\n    referenceProperties = this.uniq(referenceProperties);\n\n    const qualifierItems = this.setQualifierItems(claimsArray, qualifierProperties).filter(Boolean);\n    const referenceItems = this.setReferenceItems(claimsArray, referenceProperties).filter(Boolean);\n\n    items = this.uniq([...items, ...qualifierItems, ...referenceItems]);\n    const itemsChunks = this.lessThanFifty(items);\n\n    if (itemsChunks.length > 8) {\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 items)'));\n    }\n\n    const itemsLists = itemsChunks.map(list => this.createList(list).slice(1));\n    while (itemsLists.length  this.mergeObjects(res as any[])), //  Object.values(res))\n      );\n\n  }\n\n  /**\n   * Retourne la liste unique des propriétés dans les qualifiers et références.\n   */\n  setProperties(arr: any[]): string[] {\n    return arr.flatMap(obj => Object.keys(obj));\n  }\n\n  /**\n   * Fusionne les objets contenus dans un tableau pour créer un seul objet.\n   */\n  mergeObjects(res: any[]): any {\n    // Filtrer les objets valides qui possèdent la propriété 'entities'\n    const validObjects = (res ?? []).filter(obj => obj && obj.entities);\n    let u = validObjects.length > 0 ? validObjects[0].entities : {};\n    for (const obj of validObjects.slice(1)) {\n      u = { ...u, ...obj.entities };\n    }\n    return u;\n  }\n\n\n  /**\n   * Retourne la liste des items dans les qualifiers.\n   */\n  setQualifierItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        for (const prop of arr) {\n          if (claim.qualifiers?.[prop]) {\n            for (const snak of claim.qualifiers[prop]) {\n              if (snak?.datavalue?.value?.id) {\n                result.push(snak.datavalue.value.id);\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Retourne la liste des items dans les références.\n   */\n  setReferenceItems(values: Claim[][], arr: string[]): string[] {\n    arr = arr.filter(Boolean);\n    const result: string[] = [];\n    for (const val of values) {\n      for (const claim of val) {\n        if (!claim.references) continue;\n        for (const ref of claim.references) {\n          for (const prop of arr) {\n            const snaks = ref.snaks[prop];\n            if (snaks && snaks[0]?.datatype === 'wikibase-item') {\n              for (const snak of snaks) {\n                if (snak?.datavalue?.value?.id) {\n                  result.push(snak.datavalue.value.id);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Crée une chaîne de caractères à partir d’un tableau, séparée par '|'.\n   */\n  createList(arr: string[]): string {\n    return Array.from(new Set(arr)).reduce((list, item) => list + '|' + item, '');\n  }\n\n  /**\n   * Retourne un tableau sans doublons.\n   */\n  uniq(a: T[]): T[] {\n    return Array.from(new Set(a.filter(Boolean)));\n  }\n\n  /**\n   * Découpe un tableau en sous-tableaux de 50 éléments maximum.\n   */\n  lessThanFifty(arr: T[]): T[][] {\n    const result: T[][] = [];\n    let u = arr.length;\n    let tempArr = arr.slice();\n    while (u > 0) {\n      result.push(tempArr.slice(0, 50));\n      tempArr = tempArr.slice(50);\n      u = tempArr.length;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SociabilityDisplayComponent.html":{"url":"components/SociabilityDisplayComponent.html","title":"component - SociabilityDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SociabilityDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/sociability-display/sociability-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sociability-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            MatCardModule\n                            RouterLink\n                            UnitPipe\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sociability-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sociability-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openImage\n                            \n                            \n                                toggleReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sociability\n                            \n                            \n                                sociabilityAndCulture\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sociability\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sociability-display/sociability-display.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sociabilityAndCulture\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sociability-display/sociability-display.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openImage\n                        \n                    \n                \n            \n            \n                \nopenImage(image)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sociability-display/sociability-display.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleReferences\n                        \n                    \n                \n            \n            \n                \ntoggleReferences()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sociability-display/sociability-display.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sociability-display/sociability-display.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterLink } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { UnitPipe } from '../../unit.pipe';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Component({\n  selector: 'app-sociability-display',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\n  templateUrl: './sociability-display.component.html',\n  styleUrl: './sociability-display.component.scss'\n})\nexport class SociabilityDisplayComponent {\n\n@Input() sociabilityAndCulture;\n@Input() sociability;\n\n showReferences = false; // état du volet\n\n toggleReferences() {\n    this.showReferences = !this.showReferences;\n  }\n\n openImage(image){ //handling click for picture (open in new tab) \n    window.open(image);}\n\n}\n\n    \n\n    \n        \n  {{sociability}}\n  @for (P of sociabilityAndCulture; track P) {\n  \n    \n      \n        {{P.label}}:\n      \n    \n    @for (M of P; track M) {\n    \n      \n        @if (M.mainsnak.datatype ==='time') {\n        {{M.mainsnak.datavalue.value.date}}\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\n        \n          greg.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\n        \n          jul.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        }\n        @if (M.mainsnak.datatype==='monolingualtext') {\n        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}\n        }\n        @if (M.mainsnak.datatype === 'string') {\n        {{M.mainsnak.datavalue.value }}\n        }\n        @if (M.mainsnak.datatype === 'url') {\n        \n          {{M.mainsnak.datavalue.value}}\n        \n        }\n        {{M.mainsnak.datavalue.value.amount}}\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\n        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}\n        }\n        @if (M.mainsnak.datatype==='commonsMedia') {\n        \n          \n            \n          \n        \n        }\n        @if (M.mainsnak.datatype==='wikibase-item') {\n        \n          {{M.mainsnak.label}}\n          \n            open_in_new\n          \n          &nbsp;&nbsp;&nbsp;\n        \n        {{M.mainsnak.separator}}\n        {{M.mainsnak.description}}&nbsp;\n        }\n        @if (M.rank=='deprecated') {\n         &nbsp;({{M.rank}})\n        }\n      \n      \n        @if (M['qualifiers-order']) {\n        \n          @for (Q of M.qualifiers2; track Q) {\n          \n            \n              {{Q.label}}:&nbsp;\n            \n            @for (D of Q.display; track D; let isLast = $last) {\n            \n              @if (D.datatype === 'time') {\n              \n                {{D.date}}\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\n                \n                  greg.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\n                \n                  jul.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n              \n              }\n              @if (D.datatype==='string') {\n              \n                {{D.string}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              @if (D.datatype==='monolingualtext') {\n              \n                {{D.string.text}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              {{D.amount}}\n              @if (D.unit) {\n              &nbsp;({{D.unit | unit |async}})&nbsp;\n              }\n              @if (D.datatype === 'external-id') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype === 'url') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype==='wikibase-item') {\n              \n                {{D.label}}\n                \n                  open_in_new\n                \n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\n                {{D.separator}}{{D.description}}\n              \n              }\n              @if (D.datatype==='commonsMedia') {\n              \n                \n                  \n                \n              \n              }\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n          \n          }\n        \n        }\n      \n      \n      @if (M['references2'] && M['references2'].length > 0) {\n      \n        \n        Références\n      \n      @if (showReferences && M['references2']) {\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\n      \n        @for (N of Ma; track N; let isLast = $last) {\n        \n          \n            {{N.label}}:\n          \n          \n            @for (P of N.display; track P; let isLast = $last) {\n            @if (N.datatype === 'wikibase-item') {\n            \n              {{P.label}}\n              \n                open_in_new\n              &nbsp;&nbsp;&nbsp;\n              {{P.separator}}{{P.description}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype==='time') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype==='string') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype === 'url') {\n            \n              {{P}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype === 'external-id') {\n            \n              {{P.value}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            }\n          \n          @if (!isLast) {\n          ,&nbsp;\n          }\n        \n        }\n      \n      }\n      }\n      }\n    \n    }\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{sociability}}  @for (P of sociabilityAndCulture; track P) {                    {{P.label}}:              @for (M of P; track M) {                  @if (M.mainsnak.datatype ===\\'time\\') {        {{M.mainsnak.datavalue.value.date}}        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {                  greg.                      open_in_new                             }        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {                  jul.                      open_in_new                             }        }        @if (M.mainsnak.datatype===\\'monolingualtext\\') {        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}        }        @if (M.mainsnak.datatype === \\'string\\') {        {{M.mainsnak.datavalue.value }}        }        @if (M.mainsnak.datatype === \\'url\\') {                  {{M.mainsnak.datavalue.value}}                }        {{M.mainsnak.datavalue.value.amount}}        @if (M.mainsnak.datatype === \\'globe-coordinate\\') {        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}        }        @if (M.mainsnak.datatype===\\'commonsMedia\\') {                                                        }        @if (M.mainsnak.datatype===\\'wikibase-item\\') {                  {{M.mainsnak.label}}                      open_in_new                                       {{M.mainsnak.separator}}        {{M.mainsnak.description}}         }        @if (M.rank==\\'deprecated\\') {          ({{M.rank}})        }                    @if (M[\\'qualifiers-order\\']) {                  @for (Q of M.qualifiers2; track Q) {                                    {{Q.label}}:                         @for (D of Q.display; track D; let isLast = $last) {                          @if (D.datatype === \\'time\\') {                              {{D.date}}                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {                                  greg.                                      open_in_new                                                     }                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {                                  jul.                                      open_in_new                                                     }                            }              @if (D.datatype===\\'string\\') {                              {{D.string}}                @if (!isLast) {                ,                 }                            }              @if (D.datatype===\\'monolingualtext\\') {                              {{D.string.text}}                @if (!isLast) {                ,                 }                            }              {{D.amount}}              @if (D.unit) {               ({{D.unit | unit |async}})               }              @if (D.datatype === \\'external-id\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype === \\'url\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype===\\'wikibase-item\\') {                              {{D.label}}                                  open_in_new                                @if(D.description){    }                {{D.separator}}{{D.description}}                            }              @if (D.datatype===\\'commonsMedia\\') {                                                                                            }                        @if (!isLast) {            ,             }            }                    }                }                  @if (M[\\'references2\\'] && M[\\'references2\\'].length > 0) {                      Références            @if (showReferences && M[\\'references2\\']) {      @for (Ma of M[\\'references2\\']; track Ma; let isLast = $last) {              @for (N of Ma; track N; let isLast = $last) {                              {{N.label}}:                                @for (P of N.display; track P; let isLast = $last) {            @if (N.datatype === \\'wikibase-item\\') {                          {{P.label}}                              open_in_new                               {{P.separator}}{{P.description}}                        @if (!isLast) {            ,             }            }            @if (N.datatype===\\'time\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype===\\'string\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype === \\'url\\') {                          {{P}}                        @if (!isLast) {            ,             }            }            @if (N.datatype === \\'external-id\\') {                          {{P.value}}                        @if (!isLast) {            ,             }            }            }                    @if (!isLast) {          ,           }                }            }      }      }        }    }'\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SociabilityDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SortingDataAccessorService.html":{"url":"injectables/SortingDataAccessorService.html","title":"injectable - SortingDataAccessorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SortingDataAccessorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/sorting-data-accessor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sortingData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/sorting-data-accessor.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sortingData\n                        \n                    \n                \n            \n            \n                \nsortingData(data: any, sortHeaderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sorting-data-accessor.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sortHeaderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { nestedProperty: (data: any, sortHeaderId: string) => string | number; caseInsensitive: (data: any, sortHeaderId: string) => string | number; nestedCaseInsensitive: (data: any, sortHeaderId: string) => string | number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SortingDataAccessorService {\n\n  constructor() { }\n\nsortingData(data: any, sortHeaderId: string){\n\nconst nestedProperty = (data: any, sortHeaderId: string): string | number => { \nreturn sortHeaderId\n    .split('.')\n    .reduce((accumulator, key) => accumulator && accumulator[key], data) as\n    | string\n    | number;\n};\n\n// this is needed to have caseInsensitive sorting\nconst caseInsensitive = (data: any, sortHeaderId: string): string | number => {\n  const value = data[sortHeaderId];\n  return typeof value === 'string' ? value.toUpperCase() : value;\n};\n\nconst nestedCaseInsensitive = (\n  data: any,\n  sortHeaderId: string\n): string | number => {\n  const value = sortHeaderId\n    .split('.')\n    .reduce((accumulator, key) => accumulator && accumulator[key], data) as\n    | string\n    | number;\n  return typeof value === 'string' ? value.toUpperCase() : value;\n};\n\n// ... other sorting data accessors\n\nconst sortingDataAccessor = {\n  nestedProperty,\n  caseInsensitive,\n  nestedCaseInsensitive,\n};\n\nreturn sortingDataAccessor;\n\n\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SourcesDisplayComponent.html":{"url":"components/SourcesDisplayComponent.html","title":"component - SourcesDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SourcesDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/sources-display/sources-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sources-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            MatCardModule\n                            RouterLink\n                            UnitPipe\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sources-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sources-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOninit\n                            \n                            \n                                openImage\n                            \n                            \n                                toggleReferences\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sources\n                            \n                            \n                                sourcesList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sources-display/sources-display.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sourcesList\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sources-display/sources-display.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOninit\n                        \n                    \n                \n            \n            \n                \nngOninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sources-display/sources-display.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openImage\n                        \n                    \n                \n            \n            \n                \nopenImage(image)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sources-display/sources-display.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleReferences\n                        \n                    \n                \n            \n            \n                \ntoggleReferences()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sources-display/sources-display.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sources-display/sources-display.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterLink } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { UnitPipe } from '../../unit.pipe';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Component({\n  selector: 'app-sources-display',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\n  templateUrl: './sources-display.component.html',\n  styleUrl: './sources-display.component.scss'\n})\n\nexport class SourcesDisplayComponent {\n\n@Input() sourcesList ;\n  @Input() sources;\n\n  ngOninit() {\n    console.log('Sources List:', this.sourcesList);\n  }\n\n  showReferences = false; // état du volet\n\n  toggleReferences() {\n    this.showReferences = !this.showReferences;\n  }\n\n openImage(image){ //handling click for picture (open in new tab) \n    window.open(image);}\n\n}\n\n    \n\n    \n        \n  {{sources}}\n  @for (P of sourcesList; track P) {\n  \n    \n      \n        {{P.label}}:\n      \n    \n    @for (M of P; track M) {\n    \n      \n        @if (M.mainsnak.datatype ==='time') {\n        {{M.mainsnak.datavalue.value.date}}\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\n        \n          greg.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\n        \n          jul.\n          \n            open_in_new\n          &nbsp;&nbsp;&nbsp;\n        \n        }\n        }\n        @if (M.mainsnak.datatype==='monolingualtext') {\n        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}\n        }\n        @if (M.mainsnak.datatype === 'string') {\n        {{M.mainsnak.datavalue.value }}\n        }\n        @if (M.mainsnak.datatype === 'url') {\n        \n          {{M.mainsnak.datavalue.value}}\n        \n        }\n        {{M.mainsnak.datavalue.value.amount}}\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\n        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}\n        }\n        @if (M.mainsnak.datatype==='commonsMedia') {\n        \n          \n            \n          \n        \n        }\n        @if (M.mainsnak.datatype==='wikibase-item') {\n        \n          {{M.mainsnak.label}}\n          \n            open_in_new\n          \n          &nbsp;&nbsp;&nbsp;\n        \n        {{M.mainsnak.separator}}\n        {{M.mainsnak.description}}&nbsp;\n        }\n        @if (M.rank=='deprecated') {\n         &nbsp;({{M.rank}})\n        }\n      \n      \n        @if (M['qualifiers-order']) {\n        \n          @for (Q of M.qualifiers2; track Q) {\n          \n            \n              {{Q.label}}:&nbsp;\n            \n            @for (D of Q.display; track D; let isLast = $last) {\n            \n              @if (D.datatype === 'time') {\n              \n                {{D.date}}\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\n                \n                  greg.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\n                \n                  jul.\n                  \n                    open_in_new\n                  &nbsp;&nbsp;&nbsp;\n                \n                }\n              \n              }\n              @if (D.datatype==='string') {\n              \n                {{D.string}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              @if (D.datatype==='monolingualtext') {\n              \n                {{D.string.text}}\n                @if (!isLast) {\n                ,&nbsp;\n                }\n              \n              }\n              {{D.amount}}\n              @if (D.unit) {\n              &nbsp;({{D.unit | unit |async}})&nbsp;\n              }\n              @if (D.datatype === 'external-id') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype === 'url') {\n              \n                {{D.string}}\n              \n              @if (!isLast) {\n              ,&nbsp;\n              }\n              }\n              @if (D.datatype==='wikibase-item') {\n              \n                {{D.label}}\n                \n                  open_in_new\n                \n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\n                {{D.separator}}{{D.description}}\n              \n              }\n              @if (D.datatype==='commonsMedia') {\n              \n                \n                  \n                \n              \n              }\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n          \n          }\n        \n        }\n      \n      \n      @if (M['references2'] && M['references2'].length > 0) {\n      \n        \n        Références\n      \n      @if (showReferences && M['references2']) {\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\n      \n        @for (N of Ma; track N; let isLast = $last) {\n        \n          \n            {{N.label}}:\n          \n          \n            @for (P of N.display; track P; let isLast = $last) {\n            @if (N.datatype === 'wikibase-item') {\n            \n              {{P.label}}\n              \n                open_in_new\n              &nbsp;&nbsp;&nbsp;\n              {{P.separator}}{{P.description}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype==='time') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype==='string') {\n            \n              {{P}}\n              @if (!isLast) {\n              ,&nbsp;\n              }\n            \n            }\n            @if (N.datatype === 'url') {\n            \n              {{P}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            @if (N.datatype === 'external-id') {\n            \n              {{P.value}}\n            \n            @if (!isLast) {\n            ,&nbsp;\n            }\n            }\n            }\n          \n          @if (!isLast) {\n          ,&nbsp;\n          }\n        \n        }\n      \n      }\n      }\n      }\n    \n    }\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{sources}}  @for (P of sourcesList; track P) {                    {{P.label}}:              @for (M of P; track M) {                  @if (M.mainsnak.datatype ===\\'time\\') {        {{M.mainsnak.datavalue.value.date}}        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {                  greg.                      open_in_new                             }        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {                  jul.                      open_in_new                             }        }        @if (M.mainsnak.datatype===\\'monolingualtext\\') {        {{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}        }        @if (M.mainsnak.datatype === \\'string\\') {        {{M.mainsnak.datavalue.value }}        }        @if (M.mainsnak.datatype === \\'url\\') {                  {{M.mainsnak.datavalue.value}}                }        {{M.mainsnak.datavalue.value.amount}}        @if (M.mainsnak.datatype === \\'globe-coordinate\\') {        latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}        }        @if (M.mainsnak.datatype===\\'commonsMedia\\') {                                                        }        @if (M.mainsnak.datatype===\\'wikibase-item\\') {                  {{M.mainsnak.label}}                      open_in_new                                       {{M.mainsnak.separator}}        {{M.mainsnak.description}}         }        @if (M.rank==\\'deprecated\\') {          ({{M.rank}})        }                    @if (M[\\'qualifiers-order\\']) {                  @for (Q of M.qualifiers2; track Q) {                                    {{Q.label}}:                         @for (D of Q.display; track D; let isLast = $last) {                          @if (D.datatype === \\'time\\') {                              {{D.date}}                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {                                  greg.                                      open_in_new                                                     }                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {                                  jul.                                      open_in_new                                                     }                            }              @if (D.datatype===\\'string\\') {                              {{D.string}}                @if (!isLast) {                ,                 }                            }              @if (D.datatype===\\'monolingualtext\\') {                              {{D.string.text}}                @if (!isLast) {                ,                 }                            }              {{D.amount}}              @if (D.unit) {               ({{D.unit | unit |async}})               }              @if (D.datatype === \\'external-id\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype === \\'url\\') {                              {{D.string}}                            @if (!isLast) {              ,               }              }              @if (D.datatype===\\'wikibase-item\\') {                              {{D.label}}                                  open_in_new                                @if(D.description){    }                {{D.separator}}{{D.description}}                            }              @if (D.datatype===\\'commonsMedia\\') {                                                                                            }                        @if (!isLast) {            ,             }            }                    }                }                  @if (M[\\'references2\\'] && M[\\'references2\\'].length > 0) {                      Références            @if (showReferences && M[\\'references2\\']) {      @for (Ma of M[\\'references2\\']; track Ma; let isLast = $last) {              @for (N of Ma; track N; let isLast = $last) {                              {{N.label}}:                                @for (P of N.display; track P; let isLast = $last) {            @if (N.datatype === \\'wikibase-item\\') {                          {{P.label}}                              open_in_new                               {{P.separator}}{{P.description}}                        @if (!isLast) {            ,             }            }            @if (N.datatype===\\'time\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype===\\'string\\') {                          {{P}}              @if (!isLast) {              ,               }                        }            @if (N.datatype === \\'url\\') {                          {{P}}                        @if (!isLast) {            ,             }            }            @if (N.datatype === \\'external-id\\') {                          {{P.value}}                        @if (!isLast) {            ,             }            }            }                    @if (!isLast) {          ,           }                }            }      }      }        }    }'\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SourcesDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Sparql0DisplayComponent.html":{"url":"components/Sparql0DisplayComponent.html","title":"component - Sparql0DisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Sparql0DisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/sparql0-display/sparql0-display.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sparql0-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            NgClass\n                            NgFor\n                            NgIf\n                            RouterLink\n                            MatIconModule\n                            MatFormFieldModule\n                            MatInputModule\n                            FormsModule\n                            MatButtonModule\n                \n            \n\n            \n                styleUrls\n                sparql0-display.component.scss\n            \n\n\n\n            \n                templateUrl\n                sparql0-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                csv\n                            \n                            \n                                instancesListTitle_50\n                            \n                            \n                                isList\n                            \n                            \n                                isSearch\n                            \n                            \n                                isWorks\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                list\n                            \n                            \n                                listWithoutDuplicate\n                            \n                            \n                                query\n                            \n                            \n                                subclassesListTitle\n                            \n                            \n                                subTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                databaseToDownload\n                            \n                            \n                                filterItem\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sparqlData\n                            \n                            \n                                sparqlSubject\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sparqlData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql0-display/sparql0-display.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sparqlSubject\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql0-display/sparql0-display.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql0-display/sparql0-display.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseToDownload\n                        \n                    \n                \n            \n            \n                \ndatabaseToDownload(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql0-display/sparql0-display.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterItem\n                        \n                    \n                \n            \n            \n                \nfilterItem(arr: any[], query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql0-display/sparql0-display.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql0-display/sparql0-display.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql0-display/sparql0-display.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql0-display/sparql0-display.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ArrayToCsvService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        instancesListTitle_50\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Instances (limit: 50):\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isWorks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listWithoutDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subclassesListTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Subclasses:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql0-display/sparql0-display.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button'\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { RouterLink } from '@angular/router';\nimport { NgClass, NgFor, NgIf } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { SelectedLangService } from '../../selected-lang.service';\nimport { ArrayToCsvService} from '../../services/array-to-csv.service';\n\n\n@Component({\n    selector: 'app-sparql0-display',\n    templateUrl: 'sparql0-display.component.html',\n    styleUrls: ['sparql0-display.component.scss'],\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    imports: [MatCardModule, NgClass, NgFor, NgIf, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, FormsModule, MatButtonModule]\n})\nexport class Sparql0DisplayComponent implements OnChanges, OnDestroy {\n  private lang = inject(SelectedLangService);\n  private csv = inject(ArrayToCsvService);\n\n \n  @Input() sparqlSubject;\n  @Input() sparqlData;\n\n  list:any[] = [];\n  isList:boolean = false;\n  isSearch:boolean = false;\n  subTitle:string = \"\";\n  instancesListTitle_50 = \"Instances (limit: 50):\";\n  subclassesListTitle = \"Subclasses:\";\n  isWorks:boolean=false ;\n  query:string;\n  listWithoutDuplicate:any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n   this.query = \"\";\n   this.isWorks = false;\n   this.isList = false;\n   this.isSearch = false;\n\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\n      if (this.sparqlData[0] !== undefined) { this.isList = true };\n       changes.sparqlData.currentValue.forEach( function (el) {\n         if(el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\n         else el.itemText = el.itemLabel.value + el.itemDescription.value\n       })\n\n      this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \n\n      this.list=this.listWithoutDuplicate;\n\n      if(this.list.length > 15) this.isSearch = true;\n     \n    } \n  \n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\n      this.subTitle = this.sparqlSubject;\n          \n      if (this.subTitle == \"Q945280\" || this.subTitle ==\"Q960698\"){  //FactGrid superclass\n      this.isWorks=true; \n      this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n      }\n     \n                 else {\n                      this.subTitle = \"\";\n                      this.list =[]; }\n                      }\n          \n  }\n\n  applyFilter(event) {\n    this.query = event.target.value.trim().toLowerCase();\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query)   ;\n    }\n\n  filterItem(arr:any[], query) { \n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\n    }\n\n   onClick(query){ //handling click for downlooding the filtered data\n      let u= query;\n       u = this.databaseToDownload(query);\n      let v= this.csv.arrayToCsv(u);\n       this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\n    }\n\n\n   databaseToDownload(data){\n      let dataToDownload:any[][] = [ [\"item.id\",\"item.label\",\"item.description\"] ];\n      for (let i=0; i\n    \n\n    \n        \n  \n    \n\n      \n        {{subTitle}}\n      \n\n      @if(isSearch === true) {\n      \n        \n          \n        \n        \n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\n        \n      \n      }\n\n      @for (L of list; track L) {\n\n      \n\n        @if (L.itemLabel) {\n        \n\n          {{L.itemLabel.value}}\n          open_in_new&nbsp;&nbsp;&nbsp;\n          @if (L.itemDescription) {\n          , {{L.itemDescription.value}}\n          }\n          @if (L.year) {\n          , {{L.year.value}}\n          }\n        \n        }\n      \n      \n      }\n\n      \n        download\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n    \n  \n \n\n\n    \n\n    \n                \n                    sparql0-display.component.scss\n                \n                .property2 {\n    color:#3F51B5;\n    font-weight:550;\n  }\n\n.hide-division {\n    display: none;\n    }\n  \n.show-division {\n    display: block;\n    }\n\n.sparql-div {\n  display: flex;\n  flex-flow: column wrap;\n  .sparql-div> *:not(:last-child) {\n    margin-bottom: 2px;\n   }\n  }\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{subTitle}}            @if(isSearch === true) {                                                     {{this.list.length}}                    }      @for (L of list; track L) {              @if (L.itemLabel) {                  {{L.itemLabel.value}}          open_in_new             @if (L.itemDescription) {          , {{L.itemDescription.value}}          }          @if (L.year) {          , {{L.year.value}}          }                }                  }              download                   '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Sparql0DisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Sparql1DisplayComponent.html":{"url":"components/Sparql1DisplayComponent.html","title":"component - Sparql1DisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Sparql1DisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/sparql1-display/sparql1-display.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sparql1-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            NgClass\n                            NgFor\n                            NgIf\n                            RouterLink\n                            MatIconModule\n                            MatFormFieldModule\n                            MatInputModule\n                            FormsModule\n                            MatButtonModule\n                \n            \n\n            \n                styleUrls\n                sparql1-display.component.scss\n            \n\n\n\n            \n                templateUrl\n                sparql1-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activityTitle\n                            \n                            \n                                addressTitle\n                            \n                            \n                                buildingTitle\n                            \n                            \n                                contextTitle\n                            \n                            \n                                    Private\n                                csv\n                            \n                            \n                                familyNameTitle\n                            \n                            \n                                instancesListTitle_50\n                            \n                            \n                                isList\n                            \n                            \n                                isSearch\n                            \n                            \n                                isWorks\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                list\n                            \n                            \n                                listTitle\n                            \n                            \n                                listWithoutDuplicate\n                            \n                            \n                                organisationTitle\n                            \n                            \n                                pupilTitle\n                            \n                            \n                                query\n                            \n                            \n                                subclassesListTitle\n                            \n                            \n                                subTitle\n                            \n                            \n                                workTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                databaseToDownload\n                            \n                            \n                                filterItem\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sparqlData\n                            \n                            \n                                sparqlSubject\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sparqlData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql1-display/sparql1-display.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sparqlSubject\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql1-display/sparql1-display.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql1-display/sparql1-display.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseToDownload\n                        \n                    \n                \n            \n            \n                \ndatabaseToDownload(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql1-display/sparql1-display.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterItem\n                        \n                    \n                \n            \n            \n                \nfilterItem(arr: any[], query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql1-display/sparql1-display.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql1-display/sparql1-display.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql1-display/sparql1-display.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql1-display/sparql1-display.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activityTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"With this activity:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addressTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Domiciled at this address:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildingTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Buildings and monuments:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contextTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Present in this context:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ArrayToCsvService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        familyNameTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bearing this family name:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        instancesListTitle_50\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Instances (limit: 50):\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isWorks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"List\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listWithoutDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organisationTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Members:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pupilTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Pupils and disciples\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subclassesListTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Subclasses:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Works\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql1-display/sparql1-display.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { RouterLink } from '@angular/router';\nimport { NgClass, NgFor, NgIf } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { SelectedLangService } from '../../selected-lang.service';\nimport { ArrayToCsvService } from '../../services/array-to-csv.service';\n\n\n@Component({\n  selector: 'app-sparql1-display',\n  templateUrl: 'sparql1-display.component.html',\n  styleUrls: ['sparql1-display.component.scss'],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatCardModule, NgClass, NgFor, NgIf, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, FormsModule, MatButtonModule]\n})\nexport class Sparql1DisplayComponent implements OnChanges, OnDestroy {\n  private lang = inject(SelectedLangService);\n  private csv = inject(ArrayToCsvService);\n\n\n  @Input() sparqlSubject;\n  @Input() sparqlData;\n\n  list: any[] = [];\n  isList: boolean = false;\n  isSearch: boolean = false;\n  subTitle: string = \"\";\n  instancesListTitle_50 = \"Instances (limit: 50):\";\n  subclassesListTitle = \"Subclasses:\";\n  isWorks: boolean = false;\n  buildingTitle: string = \"Buildings and monuments:\";\n  familyNameTitle: string = \"Bearing this family name:\";\n  contextTitle: string = \"Present in this context:\";\n  organisationTitle: string = \"Members:\";\n  activityTitle: string = \"With this activity:\";\n  addressTitle: string = \"Domiciled at this address:\";\n  workTitle: string = \"Works\";\n  pupilTitle: string = \"Pupils and disciples\";\n  listTitle: string = \"List\";\n  query: string;\n  listWithoutDuplicate: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    this.query = \"\";\n    this.isWorks = false;\n    this.isList = false;\n\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\n      if (this.sparqlData[0] !== undefined) { this.isList = true };\n      changes.sparqlData.currentValue.forEach(function (el) {\n        if (el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\n        else el.itemText = el.itemLabel.value + el.itemDescription.value\n      })\n\n      this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \n\n      this.list = this.listWithoutDuplicate;\n\n      if (this.list.length > 15) this.isSearch = true;\n\n    }\n\n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\n      this.subTitle = this.sparqlSubject;\n\n      if (this.subTitle == \"Q8\") {  //location\n        this.isWorks = true;\n        this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n      }\n      else {\n        if (this.subTitle == \"Q24499\") { //family name\n          this.isWorks = false;\n          this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n        }\n        else {\n          if (this.subTitle == \"Q12\") { //organisation\n            this.isWorks = false;\n            if (this.list[0] && this.list[0].activity) {  // people active in this organisation\n              this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n            }\n            else {   //people members of this organisation\n              this.isWorks = true;\n              this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n            }\n          }\n          else {\n            if (this.subTitle == \"Q37073\") { //activity\n              this.isWorks = true;\n              this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n            }\n            else {\n              if (this.subTitle == \"Q16200\") {  //address\n                this.isWorks = true;\n                this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n              }\n              else {\n                if (this.subTitle == \"Q456376\") { //author\n                  this.isWorks = true;\n                  this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n                }\n                else {\n                  if (this.subTitle = \"Q172192\") { //list\n                    this.isWorks = true;\n                    this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n                  }\n                  else {\n                    this.subTitle = \"\";\n                    this.list = [];\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  applyFilter(event) {\n    this.query = event.target.value.trim().toLowerCase();\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query);\n  }\n\n  filterItem(arr: any[], query) {\n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\n  }\n\n  onClick(query) { //handling click for downlooding the filtered data\n    let u = query;\n    u = this.databaseToDownload(query);\n    let v = this.csv.arrayToCsv(u);\n    this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\n  }\n\n\n  databaseToDownload(data) {\n    let dataToDownload: any[][] = [[\"item.id\", \"item.label\", \"item.description\"]];\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n\n      \n        {{subTitle}}\n      \n\n     @if(isSearch === true) {\n      \n        \n          \n        \n        \n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\n        \n      \n      }\n      \n     @for (L of list; track L.item) {\n      .\n        {{L}}   -->\n        @if (L.itemLabel) {\n        \n         @if (L.item.entity === \"property\") {\n          \n            \n              {{L.item.id}}\n              : {{L.itemLabel.value}}\n           \n            @if (L.itemDescription) {\n            , {{L.itemDescription.value}}\n            }\n        }\n         @else {\n            {{L.itemLabel.value}}\n            open_in_new&nbsp;&nbsp;&nbsp;\n            @if (L.itemDescription) {\n            , {{L.itemDescription.value}}\n            }\n            @if (L.year) {\n            , {{L.year.value}}\n            }\n            }\n        \n     }\n        \n    \n     }\n      \n        \n          download\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      \n    \n  \n\n\n    \n\n    \n                \n                    sparql1-display.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{subTitle}}           @if(isSearch === true) {                                                     {{this.list.length}}                    }           @for (L of list; track L.item) {      .        {{L}}   -->        @if (L.itemLabel) {                 @if (L.item.entity === \"property\") {                                    {{L.item.id}}              : {{L.itemLabel.value}}                       @if (L.itemDescription) {            , {{L.itemDescription.value}}            }        }         @else {            {{L.itemLabel.value}}            open_in_new               @if (L.itemDescription) {            , {{L.itemDescription.value}}            }            @if (L.year) {            , {{L.year.value}}            }            }             }                 }                        download                          '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Sparql1DisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Sparql2DisplayComponent.html":{"url":"components/Sparql2DisplayComponent.html","title":"component - Sparql2DisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Sparql2DisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/sparql2-display/sparql2-display.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sparql2-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            NgClass\n                            NgFor\n                            NgIf\n                            RouterLink\n                            MatIconModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sparql2-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sparql2-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                csv\n                            \n                            \n                                isList\n                            \n                            \n                                isSearch\n                            \n                            \n                                isWorks\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                list\n                            \n                            \n                                listTitle\n                            \n                            \n                                listWithoutDuplicate\n                            \n                            \n                                patientsTitle\n                            \n                            \n                                query\n                            \n                            \n                                subTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                databaseToDownload\n                            \n                            \n                                filterItem\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sparqlData\n                            \n                            \n                                sparqlSubject\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sparqlData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql2-display/sparql2-display.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sparqlSubject\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql2-display/sparql2-display.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql2-display/sparql2-display.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseToDownload\n                        \n                    \n                \n            \n            \n                \ndatabaseToDownload(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql2-display/sparql2-display.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterItem\n                        \n                    \n                \n            \n            \n                \nfilterItem(arr: any[], query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql2-display/sparql2-display.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql2-display/sparql2-display.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql2-display/sparql2-display.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql2-display/sparql2-display.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ArrayToCsvService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isWorks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"List\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listWithoutDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patientsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Patients\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql2-display/sparql2-display.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button'\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { RouterLink } from '@angular/router';\nimport { NgClass, NgFor, NgIf } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { SelectedLangService } from '../../selected-lang.service';\nimport { ArrayToCsvService } from '../../services/array-to-csv.service';\n\n\n@Component({\n  selector: 'app-sparql2-display',\n  standalone: true,\n  imports: [MatCardModule, NgClass, NgFor, NgIf, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, MatButtonModule, FormsModule],\n  templateUrl: './sparql2-display.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrl: './sparql2-display.component.scss'\n})\nexport class Sparql2DisplayComponent implements OnChanges, OnDestroy {\n  private lang = inject(SelectedLangService);\n  private csv = inject(ArrayToCsvService);\n\n\n  @Input() sparqlSubject;\n  @Input() sparqlData;\n\n  list: any[] = [];\n  isList: boolean = false;\n  isSearch: boolean = false;\n  subTitle: string = \"\";\n  isWorks: boolean = false;\n  patientsTitle: string = \"Patients\";\n  listTitle: string = \"List\";\n  query: string;\n  listWithoutDuplicate: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    this.query = \"\";\n    this.isWorks = false;\n    this.isList = false;\n    this.isSearch = false;\n\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\n      if (this.sparqlData[0] !== undefined) { this.isList = true };\n\n      changes.sparqlData.currentValue.forEach(function (el) {\n        if (el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\n        else el.itemText = el.itemLabel.value + el.itemDescription.value\n      })\n\n      this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \n\n      this.list = this.listWithoutDuplicate;\n\n      if (this.list.length > 15) this.isSearch = true;\n\n    }\n\n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\n      this.subTitle = this.sparqlSubject;\n\n      if (this.subTitle == \"Q140759\") {  //patients\n        this.isWorks = true;\n        this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n      }\n      else {\n        this.subTitle = \"\";\n        this.list = [];\n      }\n    }\n  }\n\n  applyFilter(event) {\n    this.query = event.target.value.trim().toLowerCase();\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query);\n  }\n\n  filterItem(arr: any[], query) {\n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\n  }\n\n  onClick(query) { //handling click for downlooding the filtered data\n    let u = query;\n    u = this.databaseToDownload(query);\n    let v = this.csv.arrayToCsv(u);\n    this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\n  }\n\n  databaseToDownload(data) {\n    let dataToDownload: any[][] = [[\"item.id\", \"item.label\", \"item.description\"]];\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n      {{subTitle}}\n\n\n      @if(isSearch === true){\n      \n        \n          \n        \n        \n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\n        \n      \n      }\n\n      @for (L of list; track L) {\n        \n          @if (L.itemLabel.value) {\n          \n            {{L.itemLabel.value}}\n            open_in_new&nbsp;&nbsp;&nbsp;\n            @if (L.itemDescription) {\n            , {{L.itemDescription.value}}\n            }\n            @if (L.year) {\n            , {{L.year.value}}\n            }\n\n          \n          }\n        \n      \n      }\n      \n        \n          download\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{subTitle}}      @if(isSearch === true){                                                     {{this.list.length}}                    }      @for (L of list; track L) {                  @if (L.itemLabel.value) {                      {{L.itemLabel.value}}            open_in_new               @if (L.itemDescription) {            , {{L.itemDescription.value}}            }            @if (L.year) {            , {{L.year.value}}            }                    }                    }                        download                          '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Sparql2DisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Sparql3DisplayComponent.html":{"url":"components/Sparql3DisplayComponent.html","title":"component - Sparql3DisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Sparql3DisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/sparql3-display/sparql3-display.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sparql3-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            NgClass\n                            RouterLink\n                            MatIconModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sparql3-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sparql3-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                csv\n                            \n                            \n                                currentAddress\n                            \n                            \n                                isList\n                            \n                            \n                                isSearch\n                            \n                            \n                                isWorks\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                list\n                            \n                            \n                                listTitle\n                            \n                            \n                                listWithoutDuplicate\n                            \n                            \n                                pupilTitle\n                            \n                            \n                                query\n                            \n                            \n                                setTitle\n                            \n                            \n                                sparqlData\n                            \n                            \n                                sparqlSubject\n                            \n                            \n                                subTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                databaseToDownload\n                            \n                            \n                                filterItem\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sparqlData\n                            \n                            \n                                sparqlSubject\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sparqlData\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql3-display/sparql3-display.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sparqlSubject\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql3-display/sparql3-display.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql3-display/sparql3-display.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseToDownload\n                        \n                    \n                \n            \n            \n                \ndatabaseToDownload(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql3-display/sparql3-display.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterItem\n                        \n                    \n                \n            \n            \n                \nfilterItem(arr: any[], query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql3-display/sparql3-display.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql3-display/sparql3-display.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql3-display/sparql3-display.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql3-display/sparql3-display.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ArrayToCsvService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Current address\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isWorks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"List\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listWithoutDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pupilTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Pupils and disciples\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Include:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparqlData\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparqlSubject\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql3-display/sparql3-display.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject, input } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { RouterLink } from '@angular/router';\nimport { NgClass } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { SelectedLangService } from '../../selected-lang.service';\nimport { ArrayToCsvService } from '../../services/array-to-csv.service';\n\n\n\n@Component({\n   selector: 'app-sparql3-display',\n   standalone: true,\n    imports: [MatCardModule, NgClass, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, MatButtonModule, FormsModule],\n    templateUrl: './sparql3-display.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrl: './sparql3-display.component.scss'\n})\nexport class Sparql3DisplayComponent implements OnChanges, OnDestroy {\n  private lang = inject(SelectedLangService);\n  private csv = inject(ArrayToCsvService);\n\n  sparqlSubject = input();\n  sparqlData = input();\n\n  list: any[] = [];\n  isList: boolean = false;\n  isSearch: boolean = false;\n  subTitle: string = \"\";\n  isWorks: boolean = false;\n  pupilTitle: string = \"Pupils and disciples\";\n  currentAddress: string = \"Current address\";\n  listTitle: string = \"List\";\n  setTitle: string = \"Include:\";\n  query: string;\n  listWithoutDuplicate: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    this.query = \"\";\n    this.isWorks = false;\n    this.isList = false;\n    this.isSearch = false;\n\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\n\n      if (this.sparqlData()[0] !== undefined) { this.isList = true };\n\n        changes.sparqlData.currentValue.forEach(function (el) {\n          if (el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\n          else el.itemText = el.itemLabel.value + el.itemDescription.value\n        })\n\n        this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \n\n        this.list = this.listWithoutDuplicate;\n       \n      if (this.list.length > 15) this.isSearch = true\n\n    }\n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\n      this.subTitle = this.sparqlSubject();\n      console.log(this.subTitle);\n\n      if (this.subTitle == \"master\") {  //pupils and disciples\n        this.isWorks = true;\n        this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n      } else {\n        if (this.subTitle == \"Q945258\") { //set\n          this.isWorks = true;\n          this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n        } else {\n          if (this.subTitle == \"Q172192\") { //list\n            this.isWorks = true;\n            this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n          } else {\n            if (this.subTitle == \"current address:\") { //current address\n              this.isWorks = false;\n              this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n              console.log(this.subTitle);\n            }\n            else {\n            this.subTitle = \"\";\n            this.list = [];\n          }\n         }\n        }\n       }\n     }\n    \n  }\n\n  applyFilter(event) {\n    this.query = event.target.value.trim().toLowerCase();\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query);\n  }\n\n  filterItem(arr: any[], query) {\n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\n  }\n\n  onClick(query) { //handling click for downlooding the filtered data\n    let u = query;\n    u = this.databaseToDownload(query);\n    let v = this.csv.arrayToCsv(u);\n    this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\n  }\n\n  databaseToDownload(data) {\n    let dataToDownload: any[][] = [[\"item.id\", \"item.label\", \"item.description\"]];\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n      {{subTitle}}\n\n      @if(isSearch === true) {\n     \n        \n          \n        \n        \n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\n        \n      \n      }\n     \n      @for (L of list; track L) {\n        \n          @if (L.itemLabel.value) {\n          \n            {{L.itemLabel.value}}\n            open_in_new&nbsp;&nbsp;&nbsp;\n            @if (L.itemDescription) {\n            , {{L.itemDescription.value}}\n            }\n            @if (L.year) {\n            , {{L.year.value}}\n            }\n\n          \n          }\n        \n      \n      }\n      \n        \n          download\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{subTitle}}      @if(isSearch === true) {                                                    {{this.list.length}}                    }           @for (L of list; track L) {                  @if (L.itemLabel.value) {                      {{L.itemLabel.value}}            open_in_new               @if (L.itemDescription) {            , {{L.itemDescription.value}}            }            @if (L.year) {            , {{L.year.value}}            }                    }                    }                        download                          '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Sparql3DisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Sparql4DisplayComponent.html":{"url":"components/Sparql4DisplayComponent.html","title":"component - Sparql4DisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Sparql4DisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/sparql4-display/sparql4-display.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sparql4-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            NgClass\n                            RouterLink\n                            MatIconModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sparql4-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sparql4-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buildingTitle\n                            \n                            \n                                    Private\n                                csv\n                            \n                            \n                                isList\n                            \n                            \n                                isSearch\n                            \n                            \n                                isWorks\n                            \n                            \n                                    Private\n                                lang\n                            \n                            \n                                list\n                            \n                            \n                                listTitle\n                            \n                            \n                                listWithoutDuplicate\n                            \n                            \n                                query\n                            \n                            \n                                sparqlData\n                            \n                            \n                                sparqlSubject\n                            \n                            \n                                subTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                databaseToDownload\n                            \n                            \n                                filterItem\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sparqlData\n                            \n                            \n                                sparqlSubject\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sparqlData\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql4-display/sparql4-display.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sparqlSubject\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/sparql4-display/sparql4-display.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql4-display/sparql4-display.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseToDownload\n                        \n                    \n                \n            \n            \n                \ndatabaseToDownload(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql4-display/sparql4-display.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterItem\n                        \n                    \n                \n            \n            \n                \nfilterItem(arr: any[], query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql4-display/sparql4-display.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql4-display/sparql4-display.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql4-display/sparql4-display.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(query)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/sparql4-display/sparql4-display.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buildingTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Buildings and monuments:\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ArrayToCsvService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isWorks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SelectedLangService)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"List\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listWithoutDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparqlData\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sparqlSubject\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/sparql4-display/sparql4-display.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject, input } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button'\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { RouterLink } from '@angular/router';\nimport { NgClass } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { SelectedLangService } from '../../selected-lang.service';\nimport { ArrayToCsvService } from '../../services/array-to-csv.service';\n\n\n@Component({\n  selector: 'app-sparql4-display',\n  standalone: true,\n    imports: [MatCardModule, NgClass, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, MatButtonModule, FormsModule],\n    templateUrl: './sparql4-display.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrl: './sparql4-display.component.scss'\n})\nexport class Sparql4DisplayComponent implements OnChanges, OnDestroy {\n  private lang = inject(SelectedLangService);\n  private csv = inject(ArrayToCsvService);\n\n\n  sparqlSubject = input();\n  sparqlData = input();\n\n  list: any[] = [];\n  isList: boolean = false;\n  isSearch: boolean = false;\n  subTitle: string = \"\";\n  isWorks: boolean = false;\n  buildingTitle: string = \"Buildings and monuments:\";\n  query: string;\n  listWithoutDuplicate: any[];\n  listTitle: string = \"List\";\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    this.query = \"\";\n    this.isWorks = false;\n    this.isList = false;\n    this.isSearch = false;\n\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\n      if (this.sparqlData()[0] !== undefined) { this.isList = true; console.log(this.sparqlData())};\n\n      changes.sparqlData.currentValue.forEach(function (el) {\n        if (el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\n        else el.itemText = el.itemLabel.value + el.itemDescription.value\n      })\n\n      this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \n\n      this.list = this.listWithoutDuplicate;\n\n      if (this.list.length > 15) this.isSearch = true;\n\n    }\n\n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\n      this.subTitle = this.sparqlSubject();\n\n\n      if (this.subTitle == \"Q8\") {  //location\n        this.isWorks = true;\n        this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n      }\n      else {\n\n        if (this.subTitle == \"GOV\") {  //GOV\n          this.isWorks = true;\n          //      this.subTitle = this.lang.buildingTitle(this.buildingTitle\n          this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\n        }\n\n        else {\n          this.subTitle = \"\";\n          this.list = [];\n        }\n      }\n    }\n  }\n\n  applyFilter(event) {\n    this.query = event.target.value.trim().toLowerCase();\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query);\n  }\n\n  filterItem(arr: any[], query) {\n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\n  }\n\n  onClick(query) { //handling click for downlooding the filtered data\n    let u = query;\n    u = this.databaseToDownload(query);\n    let v = this.csv.arrayToCsv(u);\n    this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\n  }\n\n  databaseToDownload(data) {\n    let dataToDownload: any[][] = [[\"item.id\", \"item.label\", \"item.description\"]];\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n      {{subTitle}}\n\n\n      @if(isSearch === true){\n      \n        \n          \n        \n        \n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\n        \n      \n      }\n\n      @for (L of list; track L) {\n      \n        @if (L.itemLabel.value) {\n        \n          {{L.itemLabel.value}}\n          open_in_new&nbsp;&nbsp;&nbsp;\n          @if (L.itemDescription) {\n          , {{L.itemDescription.value}}\n          }\n          @if (L.year) {\n          , {{L.year.value}}\n          }\n\n        \n        }\n        \n      \n      }\n      \n        \n          download\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{subTitle}}      @if(isSearch === true){                                                     {{this.list.length}}                    }      @for (L of list; track L) {              @if (L.itemLabel.value) {                  {{L.itemLabel.value}}          open_in_new             @if (L.itemDescription) {          , {{L.itemDescription.value}}          }          @if (L.year) {          , {{L.year.value}}          }                }                    }                        download                          '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Sparql4DisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/SparqlInterceptor.html":{"url":"interceptors/SparqlInterceptor.html","title":"interceptor - SparqlInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  SparqlInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/sparql-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/sparql-interceptor.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sparql-interceptor.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/app/sparql-interceptor.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SparqlInterceptor implements HttpInterceptor {\n\n    private cache = new Map>();\n\n  constructor() { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n    if (request.url.includes(\"biblio\") === true || request.url.includes(\"statistics\") === true ){console.log(request.url);\n\n    const cachedResponse = this.cache.get(request.url);\n\n    if (cachedResponse){\n    return of(cachedResponse);\n\n    }\n\n    return next.handle(request).pipe(\n        tap((response) => {\n        if (response instanceof HttpResponse){\n          this.cache.set(request.url, response);\n        }\n      })\n      );\n    }\n    \n    return next.handle(request);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Statement.html":{"url":"interfaces/Statement.html","title":"interface - Statement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Statement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/variable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selections\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         Variable[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Variable[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selections:         Variable[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Variable[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Data {\n  statement: number;\n  types?: Statement;\n  values?: Statement;\n}\n\nexport interface Statement {\n  options: Variable[];\n  selections?: Variable[];\n}\n\nexport interface Variable {\n  label: string;\n  id?: string;\n  type?: string;\n  order?: number;\n  col?: number;\n  originalLabel?: string;\n\n}\n\n\n\n\nexport interface Selection {\n  variable: number[];\n  label: string;\n  id: string;\n}\n\n\n\n\nexport const ITEMTYPES: Variable[] = [\n  { label: '?activity', id: 'Q256699', order:0 },\n  { label: '?archive', id: 'Q21870', order: 0 },\n  { label: '?artefact', id: 'Q101755', order: 0 },\n  { label: '?book', id: 'Q100626', order: 0 },\n  { label: '?career', id: 'Q77493', order: 0 },\n  { label: '?city', id: 'Q77500', order: 0 },\n  { label: '?context', id: 'Q77500', order: 0 },\n  { label: '?country', id: 'Q77500', order: 0 },\n  { label: '?date', id: \"Q77483\", order: 0 },\n  { label: '?document', id: 'Q21870', order: 0 },\n  { label: '?education', id: 'Q100631', order: 0 },\n  { label: '?event', id: 'Q77499', order: 0 },\n  { label: '?freemasonry', id: 'Q23197', order: 0 },\n  { label: '?group', id: 'Q77498', order: 0 },\n  { label: '?human', id: 'Q77478', order: 0 },\n  { label: '?human work', id: 'Q77495', order: 0 },\n  { label: '?name', id: 'Q77488', order: 0 },\n  { label: '?object', id: 'Q101755', order: 0 },\n  { label: '?organisation', id: 'Q77501', order: 0 },\n  { label: '?person', id: 'Q77478',  order: 0 },\n  { label: '?people', id: 'Q77478',  order: 0 },\n{ label: '?place', id: 'Q77500', order: 0 },\n{ label: '?printed document', id: 'Q100626', order: 0 },\n{ label: '?profession', id: 'Q256699', order: 0 },\n  { label: '?publication', id: 'Q77502', order: 0 },\n];\n\n\n\n\nexport const LITERALS: Variable[] = [\n  { label: \"write literal string\", type: \"String\", col: 0 },\n  { label: \"write date : YYYY-MM-DD\", type: \"Time\", col: 0 },\n  { label: \"write number\", type:\"Quantity\", col:0 },\n  { label: \"None\", type: \"Any\", col: 2 },\n  { label: \"None\", type: \"Any\", col: 3 },\n  { label: \"None\", type: \"Any\", col: 4 },\n  { label: '?date', type: \"Time\", col: 0 },\n  { label: '?date1', type: \"Time\", col: 1 },\n  { label: '?date2', type: \"Time\", col: 2 },\n  { label: '?date3', type: \"Time\", col: 3 },\n  { label: '?date4', type: \"Time\", col: 4 },\n  { label: '?date5', type: \"Time\", col: 5 },\n  { label: '?string', type: \"String\", col: 0 },\n  { label: '?string1', type: \"String\", col: 1 },\n  { label: '?string2', type: \"String\", col: 2 },\n  { label: '?string3', type: \"String\", col: 3 },\n  { label: '?string4', type: \"String\", col: 4 },\n  /*{ label: '?context', type: 'String', col: 0 },\n  { label: '?context1', type: 'String', col: 1 },\n  { label: '?context2', type: 'String', col: 2 },\n  { label: '?context3', type: 'String', col: 3 },\n  { label: '?context4', type: 'String', col: 4 },*/\n  { label: '?amount', type: \"Quantity\", col: 0 },\n  { label: '?amount1', type: \"Quantity\", col: 1 },\n  { label: '?amount2', type: \"Quantity\", col: 2 },\n  { label: '?amount3', type: \"Quantity\", col: 3 },\n  { label: '?number', type: \"Quantity\", col: 0 },\n  { label: '?number1', type: \"Quantity\", col: 1 },\n  { label: '?number2', type: \"Quantity\", col: 2 },\n  { label: '?number3', type: \"Quantity\", col: 3 }\n]\n\nexport const QUALIFIERTYPES: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23]; // list of columns for the qualifier types\n\nexport const MUTATOR: Variable[][] = [\n  [{ label: '?activity', id: 'Q256699', col: 0 }, { label: '?archive', id: 'Q21870', col: 1 }, { label: '?artefact', id: 'Q101755', col: 2 }, { label: '?book', id: 'Q100626', col: 3 }, { label: '?career', id: 'Q77493', col: 4 }, { label: '?city', id: 'Q77500', col: 5 }, { label: '?country', id: 'Q77500', col: 6 }, { label: '?date', id: \"Q77483\", col: 7 }, { label: '?document', id: 'Q21870', col: 8 }, { label: '?education', id: 'Q100631', col: 9 }, { label: '?event', id: 'Q77499', col: 10 }, { label: '?freemasonry', id: 'Q23197', col: 11 }, { label: '?group', id: 'Q77498', col: 12 }, { label: '?human', id: 'Q77478', col: 13 }, { label: '?human work', id: 'Q77495', col: 14 }, { label: '?name', id: 'Q77488', col: 15 }, { label: '?object', id: 'Q101755', col: 16 }, { label: '?organisation', id: 'Q77501', col: 17 }, { label: '?people', id: 'Q77478', col: 18 }, { label: '?person', id: 'Q77478', col: 19 }, { label: '?place', id: 'Q77500', col: 20 }, { label: '?printed document', id: 'Q100626', col: 21 }, { label: '?profession', id: 'Q256699', col: 22 }, { label: '?publication', id: 'Q77502', col: 23 }],\n  [{ label: '?activity1', id: 'Q256699', col: 0 }, { label: '?archive1', id: 'Q21870', col: 1 }, { label: '?artefact1', id: 'Q101755', col: 2 }, { label: '?book1', id: 'Q100626', col: 3 }, { label: '?career1', id: 'Q77493', col: 4 }, { label: '?city1', id: 'Q77500', col: 5 }, { label: '?country1', id: 'Q77500', col: 6 }, { label: '?date1', id: \"Q77483\", col: 7 }, { label: '?document1', id: 'Q21870', col: 8 }, { label: '?education1', id: 'Q100631', col: 9 }, { label: '?event1', id: 'Q77499', col: 10 }, { label: '?freemasonry1', id: 'Q23197', col: 11 }, { label: '?group1', id: 'Q77498', col: 12 }, { label: '?human1', id: 'Q77478', col: 13 }, { label: '?human work1', id: 'Q77495', col: 14 }, { label: '?name1', id: 'Q77488', col: 15 }, { label: '?object1', id: 'Q101755', col: 16 }, { label: '?organisation1', id: 'Q77501', col: 17 }, { label: '?people1', id: 'Q77478', col: 18 }, { label: '?person1', id: 'Q77478', col: 19 }, { label: '?place1', id: 'Q77500', col: 20 }, { label: '?printed document1', id: 'Q100626', col: 21 }, { label: '?profession1', id: 'Q256699', col: 22 }, { label: '?publication1', id: 'Q77502', col:23}],\n  [{ label: '?activity2', id: 'Q256699', col: 0 }, { label: '?archive2', id: 'Q21870', col: 1 }, { label: '?artefact2', id: 'Q101755', col: 2 }, { label: '?book2', id: 'Q100626', col: 3 }, { label: '?career2', id: 'Q77493', col: 4 }, { label: '?city2', id: 'Q77500', col: 5 }, { label: '?country2', id: 'Q77500', col: 6 }, { label: '?date2', id: \"Q77483\", col: 7 }, { label: '?document2', id: 'Q21870', col: 8 }, { label: '?education2', id: 'Q100631', col: 9 }, { label: '?event2', id: 'Q77499', col: 10 }, { label: '?freemasonry2', id: 'Q23197', col: 11 }, { label: '?group2', id: 'Q77498', col: 12 }, { label: '?human2', id: 'Q77478', col: 13 }, { label: '?human work2', id: 'Q77495', col: 14 }, { label: '?name2', id: 'Q77488', col: 15 }, { label: '?object2', id: 'Q101755', col: 16 }, { label: '?organisation2', id: 'Q77501', col: 17 }, { label: '?people2', id: 'Q77478', col: 18 }, { label: '?person2', id: 'Q77478', col: 19 }, { label: '?place2', id: 'Q77500', col: 20 }, { label: '?printed document2', id: 'Q100626', col: 21 }, { label: '?profession2', id: 'Q256699', col: 22 }, { label: '?publication2', id: 'Q77502', col:23}],\n  [{ label: '?activity3', id: 'Q256699', col: 0 }, { label: '?archive3', id: 'Q21870', col: 1 }, { label: '?artefact3', id: 'Q101755', col: 2 }, { label: '?book3', id: 'Q100626', col: 3 }, { label: '?career3', id: 'Q77493', col: 4 }, { label: '?city3', id: 'Q77500', col: 5 }, { label: '?country3', id: 'Q77500', col: 6 }, { label: '?date3', id: \"Q77483\", col: 7 }, { label: '?document3', id: 'Q21870', col: 8 }, { label: '?education3', id: 'Q100631', col: 9 }, { label: '?event3', id: 'Q77499', col: 10 }, { label: '?freemasonry3', id: 'Q23197', col: 11 }, { label: '?group3', id: 'Q77498', col: 12 }, { label: '?human3', id: 'Q77478', col: 13 }, { label: '?human work3', id: 'Q77495', col: 14 }, { label: '?name3', id: 'Q77488', col: 15 }, { label: '?object3', id: 'Q101755', col: 16 }, { label: '?organisation3', id: 'Q77501', col: 17 }, { label: '?people3', id: 'Q77478', col: 18 }, { label: '?person3', id: 'Q77478', col: 19 }, { label: '?place3', id: 'Q77500', col: 20 }, { label: '?printed document3', id: 'Q100626', col: 21 }, { label: '?profession3', id: 'Q256699', col: 22 }, { label: '?publication3', id: 'Q77502', col:23}],\n  [{ label: '?activity4', id: 'Q256699', col: 0 }, { label: '?archive4', id: 'Q21870', col: 1 }, { label: '?artefact4', id: 'Q101755', col: 2 }, { label: '?book4', id: 'Q100626', col: 3 }, { label: '?career4', id: 'Q77493', col: 4 }, { label: '?city4', id: 'Q77500', col: 5 }, { label: '?country4', id: 'Q77500', col: 6 }, { label: '?date4', id: \"Q77483\", col: 7 }, { label: '?document4', id: 'Q21870', col: 8 }, { label: '?education4', id: 'Q100631', col: 9 }, { label: '?event4', id: 'Q77499', col: 10 }, { label: '?freemasonry4', id: 'Q23197', col: 11 }, { label: '?group4', id: 'Q77498', col: 12 }, { label: '?human4', id: 'Q77478', col: 13 }, { label: '?human work4', id: 'Q77495', col: 14 }, { label: '?name4', id: 'Q77488', col: 15 }, { label: '?object4', id: 'Q101755', col: 16 }, { label: '?organisation4', id: 'Q77501', col: 17 }, { label: '?people4', id: 'Q77478', col: 18 }, { label: '?person4', id: 'Q77478', col: 19 }, { label: '?place4', id: 'Q77500', col: 20 }, { label: '?printed document4', id: 'Q100626', col: 21 }, { label: '?profession4', id: 'Q256699', col: 22 }, { label: '?publication4', id: 'Q77502', col:23}],\n  [{ label: '?activity5', id: 'Q256699', col: 0 }, { label: '?archive5', id: 'Q21870', col: 1 }, { label: '?artefact5', id: 'Q101755', col: 2 }, { label: '?book5', id: 'Q100626', col: 3 }, { label: '?career5', id: 'Q77493', col: 4 }, { label: '?city5', id: 'Q77500', col: 5 }, { label: '?country5', id: 'Q77500', col: 6 }, { label: '?date5', id: \"Q77483\", col: 7 }, { label: '?document5', id: 'Q21870', col: 8 }, { label: '?education5', id: 'Q100631', col: 9 }, { label: '?event5', id: 'Q77499', col: 10 }, { label: '?freemasonry5', id: 'Q23197', col: 11 }, { label: '?group5', id: 'Q77498', col: 12 }, { label: '?human5', id: 'Q77478', col: 13 }, { label: '?human work5', id: 'Q77495', col: 14 }, { label: '?name5', id: 'Q77488', col: 15 }, { label: '?object5', id: 'Q101755', col: 16 }, { label: '?organisation5', id: 'Q77501', col: 17 }, { label: '?people5', id: 'Q77478', col: 18 }, { label: '?person5', id: 'Q77478', col: 19 }, { label: '?place5', id: 'Q77500', col: 20 }, { label: '?printed document5', id: 'Q100626', col: 21 }, { label: '?profession5', id: 'Q256699', col: 22 }, { label: '?publication5', id: 'Q77502', col:23}]\n]\n\n\n\nexport const _MUTATOR: Variable[][] = [\n[{ label: '?activity', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date', id: '', col: 25, type: \"Time\" }, { label: '?string', id: '', col: 26, type: \"String\" }, { label: '?amount', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity1', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive1', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact1', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book1', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career1', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city1', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context1', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country1', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document1', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education1', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event1', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry1', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group1', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human1', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work1', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name1', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object1', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation1', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people1', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person1', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place1', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document1', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession1', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication1', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date1', id: '', col: 25, type: \"Time\" }, { label: '?string1', id: '', col: 26, type: \"String\" }, { label: '?amount1', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity2', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive2', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact2', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book2', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career2', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city2', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context2', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country2', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document2', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education2', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event2', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry2', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group2', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human2', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work2', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name2', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object2', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation2', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people2', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person2', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place2', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document2', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession2', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication2', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date2', id: '', col: 25, type: \"Time\" }, { label: '?string2', id: '', col: 26, type: \"String\" }, { label: '?amount2', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity3', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive3', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact3', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book3', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career3', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city3', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context3', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country3', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document3', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education3', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event3', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry3', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group3', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human3', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work3', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name3', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object3', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation3', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people3', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person3', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place3', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document3', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession3', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication3', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date3', id: '', col: 25, type: \"Time\" }, { label: '?string3', id: '', col: 26, type: \"String\" }, { label: '?amount3', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity4', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive4', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact4', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book4', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career4', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city4', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context4', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country4', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document4', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education4', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event4', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry4', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group4', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human4', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work4', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name4', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object4', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation4', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people4', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person4', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place4', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document4', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession4', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication4', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date4', id: '', col: 25, type: \"Time\" }, { label: '?string4', id: '', col: 26, type: \"String\" }, { label: '?amount4', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity5', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive5', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact5', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book5', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career5', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city5', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context5', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country5', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document5', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education5', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event5', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry5', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group5', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human5', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work5', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name5', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object5', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation5', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people5', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person5', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place5', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document5', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession5', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication5', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date5', id: '', col: 25, type: \"Time\" }, { label: '?string5', id: '', col: 26, type: \"String\" }, { label: '?amount5', id: '', col: 27, type: \"Quantity\" }]\n]\n\nexport const MUTATOR2: Variable[][] = [\n  [{ label: 'activity', id: 'Q256699', col: 0 }, { label: 'archive', id: 'Q21870', col: 1 }, { label: 'artefact', id: 'Q101755', col: 2 }, { label: 'book', id: 'Q100626', col: 3 }, { label: 'career', id: 'Q77493', col: 4 }, { label: 'city', id: 'Q77500', col: 5 }, { label: 'country', id: 'Q77500', col: 6 }, { label: 'date', id: \"Q77483\", col: 7 }, { label: 'document', id: 'Q21870', col: 8 }, { label: 'education', id: 'Q100631', col: 9 }, { label: 'event', id: 'Q77499', col: 10 }, { label: 'freemasonry', id: 'Q23197', col: 11 }, { label: 'group', id: 'Q77498', col: 12 }, { label: 'human', id: 'Q77478', col: 13 }, { label: 'human work', id: 'Q77495', col: 14 }, { label: 'name', id: 'Q77488', col: 15 }, { label: 'object', id: 'Q101755', col: 16 }, { label: 'organisation', id: 'Q77501', col: 17 }, { label: 'people', id: 'Q77478', col: 18 }, { label: 'person', id: 'Q77478', col: 19 }, { label: 'place', id: 'Q77500', col: 20 }, { label: 'printed document', id: 'Q100626', col: 21 }, { label: 'profession', id: 'Q256699', col: 22 }, { label: 'publication', id: 'Q77502', col: 23 }],\n  [{ label: 'activity1', id: 'Q256699', col: 0 }, { label: 'archive1', id: 'Q21870', col: 1 }, { label: 'artefact1', id: 'Q101755', col: 2 }, { label: 'book1', id: 'Q100626', col: 3 }, { label: 'career1', id: 'Q77493', col: 4 }, { label: 'city1', id: 'Q77500', col: 5 }, { label: 'country1', id: 'Q77500', col: 6 }, { label: 'date1', id: \"Q77483\", col: 7 }, { label: 'document1', id: 'Q21870', col: 8 }, { label: 'education1', id: 'Q100631', col: 9 }, { label: 'event1', id: 'Q77499', col: 10 }, { label: 'freemasonry1', id: 'Q23197', col: 11 }, { label: 'group1', id: 'Q77498', col: 12 }, { label: 'human1', id: 'Q77478', col: 13 }, { label: 'human work1', id: 'Q77495', col: 14 }, { label: 'name1', id: 'Q77488', col: 15 }, { label: 'object1', id: 'Q101755', col: 16 }, { label: 'organisation1', id: 'Q77501', col: 17 }, { label: 'people1', id: 'Q77478', col: 18 }, { label: 'person1', id: 'Q77478', col: 19 }, { label: 'place1', id: 'Q77500', col: 20 }, { label: 'printed document1', id: 'Q100626', col: 21 }, { label: 'profession1', id: 'Q256699', col: 22 }, { label: 'publication1', id: 'Q77502', col: 23 }],\n  [{ label: 'activity2', id: 'Q256699', col: 0 }, { label: 'archive2', id: 'Q21870', col: 1 }, { label: 'artefact2', id: 'Q101755', col: 2 }, { label: 'book2', id: 'Q100626', col: 3 }, { label: 'career2', id: 'Q77493', col: 4 }, { label: 'city2', id: 'Q77500', col: 5 }, { label: 'country2', id: 'Q77500', col: 6 }, { label: 'date2', id: \"Q77483\", col: 7 }, { label: 'document2', id: 'Q21870', col: 8 }, { label: 'education2', id: 'Q100631', col: 9 }, { label: 'event2', id: 'Q77499', col: 10 }, { label: 'freemasonry2', id: 'Q23197', col: 11 }, { label: 'group2', id: 'Q77498', col: 12 }, { label: 'human2', id: 'Q77478', col: 13 }, { label: 'human work2', id: 'Q77495', col: 14 }, { label: 'name2', id: 'Q77488', col: 15 }, { label: 'object2', id: 'Q101755', col: 16 }, { label: 'organisation2', id: 'Q77501', col: 17 }, { label: 'people2', id: 'Q77478', col: 18 }, { label: 'person2', id: 'Q77478', col: 19 }, { label: 'place2', id: 'Q77500', col: 20 }, { label: 'printed document2', id: 'Q100626', col: 21 }, { label: 'profession2', id: 'Q256699', col: 22 }, { label: 'publication2', id: 'Q77502', col: 23 }],\n  [{ label: 'activity3', id: 'Q256699', col: 0 }, { label: 'archive3', id: 'Q21870', col: 1 }, { label: 'artefact3', id: 'Q101755', col: 2 }, { label: 'book3', id: 'Q100626', col: 3 }, { label: 'career3', id: 'Q77493', col: 4 }, { label: 'city3', id: 'Q77500', col: 5 }, { label: 'country3', id: 'Q77500', col: 6 }, { label: 'date3', id: \"Q77483\", col: 7 }, { label: 'document3', id: 'Q21870', col: 8 }, { label: 'education3', id: 'Q100631', col: 9 }, { label: 'event3', id: 'Q77499', col: 10 }, { label: 'freemasonry3', id: 'Q23197', col: 11 }, { label: 'group3', id: 'Q77498', col: 12 }, { label: 'human3', id: 'Q77478', col: 13 }, { label: 'human work3', id: 'Q77495', col: 14 }, { label: 'name3', id: 'Q77488', col: 15 }, { label: 'object3', id: 'Q101755', col: 16 }, { label: 'organisation3', id: 'Q77501', col: 17 }, { label: 'people3', id: 'Q77478', col: 18 }, { label: 'person3', id: 'Q77478', col: 19 }, { label: 'place3', id: 'Q77500', col: 20 }, { label: 'printed document3', id: 'Q100626', col: 21 }, { label: 'profession3', id: 'Q256699', col: 22 }, { label: 'publication3', id: 'Q77502', col: 23 }],\n  [{ label: 'activity4', id: 'Q256699', col: 0 }, { label: 'archive4', id: 'Q21870', col: 1 }, { label: 'artefact4', id: 'Q101755', col: 2 }, { label: 'book4', id: 'Q100626', col: 3 }, { label: 'career4', id: 'Q77493', col: 4 }, { label: 'city4', id: 'Q77500', col: 5 }, { label: 'country4', id: 'Q77500', col: 6 }, { label: 'date4', id: \"Q77483\", col: 7 }, { label: 'document4', id: 'Q21870', col: 8 }, { label: 'education4', id: 'Q100631', col: 9 }, { label: 'event4', id: 'Q77499', col: 10 }, { label: 'freemasonry4', id: 'Q23197', col: 11 }, { label: 'group4', id: 'Q77498', col: 12 }, { label: 'human4', id: 'Q77478', col: 13 }, { label: 'human work4', id: 'Q77495', col: 14 }, { label: 'name4', id: 'Q77488', col: 15 }, { label: 'object4', id: 'Q101755', col: 16 }, { label: 'organisation4', id: 'Q77501', col: 17 }, { label: 'people4', id: 'Q77478', col: 18 }, { label: 'person4', id: 'Q77478', col: 19 }, { label: 'place4', id: 'Q77500', col: 20 }, { label: 'printed document4', id: 'Q100626', col: 21 }, { label: 'profession4', id: 'Q256699', col: 22 }, { label: 'publication4', id: 'Q77502', col: 23 }],\n  [{ label: 'activity5', id: 'Q256699', col: 0 }, { label: 'archive5', id: 'Q21870', col: 1 }, { label: 'artefact5', id: 'Q101755', col: 2 }, { label: 'book5', id: 'Q100626', col: 3 }, { label: 'career5', id: 'Q77493', col: 4 }, { label: 'city5', id: 'Q77500', col: 5 }, { label: 'country5', id: 'Q77500', col: 6 }, { label: 'date5', id: \"Q77483\", col: 7 }, { label: 'document5', id: 'Q21870', col: 8 }, { label: 'education5', id: 'Q100631', col: 9 }, { label: 'event5', id: 'Q77499', col: 10 }, { label: 'freemasonry5', id: 'Q23197', col: 11 }, { label: 'group5', id: 'Q77498', col: 12 }, { label: 'human5', id: 'Q77478', col: 13 }, { label: 'human work5', id: 'Q77495', col: 14 }, { label: 'name5', id: 'Q77488', col: 15 }, { label: 'object5', id: 'Q101755', col: 16 }, { label: 'organisation5', id: 'Q77501', col: 17 }, { label: 'people5', id: 'Q77478', col: 18 }, { label: 'person5', id: 'Q77478', col: 19 }, { label: 'place5', id: 'Q77500', col: 20 }, { label: 'printed document5', id: 'Q100626', col: 21 }, { label: 'profession5', id: 'Q256699', col: 22 }, { label: 'publication5', id: 'Q77502', col: 23 }]\n]\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Statement-1.html":{"url":"interfaces/Statement-1.html","title":"interface - Statement-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Statement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/statement-search/statement-search.component#.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemType\n                                        \n                                \n                                \n                                        \n                                            optional\n                                        \n                                \n                                \n                                        \n                                            properties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            qualifiers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemType:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optional:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        properties:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qualifiers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualifiers:     FormArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormArray\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, effect, inject, input, AfterViewInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelect, MatSelectChange, MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { Observable, ReplaySubject, Subject, BehaviorSubject, map, tap, takeUntil, switchMap, debounceTime, combineLatest, forkJoin, filter, iif, of, delay, startWith } from 'rxjs';\n//import { takeUntil } from 'rxjs/operators';\nimport { SelectedLangService } from '../../../selected-lang.service';\nimport { PropertiesListService } from '../../../services/properties-list.service';\nimport { RequestService } from '../../../services/request.service';\nimport { SearchEngineService } from '../../../services/search-engine.service';\nimport { SetLanguageService } from '../../../services/set-language.service';\nimport { DataService } from '../services/data.service';\nimport { StatementsControlsService } from '../services/statements-controls.service';\nimport { ITEMTYPES, MUTATOR, QUALIFIERTYPES, Selection, Variable } from '../variable';\n\nexport interface Statement {\n  itemType: FormControl,\n  properties: FormControl,\n  value?: FormGroup,\n  optional: FormControl,\n  qualifiers?: FormArray\n}\n\nexport interface Qualifier {\n  qualifierProperty: FormControl,\n  value?: FormGroup\n}\n\n@Component({\n  selector: 'app-statement-search',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    NgxMatSelectSearchModule,\n    MatSelect,\n    MatCheckboxModule,\n    MatOption,\n    MatSlideToggleModule,\n  ],\n  templateUrl: './statement-search.component.html',\n  styleUrl: './statement-search.component.scss'\n})\n\nexport class StatementSearchComponent\n  implements OnInit, OnDestroy, AfterViewInit {\n\n  private changeDetector = inject(ChangeDetectorRef);\n  private request = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n  private lang = inject(SelectedLangService);\n  private propertyList = inject(PropertiesListService);\n  private fb = inject(FormBuilder);\n  private searchEngine = inject(SearchEngineService);\n  private data = inject(DataService);\n  private controls = inject(StatementsControlsService);\n  //  private data = inject(DataService);\n  @Output() propertyDatatype: EventEmitter = new EventEmitter();\n\n  @Output() selectedItemType: EventEmitter = new EventEmitter();\n\n  @Output() selectedValue: EventEmitter = new EventEmitter();\n\n\n  @Output() selectedQualifierValue: EventEmitter = new EventEmitter();\n\n  @Output() qualifierPropertyDatatype: EventEmitter = new EventEmitter();\n\n  @Output() datatype;\n\n\n  dropdownOptions: BehaviorSubject = new BehaviorSubject(ITEMTYPES);\n\n\n  itemTypes = input([0, ITEMTYPES]);\n\n  dynamicInfoList: BehaviorSubject = new BehaviorSubject([]);\n\n  previousItemTypes: string[] = []; // propriété stockant les itemTypes précédents\n  previousItemValues: string[] = []; // propriété stockant les itemTypes précédents\n\n\n\n  // filteredItemTypes = input();\n\n  currentItemTypes: any[];\n  statementName: number = 0;\n\n  placeholderForLiteralValue: string = \"literal value?\"\n  placeholderForLiteralString: string = \"write string? | date? | number?\";\n\n  selections: Selection[][];\n\n  selection: Selection[];\n\n  propertiesValues: any[] = [\"property?\"];\n  subjectsValues: any[] = [\"subject?\"];\n\n  /*  get propertiesList(): any[] {\n      return this._propertiesList;\n    }\n    */\n\n  @Input() set literalVariables(literalVariables: any[]) {\n    this._literalVariables = literalVariables;\n    if (this.literalVariables) {\n      this.filteredLiteralVariables.next(this.literalVariables.slice())\n    }\n  }\n\n  @Input() set qualifierLiteralVariables(qualifierLiteralVariables: any[]) {\n    this._qualifierLiteralVariables = qualifierLiteralVariables;\n    if (this.qualifierLiteralVariables) {\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice())\n    }\n  }\n  get literalVariables(): any[] {\n    return this._literalVariables;\n  }\n\n  get qualifierLiteralVariables(): any[] {\n    return this._qualifierLiteralVariables;\n  }\n\n  private isUpdatingDynamicInfoList = false;\n \n\n  private _propertiesList: any[];\n  private propertiesToSelect: any[];\n  private _literalVariables: any[];\n  private _qualifierLiteralVariables: any[];\n\n\n  private qualifierPropertiesToSelect: any[];\n\n  protected entityValues: any[] = []; //\n  protected currentMutator: Variable[][] = MUTATOR;\n\n  protected selectedLiteralVariables: Variable[] = []; // probablement à supprimer\n\n  isWikibaseItemOnStatement: boolean = true;\n  isLiteralOnStatement: boolean = false;\n  isLiteralStringOnStatement: boolean = false;\n \n\n  isWikibaseItemOnQualifier: boolean = true;\n  isLiteralOnQualifier: boolean = false;\n  isLiteralStringOnQualifier: boolean = false;\n\n  isLastStatement: boolean = false;\n  isAddStatement: boolean = false;\n  isRemoveStatement: boolean = false;\n\n  isAddQualifier: boolean = false;\n  isRemoveQualifier: boolean = false;\n  isQualifier: boolean = false;\n\n  isItemValue: boolean = true;\n//  isTimeToggle: boolean = false;\n \n\n  isLiteralVariableSelected: boolean = true;\n\n // stringToogle: boolean = true;\n\n  selectedItemTypes: any[] = [];\n\n // unSelectedItemTypes: any[] = [];\n\n // itemTypesAsItemValues: any[];\n\n  query = this.fb.group({\n    statements: this.fb.array([this.statement])\n  });\n\n  get statements(): FormArray { return this.query.get('statements') as FormArray; } // getter for statements as form array\n\n\n  // on pourrait aussi bien écrire : get statements() { return this.query.controls['statements'] as FormArray; }\n  qualifiers(i: number): FormArray { return this.statements.at(i).get('qualifiers') as FormArray; }\n\n  get lastStatementIndex(): number { return this.statements.length > 0 ? this.statements.length - 1 : 0; }\n\n\n\n  get statement(): FormGroup {\n    return this.fb.group(\n      {\n        itemType: new FormControl({ value: \"\", disabled: false }),\n        properties: new FormControl({ value: [], disabled: true }, [Validators.required, this.datatypeValidator]),\n        value: this.value,\n        optional: new FormControl({ value: false, disabled: false }),\n        qualifiers: this.fb.array([this.qualifier])\n      }\n    );\n  }\n\n  get value(): FormGroup {\n    return this.fb.group({\n      itemValue: new FormControl({ value: \"\", disabled: true }),\n      literalValue: new FormControl({ value: \"\", disabled: true }),\n      literalString: new FormControl({ value: \"\", disabled: true })\n    }\n    );\n  }\n\n  get qualifier(): FormGroup {\n    return this.fb.group({\n      qualifierProperty: new FormControl({ value: \"\", disabled: false }),\n      value: this.qualifierValue,\n      optional: new FormControl({ value: false, disabled: false }),\n    }\n    );\n  }\n\n  get qualifierValue(): FormGroup {\n    return this.fb.group({\n      qualifierValue: new FormControl({ value: \"\", disabled: true }),\n      qualifierLiteralValue: new FormControl({ value: \"\", disabled: true }),\n      qualifierLiteralString: new FormControl({ value: \"\", disabled: true })\n    }\n    );\n  }\n\n  isPropertiesInvalid(index: number): boolean {\n    const statementGroup = this.statements.at(index) as FormGroup;\n    const propertiesControl = statementGroup.get('properties') as FormControl;\n    return propertiesControl.invalid\n//      && (propertiesControl.dirty || propertiesControl.touched);\n  }\n\n  public itemTypeFilterCtrl: FormControl = new FormControl('');\n\n // public filteredItemTypes: ReplaySubject = new ReplaySubject(1);\n  public filteredItemTypes: ReplaySubject = new ReplaySubject(1);\n\n\n  /** control for the MatSelect filter keyword multi-selection */\n  public propertytMultiFilterCtrl: FormControl = new FormControl('');\n\n  /** list of properties filtered by search keyword */\n  public filteredPropertyMulti: ReplaySubject = new ReplaySubject(1);\n\n  //  public valueSearchInput: FormControl = new FormControl();\n  /** control for the MatSelect filter keyword single-selection */\n  public itemValueFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredItemValues: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public literalFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredLiteralVariables: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierPropertyFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierProperties: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierValueFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierValues: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierLiteralFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierLiteralVariables: ReplaySubject = new ReplaySubject(1);\n\n\n  addStatements() {\n    let formerItemType: Variable[][] = []\n    let itemTypes:Variable[]\n    let itemTypesList;\n    let mutator;\n    this.statements.push(this.statement);\n    this.isRemoveStatement = true;\n\n    // Initialiser dynamicInfoList pour la nouvelle déclaration\n    const initialDynamicInfo = { itemTypes: Array(ITEMTYPES.length).fill(0), itemValues: Array(ITEMTYPES.length).fill(0) };\n    const currentDynamicInfoList = this.dynamicInfoList.getValue();\n    currentDynamicInfoList.push(initialDynamicInfo);\n    this.dynamicInfoList.next(currentDynamicInfoList);\n\n\n\n    this.data.itemTypes2$.subscribe(res => { \n      itemTypes = res;\n      formerItemType.push(itemTypes);\n      this.data.updateItemTypes(itemTypes);\n      this.data.updateFormerItemTypes(formerItemType);\n    });\n    this.data.mutatorForNextStatement$.subscribe(res => {\n      mutator = res;\n      console.log(mutator);\n      this.data.updateMutator(mutator);\n      this.data.mutator$.subscribe(res => console.log(res));\n    }\n    )\n  }\n\n  removeStatements(i: number) {\n    this.statements.removeAt(i);\n    let itemTypes: any[] = [];\n    let formerItemTypesList: Variable[][];\n    let formerItemTypes: Variable[];\n    if (i === 0) { this.data.updateMutator(MUTATOR), this.data.updateItemTypes(ITEMTYPES); };\n    this.data.formerItemTypes$.subscribe(res => formerItemTypesList = res);\n    this.data.updateFormerItemTypes(formerItemTypesList.slice(-1));\n    this.data.formerItemTypes$.subscribe(res => formerItemTypesList = res);\n    this.data.updateItemTypes(formerItemTypesList[formerItemTypesList.length -1])\n    this.propertiesValues.splice(i, 1); // à voir de quoi il s'agit.\n  }\n\n  addQualifiers(i: number) {\n    let m = this.qualifiers(i).controls.length -1\n    if (this.qualifiers(i).pristine) { this.qualifiers(i).removeAt(m) };\n    this.isQualifier = true;\n    this.qualifiers(i).push(this.qualifier);\n     let qual = this.controls.qualifiers(this.statements, i);\n      this.isQualifier = true;\n   \n  }\n\n  addFirstQualifier(i) {\n    this.controls.qualifiers(this.statements, i).enable();\n    if (i === 0) { this.isQualifier = true; }\n  }\n\n  removeQualifiers(i: number, j: number) {\n    this.qualifiers(i).removeAt(j);\n  }\n\n  statementControllerDisplay(u, i) {\n    if (u === \"WikibaseItem\") {\n      this.isWikibaseItemOnStatement = true;\n      this.isLiteralOnStatement = false;\n      this.controls.itemValue(this.statements, i).enable();\n      this.controls.literalValue(this.statements, i).disable();\n      this.controls.literalString(this.statements, i).disable();\n    } else {\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\n        console.log(u);\n        this.controls.itemValue(this.statements, i).disable();\n        this.controls.literalValue(this.statements, i).enable();\n        this.controls.literalString(this.statements, i).enable();\n        this.isWikibaseItemOnStatement = false;\n        this.isLiteralStringOnStatement = false;\n        this.isLiteralOnStatement = true;\n      }\n    }\n  }\n\n  literalControllerDisplay(label, i) {\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\") {\n      this.controls.literalValue(this.statements, i).enable(); this.controls.literalString(this.statements, i).enable();\n      this.controls.literalValue(this.statements, i).patchValue(\"\");\n      this.isLiteralStringOnStatement = true;\n      this.placeholderForLiteralValue = \"write below\";\n    }\n    else {\n        this.controls.literalValue(this.statements, i).enable();\n        this.controls.literalString(this.statements, i).disable();\n      this.isLiteralStringOnStatement = false;\n      this.placeholderForLiteralString = \"disabled\";\n    }\n  }\n\n  qualifierControllerDisplay(u, i, j) {\n    console.log(u);\n    let qual = this.controls.qualifiers(this.statements, i);\n    if (u === \"WikibaseItem\") {\n      let value = this.controls.qualifierValue(qual, j);\n      console.log(value);\n      this.isWikibaseItemOnQualifier = true;\n      this.isLiteralOnQualifier = false;\n      this.controls.qualifierValue(qual, j).enable();\n      this.controls.qualifierLiteralValue(qual, j).disable();\n      this.controls.qualifierLiteralString(qual, j).disable();\n    //  this.controls.qualifierValue(qual, j).patchvalue(value);\n    } else {\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\n        this.controls.qualifierLiteralValue(qual, j).enable(); \n        this.controls.qualifierLiteralString(qual, j).enable();\n        this.isWikibaseItemOnQualifier = false;\n        this.isLiteralOnQualifier = true; \n      }\n    }\n  }\n\n  qualifierLiteralControllerDisplay(label, i, j) {\n    let qual = this.controls.qualifiers(this.statements, i);\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\" ) {\n      this.controls.qualifierLiteralValue(qual, j).enable(); this.controls.qualifierLiteralString(qual, j).enable();\n  //    this.controls.qualifierLiteralValue(qual, j).patchValue(\"\");\n      this.isLiteralStringOnQualifier = true;\n    }\n    else {\n      this.controls.literalValue(qual, j).enable();\n      this.controls.literalString(qual, j).disable();\n      this.isLiteralStringOnQualifier = false;\n    }\n  }\n\n  onItemTypeSelect(event: MatSelectChange): void {\n    console.log('Selected itemType:', event.value);\n    let i = event.value[0]; // name of the statement \"i\" in the form array \"statements\"\n    this.controls.propertyValues(this.statements, i).enable();\n    this.selectedItemType.emit(event.value); // output to advanced-search-component (see selectedItemType(itemType))\n    this.statements.at(i).get('itemType').setValue(event.value, { emitEvent: false }); // Mettre à jour la valeur du contrôle\n    console.log('Updated itemType control value:', this.statements.at(i).get('itemType').value);\n    this.changeDetector.detectChanges(); // Forcer la détection des changements\n  }\n\n  onPropertySelect(event: MatSelectChange): void {\n  //  this.data.updateItemTypes([]); //test TODO il faut rénitialiser au prochain statement.\n    let propertyValue = [];\n    if (event.value[0] !== undefined) {\n      let i = event.value[0][0];\n      this.datatype = event.value[0][2];\n      this.statementControllerDisplay(this.datatype, i); // to display the right controls\n      this.propertyDatatype.emit([i, this.datatype]);  // output to advanced-search-component (see propertyDatatype(itemType))\n      this.controls.itemValue(this.statements, i).enable();\n    //  this.controls.propertyValues(this.statements, i).updateValueAndValidity();\n    }\n  }\n\n  onValueSelect(event: MatSelectChange): void {  // to update the mutator and add the selected value type to the current itemTypes\n    let i = event.value[0];\n    let label = event.value[1];\n    let dataType = event.value[2];\n    console.log(event.value);\n    if (label.charAt(0) === \"?\") {\n     this.selectedValue.emit(event.value); // output to advanced-search-component (see selectedValue(itemType))\n    }\n    this.isAddQualifier = true;\n    this.isAddStatement = true;\n  };\n\n  onLiteralValueSelect(event: MatSelectChange): void {\n    let i = event.value[0];\n    let label = event.value[1];\n    this.placeholderForLiteralString = label;\n    this.literalControllerDisplay(label, i); // to display and enable the right controls\n    if (label.charAt(0) === \"?\") {\n      console.log(label);\n     this.selectedValue.emit(event.value); // output to advanced-search-component (see selectedValueType(itemType)). ?string is not an itemType\n    }\n    this.isAddStatement = true;\n    this.isAddQualifier = true;\n  }\n\n  onQualifierPropertySelect(event: MatSelectChange): void {\n    console.log(event.value);\n    let i = event.value[0];\n    let j = event.value[1];\n    let datatype = event.value[3];\n    this.qualifierPropertyDatatype.emit([i, j, datatype]);\n    this.qualifierControllerDisplay(datatype, i, j); // to display the right controls\n\n  }\n\n  onQualifierValueSelect(event: MatSelectChange): void {\n    console.log(event.value);\n    let i = event.value[0];\n    let j = event.value[1];\n    let dataType = event.value[2];\n    let col = event.value[3];\n    let id = event.value[4];\n    let u = [ i, dataType, col, id ];\n    if (dataType.charAt(0) === \"?\") {\n      this.selectedQualifierValue.emit(u);\n    }\n    this.isRemoveQualifier = true;\n    let qual = this.controls.qualifiers(this.statements, i);\n    let value = this.controls.qualifierValue(qual, j);\n    console.log(value);\n    this.controls.patchQualifierValue(value, qual, j)\n  };\n\n  onQualifierLiteralValueSelect(event: MatSelectChange): void {\n    console.log(event.value);\n    let i = event.value[0];\n    let label = event.value[2];\n   // let dataType = event.value[2];\n    if (label.charAt(0) === \"?\") {\n      this.selectedQualifierValue.emit(event.value);\n      this.isLiteralStringOnQualifier = false;\n    } else this.isLiteralStringOnQualifier = true;\n    this.isRemoveQualifier = true;\n  };\n\n  public items = [];\n\n  //  public datatype = \"WikibaseItem\";\n  public isQualifier2Display: boolean = false;\n  //propertiesList: any[];\n  selectedPropertiesList: string[];\n\n  // private baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\n  //  private getUrlSuffix = '&format=json&origin=*';\n  //  public selectedItemType: Observable;\n  // public selectedValue: Observable;\n  // public itemTypeSearchInput = new FormControl();\n  @ViewChild('matRef') matRef: MatSelect;\n\n  clear() {\n    this.matRef.options.forEach((data: MatOption) => data.deselect());\n  }\n \n\n  @ViewChild('singleSelect', { static: true }) singleSelect: MatSelect;\n\n  @ViewChild('multiSelect', { static: true }) multiSelect: MatSelect;\n\n  //  @Output() typeSelectionChange: EventEmitter = new EventEmitter();\n  @Output() selectionChange: EventEmitter = new EventEmitter();\n\n  @Output() propertySelectionChange: EventEmitter = new EventEmitter();\n\n  protected _onDestroy = new Subject();\n\n  ngOnInit(): void {\n    console.log(ITEMTYPES);\n    this.statements.controls.forEach((statement, index) => {\n      this.subscribeToStatementChanges(statement, index);\n      // Initialiser dynamicInfoList avec des valeurs par défaut\n      const initialDynamicInfo = { itemTypes: Array(ITEMTYPES.length).fill(0), itemValues: Array(ITEMTYPES.length).fill(0) };\n      const currentDynamicInfoList = this.dynamicInfoList.getValue();\n      currentDynamicInfoList[index] = initialDynamicInfo;\n      this.dynamicInfoList.next(currentDynamicInfoList);\n    });\n\n    // Initialiser les ITEMTYPES indépendamment\n    this.filteredItemValues.next(this.addOrderToItemValues(ITEMTYPES));\n\n    console.log(this.dynamicInfoList);\n\n\n    this.propertyList.qualifierPropertiesListBuilding.subscribe(res => this.qualifierPropertiesToSelect = res);\n\n    // S'abonner aux changements de dynamicInfoList\n    this.dynamicInfoList\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.updateDropdownOptions();\n      });\n\n\n  \n\n\n    this.itemTypeFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterItemTypes();\n      });\n\n    this.propertytMultiFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterPropertyMulti();\n      });\n\n    this.itemValueFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterItemValues();\n      });\n\n    this.literalFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterLiteralVariables();\n      });\n\n\n    this.qualifierPropertyFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierProperties();\n      });\n\n\n    this.qualifierValueFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierValues();\n      });\n\n    this.qualifierLiteralFilterCtrl.valueChanges    \n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierValues();\n      });\n\n\n    var propertyValueChanges: Observable = this.query.get('statements').valueChanges\n      .pipe(map(res => res[0][\"property\"]));\n\n    var valueValueChanges: Observable = this.query.get('statements').valueChanges\n      .pipe(map(res => res[0][\"itemValue\"]));\n\n  }\n\n  ngAfterContentInit() {\n    console.log('ngAfterContentInit called');\n  }\n\n  ngAfterViewInit() {\n\n    console.log('ngAfterViewInit called');\n\n    // Utiliser setTimeout pour différer l'exécution\n    setTimeout(() => {\n      this.setInitialItemTypeValue();\n      this.setInitialPropertyValue();\n      this.setInitialValueValue();\n      this.setInitialLiteralVariable();\n      this.setInitialQualifierPropertyValue();\n      this.setInitialQualifierValueValue();\n      this.setInitialQualifierLiteralVariable();\n\n      // Réappliquer les valeurs sélectionnées après l'initialisation de la vue\n     \n\n      // Forcer la détection des changements\n      this.changeDetector.detectChanges();\n    }, 0);\n  \n\n  }\n\n  protected setInitialItemTypeValue() {\n  this.data.itemTypes$.subscribe(res => { if (this.lastStatementIndex !== 0) { this.filteredItemTypes.next(res) } });\n    this.filteredItemTypes;\n  }\n\n\n  protected setInitialPropertyValue() {\n    this.filteredPropertyMulti;\n  }\n\n  protected setInitialValueValue() {\n    this.filteredItemValues;\n  }\n\n  protected setInitialLiteralVariable() {\n    this.filteredLiteralVariables;\n  }\n\n  protected setInitialQualifierPropertyValue() {\n    this.filteredQualifierProperties;\n  }\n\n  protected setInitialQualifierValueValue() {\n    this.filteredQualifierValues;\n  }\n\n  protected setInitialQualifierLiteralVariable() {\n    this.filterQualifierLiteralVariables;\n  }\n\n\n  private addOrderToItemValues(itemValues: any[]): any[] {\n    const dynamicInfoListValue = this.dynamicInfoList.getValue();\n    if (this.statements.length === 0 || !dynamicInfoListValue[this.lastStatementIndex]) {\n      return itemValues;\n    }\n    return itemValues.map((itemValue, itemIndex) => {\n      if (itemValue && dynamicInfoListValue[this.lastStatementIndex].itemValues[itemIndex] !== undefined) {\n        const newItemValue = { ...itemValue }; // Cloner l'objet itemValue\n        newItemValue.order = dynamicInfoListValue[this.lastStatementIndex].itemValues[itemIndex];\n        newItemValue.originalLabel = itemValue.label; // Stocker la valeur originale du label\n        newItemValue.label = `${newItemValue.label}${newItemValue.order.toString()}`; // Concaténer le label et l'ordre\n        return newItemValue;\n      }\n      return itemValue;\n    });\n  }\n\n  private updateDropdownOptions() {\n    const dynamicInfoListValue = this.dynamicInfoList.getValue();\n    if (this.statements.length === 0 || !dynamicInfoListValue[this.lastStatementIndex]) {\n      this.dropdownOptions.next(ITEMTYPES);\n      return;\n    }\n    const updatedItemValues = ITEMTYPES.map((itemValue, itemIndex) => {\n      if (itemValue && dynamicInfoListValue[this.lastStatementIndex].itemValues[itemIndex] !== undefined) {\n        const newItemValue: Variable = { ...itemValue }; // Cloner l'objet itemValue\n        newItemValue.order = dynamicInfoListValue[this.lastStatementIndex].itemValues[itemIndex];\n        newItemValue.originalLabel = this.getOriginalItemLabel(itemValue.label); // Utiliser getOriginalItemLabel pour obtenir l'étiquette originale\n        newItemValue.label = `${newItemValue.originalLabel}${newItemValue.order.toString()}`; // Concaténer le label et l'ordre\n        return newItemValue;\n      }\n      return itemValue;\n    });\n\n    // Mettre à jour itemTypes dans dynamicInfoList\n    const updatedItemTypes = ITEMTYPES.map((itemType, itemIndex) => {\n      if (itemType && dynamicInfoListValue[this.lastStatementIndex].itemTypes[itemIndex] !== undefined) {\n        const newItemType: Variable = { ...itemType }; // Cloner l'objet itemType\n        newItemType.order = dynamicInfoListValue[this.lastStatementIndex].itemTypes[itemIndex];\n        newItemType.originalLabel = this.getOriginalItemLabel(itemType.label); // Utiliser getOriginalItemLabel pour obtenir l'étiquette originale\n        newItemType.label = `${newItemType.originalLabel}${newItemType.order.toString()}`; // Concaténer le label et l'ordre\n        return newItemType;\n      }\n      return itemType;\n    });\n\n    // Mettre à jour dynamicInfoList avec les nouvelles valeurs de itemTypes\n    dynamicInfoListValue[this.lastStatementIndex].itemTypes = updatedItemTypes.map(item => item.order).filter(order => order !== null);\n\n    this.dropdownOptions.next(updatedItemValues);\n  }\n\n\n\n\n  protected filterItemTypes() {\n    let search = this.itemTypeFilterCtrl.value;\n    const selectedValues = this.statements.controls.map(statement => statement.get('itemType').value); // Conserver les valeurs sélectionnées\n\n    this.dropdownOptions.pipe(takeUntil(this._onDestroy)).subscribe((options) => {\n      if (!search) {\n        this.filteredItemTypes.next(options);\n      } else {\n        search = search.toLowerCase();\n        this.filteredItemTypes.next(\n          options.filter(itemType => itemType.label.toLowerCase().indexOf(search) > -1)\n        );\n      }\n\n      // Réappliquer les valeurs sélectionnées\n      this.statements.controls.forEach((statement, index) => {\n        statement.get('itemType').setValue(selectedValues[index], { emitEvent: false });\n      });\n    });\n  }\n\n\n\n \n// Fonction utilitaire pour obtenir le label original\n  getOriginalItemLabel(itemLabel: string): string {\n    if (itemLabel.length > 1) {\n      const lastChar = itemLabel.charAt(itemLabel.length - 1);\n      const secondLastChar = itemLabel.charAt(itemLabel.length - 2);\n      if (!isNaN(parseInt(lastChar)) && !isNaN(parseInt(secondLastChar))) {\n        return itemLabel.slice(0, -2); // Supprimer les 2 derniers caractères\n      } else if (!isNaN(parseInt(lastChar))) {\n        return itemLabel.slice(0, -1); // Supprimer le dernier caractère si c'est un chiffre\n      }\n    }\n    return itemLabel;\n  }\n\n\n\n  \n  protected filterPropertyMulti() {\n    this.data.$propertiesList.subscribe(res => {\n      this.propertiesToSelect = res[1];\n      console.log(this.propertiesToSelect);\n      /*   if (!this.propertiesToSelect) {\n           return;\n         }*/\n      let search = this.propertytMultiFilterCtrl.value;\n      if (!search) {\n        this.filteredPropertyMulti.next(this.propertiesToSelect.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n        // filter the projects\n      \n          this.filteredPropertyMulti.next(\n            this.propertiesToSelect.filter(entity => entity.itemLabel.label.toLowerCase().indexOf(search) > -1));\n      }\n    }\n    );\n  }\n\n\n  protected filterItemValues() {\n    let search = this.itemValueFilterCtrl.value;\n    if (!search) {\n      this.filteredItemValues.next(this.addOrderToItemValues([...ITEMTYPES, ...this.entityValues]));\n      return;\n    } else {\n      search = search.toLowerCase();\n      this.itemValueFilterCtrl.valueChanges // moteur de recherche\n        .pipe(\n          debounceTime(400),\n          switchMap(label => this.itemValuesList2(label, this.lang.selectedLang, 20)),\n          map(re => {\n            this.entityValues = re;\n            this.setSeparator(this.entityValues);\n            return this.addOrderToItemValues([...ITEMTYPES, ...this.entityValues]).filter(value => value.label.toLowerCase().includes(search));\n          })\n        ).subscribe(filteredItems => {\n          this.filteredItemValues.next(filteredItems);\n        });\n    }\n  }\n\n\n\n  itemValuesList1(label) { \n    return  this.data.mutator$.pipe(map(re => re[0]))\n      }\n\n\n  itemValuesList2(label, lang, number) {\n   let entityValues:any[] = [];\n    return  this.request.searchItem(label, lang).pipe(\n      map(res => this.createList(res)),\n      switchMap(url => this.request.getItem(url)),\n      filter(res => res !== undefined && res !== null),\n      filter(res => res.entities !== undefined && res.entities !== null),\n      map(res => Object.values(res.entities)),\n      map(res => this.setLanguage.item(res, this.lang.selectedLang))\n    )\n} \n\n\n  protected filterLiteralVariables() {\n    if (this.literalVariables === undefined) {\n      return;\n    }\n    // get the search keyword\n    let search = this.literalFilterCtrl.value;\n    if (!search) {\n      this.filteredLiteralVariables.next(this.literalVariables.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.filteredLiteralVariables.next(\n      this.literalVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n  protected filterQualifierProperties() {\n\n    if (!this.qualifierPropertiesToSelect) {\n      return;\n    }\n    let search = this.qualifierPropertyFilterCtrl.value;\n    if (!search) {\n      this.filteredQualifierProperties.next(this.qualifierPropertiesToSelect.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the \n    this.filteredQualifierProperties.next(\n      this.qualifierPropertiesToSelect.filter(entity => entity.itemLabel.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n  protected filterQualifierValues() {\n    let search = this.qualifierValueFilterCtrl.value;\n    let firstCharacter = search.charAt(0);\n    if (!search) {\n      this.filteredQualifierValues.next(this.entityValues.slice());\n      return;\n    } else {\n      if (firstCharacter !== \"?\") {\n        search = search.toLowerCase();\n        this.qualifierValueFilterCtrl.valueChanges //search engine\n          .pipe(\n            debounceTime(400),\n            switchMap(label => this.request.searchItem(label, this.lang.selectedLang)),\n            map(res => this.createList(res)),\n            debounceTime(400),\n            switchMap(url => this.request.getItem(url)),\n            filter(res => res !== undefined && res !== null),\n            filter(res => res.entities !== undefined && res.entities !== null),\n            map(res => Object.values(res.entities))\n          ).subscribe(re => {\n            this.entityValues = this.setLanguage.item(re, this.lang.selectedLang);\n            this.setSeparator(this.entityValues);\n            this.filteredQualifierValues.next(this.entityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\n          }\n          );\n      }\n      else {\n        this.data.mutator$.subscribe(re => {\n          this.entityValues = re[0];\n          let qualifierEntityValues = [];\n      //    let qualifierTypes: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23];\n          qualifierEntityValues = this.entityValues.filter(entityValue => QUALIFIERTYPES.includes(entityValue.col))  // filter the options for the qualifier values\n          if (search === '?*') {\n            this.filteredQualifierValues.next(qualifierEntityValues);\n          } else {\n            search = search.slice(1);\n            this.filteredQualifierValues.next(qualifierEntityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\n          }\n        }\n        );\n      }\n    }\n  }\n\n  protected filterQualifierLiteralVariables() {\n    console.log(this.qualifierLiteralVariables);\n    if (this.qualifierLiteralVariables === undefined) {\n      return;\n    }\n    // get the search keyword\n    let search = this.qualifierLiteralFilterCtrl.value;\n    console.log(search);\n    if (!search) {\n      console.log(this.qualifierLiteralVariables);\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.filteredQualifierLiteralVariables.next(\n      this.qualifierLiteralVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n\n\n  setSeparator(entityValues: any[]) {\n    for (let i = 0; i  val[2] === control.value[0][2]);\n        if (equalDatatype) { return { 'differentDatatype': true }; }\n      }\n    }\n    return null;\n  }\n\n  subscribeToStatementChanges(statement: AbstractControl, index: number): void {\n    this.previousItemTypes[index] = statement.get('itemType').value;\n    this.previousItemValues[index] = statement.get('value').get('itemValue').value;\n  }\n\n  \n\n\n\n  isCircular(obj: any): boolean {\n  const seenObjects = new WeakSet();\n\n  function detect(obj: any): boolean {\n    if (obj && typeof obj === 'object') {\n      if (seenObjects.has(obj)) {\n        return true;\n      }\n      seenObjects.add(obj);\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key) && detect(obj[key])) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  return detect(obj);\n  }\n\n  safeStringify(obj: any): string {\n    const seen = new WeakSet();\n    return JSON.stringify(obj, (key, value) => {\n      if (typeof value === \"object\" && value !== null) {\n        if (seen.has(value)) {\n          return \"[Circular]\";\n        }\n        seen.add(value);\n      }\n      return value;\n    });\n  }\n\n\n  \n\n\n  compare(u, v) {\n    if (u === undefined) { return v } else return u\n}; //TODO: if u = [] then u =v else u = u and return u; (see if its possible to create a method witb filter or something else)\n\n  newQualifier(): FormGroup {\n    return this.fb.group({\n      qualifierProperty: \"\",\n      qualifierValue: \"\",\n    }\n    );\n  }\n\n\n  onVariableSelect(event: MatSelectChange): void {\n    console.log(event.value);\n  };\n\n\n  validateItemValues(control) {\n    //   console.log(control.value.cb);\n    if (!control.value.cb.some((item: any) => item)) {\n      return { checkboxSectionValid: true };\n    }\n    return null;\n  }\n\n  notFound(res) {\n    res == \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin=*\" ?\n      res = \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=Q220375&format=json&origin=*\" : res;\n    return res;\n  }\n\n  createList(re) {\n    let baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\n    let getUrlSuffix = '&format=json&origin=*';\n    let list: string = \"\";\n    let url: string = \"\";\n    let arr = re.search;\n    if (arr === undefined) { arr = []; }\n    else { arr = arr; };\n    for (let i = 0; i  i && j \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Statement-2.html":{"url":"interfaces/Statement-2.html","title":"interface - Statement-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Statement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/statement-search/statement-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemType\n                                        \n                                \n                                \n                                        \n                                            optional\n                                        \n                                \n                                \n                                        \n                                            properties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            qualifiers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemType:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optional:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        properties:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qualifiers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualifiers:     FormArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormArray\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, effect, inject, input, AfterViewInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelect, MatSelectChange, MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { Observable, ReplaySubject, Subject, BehaviorSubject, map, tap, takeUntil, switchMap, debounceTime, combineLatest, forkJoin, filter, iif, of, delay, startWith } from 'rxjs';\n//import { takeUntil } from 'rxjs/operators';\nimport { SelectedLangService } from '../../../selected-lang.service';\nimport { PropertiesListService } from '../../../services/properties-list.service';\nimport { RequestService } from '../../../services/request.service';\nimport { SearchEngineService } from '../../../services/search-engine.service';\nimport { SetLanguageService } from '../../../services/set-language.service';\nimport { DataService } from '../services/data.service';\nimport { StatementsControlsService } from '../services/statements-controls.service';\nimport { ITEMTYPES, MUTATOR, QUALIFIERTYPES, Selection, Variable } from '../variable';\n\nexport interface Statement {\n  itemType: FormControl,\n  properties: FormControl,\n  value?: FormGroup,\n  optional: FormControl,\n  qualifiers?: FormArray\n}\n\nexport interface Qualifier {\n  qualifierProperty: FormControl,\n  value?: FormGroup\n}\n\n@Component({\n  selector: 'app-statement-search',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    NgxMatSelectSearchModule,\n    MatSelect,\n    MatCheckboxModule,\n    MatOption,\n    MatSlideToggleModule,\n  ],\n  templateUrl: './statement-search.component.html',\n  styleUrl: './statement-search.component.scss'\n})\n\nexport class StatementSearchComponent\n  implements OnInit, OnDestroy, AfterViewInit {\n\n  private changeDetector = inject(ChangeDetectorRef);\n  private request = inject(RequestService);\n  private setLanguage = inject(SetLanguageService);\n  private lang = inject(SelectedLangService);\n  private propertyList = inject(PropertiesListService);\n  private fb = inject(FormBuilder);\n  private searchEngine = inject(SearchEngineService);\n  private data = inject(DataService);\n  private controls = inject(StatementsControlsService);\n  //  private data = inject(DataService);\n\n\n  @Input() set literalVariables(literalVariables: any[]) {\n    this._literalVariables = literalVariables;\n    if (this.literalVariables) {\n      this.filteredLiteralVariables.next(this.literalVariables.slice())\n    }\n  }\n\n  @Input() set qualifierLiteralVariables(qualifierLiteralVariables: any[]) {\n    this._qualifierLiteralVariables = qualifierLiteralVariables;\n    if (this.qualifierLiteralVariables) {\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice())\n    }\n  }\n  get literalVariables(): any[] {\n    return this._literalVariables;\n  }\n\n  get qualifierLiteralVariables(): any[] {\n    return this._qualifierLiteralVariables;\n  }\n\n  @Output() datatype;\n\n\n  @Output() selectedItemType: EventEmitter = new EventEmitter();\n\n\n  protected currentItemTypes: any[] = [];\n  protected currentItemTypesArray: any[][] = [];\n\n  public statementOptions: BehaviorSubject[] = [];\n\n\n  private _propertiesList: any[];\n  private propertiesToSelect: any[];\n  private _literalVariables: any[];\n  private _qualifierLiteralVariables: any[];\n  propertiesList: any[];\n\n\n  private qualifierPropertiesToSelect: any[];\n\n  protected entityValues: any[] = []; //\n  protected currentMutator: Variable[][] = MUTATOR;\n\n  protected selectedLiteralVariables: Variable[] = []; // probablement à supprimer\n\n  isWikibaseItemOnStatement: boolean = true;\n  isLiteralOnStatement: boolean = false;\n  isLiteralStringOnStatement: boolean = false;\n\n\n  isWikibaseItemOnQualifier: boolean = true;\n  isLiteralOnQualifier: boolean = false;\n  isLiteralStringOnQualifier: boolean = false;\n\n  isLastStatement: boolean = false;\n  isAddStatement: boolean = false;\n  isRemoveStatement: boolean = false;\n\n  isAddQualifier: boolean = false;\n  isRemoveQualifier: boolean = false;\n  isQualifier: boolean = false;\n\n  isItemValue: boolean = true;\n\n\n  isLiteralVariableSelected: boolean = true;\n\n  selectedItemTypes: any[] = [];\n\n\n\n  placeholderForLiteralValue: string = \"literal value?\"\n  placeholderForLiteralString: string = \"write string? | date? | number?\";\n\n  query = this.fb.group({\n    statements: this.fb.array([this.statement])\n  });\n\n  get statements(): FormArray { return this.query.get('statements') as FormArray; } // getter for statements as form array\n\n\n  // on pourrait aussi bien écrire : get statements() { return this.query.controls['statements'] as FormArray; }\n  qualifiers(i: number): FormArray { return this.statements.at(i).get('qualifiers') as FormArray; }\n\n  get lastStatementIndex(): number {\n    const index = this.statements.length > 0 ? this.statements.length - 1 : 0;\n    console.log('lastStatementIndex:', index);\n    return index;\n  }\n\n\n  get statement(): FormGroup {\n    return this.fb.group(\n      {\n        itemType: new FormControl({ value: \"\", disabled: false }),\n        properties: new FormControl({ value: [], disabled: true }, [Validators.required, this.datatypeValidator]),\n        value: this.value,\n        optional: new FormControl({ value: false, disabled: false }),\n        qualifiers: this.fb.array([this.qualifier])\n      }\n    );\n  }\n\n  get value(): FormGroup {\n    return this.fb.group({\n      itemValue: new FormControl({ value: \"\", disabled: true }),\n      literalValue: new FormControl({ value: \"\", disabled: true }),\n      literalString: new FormControl({ value: \"\", disabled: true })\n    }\n    );\n  }\n\n  get qualifier(): FormGroup {\n    return this.fb.group({\n      qualifierProperty: new FormControl({ value: \"\", disabled: false }),\n      value: this.qualifierValue,\n      optional: new FormControl({ value: false, disabled: false }),\n    }\n    );\n  }\n\n  get qualifierValue(): FormGroup {\n    return this.fb.group({\n      qualifierValue: new FormControl({ value: \"\", disabled: true }),\n      qualifierLiteralValue: new FormControl({ value: \"\", disabled: true }),\n      qualifierLiteralString: new FormControl({ value: \"\", disabled: true })\n    }\n    );\n  }\n\n  isPropertiesInvalid(index: number): boolean {\n    const statementGroup = this.statements.at(index) as FormGroup;\n    const propertiesControl = statementGroup.get('properties') as FormControl;\n    return propertiesControl.invalid\n    //      && (propertiesControl.dirty || propertiesControl.touched);\n  }\n\n  public itemTypeFilterCtrl: FormControl = new FormControl('');\n\n  public filteredItemTypesArray: ReplaySubject[] = [];\n\n\n\n  /** control for the MatSelect filter keyword multi-selection */\n  public propertytMultiFilterCtrl: FormControl = new FormControl('');\n\n  public filteredPropertyMultiArray: ReplaySubject[] = [];\n\n\n  //  public valueSearchInput: FormControl = new FormControl();\n  /** control for the MatSelect filter keyword single-selection */\n  public itemValueFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredItemValuesArray: ReplaySubject[] = [];\n\n  /** control for the MatSelect filter keyword single-selection */\n  public literalFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredLiteralVariables: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierPropertyFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierProperties: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierValueFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierValues: ReplaySubject = new ReplaySubject(1);\n\n  /** control for the MatSelect filter keyword single-selection */\n  public qualifierLiteralFilterCtrl: FormControl = new FormControl('');\n\n  /** value filtered by search keyword */\n  public filteredQualifierLiteralVariables: ReplaySubject = new ReplaySubject(1);\n\n\n  addStatements() {\n    this.statements.push(this.statement);\n    console.log('Added statement, new statements length:', this.statements.length);\n    this.isRemoveStatement = true;\n    this.filteredItemTypesArray.push(new ReplaySubject(1)); // Initialiser un nouveau ReplaySubject pour la nouvelle déclaration\n    this.filteredItemValuesArray.push(new ReplaySubject(1)); // Initialiser un nouveau ReplaySubject pour la nouvelle déclaration\n    this.filteredPropertyMultiArray.push(new ReplaySubject(1)); // Initialiser un nouveau ReplaySubject pour la nouvelle déclaration\n    this.statementOptions.push(new BehaviorSubject([])); // Initialiser un nouveau BehaviorSubject pour la nouvelle déclaration\n\n\n    // Initialiser les valeurs des nouveaux ReplaySubject avec une liste vide pour filterItemTypes et un observable de liste vide pour filterPropertyMulti\n    this.filteredItemTypesArray[this.lastStatementIndex].next([]);\n    this.filteredItemValuesArray[this.lastStatementIndex].next([]);\n    this.filteredPropertyMultiArray[this.lastStatementIndex].next([]);\n\n\n    this.setCurrentItemTypes(this.lastStatementIndex);\n    this.filterItemTypes(this.lastStatementIndex);\n    this.filterItemValues(this.lastStatementIndex);\n    this.filterPropertyMulti(this.lastStatementIndex, of([]));\n  }\n\n\n  removeStatements(i: number) {\n    this.statements.removeAt(i);\n    console.log('Removed statement at index', i, 'new statements length:', this.statements.length);\n    this.currentItemTypesArray.splice(i, 1); // Supprimer les currentItemTypes correspondants\n    this.filteredItemTypesArray.splice(i, 1); // Supprimer le ReplaySubject correspondant\n    this.setCurrentItemTypes(this.lastStatementIndex);\n    this.filterItemTypes(this.lastStatementIndex);\n  }\n\n  addQualifiers(i: number) {\n    let m = this.qualifiers(i).controls.length - 1\n    if (this.qualifiers(i).pristine) { this.qualifiers(i).removeAt(m) };\n    this.isQualifier = true;\n    this.qualifiers(i).push(this.qualifier);\n    let qual = this.controls.qualifiers(this.statements, i);\n    this.isQualifier = true;\n\n  }\n\n  addFirstQualifier(i) {\n    this.controls.qualifiers(this.statements, i).enable();\n    if (i === 0) { this.isQualifier = true; }\n  }\n\n  removeQualifiers(i: number, j: number) {\n    this.qualifiers(i).removeAt(j);\n  }\n\n  statementControllerDisplay(u, i) {\n    const statement = this.statements.at(i) as FormGroup;\n    const itemValueControl = statement.get('value.itemValue') as FormControl;\n\n    if (u === \"WikibaseItem\") {\n      this.isWikibaseItemOnStatement = true;\n      this.isLiteralOnStatement = false;\n      itemValueControl.enable();\n      statement.get('value.literalValue').disable();\n      statement.get('value.literalString').disable();\n    } else {\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\n        console.log(u);\n        itemValueControl.disable();\n        statement.get('value.literalValue').enable();\n        statement.get('value.literalString').enable();\n        this.isWikibaseItemOnStatement = false;\n        this.isLiteralStringOnStatement = false;\n        this.isLiteralOnStatement = true;\n      }\n    }\n  }\n\n\n  literalControllerDisplay(label, i) {\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\") {\n      this.controls.literalValue(this.statements, i).enable(); this.controls.literalString(this.statements, i).enable();\n      this.controls.literalValue(this.statements, i).patchValue(\"\");\n      this.isLiteralStringOnStatement = true;\n      this.placeholderForLiteralString = \"write below\";\n    }\n    else {\n      this.controls.literalValue(this.statements, i).enable();\n      this.controls.literalString(this.statements, i).disable();\n      this.isLiteralStringOnStatement = false;\n      this.placeholderForLiteralString = \"disabled\";\n    }\n  }\n\n  qualifierControllerDisplay(u, i, j) {\n    console.log(u);\n    let qual = this.controls.qualifiers(this.statements, i);\n    if (u === \"WikibaseItem\") {\n      let value = this.controls.qualifierValue(qual, j);\n      console.log(value);\n      this.isWikibaseItemOnQualifier = true;\n      this.isLiteralOnQualifier = false;\n      this.controls.qualifierValue(qual, j).enable();\n      this.controls.qualifierLiteralValue(qual, j).disable();\n      this.controls.qualifierLiteralString(qual, j).disable();\n      //  this.controls.qualifierValue(qual, j).patchvalue(value);\n    } else {\n      if (u === \"String\" || u === \"MonolingualText\" || u === \"Time\" || u === \"Quantity\") {\n        this.controls.qualifierLiteralValue(qual, j).enable();\n        this.controls.qualifierLiteralString(qual, j).enable();\n        this.isWikibaseItemOnQualifier = false;\n        this.isLiteralOnQualifier = true;\n      }\n    }\n  }\n\n  qualifierLiteralControllerDisplay(label, i, j) {\n    let qual = this.controls.qualifiers(this.statements, i);\n    if (label === \"write literal string\" || label === \"write date : YYYY-MM-DD\" || label === \"write number\") {\n      this.controls.qualifierLiteralValue(qual, j).enable(); this.controls.qualifierLiteralString(qual, j).enable();\n      //    this.controls.qualifierLiteralValue(qual, j).patchValue(\"\");\n      this.isLiteralStringOnQualifier = true;\n    }\n    else {\n      this.controls.literalValue(qual, j).enable();\n      this.controls.literalString(qual, j).disable();\n      this.isLiteralStringOnQualifier = false;\n    }\n  }\n\n  onItemTypeSelect(event: MatSelectChange): void {\n    console.log(event.value),\n      console.log('Selected itemType:', event.value);\n    let i = event.value[0]; // name of the statement \"i\" in the form array \"statements\"\n    this.controls.propertyValues(this.statements, i).enable();\n    const options$ = this.propertyList.propertiesListBuilding(event.value[3]); // create the list of properties; useless?\n    this.filterPropertyMulti(i, options$); // Appeler filterPropertyMulti avec l'observable\n    this.selectedItemType.emit(event.value); // output to advanced-search-component (see selectedItemType(itemType))\n    this.statements.at(i).get('itemType').setValue(event.value, { emitEvent: false }); // Mettre à jour la valeur du contrôle\n    console.log('Updated itemType control value:', this.statements.at(i).get('itemType').value);\n    this.changeDetector.detectChanges(); // Forcer la détection des changements\n  }\n\n\n  onPropertySelect(event: MatSelectChange): void {\n    let propertyValue = [];\n    console.log('Event value:', event.value);\n    let i = event.value[0][0];\n    console.log(i);\n\n    // Itérer sur chaque élément de event.value\n    for (let j = 0; j  data.deselect());\n  }\n\n\n  @ViewChild('singleSelect', { static: true }) singleSelect: MatSelect;\n\n  @ViewChild('multiSelect', { static: true }) multiSelect: MatSelect;\n\n  //  @Output() typeSelectionChange: EventEmitter = new EventEmitter();\n  @Output() selectionChange: EventEmitter = new EventEmitter();\n\n  @Output() propertySelectionChange: EventEmitter = new EventEmitter();\n\n  protected _onDestroy = new Subject();\n\n\n\n  ngOnInit(): void {\n    console.log('Initial statements length:', this.statements.length);\n\n    this.propertyList.qualifierPropertiesListBuilding.subscribe(res => this.qualifierPropertiesToSelect = res);\n\n    this.itemTypeFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterItemTypes(this.lastStatementIndex);\n      });\n\n    this.propertytMultiFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterPropertyMulti(this.lastStatementIndex, of([]));\n      });\n\n    this.itemValueFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterItemValues(this.lastStatementIndex);\n      });\n\n    this.literalFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterLiteralVariables();\n      });\n\n    this.qualifierPropertyFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierProperties();\n      });\n\n    this.qualifierValueFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierValues();\n      });\n\n    this.qualifierLiteralFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterQualifierValues();\n      });\n\n    // Initialiser statementOptions pour l'index 0\n    this.statementOptions[0] = new BehaviorSubject([]);\n\n    // Problème 1 et 2: Ajouter le deuxième argument manquant pour filterPropertyMulti\n    \n\n    // Problème 3, 4 et 5: Corriger l'initialisation des ReplaySubject\n    this.filteredItemTypesArray.push(new ReplaySubject(1));\n   this.filteredItemValuesArray.push(new ReplaySubject(1));\n    this.filteredPropertyMultiArray.push(new ReplaySubject(1));\n   \n\n    this.setCurrentItemTypes(this.lastStatementIndex);\n    this.filterItemTypes(this.lastStatementIndex);\n    this.filterItemValues(this.lastStatementIndex);\n    this.filterPropertyMulti(this.lastStatementIndex, of([]));\n  }\n\n\n\n  ngAfterViewInit() {\n\n    console.log('Statements length after view init:', this.statements.length);\n\n //   this.setInitialItemTypeValue();\n //   this.setInitialPropertyValue();\n//    this.setInitialItemValue();\n    this.setInitialLiteralVariable();\n    this.setInitialQualifierPropertyValue();\n    this.setInitialQualifierValueValue();\n    this.setInitialQualifierLiteralVariable();\n\n  }\n\n\n  protected setInitialItemTypeValue() {\n    this.data.itemTypes$.subscribe(res => {\n      this.filteredItemTypesArray.forEach((filteredItemTypes, index) => {\n        console.log(res);\n        filteredItemTypes.next(res);\n        this.filterItemTypes(index);\n      });\n    });\n  }\n\n  protected setInitialPropertyValue() {\n    this.filteredPropertyMultiArray.forEach((filteredProperties, index) => {\n      filteredProperties\n    });\n}\n\n\n  protected setInitialItemValue() {\n    this.filteredItemValuesArray.forEach((filteredItemValues, index) => {\n      filteredItemValues;\n  });\n}\n\n  protected setInitialLiteralVariable() {\n    this.filteredLiteralVariables;\n  }\n\n  protected setInitialQualifierPropertyValue() {\n    this.filteredQualifierProperties;\n  }\n\n  protected setInitialQualifierValueValue() {\n    this.filteredQualifierValues;\n  }\n\n  protected setInitialQualifierLiteralVariable() {\n    this.filterQualifierLiteralVariables;\n  }\n\n\n  protected filterItemTypes(index: number) {\n    console.log('Calling setCurrentItemTypes with index:', index);\n    this.setCurrentItemTypes(index);\n    console.log('currentItemTypes after setCurrentItemTypes:', this.currentItemTypesArray[index]);\n\n    let search = this.itemTypeFilterCtrl.value;\n    if (!search) {\n      this.filteredItemTypesArray[index].next(this.currentItemTypesArray[index].slice());\n    } else {\n      search = search.toLowerCase();\n      this.filteredItemTypesArray[index].next(\n        this.currentItemTypesArray[index].filter(itemType => itemType.label.toLowerCase().indexOf(search) > -1)\n      );\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n\n\n  /**\n * Initialise et met à jour la liste des types d'éléments disponibles pour chaque déclaration.\n * Cette fonction est appelée chaque fois qu'une nouvelle déclaration est ajoutée ou qu'une déclaration existante est modifiée.\n * Elle s'assure que la liste des types d'éléments est toujours à jour et reflète les sélections actuelles.\n * \n * @param index L'index de la déclaration pour laquelle les types d'éléments doivent être mis à jour.\n */\n  protected setCurrentItemTypes(index: number): void {\n    console.log('setCurrentItemTypes called with index:', index);\n    if (index === 0) {\n      if (!ITEMTYPES || ITEMTYPES.length === 0) {\n        console.error('ITEMTYPES is undefined or empty');\n        this.currentItemTypesArray[index] = [];\n      } else {\n        this.currentItemTypesArray[index] = ITEMTYPES;\n        console.log('Updated currentItemTypes:', this.currentItemTypesArray[index]);\n      }\n    } else {\n      let labels: any[] = [];\n\n      for (let j = 0; j  JSON.stringify(label))))\n        .map(str => JSON.parse(str));\n\n      // Trier les objets par ordre alphabétique selon leurs propriétés\n      this.currentItemTypesArray[index] = uniqueLabels.sort((a, b) => a.label.localeCompare(b.label));\n      console.log('Updated currentItemTypes:', this.currentItemTypesArray[index]);\n    }\n  }\n\n\n\n  protected filterPropertyMulti(index: number, options$: Observable): void {\n    options$\n      .pipe(\n        switchMap(options => {\n          if (!options || options.length === 0) {\n            console.error(\"Les données ne sont pas correctement chargées dans options.\");\n            return of([]);\n          }\n          console.log(options);\n\n          let search = this.propertytMultiFilterCtrl.value;\n          if (!search) {\n            return of(options.slice());\n          } else {\n            search = search.toLowerCase();\n            // filter the projects\n            return of(options.filter(entity => entity.value.toLowerCase().indexOf(search) > -1));\n          }\n        })\n      )\n      .subscribe(filteredOptions => {\n        this.filteredPropertyMultiArray[index].next(filteredOptions);\n      });\n  }\n\n\n/*  protected filterItemValues(index: number) {\n    const initialSearch = this.itemValueFilterCtrl.value ? this.itemValueFilterCtrl.value.toLowerCase() : '';\n    this.itemValueFilterCtrl.valueChanges\n      .pipe(\n        startWith(initialSearch),\n        debounceTime(400),\n        switchMap(search => {\n          search = search ? search.toLowerCase() : '';\n          return this.itemValuesList2(search, this.lang.selectedLang, 20).pipe(\n            map(filteredItems => {\n              const selectedOptions = this.getSelectedOptionsUpToIndex(index); // Utiliser l'index actuel\n              const selectedLabels = this.getLabelsFromSelectedOptions(selectedOptions);\n              const augmentedItems = [...selectedLabels.map(label => ({ label, col: null, id: null, separator: '' })), ...filteredItems];\n\n              if (search.startsWith('?')) {\n                return augmentedItems.filter(item => item.label.toLowerCase().startsWith(search));\n              } else {\n                return augmentedItems.filter(item => item.label.toLowerCase().includes(search));\n              }\n            }),\n            map(items => {\n              const uniqueItems = items.filter((item, index, self) =>\n                index === self.findIndex((t) => (\n                  t.label === item.label\n                ))\n              );\n              if (!this.statementOptions[index]) {\n                this.statementOptions[index] = new BehaviorSubject([]);\n              }\n              this.statementOptions[index].next(uniqueItems); // Stocker les options dans le BehaviorSubject\n              return uniqueItems;\n            })\n          );\n        })\n      )\n      .subscribe(augmentedItems => {\n        console.log(`Augmented Items for statement ${index}:`, augmentedItems);\n        if (!this.filteredItemValuesArray[index]) {\n          this.filteredItemValuesArray[index] = new ReplaySubject(1);\n        }\n        this.filteredItemValuesArray[index].next(augmentedItems); // Utiliser l'index actuel\n        this.resetPreviousItemValues(index); // Réinitialiser les valeurs des statements précédents\n      });\n\n    // Utiliser les options stockées lors des changements\n    if (this.statementOptions[index]) {\n      this.statementOptions[index].subscribe(options => {\n        this.filteredItemValuesArray[index].next(options);\n      });\n    }\n  } */\n\n\n  protected filterItemValues(index: number) {\n    // Obtenir les options sélectionnées jusqu'à l'index actuel\n    const selectedOptions = this.getSelectedOptionsUpToIndex(index);\n\n    // Obtenir les labels des options sélectionnées\n    const selectedLabels = this.getLabelsFromSelectedOptions(selectedOptions);\n\n    // Créer les éléments augmentés à partir des labels sélectionnés\n    const augmentedItems = selectedLabels.map(label => ({ label, col: null, id: null, separator: '' }));\n\n    console.log(augmentedItems)\n\n    // Mettre à jour le BehaviorSubject avec les éléments augmentés\n    if (!this.statementOptions[index]) {\n      this.statementOptions[index] = new BehaviorSubject([]);\n    }\n    this.statementOptions[index].next(augmentedItems);\n\n    // Mettre à jour le ReplaySubject avec les éléments augmentés\n    if (!this.filteredItemValuesArray[index]) {\n      this.filteredItemValuesArray[index] = new ReplaySubject(1);\n    }\n    this.filteredItemValuesArray[index].next(augmentedItems);\n\n    // Réinitialiser les valeurs des statements précédents\n   this.resetPreviousItemValues(index);\n  }\n\n\n\n\n  protected resetPreviousItemValues(currentIndex: number): void {\n    for (let i = 0; i  option[1] === newLabel)) {\n              selectedOptions.push([itemTypeControl.value[0], newLabel]);\n            }\n          }\n        }\n\n        selectedOptions.push(itemTypeValue);\n      }\n    }\n    return selectedOptions;\n  }\n\n  getLabelsFromSelectedOptions(options: any[]): string[] {\n    return options.map(option => option[1]); // Supposons que le label soit à l'index 1\n  }\n\n\n  itemValuesList1(label) { \n    return  this.data.mutator$.pipe(map(re => re[0]))\n      }\n\n\n  itemValuesList2(label, lang, number) {\n   let entityValues:any[] = [];\n    return  this.request.searchItem(label, lang).pipe(\n      map(res => this.createList(res)),\n      switchMap(url => this.request.getItem(url)),\n      filter(res => res !== undefined && res !== null),\n      filter(res => res.entities !== undefined && res.entities !== null),\n      map(res => Object.values(res.entities)),\n      map(res => this.setLanguage.item(res, this.lang.selectedLang))\n    )\n} \n\n\n  protected filterLiteralVariables() {\n    if (this.literalVariables === undefined) {\n      return;\n    }\n    // get the search keyword\n    let search = this.literalFilterCtrl.value;\n    if (!search) {\n      this.filteredLiteralVariables.next(this.literalVariables.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.filteredLiteralVariables.next(\n      this.literalVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n  protected filterQualifierProperties() {\n\n    if (!this.qualifierPropertiesToSelect) {\n      return;\n    }\n    let search = this.qualifierPropertyFilterCtrl.value;\n    if (!search) {\n      this.filteredQualifierProperties.next(this.qualifierPropertiesToSelect.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the \n    this.filteredQualifierProperties.next(\n      this.qualifierPropertiesToSelect.filter(entity => entity.itemLabel.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n  protected filterQualifierValues() {\n    let search = this.qualifierValueFilterCtrl.value;\n    let firstCharacter = search.charAt(0);\n    if (!search) {\n      this.filteredQualifierValues.next(this.entityValues.slice());\n      return;\n    } else {\n      if (firstCharacter !== \"?\") {\n        search = search.toLowerCase();\n        this.qualifierValueFilterCtrl.valueChanges //search engine\n          .pipe(\n            debounceTime(400),\n            switchMap(label => this.request.searchItem(label, this.lang.selectedLang)),\n            map(res => this.createList(res)),\n            debounceTime(400),\n            switchMap(url => this.request.getItem(url)),\n            filter(res => res !== undefined && res !== null),\n            filter(res => res.entities !== undefined && res.entities !== null),\n            map(res => Object.values(res.entities))\n          ).subscribe(re => {\n            this.entityValues = this.setLanguage.item(re, this.lang.selectedLang);\n            this.setSeparator(this.entityValues);\n            this.filteredQualifierValues.next(this.entityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\n          }\n          );\n      }\n      else {\n        this.data.mutator$.subscribe(re => {\n          this.entityValues = re[0];\n          let qualifierEntityValues = [];\n      //    let qualifierTypes: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23];\n          qualifierEntityValues = this.entityValues.filter(entityValue => QUALIFIERTYPES.includes(entityValue.col))  // filter the options for the qualifier values\n          if (search === '?*') {\n            this.filteredQualifierValues.next(qualifierEntityValues);\n          } else {\n            search = search.slice(1);\n            this.filteredQualifierValues.next(qualifierEntityValues.filter(value => value.label.toLowerCase().indexOf(search) > -1));\n          }\n        }\n        );\n      }\n    }\n  }\n\n  protected filterQualifierLiteralVariables() {\n    console.log(this.qualifierLiteralVariables);\n    if (this.qualifierLiteralVariables === undefined) {\n      return;\n    }\n    // get the search keyword\n    let search = this.qualifierLiteralFilterCtrl.value;\n    console.log(search);\n    if (!search) {\n      console.log(this.qualifierLiteralVariables);\n      this.filteredQualifierLiteralVariables.next(this.qualifierLiteralVariables.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.filteredQualifierLiteralVariables.next(\n      this.qualifierLiteralVariables.filter(variable => variable.label.toLowerCase().indexOf(search) > -1)\n    );\n  }\n\n\n\n  setSeparator(entityValues: any[]) {\n    for (let i = 0; i  1) {\n      const firstType = control.value[0][3]; // Supposons que le type soit à l'index 3\n      const allSameType = control.value.every((val: any) => val[3] === firstType);\n      if (!allSameType) {\n        return { 'differentDatatype': true };\n      }\n    }\n    return null;\n  }\n\n\n\n  notFound(res) {\n    res == \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=&format=json&origin=*\" ?\n      res = \"https://database.factgrid.de//w/api.php?action=wbgetentities&ids=Q220375&format=json&origin=*\" : res;\n    return res;\n  }\n\n  createList(re) {\n    let baseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=';\n    let getUrlSuffix = '&format=json&origin=*';\n    let list: string = \"\";\n    let url: string = \"\";\n    let arr = re.search;\n    if (arr === undefined) { arr = []; }\n    else { arr = arr; };\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatementsControlsService.html":{"url":"injectables/StatementsControlsService.html","title":"injectable - StatementsControlsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatementsControlsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/services/statements-controls.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemType\n                            \n                            \n                                itemValue\n                            \n                            \n                                literalString\n                            \n                            \n                                literalValue\n                            \n                            \n                                patchQualifierValue\n                            \n                            \n                                propertyValues\n                            \n                            \n                                qualifierLiteralString\n                            \n                            \n                                qualifierLiteralValue\n                            \n                            \n                                qualifierProperty\n                            \n                            \n                                qualifiers\n                            \n                            \n                                qualifierValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/search/advanced-search/services/statements-controls.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemType\n                        \n                    \n                \n            \n            \n                \nitemType(statements: FormArray, i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                statements\n                                            \n                                                        FormArray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemValue\n                        \n                    \n                \n            \n            \n                \nitemValue(statements, i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                statements\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        literalString\n                        \n                    \n                \n            \n            \n                \nliteralString(statements, i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                statements\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        literalValue\n                        \n                    \n                \n            \n            \n                \nliteralValue(statements, i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                statements\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchQualifierValue\n                        \n                    \n                \n            \n            \n                \npatchQualifierValue(value, qualifiers, j)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qualifiers\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                j\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propertyValues\n                        \n                    \n                \n            \n            \n                \npropertyValues(statements, i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                statements\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormControl\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qualifierLiteralString\n                        \n                    \n                \n            \n            \n                \nqualifierLiteralString(qualifiers, j: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qualifiers\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                j\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qualifierLiteralValue\n                        \n                    \n                \n            \n            \n                \nqualifierLiteralValue(qualifiers, j)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qualifiers\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                j\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qualifierProperty\n                        \n                    \n                \n            \n            \n                \nqualifierProperty(qualifiers, j: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qualifiers\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                j\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qualifiers\n                        \n                    \n                \n            \n            \n                \nqualifiers(statements, i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                statements\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormArray\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qualifierValue\n                        \n                    \n                \n            \n            \n                \nqualifierValue(qualifiers, j)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search/advanced-search/services/statements-controls.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qualifiers\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                j\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, ReactiveFormsModule, FormsModule, FormGroup, FormArray, FormBuilder, Validators, AbstractControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatementsControlsService {\n\n  constructor() { }\n\n  itemType(statements: FormArray, i: number) {\n    if (statements && statements.length > i) {\n      return statements.at(i).get('value.itemType');\n    }\n    return null;\n  }\n\n\n  itemValue(statements, i: number) { return statements.at(i).get('value.itemValue') };\n\n  propertyValues(statements, i: number) { return statements.at(i).get('properties') as FormControl };\n\n  literalValue(statements, i: number) { return statements.at(i).get('value.literalValue') };\n\n  literalString(statements, i: number) { return statements.at(i).get('value.literalString') };\n\n  qualifiers(statements, i: number) { return statements.at(i).get('qualifiers') as FormArray };\n\n  qualifierProperty(qualifiers, j: number) { return qualifiers.at(j).get('qualifierProperty') }\n\n  qualifierValue(qualifiers, j) {  return qualifiers.at(j).controls[\"value\"].get('qualifierValue') };\n\n  qualifierLiteralValue(qualifiers, j) {  return qualifiers.at(j).controls[\"value\"].get('qualifierLiteralValue') };\n\n  qualifierLiteralString(qualifiers, j: number) { return qualifiers.at(j).controls[\"value\"].get('qualifierLiteralString') };\n\n  patchQualifierValue(value, qualifiers, j) { let control = this.qualifierValue(qualifiers, j); return control.patchValue(\"value\") };\n\n}  \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StringVariable.html":{"url":"interfaces/StringVariable.html","title":"interface - StringVariable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StringVariable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/string-variable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StringVariable {\n  id: string;\n  label: string;\n},\n\nexport const STRINGVARIABLES: StringVariable[] = [\n  { label: '?string', id: '' },\n  { label: '?string1', id: '' },\n  { label: '?string2', id: '' },\n  { label: '?string3', id: '' }\n ]\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TechnicalitiesDisplayService.html":{"url":"injectables/TechnicalitiesDisplayService.html","title":"injectable - TechnicalitiesDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TechnicalitiesDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/services/technicalities-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTechnicalitiesDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/display/services/technicalities-display.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTechnicalitiesDisplay\n                        \n                    \n                \n            \n            \n                \nsetTechnicalitiesDisplay(item, technicalities)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/technicalities-display.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                technicalities\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnicalitiesDisplayService {\n\n  constructor() { }\n\n  setTechnicalitiesDisplay(item, technicalities) {\n\n    // technicalities\n\n    if (item[0].claims.P994 !== undefined) { //vocabulary PhiloBiblon-terms\n      item[1].splice(item[1].indexOf(\"P994\"), 1);\n      technicalities.push(item[0].claims.P994);\n    }\n\n    if (item[0].claims.P1132 !== undefined) { //FactGrid keyword\n      item[1].splice(item[1].indexOf(\"P1132\"), 1);\n      technicalities.push(item[0].claims.P1132);\n    }\n  }\n  }\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextDisplayComponent.html":{"url":"components/TextDisplayComponent.html","title":"component - TextDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/display/text-display/text-display.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-display\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgClass\n                            MatCardModule\n                \n            \n\n            \n                styleUrls\n                ./text-display.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeDetector\n                            \n                            \n                                isTrans\n                            \n                            \n                                selectedLang\n                            \n                            \n                                text\n                            \n                            \n                                transcription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                trans\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        trans\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/display/text-display/text-display.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/text-display/text-display.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeDetector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChangeDetectorRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/display/text-display/text-display.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTrans\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/display/text-display/text-display.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang']\n                    \n                \n                    \n                        \n                                Defined in src/app/display/text-display/text-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/text-display/text-display.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transcription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/display/text-display/text-display.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, ChangeDetectorRef, SimpleChanges, SimpleChange, inject } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { NgClass } from '@angular/common';\n\n\n@Component({\n    selector: 'app-text-display',\n    templateUrl: './text-display.component.html',\n    styleUrls: ['./text-display.component.scss'],\n    standalone: true,\n    imports: [NgClass, MatCardModule]\n})\nexport class TextDisplayComponent implements OnChanges {\n  private changeDetector = inject(ChangeDetectorRef);\n\n\n  @Input() trans ;\n\n  selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\n  text:string =\"\";\n  transcription:string\n  isTrans:boolean = false;\n\n  ngOnChanges(changes: SimpleChanges): void {\n          this.transcription = \"Transcription\";\n          if (this.selectedLang === \"de\") { this.transcription = \"Transkription\" };\n          if (this.selectedLang === \"fr\") { this.transcription = \"Transcription\" };\n           if (this.selectedLang === \"es\") { this.transcription = \"Transcripción\" };\n           if(this.trans === undefined){ this.isTrans = false };\n          const currentTrans:SimpleChange = changes.trans;\n    \n          this.text = currentTrans.currentValue;\n          if(this.text !== undefined){ this.isTrans = true };\n          if(this.text ==\"\"){ this.isTrans = false };\n          console.log(this.text);\n          console.log(this.isTrans);\n          \n    }\n\n}\n\n    \n\n    \n        \n\n    {{transcription}}\n    \n\n\n\n    \n\n    \n                \n                    ./text-display.component.scss\n                \n                .subdivision-title {\n    color:#AD1457;\n    font-size: 20px !important;\n    font-weight: 360;\n    padding: 5 px;\n    margin-left: auto;\n    height:40px;\n    display:flex;\n    align-items: center;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{transcription}}    '\n    var COMPONENTS = [{'name': 'AdvancedSearchComponent', 'selector': 'app-advanced-search'},{'name': 'AdvancedSearchListComponent', 'selector': 'app-advanced-search-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CareerDisplayComponent', 'selector': 'app-career-display'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EducationDisplayComponent', 'selector': 'app-education-display'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HarmoniaUniversalisComponent', 'selector': 'app-harmonia-universalis'},{'name': 'HeaderDisplayComponent', 'selector': 'app-header-display'},{'name': 'IframesDisplayComponent', 'selector': 'app-iframes-display'},{'name': 'ItemInfoComponent', 'selector': 'app-item-info'},{'name': 'MainDisplayComponent', 'selector': 'app-main-display'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'ParisSearchComponent', 'selector': 'app-paris-search'},{'name': 'ProjectSelectComponent', 'selector': 'app-project-select'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SociabilityDisplayComponent', 'selector': 'app-sociability-display'},{'name': 'SourcesDisplayComponent', 'selector': 'app-sources-display'},{'name': 'Sparql0DisplayComponent', 'selector': 'app-sparql0-display'},{'name': 'Sparql1DisplayComponent', 'selector': 'app-sparql1-display'},{'name': 'Sparql2DisplayComponent', 'selector': 'app-sparql2-display'},{'name': 'Sparql3DisplayComponent', 'selector': 'app-sparql3-display'},{'name': 'Sparql4DisplayComponent', 'selector': 'app-sparql4-display'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'StatementSearchComponent', 'selector': 'app-statement-search'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeProperty.html":{"url":"interfaces/TimeProperty.html","title":"interface - TimeProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimeProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/time-property.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimeProperty {\n  id: string;\n  label: string;\n},\n\nexport const TIMEPROPERTIES: TimeProperty[] = [\n  { label: \"Date of baptism\", id: \"37 \" },\n  { label: \"Date of death\", id: \"38 \" },\n  { label: \"Beginning of composition\", id: \"39 \" },\n  { label: \"Date of burial\", id: \"40 \" },\n  { label: \"Terminus post quem\", id: \"41 \" },\n  { label: \"Terminus ante quem\", id: \"43 \" },\n  { label: \"Date of receipt\", id: \"44 \" },\n  { label: \"Start time of reported events\", id: \"45 \" },\n  { label: \"End of events reported\", id: \"46 \" },\n  { label: \"Begin date\", id: \"49 \" },\n  { label: \"End date\", id: \"50 \" },\n  { label: \"Date of birth\", id: \"77 \" },\n  { label: \"Date as stated\", id: \"96 \" },\n  { label: \"Date\", id: \"106 \" },\n  { label: \"Date of confirmation\", id: \"182 \" },\n  { label: \"Date of last will\", id: \"214 \" },\n  { label: \"Date of publication\", id: \"222 \" },\n  { label: \"Gregorian calendar start date\", id: \"289 \" },\n  { label: \"First known date\", id: \"290 \" },\n  { label: \"Last known date\", id: \"291 \" },\n  { label: \"\", id: \"303 \" },\n  { label: \"Date of consecration/ ordination\", id: \"321 \" },\n  { label: \"Date of disputation\", id: \"P392 \" },\n  { label: \"Date of ennoblement\", id: \"P394 \" },\n  { label: \"Date of creation\", id: \"P412 \" },\n  { label: \"Date of finding\", id: \"P432 \" },\n  { label: \"Date of retirement\", id: \"P459 \" },\n  { label: \"Date of artifact\", id: \"P536 \" },\n  { label: \"Date of premiere\", id: \"P551 \" },\n  { label: \"Last modified\", id: \"P612 \" },\n  { label: \"Commemorative date\", id: \"P779 \" },\n  { label: \"Renewal date\", id: \"P818 \" },\n  { label: \"Minimum date (property constraint)\", id: \"P1041 \" },\n  { label: \"Maximum date (property constraint)\", id: \"P1042 \" },\n  { label: \"Circumcision Date (religious)\", id: \"P1060 \" },\n  { label: \"Banns of marriage, date\", id: \"P1079 \" },\n  { label: \"Date of verdict\", id: \"P1104 \" },\n  { label: \"End date (terminus ante quem)\", id: \"P1123 \" },\n  { label: \"Begin date (terminus ante quem)\", id: \"P1124 \" },\n  { label: \"End date (terminus post quem)\", id: \"P1125 \" },\n  { label: \"Begin date (terminus post quem)\", id: \"P1126 \" },\n  { label: \"Date of first publication\", id: \"P1152 \" },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeVariable.html":{"url":"interfaces/TimeVariable.html","title":"interface - TimeVariable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimeVariable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/time-variable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimeVariable {\n  id: string;\n  label: string;\n},\n\nexport const TIMEVARIABLES: TimeVariable[] = [\n  { label: '?date', id: 'Q77483' },\n  { label: '?date1', id: 'Q77483' },\n  { label: '?date2', id: 'Q77483' },\n  { label: '?date3', id: 'Q77483' },\n  { label: '?date4', id: 'Q77483' },\n  { label: '?date5', id: 'Q77483' },\n  { label: '?from', id: 'Q77483' },\n  { label: '?from1', id: 'Q77483' },\n  { label: '?from2', id: 'Q77483' },\n  { label: '?from3', id: 'Q77483' },\n  { label: '?to', id: 'Q77483' },\n  { label: '?to1', id: 'Q77483' },\n  { label: '?to2', id: 'Q77483' },\n  { label: '?to3', id: 'Q77483' }\n]\n  \n  \n  \n  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranscriptDisplayService.html":{"url":"injectables/TranscriptDisplayService.html","title":"injectable - TranscriptDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TranscriptDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/transcript-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transcript\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transcript\n                        \n                    \n                \n            \n            \n                \ntranscript(u)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/transcript-display.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transcript-display.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranscriptDisplayService {\n  private request = inject(RequestService);\n\n\n  transcript(u){\n    let txt;\n    console.log(u);\n    let v= u.replace(\"https://database.factgrid.de/wiki/\",\"\");\n    v=v.replace(\"#Transcript\",\"\");\n    v=this.request.getTranscript(v);\n   return v\n    \n    //.pipe(\n //     map(res =>res.subscribe(res=>console.log(res)),\n//     map(res =>{ console.log(res.parse) }));\n  //  )\n   // this.request.subscribe(res => console.log(res));\n    return v\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranscriptionService.html":{"url":"injectables/TranscriptionService.html","title":"injectable - TranscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TranscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/services/transcription.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleaning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/display/services/transcription.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleaning\n                        \n                    \n                \n            \n            \n                \ncleaning(u)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/transcription.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                u\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranscriptionService {\n\n  constructor() { }\n\ncleaning(u){\nlet v=\"\";\nlet u2;\nlet regex2 = /]*>/g;\nu2=u.replace(regex2,\"\");\nlet regex = /]*>/g\nu2=u2.replace(regex,\"\");\nlet regex1 = /]*>/g\nu2=u2.replace(regex1,\"\");\nu2=u2.replaceAll(\"span>edit\",\"\");\nu2=u2.replaceAll(\"modifier\",\"\");\nu2=u2.replaceAll(\">[])\",\"\");\nv=u2.replaceAll(\"\",\"\");\n\n\nreturn v\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypologyService.html":{"url":"injectables/TypologyService.html","title":"injectable - TypologyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TypologyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/typology.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/typology.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RequestService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/typology.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { RequestService } from './request.service';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TypologyService {\n  private request = inject(RequestService);\n\n\ngetValue(id){\n  let result = \"\";\n  let result2;\n  let prefix=\"https://database.factgrid.de/wiki/Special:EntityData/\";\n  let suffix=\".json\"; \n  let re=prefix+id+suffix;\n  this.request.getItem(re)\n  .pipe(map(res => { \n      Object.values(res[\"entities\"])[0][\"claims\"].P2[0].mainsnak.datavalue.value.id ;\n       ;\n    }\n  ))\n //  .subscribe(res => {   console.log(res) }\n //  )\n   return result\n  } \n  \n\n//  console.log(result)\n \n//    u = Object.values(res[\"entities\"])[0][\"claims\"].P2;\n // for (let i=0; iconsole.log(res));\n}\n  \n\n/*  for (let i=0; ires= Object.values(res.entities)[0][\"claims\"].P2[0].mainsnak.datavalue.value.id));//.pipe(map(res => res[\"claims\"]))\n   u.subscribe(res=>{ result.push(res) });\n  }*/\n  //return result\n\n\n  /*  u = Object.values(res[\"entities\"])[0][\"claims\"].P2 ;\n   for (let i=0; i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UnitPipe.html":{"url":"pipes/UnitPipe.html","title":"pipe - UnitPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UnitPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/unit.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        unit\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/unit.pipe.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/unit.pipe.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/unit.pipe.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\n\n@Pipe({\n    name: 'unit',\n    standalone: true,\n})\nexport class UnitPipe implements PipeTransform {\n  private http = inject(HttpClient);\n\n\n  \n  unit:any = null;\n\n  transform(value: string): any {\n    let lang:string = localStorage['selectedLang'];\n    let unit = \"Unit: \"\n    if (lang === \"de\") { unit = \"Einheit: \" };\n    if (lang === \"fr\") { unit = \"Unité: \" };\n    if (lang === \"es\") { unit = \"Unidad: \" };\n    if (lang === \"hu\") { unit = \"Egység: \" };\n    if (lang === \"it\") { unit = \"Unità: \" };\n    value=value.replace('https://database.factgrid.de/entity/','');\n    let params = new HttpParams().set('action',\"wbgetentities\")\n    .set('languages',lang)\n    .set('props','labels')\n    .set('ids',value)\n    .set('format',\"json\")\n    .set('origin',\"*\");\n  let response= this.http.get('https://database.factgrid.de//w/api.php', { params: params}).\n  pipe(\n    map(res=>unit + Object.values(Object.values(Object.values(Object.values(Object.values(res)[0])[0])[2])[0])[1]))\n  return response\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Variable.html":{"url":"interfaces/Variable.html","title":"interface - Variable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Variable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search/advanced-search/variable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            col\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            originalLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Data {\n  statement: number;\n  types?: Statement;\n  values?: Statement;\n}\n\nexport interface Statement {\n  options: Variable[];\n  selections?: Variable[];\n}\n\nexport interface Variable {\n  label: string;\n  id?: string;\n  type?: string;\n  order?: number;\n  col?: number;\n  originalLabel?: string;\n\n}\n\n\n\n\nexport interface Selection {\n  variable: number[];\n  label: string;\n  id: string;\n}\n\n\n\n\nexport const ITEMTYPES: Variable[] = [\n  { label: '?activity', id: 'Q256699', order:0 },\n  { label: '?archive', id: 'Q21870', order: 0 },\n  { label: '?artefact', id: 'Q101755', order: 0 },\n  { label: '?book', id: 'Q100626', order: 0 },\n  { label: '?career', id: 'Q77493', order: 0 },\n  { label: '?city', id: 'Q77500', order: 0 },\n  { label: '?context', id: 'Q77500', order: 0 },\n  { label: '?country', id: 'Q77500', order: 0 },\n  { label: '?date', id: \"Q77483\", order: 0 },\n  { label: '?document', id: 'Q21870', order: 0 },\n  { label: '?education', id: 'Q100631', order: 0 },\n  { label: '?event', id: 'Q77499', order: 0 },\n  { label: '?freemasonry', id: 'Q23197', order: 0 },\n  { label: '?group', id: 'Q77498', order: 0 },\n  { label: '?human', id: 'Q77478', order: 0 },\n  { label: '?human work', id: 'Q77495', order: 0 },\n  { label: '?name', id: 'Q77488', order: 0 },\n  { label: '?object', id: 'Q101755', order: 0 },\n  { label: '?organisation', id: 'Q77501', order: 0 },\n  { label: '?person', id: 'Q77478',  order: 0 },\n  { label: '?people', id: 'Q77478',  order: 0 },\n{ label: '?place', id: 'Q77500', order: 0 },\n{ label: '?printed document', id: 'Q100626', order: 0 },\n{ label: '?profession', id: 'Q256699', order: 0 },\n  { label: '?publication', id: 'Q77502', order: 0 },\n];\n\n\n\n\nexport const LITERALS: Variable[] = [\n  { label: \"write literal string\", type: \"String\", col: 0 },\n  { label: \"write date : YYYY-MM-DD\", type: \"Time\", col: 0 },\n  { label: \"write number\", type:\"Quantity\", col:0 },\n  { label: \"None\", type: \"Any\", col: 2 },\n  { label: \"None\", type: \"Any\", col: 3 },\n  { label: \"None\", type: \"Any\", col: 4 },\n  { label: '?date', type: \"Time\", col: 0 },\n  { label: '?date1', type: \"Time\", col: 1 },\n  { label: '?date2', type: \"Time\", col: 2 },\n  { label: '?date3', type: \"Time\", col: 3 },\n  { label: '?date4', type: \"Time\", col: 4 },\n  { label: '?date5', type: \"Time\", col: 5 },\n  { label: '?string', type: \"String\", col: 0 },\n  { label: '?string1', type: \"String\", col: 1 },\n  { label: '?string2', type: \"String\", col: 2 },\n  { label: '?string3', type: \"String\", col: 3 },\n  { label: '?string4', type: \"String\", col: 4 },\n  /*{ label: '?context', type: 'String', col: 0 },\n  { label: '?context1', type: 'String', col: 1 },\n  { label: '?context2', type: 'String', col: 2 },\n  { label: '?context3', type: 'String', col: 3 },\n  { label: '?context4', type: 'String', col: 4 },*/\n  { label: '?amount', type: \"Quantity\", col: 0 },\n  { label: '?amount1', type: \"Quantity\", col: 1 },\n  { label: '?amount2', type: \"Quantity\", col: 2 },\n  { label: '?amount3', type: \"Quantity\", col: 3 },\n  { label: '?number', type: \"Quantity\", col: 0 },\n  { label: '?number1', type: \"Quantity\", col: 1 },\n  { label: '?number2', type: \"Quantity\", col: 2 },\n  { label: '?number3', type: \"Quantity\", col: 3 }\n]\n\nexport const QUALIFIERTYPES: number[] = [1, 5, 6, 8, 10, 13, 16, 17, 19, 20, 21, 23]; // list of columns for the qualifier types\n\nexport const MUTATOR: Variable[][] = [\n  [{ label: '?activity', id: 'Q256699', col: 0 }, { label: '?archive', id: 'Q21870', col: 1 }, { label: '?artefact', id: 'Q101755', col: 2 }, { label: '?book', id: 'Q100626', col: 3 }, { label: '?career', id: 'Q77493', col: 4 }, { label: '?city', id: 'Q77500', col: 5 }, { label: '?country', id: 'Q77500', col: 6 }, { label: '?date', id: \"Q77483\", col: 7 }, { label: '?document', id: 'Q21870', col: 8 }, { label: '?education', id: 'Q100631', col: 9 }, { label: '?event', id: 'Q77499', col: 10 }, { label: '?freemasonry', id: 'Q23197', col: 11 }, { label: '?group', id: 'Q77498', col: 12 }, { label: '?human', id: 'Q77478', col: 13 }, { label: '?human work', id: 'Q77495', col: 14 }, { label: '?name', id: 'Q77488', col: 15 }, { label: '?object', id: 'Q101755', col: 16 }, { label: '?organisation', id: 'Q77501', col: 17 }, { label: '?people', id: 'Q77478', col: 18 }, { label: '?person', id: 'Q77478', col: 19 }, { label: '?place', id: 'Q77500', col: 20 }, { label: '?printed document', id: 'Q100626', col: 21 }, { label: '?profession', id: 'Q256699', col: 22 }, { label: '?publication', id: 'Q77502', col: 23 }],\n  [{ label: '?activity1', id: 'Q256699', col: 0 }, { label: '?archive1', id: 'Q21870', col: 1 }, { label: '?artefact1', id: 'Q101755', col: 2 }, { label: '?book1', id: 'Q100626', col: 3 }, { label: '?career1', id: 'Q77493', col: 4 }, { label: '?city1', id: 'Q77500', col: 5 }, { label: '?country1', id: 'Q77500', col: 6 }, { label: '?date1', id: \"Q77483\", col: 7 }, { label: '?document1', id: 'Q21870', col: 8 }, { label: '?education1', id: 'Q100631', col: 9 }, { label: '?event1', id: 'Q77499', col: 10 }, { label: '?freemasonry1', id: 'Q23197', col: 11 }, { label: '?group1', id: 'Q77498', col: 12 }, { label: '?human1', id: 'Q77478', col: 13 }, { label: '?human work1', id: 'Q77495', col: 14 }, { label: '?name1', id: 'Q77488', col: 15 }, { label: '?object1', id: 'Q101755', col: 16 }, { label: '?organisation1', id: 'Q77501', col: 17 }, { label: '?people1', id: 'Q77478', col: 18 }, { label: '?person1', id: 'Q77478', col: 19 }, { label: '?place1', id: 'Q77500', col: 20 }, { label: '?printed document1', id: 'Q100626', col: 21 }, { label: '?profession1', id: 'Q256699', col: 22 }, { label: '?publication1', id: 'Q77502', col:23}],\n  [{ label: '?activity2', id: 'Q256699', col: 0 }, { label: '?archive2', id: 'Q21870', col: 1 }, { label: '?artefact2', id: 'Q101755', col: 2 }, { label: '?book2', id: 'Q100626', col: 3 }, { label: '?career2', id: 'Q77493', col: 4 }, { label: '?city2', id: 'Q77500', col: 5 }, { label: '?country2', id: 'Q77500', col: 6 }, { label: '?date2', id: \"Q77483\", col: 7 }, { label: '?document2', id: 'Q21870', col: 8 }, { label: '?education2', id: 'Q100631', col: 9 }, { label: '?event2', id: 'Q77499', col: 10 }, { label: '?freemasonry2', id: 'Q23197', col: 11 }, { label: '?group2', id: 'Q77498', col: 12 }, { label: '?human2', id: 'Q77478', col: 13 }, { label: '?human work2', id: 'Q77495', col: 14 }, { label: '?name2', id: 'Q77488', col: 15 }, { label: '?object2', id: 'Q101755', col: 16 }, { label: '?organisation2', id: 'Q77501', col: 17 }, { label: '?people2', id: 'Q77478', col: 18 }, { label: '?person2', id: 'Q77478', col: 19 }, { label: '?place2', id: 'Q77500', col: 20 }, { label: '?printed document2', id: 'Q100626', col: 21 }, { label: '?profession2', id: 'Q256699', col: 22 }, { label: '?publication2', id: 'Q77502', col:23}],\n  [{ label: '?activity3', id: 'Q256699', col: 0 }, { label: '?archive3', id: 'Q21870', col: 1 }, { label: '?artefact3', id: 'Q101755', col: 2 }, { label: '?book3', id: 'Q100626', col: 3 }, { label: '?career3', id: 'Q77493', col: 4 }, { label: '?city3', id: 'Q77500', col: 5 }, { label: '?country3', id: 'Q77500', col: 6 }, { label: '?date3', id: \"Q77483\", col: 7 }, { label: '?document3', id: 'Q21870', col: 8 }, { label: '?education3', id: 'Q100631', col: 9 }, { label: '?event3', id: 'Q77499', col: 10 }, { label: '?freemasonry3', id: 'Q23197', col: 11 }, { label: '?group3', id: 'Q77498', col: 12 }, { label: '?human3', id: 'Q77478', col: 13 }, { label: '?human work3', id: 'Q77495', col: 14 }, { label: '?name3', id: 'Q77488', col: 15 }, { label: '?object3', id: 'Q101755', col: 16 }, { label: '?organisation3', id: 'Q77501', col: 17 }, { label: '?people3', id: 'Q77478', col: 18 }, { label: '?person3', id: 'Q77478', col: 19 }, { label: '?place3', id: 'Q77500', col: 20 }, { label: '?printed document3', id: 'Q100626', col: 21 }, { label: '?profession3', id: 'Q256699', col: 22 }, { label: '?publication3', id: 'Q77502', col:23}],\n  [{ label: '?activity4', id: 'Q256699', col: 0 }, { label: '?archive4', id: 'Q21870', col: 1 }, { label: '?artefact4', id: 'Q101755', col: 2 }, { label: '?book4', id: 'Q100626', col: 3 }, { label: '?career4', id: 'Q77493', col: 4 }, { label: '?city4', id: 'Q77500', col: 5 }, { label: '?country4', id: 'Q77500', col: 6 }, { label: '?date4', id: \"Q77483\", col: 7 }, { label: '?document4', id: 'Q21870', col: 8 }, { label: '?education4', id: 'Q100631', col: 9 }, { label: '?event4', id: 'Q77499', col: 10 }, { label: '?freemasonry4', id: 'Q23197', col: 11 }, { label: '?group4', id: 'Q77498', col: 12 }, { label: '?human4', id: 'Q77478', col: 13 }, { label: '?human work4', id: 'Q77495', col: 14 }, { label: '?name4', id: 'Q77488', col: 15 }, { label: '?object4', id: 'Q101755', col: 16 }, { label: '?organisation4', id: 'Q77501', col: 17 }, { label: '?people4', id: 'Q77478', col: 18 }, { label: '?person4', id: 'Q77478', col: 19 }, { label: '?place4', id: 'Q77500', col: 20 }, { label: '?printed document4', id: 'Q100626', col: 21 }, { label: '?profession4', id: 'Q256699', col: 22 }, { label: '?publication4', id: 'Q77502', col:23}],\n  [{ label: '?activity5', id: 'Q256699', col: 0 }, { label: '?archive5', id: 'Q21870', col: 1 }, { label: '?artefact5', id: 'Q101755', col: 2 }, { label: '?book5', id: 'Q100626', col: 3 }, { label: '?career5', id: 'Q77493', col: 4 }, { label: '?city5', id: 'Q77500', col: 5 }, { label: '?country5', id: 'Q77500', col: 6 }, { label: '?date5', id: \"Q77483\", col: 7 }, { label: '?document5', id: 'Q21870', col: 8 }, { label: '?education5', id: 'Q100631', col: 9 }, { label: '?event5', id: 'Q77499', col: 10 }, { label: '?freemasonry5', id: 'Q23197', col: 11 }, { label: '?group5', id: 'Q77498', col: 12 }, { label: '?human5', id: 'Q77478', col: 13 }, { label: '?human work5', id: 'Q77495', col: 14 }, { label: '?name5', id: 'Q77488', col: 15 }, { label: '?object5', id: 'Q101755', col: 16 }, { label: '?organisation5', id: 'Q77501', col: 17 }, { label: '?people5', id: 'Q77478', col: 18 }, { label: '?person5', id: 'Q77478', col: 19 }, { label: '?place5', id: 'Q77500', col: 20 }, { label: '?printed document5', id: 'Q100626', col: 21 }, { label: '?profession5', id: 'Q256699', col: 22 }, { label: '?publication5', id: 'Q77502', col:23}]\n]\n\n\n\nexport const _MUTATOR: Variable[][] = [\n[{ label: '?activity', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date', id: '', col: 25, type: \"Time\" }, { label: '?string', id: '', col: 26, type: \"String\" }, { label: '?amount', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity1', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive1', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact1', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book1', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career1', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city1', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context1', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country1', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document1', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education1', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event1', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry1', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group1', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human1', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work1', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name1', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object1', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation1', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people1', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person1', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place1', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document1', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession1', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication1', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date1', id: '', col: 25, type: \"Time\" }, { label: '?string1', id: '', col: 26, type: \"String\" }, { label: '?amount1', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity2', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive2', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact2', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book2', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career2', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city2', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context2', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country2', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document2', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education2', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event2', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry2', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group2', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human2', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work2', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name2', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object2', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation2', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people2', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person2', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place2', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document2', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession2', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication2', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date2', id: '', col: 25, type: \"Time\" }, { label: '?string2', id: '', col: 26, type: \"String\" }, { label: '?amount2', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity3', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive3', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact3', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book3', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career3', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city3', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context3', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country3', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document3', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education3', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event3', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry3', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group3', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human3', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work3', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name3', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object3', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation3', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people3', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person3', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place3', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document3', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession3', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication3', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date3', id: '', col: 25, type: \"Time\" }, { label: '?string3', id: '', col: 26, type: \"String\" }, { label: '?amount3', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity4', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive4', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact4', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book4', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career4', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city4', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context4', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country4', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document4', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education4', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event4', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry4', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group4', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human4', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work4', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name4', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object4', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation4', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people4', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person4', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place4', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document4', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession4', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication4', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date4', id: '', col: 25, type: \"Time\" }, { label: '?string4', id: '', col: 26, type: \"String\" }, { label: '?amount4', id: '', col: 27, type: \"Quantity\" }],\n[{ label: '?activity5', id: 'Q256699', col: 0, type: 'Wikibase' }, { label: '?archive5', id: 'Q21870', col: 1, type: 'Wikibase' }, { label: '?artefact5', id: 'Q101755', col: 2, type: 'Wikibase' }, { label: '?book5', id: 'Q100626', col: 3, type: 'Wikibase' }, { label: '?career5', id: 'Q77493', col: 4, type: 'Wikibase' }, { label: '?city5', id: 'Q77500', col: 5, type: 'Wikibase' }, { label: '?context5', id: 'Q77500', col: 6, type: 'Wikibase' }, { label: '?country5', id: 'Q77500', col: 7, type: 'Wikibase' }, { label: '?document5', id: 'Q21870', col: 9, type: 'Wikibase' }, { label: '?education5', id: 'Q100631', col: 10, type: 'Wikibase' }, { label: '?event5', id: 'Q77499', col: 11, type: 'Wikibase' }, { label: '?freemasonry5', id: 'Q23197', col: 12, type: 'Wikibase' }, { label: '?group5', id: 'Q77498', col: 13, type: 'Wikibase' }, { label: '?human5', id: 'Q77478', col: 14, type: 'Wikibase' }, { label: '?human work5', id: 'Q77495', col: 15, type: 'Wikibase' }, { label: '?name5', id: 'Q77488', col: 16, type: 'Wikibase' }, { label: '?object5', id: 'Q101755', col: 17, type: 'Wikibase' }, { label: '?organisation5', id: 'Q77501', col: 18, type: 'Wikibase' }, { label: '?people5', id: 'Q77478', col: 19, type: 'Wikibase' }, { label: '?person5', id: 'Q77478', col: 20, type: 'Wikibase' }, { label: '?place5', id: 'Q77500', col: 21, type: 'Wikibase' }, { label: '?printed document5', id: 'Q100626', col: 22, type: 'Wikibase' }, { label: '?profession5', id: 'Q256699', col: 23, type: 'Wikibase' }, { label: '?publication5', id: 'Q77502', col: 24, type: 'Wikibase' }, { label: '?date5', id: '', col: 25, type: \"Time\" }, { label: '?string5', id: '', col: 26, type: \"String\" }, { label: '?amount5', id: '', col: 27, type: \"Quantity\" }]\n]\n\nexport const MUTATOR2: Variable[][] = [\n  [{ label: 'activity', id: 'Q256699', col: 0 }, { label: 'archive', id: 'Q21870', col: 1 }, { label: 'artefact', id: 'Q101755', col: 2 }, { label: 'book', id: 'Q100626', col: 3 }, { label: 'career', id: 'Q77493', col: 4 }, { label: 'city', id: 'Q77500', col: 5 }, { label: 'country', id: 'Q77500', col: 6 }, { label: 'date', id: \"Q77483\", col: 7 }, { label: 'document', id: 'Q21870', col: 8 }, { label: 'education', id: 'Q100631', col: 9 }, { label: 'event', id: 'Q77499', col: 10 }, { label: 'freemasonry', id: 'Q23197', col: 11 }, { label: 'group', id: 'Q77498', col: 12 }, { label: 'human', id: 'Q77478', col: 13 }, { label: 'human work', id: 'Q77495', col: 14 }, { label: 'name', id: 'Q77488', col: 15 }, { label: 'object', id: 'Q101755', col: 16 }, { label: 'organisation', id: 'Q77501', col: 17 }, { label: 'people', id: 'Q77478', col: 18 }, { label: 'person', id: 'Q77478', col: 19 }, { label: 'place', id: 'Q77500', col: 20 }, { label: 'printed document', id: 'Q100626', col: 21 }, { label: 'profession', id: 'Q256699', col: 22 }, { label: 'publication', id: 'Q77502', col: 23 }],\n  [{ label: 'activity1', id: 'Q256699', col: 0 }, { label: 'archive1', id: 'Q21870', col: 1 }, { label: 'artefact1', id: 'Q101755', col: 2 }, { label: 'book1', id: 'Q100626', col: 3 }, { label: 'career1', id: 'Q77493', col: 4 }, { label: 'city1', id: 'Q77500', col: 5 }, { label: 'country1', id: 'Q77500', col: 6 }, { label: 'date1', id: \"Q77483\", col: 7 }, { label: 'document1', id: 'Q21870', col: 8 }, { label: 'education1', id: 'Q100631', col: 9 }, { label: 'event1', id: 'Q77499', col: 10 }, { label: 'freemasonry1', id: 'Q23197', col: 11 }, { label: 'group1', id: 'Q77498', col: 12 }, { label: 'human1', id: 'Q77478', col: 13 }, { label: 'human work1', id: 'Q77495', col: 14 }, { label: 'name1', id: 'Q77488', col: 15 }, { label: 'object1', id: 'Q101755', col: 16 }, { label: 'organisation1', id: 'Q77501', col: 17 }, { label: 'people1', id: 'Q77478', col: 18 }, { label: 'person1', id: 'Q77478', col: 19 }, { label: 'place1', id: 'Q77500', col: 20 }, { label: 'printed document1', id: 'Q100626', col: 21 }, { label: 'profession1', id: 'Q256699', col: 22 }, { label: 'publication1', id: 'Q77502', col: 23 }],\n  [{ label: 'activity2', id: 'Q256699', col: 0 }, { label: 'archive2', id: 'Q21870', col: 1 }, { label: 'artefact2', id: 'Q101755', col: 2 }, { label: 'book2', id: 'Q100626', col: 3 }, { label: 'career2', id: 'Q77493', col: 4 }, { label: 'city2', id: 'Q77500', col: 5 }, { label: 'country2', id: 'Q77500', col: 6 }, { label: 'date2', id: \"Q77483\", col: 7 }, { label: 'document2', id: 'Q21870', col: 8 }, { label: 'education2', id: 'Q100631', col: 9 }, { label: 'event2', id: 'Q77499', col: 10 }, { label: 'freemasonry2', id: 'Q23197', col: 11 }, { label: 'group2', id: 'Q77498', col: 12 }, { label: 'human2', id: 'Q77478', col: 13 }, { label: 'human work2', id: 'Q77495', col: 14 }, { label: 'name2', id: 'Q77488', col: 15 }, { label: 'object2', id: 'Q101755', col: 16 }, { label: 'organisation2', id: 'Q77501', col: 17 }, { label: 'people2', id: 'Q77478', col: 18 }, { label: 'person2', id: 'Q77478', col: 19 }, { label: 'place2', id: 'Q77500', col: 20 }, { label: 'printed document2', id: 'Q100626', col: 21 }, { label: 'profession2', id: 'Q256699', col: 22 }, { label: 'publication2', id: 'Q77502', col: 23 }],\n  [{ label: 'activity3', id: 'Q256699', col: 0 }, { label: 'archive3', id: 'Q21870', col: 1 }, { label: 'artefact3', id: 'Q101755', col: 2 }, { label: 'book3', id: 'Q100626', col: 3 }, { label: 'career3', id: 'Q77493', col: 4 }, { label: 'city3', id: 'Q77500', col: 5 }, { label: 'country3', id: 'Q77500', col: 6 }, { label: 'date3', id: \"Q77483\", col: 7 }, { label: 'document3', id: 'Q21870', col: 8 }, { label: 'education3', id: 'Q100631', col: 9 }, { label: 'event3', id: 'Q77499', col: 10 }, { label: 'freemasonry3', id: 'Q23197', col: 11 }, { label: 'group3', id: 'Q77498', col: 12 }, { label: 'human3', id: 'Q77478', col: 13 }, { label: 'human work3', id: 'Q77495', col: 14 }, { label: 'name3', id: 'Q77488', col: 15 }, { label: 'object3', id: 'Q101755', col: 16 }, { label: 'organisation3', id: 'Q77501', col: 17 }, { label: 'people3', id: 'Q77478', col: 18 }, { label: 'person3', id: 'Q77478', col: 19 }, { label: 'place3', id: 'Q77500', col: 20 }, { label: 'printed document3', id: 'Q100626', col: 21 }, { label: 'profession3', id: 'Q256699', col: 22 }, { label: 'publication3', id: 'Q77502', col: 23 }],\n  [{ label: 'activity4', id: 'Q256699', col: 0 }, { label: 'archive4', id: 'Q21870', col: 1 }, { label: 'artefact4', id: 'Q101755', col: 2 }, { label: 'book4', id: 'Q100626', col: 3 }, { label: 'career4', id: 'Q77493', col: 4 }, { label: 'city4', id: 'Q77500', col: 5 }, { label: 'country4', id: 'Q77500', col: 6 }, { label: 'date4', id: \"Q77483\", col: 7 }, { label: 'document4', id: 'Q21870', col: 8 }, { label: 'education4', id: 'Q100631', col: 9 }, { label: 'event4', id: 'Q77499', col: 10 }, { label: 'freemasonry4', id: 'Q23197', col: 11 }, { label: 'group4', id: 'Q77498', col: 12 }, { label: 'human4', id: 'Q77478', col: 13 }, { label: 'human work4', id: 'Q77495', col: 14 }, { label: 'name4', id: 'Q77488', col: 15 }, { label: 'object4', id: 'Q101755', col: 16 }, { label: 'organisation4', id: 'Q77501', col: 17 }, { label: 'people4', id: 'Q77478', col: 18 }, { label: 'person4', id: 'Q77478', col: 19 }, { label: 'place4', id: 'Q77500', col: 20 }, { label: 'printed document4', id: 'Q100626', col: 21 }, { label: 'profession4', id: 'Q256699', col: 22 }, { label: 'publication4', id: 'Q77502', col: 23 }],\n  [{ label: 'activity5', id: 'Q256699', col: 0 }, { label: 'archive5', id: 'Q21870', col: 1 }, { label: 'artefact5', id: 'Q101755', col: 2 }, { label: 'book5', id: 'Q100626', col: 3 }, { label: 'career5', id: 'Q77493', col: 4 }, { label: 'city5', id: 'Q77500', col: 5 }, { label: 'country5', id: 'Q77500', col: 6 }, { label: 'date5', id: \"Q77483\", col: 7 }, { label: 'document5', id: 'Q21870', col: 8 }, { label: 'education5', id: 'Q100631', col: 9 }, { label: 'event5', id: 'Q77499', col: 10 }, { label: 'freemasonry5', id: 'Q23197', col: 11 }, { label: 'group5', id: 'Q77498', col: 12 }, { label: 'human5', id: 'Q77478', col: 13 }, { label: 'human work5', id: 'Q77495', col: 14 }, { label: 'name5', id: 'Q77488', col: 15 }, { label: 'object5', id: 'Q101755', col: 16 }, { label: 'organisation5', id: 'Q77501', col: 17 }, { label: 'people5', id: 'Q77478', col: 18 }, { label: 'person5', id: 'Q77478', col: 19 }, { label: 'place5', id: 'Q77500', col: 20 }, { label: 'printed document5', id: 'Q100626', col: 21 }, { label: 'profession5', id: 'Q256699', col: 22 }, { label: 'publication5', id: 'Q77502', col: 23 }]\n]\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WikiDisplayService.html":{"url":"injectables/WikiDisplayService.html","title":"injectable - WikiDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WikiDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/display/services/wiki-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setWikiDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/display/services/wiki-display.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setWikiDisplay\n                        \n                    \n                \n            \n            \n                \nsetWikiDisplay(item, wikis)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/display/services/wiki-display.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                wikis\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/display/services/wiki-display.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WikiDisplayService {\n\n  url = \"\";\n\n  constructor() { }\n\n  setWikiDisplay(item, wikis) {\n\n    if (item[0].sitelinks !== undefined) {\n\n    if (item[0].sitelinks.commonswiki !== undefined) {\n      wikis.push(item[0].sitelinks.commonswiki);\n    }\n    if (item[0].sitelinks.enwiki !== undefined) {\n      wikis.push(item[0].sitelinks.enwiki);\n    }\n    if (item[0].sitelinks.dewiki !== undefined) {\n      wikis.push(item[0].sitelinks.dewiki);\n    }\n    if (item[0].sitelinks.frwiki !== undefined) {\n      wikis.push(item[0].sitelinks.frwiki);\n    }\n    if (item[0].sitelinks.itwiki !== undefined) {\n      wikis.push(item[0].sitelinks.itwiki);\n    }\n    if (item[0].sitelinks.nlwiki !== undefined) {\n      wikis.push(item[0].sitelinks.nlwiki);\n    }\n    if (item[0].sitelinks.eswiki !== undefined) {\n      wikis.push(item[0].sitelinks.eswiki);\n    }\n    if (item[0].sitelinks.wikidatawiki !== undefined) {\n      wikis.push(item[0].sitelinks.wikidatawiki);\n    }\n    if (item[0].sitelinks.enwikisource !== undefined) {\n      this.url = item[0].sitelinks.enwikisource.title.replace(/ /g, \"_\")+\"_\";\n      this.url = \"https://en.wikisource.org/wiki/\" + this.url;\n      item[0].sitelinks.enwikisource.url=this.url;\n      wikis.push(item[0].sitelinks.enwikisource);\n    }\n    if (item[0].sitelinks.dewikisource !== undefined) {\n      this.url = item[0].sitelinks.dewikisource.title.replace(/ /g, \"_\")+\"_\";\n      this.url = \"https://de.wikisource.org/wiki/\" + this.url;\n      item[0].sitelinks.dewikisource.url=this.url;\n      wikis.push(item[0].sitelinks.dewikisource);\n    }\n    if (item[0].sitelinks.frwikisource !== undefined) {\n      this.url = item[0].sitelinks.frwikisource.title.replace(/ /g, \"_\")+\"_\";\n      this.url = \"https://fr.wikisource.org/wiki/\" + this.url;\n      item[0].sitelinks.frwikisource.url=this.url;\n      wikis.push(item[0].sitelinks.frwikisource);\n      }\n    }\n    return wikis\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app-routing.module.ts\n            \n            variable\n            Routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app-routing.module.ts\n            \n            variable\n            routingConfiguration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            Lang\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/back-list-id.pipe.ts\n            \n            pipe\n            BackListIdPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/change-undefined-item.pipe.ts\n            \n            pipe\n            ChangeUndefinedItemPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/comma-join.pipe.ts\n            \n            pipe\n            CommaJoinPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/custom-date.pipe.ts\n            \n            pipe\n            CustomDatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/display/career-display/career-display.component.ts\n            \n            component\n            CareerDisplayComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/display/display.component.ts\n            \n            component\n            DisplayComponent\n            \n                0 %\n                (0/150)\n            \n        \n        \n            \n                \n                src/app/display/education-display/education-display.component.ts\n            \n            component\n            EducationDisplayComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/display/header-display/header-display.component.ts\n            \n            component\n            HeaderDisplayComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/display/iframes-display.service.ts\n            \n            injectable\n            IframesDisplayService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/display/iframes-display/iframes-display.component.ts\n            \n            component\n            IframesDisplayComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/display/item-info/item-info.component.ts\n            \n            component\n            ItemInfoComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/display/main-display/main-display.component.ts\n            \n            component\n            MainDisplayComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/display/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/display/services/block-display.service.ts\n            \n            injectable\n            BlockDisplayService\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/app/display/services/iframes-display.service.ts\n            \n            injectable\n            IframesDisplayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/display/services/item-display-dispatcher.service.ts\n            \n            injectable\n            ItemDisplayDispatcherService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/display/services/item-display-dispatcher.service.ts\n            \n            interface\n            DisplayFlags\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/display/services/map.service.ts\n            \n            injectable\n            MapService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            ACTIVITY_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            CAREER_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            DOCUMENT_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            EDUCATION_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            EVENT_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            EXTERNAL_LINKS_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            HEADER_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            ORG_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            PERSON_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            PLACE_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            SOCIABILITY_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/display/services/properties-display.config.ts\n            \n            variable\n            SOURCES_DISPLAY_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/display/services/selected-items-list.service.ts\n            \n            injectable\n            SelectedItemListService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/display/services/technicalities-display.service.ts\n            \n            injectable\n            TechnicalitiesDisplayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/display/services/transcription.service.ts\n            \n            injectable\n            TranscriptionService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/display/services/wiki-display.service.ts\n            \n            injectable\n            WikiDisplayService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/display/sociability-display/sociability-display.component.ts\n            \n            component\n            SociabilityDisplayComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/display/sources-display/sources-display.component.ts\n            \n            component\n            SourcesDisplayComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/display/sparql0-display/sparql0-display.component.ts\n            \n            component\n            Sparql0DisplayComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/display/sparql1-display/sparql1-display.component.ts\n            \n            component\n            Sparql1DisplayComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/display/sparql2-display/sparql2-display.component.ts\n            \n            component\n            Sparql2DisplayComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/display/sparql3-display/sparql3-display.component.ts\n            \n            component\n            Sparql3DisplayComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/display/sparql4-display/sparql4-display.component.ts\n            \n            component\n            Sparql4DisplayComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/display/text-display/text-display.component.ts\n            \n            component\n            TextDisplayComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/gregorian-to-julian-calendar.service.ts\n            \n            injectable\n            GregorianToJulianCalendarService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/harmonia-universalis/harmonia-universalis.component.ts\n            \n            component\n            HarmoniaUniversalisComponent\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/app/harmonia-universalis/harmonia-universalis.component.ts\n            \n            interface\n            HU\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/harmonia-universalis/services/hu-database.service.ts\n            \n            injectable\n            HuDatabaseService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/join.pipe.ts\n            \n            pipe\n            JoinPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/paris-search/paris-search.component.ts\n            \n            component\n            ParisSearchComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/paris-search/services/paris-database.service.ts\n            \n            injectable\n            ParisDatabaseService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/safe-html.pipe.ts\n            \n            pipe\n            SafeHtmlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/advanced-search-list/advanced-search-list.component.ts\n            \n            component\n            AdvancedSearchListComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/advanced-search.component.ts\n            \n            component\n            AdvancedSearchComponent\n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/bank.ts\n            \n            interface\n            Bank\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/bank.ts\n            \n            variable\n            BANKS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/item-type2.ts\n            \n            interface\n            ItemType\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/item-type2.ts\n            \n            variable\n            ITEMTYPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/project-select/project-select.component.ts\n            \n            component\n            ProjectSelectComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/quantity-variable.ts\n            \n            interface\n            QuantityVariable\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/quantity-variable.ts\n            \n            variable\n            QUANTITYVARIABLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/services/mutator.service.ts\n            \n            injectable\n            MutatorService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/services/new-data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/services/statements-controls.service.ts\n            \n            injectable\n            StatementsControlsService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/statement-search/statement-search.component#.ts\n            \n            component\n            StatementSearchComponent\n            \n                8 %\n                (12/136)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/statement-search/statement-search.component#.ts\n            \n            interface\n            Qualifier\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/statement-search/statement-search.component#.ts\n            \n            interface\n            Statement\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/statement-search/statement-search.component.ts\n            \n            component\n            StatementSearchComponent\n            \n                10 %\n                (12/114)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/statement-search/statement-search.component.ts\n            \n            interface\n            Qualifier\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/statement-search/statement-search.component.ts\n            \n            interface\n            Statement\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/string-variable.ts\n            \n            interface\n            StringVariable\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/string-variable.ts\n            \n            variable\n            STRINGVARIABLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/time-property.ts\n            \n            interface\n            TimeProperty\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/time-property.ts\n            \n            variable\n            TIMEPROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/time-variable.ts\n            \n            interface\n            TimeVariable\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/time-variable.ts\n            \n            variable\n            TIMEVARIABLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/variable.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/variable.ts\n            \n            interface\n            Selection\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/variable.ts\n            \n            interface\n            Statement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/search/advanced-search/variable.ts\n            \n            interface\n            Variable\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/variable.ts\n            \n            variable\n            _MUTATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/variable.ts\n            \n            variable\n            ITEMTYPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/variable.ts\n            \n            variable\n            LITERALS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/variable.ts\n            \n            variable\n            MUTATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/variable.ts\n            \n            variable\n            MUTATOR2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/search/advanced-search/variable.ts\n            \n            variable\n            QUALIFIERTYPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/selected-lang.service.ts\n            \n            injectable\n            SelectedLangService\n            \n                4 %\n                (2/45)\n            \n        \n        \n            \n                \n                src/app/services/#set-item-to-display.service.ts\n            \n            injectable\n            SetItemToDisplayService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/array-to-csv.service.ts\n            \n            injectable\n            ArrayToCsvService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/back-list-details.service.ts\n            \n            injectable\n            BackListDetailsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/back-list.service.ts\n            \n            injectable\n            BackListService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/create-complete-item.service.ts\n            \n            injectable\n            CreateCompleteItemService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/create-item-to-display.service.ts\n            \n            injectable\n            CreateItemToDisplayService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/services/details.service (2).ts\n            \n            injectable\n            DetailsService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/details.service.ts\n            \n            injectable\n            DetailsService\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                src/app/services/details.service.ts\n            \n            interface\n            Claim\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/details.service.ts\n            \n            interface\n            ClaimsObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/details.service.ts\n            \n            interface\n            Entity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/details.service.ts\n            \n            interface\n            Reference\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/details.service.ts\n            \n            interface\n            Snak\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/factgrid-subtitles.service.ts\n            \n            injectable\n            FactgridSubtitlesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/item-details.service.ts\n            \n            injectable\n            ItemDetailsService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/services/item-info.service.ts\n            \n            injectable\n            ItemInfoService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/item-sparql.service (2).ts\n            \n            injectable\n            ItemSparqlService\n            \n                4 %\n                (2/42)\n            \n        \n        \n            \n                \n                src/app/services/item-sparql.service.ts\n            \n            injectable\n            ItemSparqlService\n            \n                3 %\n                (2/62)\n            \n        \n        \n            \n                \n                src/app/services/list-details.service.ts\n            \n            injectable\n            ListDetailsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/longest-word.service.ts\n            \n            injectable\n            LongestWordService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/projects-list.service.ts\n            \n            injectable\n            ProjectsListService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/properties-list.service.ts\n            \n            injectable\n            PropertiesListService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/property-details.service.ts\n            \n            injectable\n            PropertyDetailsService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/request.service.ts\n            \n            injectable\n            RequestService\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                src/app/services/role-of-object-rendering.service.ts\n            \n            injectable\n            RoleOfObjectRenderingService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/search-engine.service.ts\n            \n            injectable\n            SearchEngineService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/selected-item-list.service.ts\n            \n            injectable\n            SelectedItemListService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/set-data.service.ts\n            \n            injectable\n            SetDataService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/services/set-language.service.ts\n            \n            injectable\n            SetLanguageService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/services/set-selected-items-list.service.ts\n            \n            injectable\n            SetSelectedItemsListService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/set-subtitle.service.ts\n            \n            injectable\n            SetSubtitleService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/set-time.service.ts\n            \n            injectable\n            SetTimeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/transcript-display.service.ts\n            \n            injectable\n            TranscriptDisplayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/typology.service.ts\n            \n            injectable\n            TypologyService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/slide-up-animation.ts\n            \n            variable\n            SlideUpAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/sorting-data-accessor.service.ts\n            \n            injectable\n            SortingDataAccessorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/sortingAccessor.ts\n            \n            variable\n            caseInsensitive\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/sortingAccessor.ts\n            \n            variable\n            nestedCaseInsensitive\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/sortingAccessor.ts\n            \n            variable\n            nestedProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/sortingAccessor.ts\n            \n            variable\n            sortingDataAccessor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/sparql-interceptor.service.ts\n            \n            interceptor\n            SparqlInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/unit.pipe.ts\n            \n            pipe\n            UnitPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~18.2.7\n        \n            @angular/cdk : ^18.2.8\n        \n            @angular/cli : ~18.2.7\n        \n            @angular/common : ~18.2.7\n        \n            @angular/compiler : ~18.2.7\n        \n            @angular/compiler-cli : ~18.2.7\n        \n            @angular/core : ~18.2.7\n        \n            @angular/forms : ~18.2.7\n        \n            @angular/material : ^18.2.8\n        \n            @angular/material-moment-adapter : ^18.2.8\n        \n            @angular/platform-browser : ~18.2.7\n        \n            @angular/platform-browser-dynamic : ~18.2.7\n        \n            @angular/router : ~18.2.7\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @types/file-saver : ^2.0.5\n        \n            angular-cli-ghpages : ^2.0.3\n        \n            cors : ^2.8.5\n        \n            express : ^4.18.2\n        \n            file-saver-es : ^2.0.5\n        \n            install : ^0.13.0\n        \n            leaflet : ^1.9.2\n        \n            moment : ^2.29.4\n        \n            ngx-mat-select-search : ^7.0.7\n        \n            node : ^23.7.0\n        \n            node.js : ^0.0.1-security\n        \n            npm : ^10.2.3\n        \n            rxjs : ^7.5.7\n        \n            sass : ^1.56.1\n        \n            tslib : ^2.4.1\n        \n            typescript : ~5.5.4\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFactGrid Viewer\nby Bruno Belhoste\n\nDescription\nThis tool provides a user interface to browse the FactGrid database https://database.factgrid.de/ (Wikibase instance). \nFor more details see https://blog.factgrid.de/archives/2684.\nTechnologies used\nTypescript\nAngular\nThis project was generated with Angular CLI version 16.1.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    47 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
