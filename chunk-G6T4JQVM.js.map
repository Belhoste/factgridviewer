{
  "version": 3,
  "sources": ["src/app/services/set-language.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SetLanguageService {\r\n\r\n  constructor() { }\r\n\r\n  lang: string;\r\n\r\n  /** Utility: get the value for a field in the preferred language, with fallback */\r\n  private getLangValue(\r\n    obj: any,\r\n    lang: string,\r\n    fallbackOrder: string[] = ['en', 'fr', 'de', 'es', 'zh', 'zh-hans', 'zh-hant', 'it', 'hu']\r\n  ) {\r\n    if (!obj) return undefined;\r\n\r\n    // Si la langue demandée est \"zh\", privilégier zh puis zh-hans, puis zh-hant\r\n\r\n\r\n    // Si la langue demandée est \"zh\", privilégier zh puis zh-cn\r\n    if (lang === 'zh') {\r\n      if (obj['zh']) return obj['zh'];\r\n      if (obj['zh-cn']) return obj['zh-cn'];\r\n      if (obj['zh-hans']) return obj['zh-hans'];\r\n      if (obj['zh-hant']) return obj['zh-hant'];\r\n    }\r\n    // Si la langue demandée est \"zh-hans\" (chinois simplifié explicite)\r\n    if (lang === 'zh-hans') {\r\n      if (obj['zh-hans']) return obj['zh-hans'];\r\n      if (obj['zh']) return obj['zh'];\r\n      if (obj['zh-hant']) return obj['zh-hant'];\r\n    }\r\n    // Si la langue demandée est \"zh-hant\" (chinois traditionnel explicite)\r\n    if (lang === 'zh-hant') {\r\n      if (obj['zh-hant']) return obj['zh-hant'];\r\n      if (obj['zh']) return obj['zh'];\r\n      if (obj['zh-hans']) return obj['zh-hans'];\r\n    }\r\n\r\n    // Fallback général\r\n    if (obj[lang]) return obj[lang];\r\n    for (const code of fallbackOrder) {\r\n      if (obj[code]) return obj[code];\r\n    }\r\n    // fallback: première langue disponible\r\n    const keys = Object.keys(obj);\r\n    return keys.length > 0 ? obj[keys[0]] : undefined;\r\n  }\r\n\r\n\r\n  /** Utility: get aliases as array of strings for the preferred language */\r\n  private getAliases(obj: any, lang: string, fallbackOrder: string[] = ['en', 'fr', 'de', 'es', 'it', 'hu', 'zh']) {\r\n    const aliasesObj = obj && obj[lang];\r\n    return Array.isArray(aliasesObj) ? aliasesObj.map(a => a.value) : [];\r\n  }\r\n\r\n  /** Returns an array of items with id, label, description, aliases, claims, sitelinks, datatype */\r\n  item(res, lang) {\r\n    if (!Array.isArray(res)) return [];\r\n    return res.map(item => {\r\n      const labelObj = this.getLangValue(item.labels, lang);\r\n      const descObj = this.getLangValue(item.descriptions, lang);\r\n      const aliases = this.getAliases(item.aliases, lang);\r\n\r\n      const label = labelObj?.value ?? undefined;\r\n      const description = descObj?.value ?? undefined;\r\n\r\n      // Only add properties if they exist\r\n      const result: any = {\r\n        id: item.id,\r\n        label,\r\n        claims: item.claims ?? {},\r\n        sitelinks: item.sitelinks,\r\n        datatype: item.datatype\r\n      };\r\n      if (description) result.description = description;\r\n      if (aliases.length > 0) result.aliases = aliases;\r\n      return result;\r\n    });\r\n  }\r\n\r\n  /** Returns an array of items with id, label, description, aliases, externalLink */\r\n  item2(res, lang) {\r\n    if (!Array.isArray(res)) return [];\r\n    return res.map(item => {\r\n      const labelObj = this.getLangValue(item.labels, lang);\r\n      const descObj = this.getLangValue(item.descriptions, lang);\r\n      const aliases = this.getAliases(item.aliases, lang);\r\n\r\n      const label = labelObj?.value ?? undefined;\r\n      const description = descObj?.value ?? undefined;\r\n\r\n      let externalLink: string | undefined;\r\n      if (item.datatype === \"external-id\" && item.claims?.P236?.[0]?.mainsnak?.datavalue?.value) {\r\n        externalLink = item.claims.P236[0].mainsnak.datavalue.value;\r\n      }\r\n\r\n      const result: any = {\r\n        id: item.id,\r\n        label,\r\n        externalLink\r\n      };\r\n      if (description) result.description = description;\r\n      if (aliases.length > 0) result.aliases = aliases;\r\n      return result;\r\n    });\r\n  }\r\n\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
