{"version":3,"sources":["src/app/services/back-list-details.service.ts","src/app/display/services/iframes-display.service.ts","src/app/services/details.service.ts","src/app/services/property-details.service.ts","src/app/services/set-time.service.ts","src/app/services/factgrid-subtitles.service.ts","src/app/services/typology.service.ts","src/app/services/item-info.service.ts","src/app/services/longest-word.service.ts","src/app/services/item-details.service.ts","src/app/services/create-item-to-display.service.ts","src/app/services/item-sparql.service.ts","src/app/services/create-complete-item.service.ts","src/app/services/set-data.service.ts","src/app/services/transcript-display.service.ts","src/app/services/back-list.service.ts","src/app/services/set-selected-items-list.service.ts","src/app/display/services/transcription.service.ts","src/app/join.pipe.ts","src/app/display/item-info/item-info.component.ts","src/app/display/item-info/item-info.component.html","src/app/unit.pipe.ts","src/app/display/header-display/header-display.component.ts","src/app/display/header-display/header-display.component.html","src/app/display/career-display/career-display.component.ts","src/app/display/career-display/career-display.component.html","src/app/display/main-display/main-display.component.ts","src/app/display/main-display/main-display.component.html","src/app/display/education-display/education-display.component.ts","src/app/display/education-display/education-display.component.html","src/app/display/sociability-display/sociability-display.component.ts","src/app/display/sociability-display/sociability-display.component.html","src/app/display/sources-display/sources-display.component.ts","src/app/display/sources-display/sources-display.component.html","src/app/display/sparql0-display/sparql0-display.component.ts","src/app/display/sparql0-display/sparql0-display.component.html","src/app/display/sparql1-display/sparql1-display.component.ts","src/app/display/sparql1-display/sparql1-display.component.html","src/app/display/sparql2-display/sparql2-display.component.ts","src/app/display/sparql2-display/sparql2-display.component.html","src/app/display/sparql3-display/sparql3-display.component.ts","src/app/display/sparql3-display/sparql3-display.component.html","src/app/display/sparql4-display/sparql4-display.component.ts","src/app/display/sparql4-display/sparql4-display.component.html","src/app/display/iframes-display/iframes-display.component.ts","src/app/display/iframes-display/iframes-display.component.html","src/app/display/text-display/text-display.component.ts","src/app/display/text-display/text-display.component.html","node_modules/@angular/material/fesm2022/tabs.mjs","src/app/config/dispatcher.config.ts","src/app/display/services/block-display.service.ts","src/app/display/services/technicalities-display.service.ts","src/app/display/services/wiki-display.service.ts","src/app/display/services/item-display-dispatcher.service.ts","src/app/display/display.component.ts","src/app/display/display.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BackListDetailsService {\r\n\r\n  constructor() { }\r\n\r\nsetBackList(list:any[]) {\r\n  let backList:any[]=[];\r\n  for (let i=0;i<list.length;i++){\r\n  backList[i]={id:\"\", label:\"\"};\r\n  let u = list[i]['title'];\r\n  backList[i].id=u.substring(5);\r\n  if(list[i]['entityterms']===undefined){continue};\r\n  backList[i].label=list[i]['entityterms']['label'][0];\r\n  }\r\n  return backList\r\n}\r\n\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IframesDisplayService {\r\n \r\nsetIframesDisplay(item, iframes){\r\n\r\n  if (item[0].claims.P309 !==undefined){  //FactGrid table of contents     \r\n    console.log(item[0].claims.P309[0].mainsnak.datavalue.value);\r\n    item[1].splice(item[1].indexOf(\"P309\"),1);\r\n    for (let i=0; i<item[0].claims.P309[i].length; i++){\r\n      item[0].claims.P309[i].mainsnak.datatype=item[0].claims.P309[i].mainsnak.datavalue.value;\r\n      item[0].claims.P309.iframe[i]= item[0].claims.P309[i].mainsnak.datavalue.value ;}\r\n      iframes.push(item[0].claims.P309);\r\n      console.log(iframes);\r\n  }\r\n\r\n  if (item[0].claims.P320 !==undefined){  //FactGrid list of members     \r\n    item[1].splice(item[1].indexOf(\"P320\"),1);\r\n    for (let i=0; i<item[0].claims.P320[i].length; i++){\r\n      item[0].claims.P320[i].mainsnak.datatype=item[0].claims.P320[i].mainsnak.datavalue.value;\r\n      item[0].claims.P320.iframe[i]= item[0].claims.P320[i].mainsnak.datavalue.value ;}\r\n      iframes.push(item[0].claims.P320);\r\n    }\r\n  \r\n    \r\n  if (item[0].claims.P679 !==undefined){ //house numbers\r\n    item[1].splice(item[1].indexOf(\"P679\"),1);\r\n    for (let i=0; i<item[0].claims.P679[i].length; i++){\r\n      item[0].claims.P679[i].mainsnak.datatype=item[0].claims.P679[i].mainsnak.datavalue.value;\r\n      item[0].claims.P679.iframe[i]= item[0].claims.P679[i].mainsnak.datavalue.value ;}\r\n      iframes.push(item[0].claims.P679);\r\n    }\r\n    \r\n  if (item[0].claims.P693 !==undefined){ //FactGrid map visualisation\r\n    item[1].splice(item[1].indexOf(\"P693\"),1); \r\n    for (let i=0; i<item[0].claims.P693[i].length; i++){   \r\n      item[0].claims.P693[i].mainsnak.datatype=item[0].claims.P693[i].mainsnak.datavalue.value;\r\n      item[0].claims.P693.iframe[i]= item[0].claims.P693[i].mainsnak.datavalue.value ;}\r\n      iframes.push(item[0].claims.P693);\r\n    } \r\n\r\n  if (item[0].claims.P720 !==undefined){ //FactGrid list\r\n    item[1].splice(item[1].indexOf(\"P720\"),1);    \r\n    for (let i=0; i<item[0].claims.P720[i].length; i++){\r\n      item[0].claims.P720[i].mainsnak.datatype=item[0].claims.P720[i].mainsnak.datavalue.value;\r\n      item[0].claims.P720.iframe[i]= item[0].claims.P720[i].mainsnak.datavalue.value ;}\r\n      iframes.push(item[0].claims.P720);\r\n    } \r\n    }\r\n\r\n    setHouseNumbersQuery(res){\r\n      res = res.replace(\"item%\",\"viewer%\");\r\n      res = res.replace(\"%7D%7D\",`%7D%20BIND%28STRAFTER%28STR%28%3Fitem%29%2C%20STR%28wd%3A%29%29%20AS%20%3FitemId%29%20BIND%28IRI%28CONCAT%28%22https%3A%2F%2Fdatabase.factgrid.de%2Fviewer%2Fitem%2F%22%2C%20%3FitemId%29%29%20AS%20%3Fviewer%29%7D%0A`);\r\n      return res\r\n    }\r\n  }\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { RequestService } from './request.service';\r\nimport { SetLanguageService } from './set-language.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\n/** Interfaces pour un typage fort */\r\ninterface Snak {\r\n  property: string;\r\n  datatype?: string;\r\n  datavalue?: { value: { id: string } };\r\n}\r\n\r\ninterface Reference {\r\n  'snaks-order': string[];\r\n  snaks: { [key: string]: Snak[] };\r\n}\r\n\r\ninterface Claim {\r\n  mainsnak: Snak;\r\n  qualifiers?: { [key: string]: Snak[] };\r\n  'qualifiers-order'?: string[];\r\n  references?: Reference[];\r\n}\r\n\r\ninterface ClaimsObject {\r\n  [property: string]: Claim[];\r\n}\r\n\r\ninterface Entity {\r\n  claims: ClaimsObject;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetailsService {\r\n  private requestService = inject(RequestService);\r\n  private setLanguage = inject(SetLanguageService);\r\n\r\n  /**\r\n   * Retourne la liste unique des propriétés de référence d’une entité.\r\n   */\r\n  getReferenceProperties(u: Entity): string[] {\r\n    const referenceProperties = Object.values(u.claims)\r\n      .flatMap(val => val)\r\n      .flatMap(claim => claim.references ?? [])\r\n      .flatMap(ref => ref['snaks-order'] ?? []);\r\n    return this.uniq(referenceProperties);\r\n  }\r\n\r\n  /**\r\n   * Crée la liste des propriétés dans les statements, qualifiers et références.\r\n   * Retourne un Observable des propriétés enrichies.\r\n   */\r\n  setPropertiesList(u: Entity): Observable<any[]> {\r\n    const claimsArray = Object.values(u.claims);\r\n\r\n    let properties = claimsArray.flatMap(val => val.map(claim => claim.mainsnak.property));\r\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\r\n    let referenceProperties = claimsArray\r\n      .flatMap(val => val)\r\n      .flatMap(claim => claim.references ?? [])\r\n      .flatMap(ref => ref['snaks-order'] ?? []);\r\n\r\n    qualifierProperties = this.uniq(qualifierProperties);\r\n    referenceProperties = this.uniq(referenceProperties);\r\n\r\n    properties = this.uniq([...properties, ...qualifierProperties, ...referenceProperties]);\r\n    const propertiesChunks = this.lessThanFifty(properties);\r\n\r\n    if (propertiesChunks.length > 8) {\r\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 propriétés)'));\r\n    }\r\n\r\n    const propertiesLists = propertiesChunks.map(list => this.createList(list).slice(1));\r\n    while (propertiesLists.length < 8) propertiesLists.push('');\r\n\r\n    return this.requestService.requestProperties(propertiesLists)\r\n      .pipe(\r\n        map(res => this.mergeObjects(res as any[])), // <--- cast ici\r\n        map(res => Object.values(res))\r\n      );\r\n\r\n  }\r\n\r\n  /**\r\n   * Crée la liste des items dans les statements, qualifiers et références.\r\n   * Retourne un Observable des items enrichis.\r\n   */\r\n  setItemsList(u: Entity): Observable<any[]> {\r\n    const claimsArray = Object.values(u.claims);\r\n\r\n    let items = claimsArray.flatMap(val =>\r\n      val\r\n        .filter(claim => claim.mainsnak.datavalue?.value?.id !== undefined)\r\n        .map(claim => claim.mainsnak.datavalue.value.id)\r\n    );\r\n\r\n    let qualifierProperties = claimsArray.flatMap(val => val.flatMap(claim => claim['qualifiers-order'] ?? []));\r\n    let referenceProperties = claimsArray\r\n      .flatMap(val => val)\r\n      .flatMap(claim => claim.references ?? [])\r\n      .flatMap(ref => ref['snaks-order'] ?? []);\r\n\r\n    qualifierProperties = this.uniq(qualifierProperties);\r\n    referenceProperties = this.uniq(referenceProperties);\r\n\r\n    const qualifierItems = this.setQualifierItems(claimsArray, qualifierProperties).filter(Boolean);\r\n    const referenceItems = this.setReferenceItems(claimsArray, referenceProperties).filter(Boolean);\r\n\r\n    items = this.uniq([...items, ...qualifierItems, ...referenceItems]);\r\n    const itemsChunks = this.lessThanFifty(items);\r\n\r\n    if (itemsChunks.length > 8) {\r\n      return throwError(() => new Error('Trop de statements (plus de 8 groupes de 50 items)'));\r\n    }\r\n\r\n    const itemsLists = itemsChunks.map(list => this.createList(list).slice(1));\r\n    while (itemsLists.length < 8) itemsLists.push('');\r\n\r\n    return this.requestService.requestItems(itemsLists)\r\n      .pipe(\r\n        map(res => this.mergeObjects(res as any[])), // <--- cast ici\r\n        map(res => Object.values(res))\r\n      );\r\n\r\n  }\r\n\r\n  /**\r\n   * Retourne la liste unique des propriétés dans les qualifiers et références.\r\n   */\r\n  setProperties(arr: any[]): string[] {\r\n    return arr.flatMap(obj => Object.keys(obj));\r\n  }\r\n\r\n  /**\r\n   * Fusionne les objets contenus dans un tableau pour créer un seul objet.\r\n   */\r\n  mergeObjects(res: any[]): any {\r\n    // Filtrer les objets valides qui possèdent la propriété 'entities'\r\n    const validObjects = (res ?? []).filter(obj => obj && obj.entities);\r\n    let u = validObjects.length > 0 ? validObjects[0].entities : {};\r\n    for (const obj of validObjects.slice(1)) {\r\n      u = { ...u, ...obj.entities };\r\n    }\r\n    return u;\r\n  }\r\n\r\n\r\n  /**\r\n   * Retourne la liste des items dans les qualifiers.\r\n   */\r\n  setQualifierItems(values: Claim[][], arr: string[]): string[] {\r\n    arr = arr.filter(Boolean);\r\n    const result: string[] = [];\r\n    for (const val of values) {\r\n      for (const claim of val) {\r\n        for (const prop of arr) {\r\n          if (claim.qualifiers?.[prop]) {\r\n            for (const snak of claim.qualifiers[prop]) {\r\n              if (snak?.datavalue?.value?.id) {\r\n                result.push(snak.datavalue.value.id);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Retourne la liste des items dans les références.\r\n   */\r\n  setReferenceItems(values: Claim[][], arr: string[]): string[] {\r\n    arr = arr.filter(Boolean);\r\n    const result: string[] = [];\r\n    for (const val of values) {\r\n      for (const claim of val) {\r\n        if (!claim.references) continue;\r\n        for (const ref of claim.references) {\r\n          for (const prop of arr) {\r\n            const snaks = ref.snaks[prop];\r\n            if (snaks && snaks[0]?.datatype === 'wikibase-item') {\r\n              for (const snak of snaks) {\r\n                if (snak?.datavalue?.value?.id) {\r\n                  result.push(snak.datavalue.value.id);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Crée une chaîne de caractères à partir d’un tableau, séparée par '|'.\r\n   */\r\n  createList(arr: string[]): string {\r\n    return Array.from(new Set(arr)).reduce((list, item) => list + '|' + item, '');\r\n  }\r\n\r\n  /**\r\n   * Retourne un tableau sans doublons.\r\n   */\r\n  uniq<T>(a: T[]): T[] {\r\n    return Array.from(new Set(a.filter(Boolean)));\r\n  }\r\n\r\n  /**\r\n   * Découpe un tableau en sous-tableaux de 50 éléments maximum.\r\n   */\r\n  lessThanFifty<T>(arr: T[]): T[][] {\r\n    const result: T[][] = [];\r\n    let u = arr.length;\r\n    let tempArr = arr.slice();\r\n    while (u > 0) {\r\n      result.push(tempArr.slice(0, 50));\r\n      tempArr = tempArr.slice(50);\r\n      u = tempArr.length;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PropertyDetailsService {\r\n\r\n  constructor() { }\r\n\r\n  addClaimPropertyDetails(properties, re, itemProperties) { // add labels, descriptions and aliases to the properties in the mainsnaks\r\n   for (let i = 0; i < itemProperties.length; i++) {\r\n      for (let j = 0; j < properties.length; j++) {     \r\n        if (itemProperties[i] === properties[j].id) {\r\n          re.claims[itemProperties[i]].id = properties[j].id;\r\n          re.claims[itemProperties[i]].label = properties[j].label;\r\n          if (properties[j].description !== undefined)\r\n            re.claims[itemProperties[i]].description = properties[j].description;\r\n          if (properties[j].aliases !== undefined)\r\n            re.claims[itemProperties[i]].aliases = properties[j].aliases;\r\n          if (properties[j].externalLink !== undefined)\r\n            re.claims[itemProperties[i]].externalLink = properties[j].externalLink;\r\n        }\r\n      }\r\n    }\r\n    return re\r\n  }\r\n\r\n  addQualifierPropertyDetails(properties, re, itemProperties) {  //add labels, definitions and aliases of properties in the qualifiers/* \r\n    let qualifierPropertyArray = [];\r\n    for (let i = 0; i < itemProperties.length; i++) {\r\n      for (let j = 0; j < re.claims[itemProperties[i]].length; j++) {\r\n        if (re.claims[itemProperties[i]][j].qualifiers === undefined) { continue }\r\n        qualifierPropertyArray = Object.keys(re.claims[itemProperties[i]][j].qualifiers);\r\n        let qualifiersArray = Object.values(re.claims[itemProperties[i]][j].qualifiers);\r\n        for (let l = 0; l < properties.length; l++) {\r\n          for (let k = 0; k < qualifierPropertyArray.length; k++) {\r\n            let prop = qualifierPropertyArray[k]\r\n            if (qualifiersArray[k][0].property === properties[l].id) {\r\n              re.claims[itemProperties[i]][j].qualifiers[prop].label = properties[l].label;\r\n              if (properties[l].description !== undefined)\r\n                re.claims[itemProperties[i]][j].qualifiers[prop].description = properties[l].description;\r\n              if (properties[l].aliases !== undefined)\r\n                re.claims[itemProperties[i]][j].qualifiers[prop].aliases = properties[l].aliases;\r\n              if (properties[l].externalLink !== undefined)\r\n                re.claims[itemProperties[i]][j].qualifiers[prop].externalLink = properties[l].externalLink;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n    return [re, qualifierPropertyArray]\r\n  }\r\n\r\n  /**\r\n  * Ajoute à chaque statement un tableau qualifiers2 enrichi avec les métadonnées\r\n  * (id, label, description, aliases, externalLink) des propriétés de qualifiers,\r\n  * en respectant l'ordre défini dans \"qualifiers-order\".\r\n  *\r\n  * @param properties      Liste des propriétés enrichies (avec label, description, etc.)\r\n  * @param re              L'objet item à enrichir\r\n  * @param itemProperties  Liste des propriétés à traiter (ex: [\"P247\", ...])\r\n  * @returns               L'objet item enrichi\r\n  */\r\n\r\n\r\n  addQualifier2PropertyDetails(properties, re, itemProperties) {\r\n    for (let i = 0; i < itemProperties.length; i++) {\r\n      const prop = itemProperties[i];\r\n      if (!re.claims[prop]) continue;\r\n\r\n      for (let j = 0; j < re.claims[prop].length; j++) {\r\n        const statement = re.claims[prop][j];\r\n        if (!statement.qualifiers) continue;\r\n\r\n        statement.qualifiers2 = [];\r\n        const qualifierOrder = statement[\"qualifiers-order\"];\r\n        if (!Array.isArray(qualifierOrder)) continue;\r\n\r\n        for (let k = 0; k < qualifierOrder.length; k++) {\r\n          const qualifierId = qualifierOrder[k];\r\n          const propertyMeta = properties.find(p => p.id === qualifierId);\r\n\r\n          // Toujours créer un nouvel objet pour chaque qualifier2\r\n          const qualifier2Obj = {\r\n            id: propertyMeta ? propertyMeta.id : qualifierId,\r\n            label: propertyMeta ? propertyMeta.label : qualifierId,\r\n            description: propertyMeta ? propertyMeta.description : \"\",\r\n            aliases: propertyMeta ? propertyMeta.aliases : [],\r\n            externalLink: propertyMeta ? propertyMeta.externalLink : undefined,\r\n            value: {\r\n              id: undefined,\r\n              time: undefined,\r\n              string: undefined,\r\n              label: undefined,\r\n              description: undefined,\r\n              aliases: undefined\r\n            }\r\n          };\r\n\r\n          statement.qualifiers2.push(qualifier2Obj);\r\n        }\r\n      }\r\n    }\r\n    return re;\r\n  }\r\n\r\n\r\n\r\n\r\n  addReferencePropertyDetails(properties, re, itemProperties) {  //add labels, definitions and aliases of properties in the references\r\n    for (let i = 0; i < itemProperties.length; i++) {\r\n      for (let j = 0; j < re.claims[itemProperties[i]].length; j++) {\r\n        if (re.claims[itemProperties[i]][j].references === undefined) { continue }\r\n        for (let k = 0; k < re.claims[itemProperties[i]][j].references.length; k++) {\r\n          let props = Object.keys(re.claims[itemProperties[i]][j].references[k].snaks);\r\n          for (let l = 0; l < props.length; l++) {\r\n            for (let m = 0; m < properties.length; m++) {\r\n              if (props[l] === properties[m].id) {\r\n                if (re.claims[itemProperties[i]][j].references[k].snaks[props[l]][0] !== undefined) {\r\n                  re.claims[itemProperties[i]][j].references[k].snaks[props[l]][0].label = properties[m].label;\r\n                  if (properties[m].description !== undefined)\r\n                    re.claims[itemProperties[i]][j].references[k].snaks[props[l]][0].description = properties[m].description;\r\n                  if (properties[m].aliases !== undefined)\r\n                    re.claims[itemProperties[i]][j].references[k].snaks[props[l]][0].aliases = properties[m].aliases;\r\n                  if (properties[m].externalLink !== undefined)\r\n                    re.claims[itemProperties[i]][j].references[k].snaks[props[l]][0].externalLink = properties[m].externalLink;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return re\r\n  }\r\n\r\n  addReference2PropertyDetails(properties, re, itemProperties) {  //add labels, definitions and aliases of properties to the new array references2\r\n    let references2PropertyArray = [];// à verifier si c'est correct; peut-être plusieurs arrays de propriétés\r\n    let references2: any[] = [];\r\n    for (let i = 0; i < itemProperties.length; i++) {\r\n      for (let j = 0; j < re.claims[itemProperties[i]].length; j++) {\r\n        if (re.claims[itemProperties[i]][j].references === undefined) { continue }\r\n        re.claims[itemProperties[i]][j].references2 = [];\r\n        for (let k = 0; k < re.claims[itemProperties[i]][j].references.length; k++) {  //boucle sur les references relatives au claim itemProperties[i][j]\r\n          re.claims[itemProperties[i]][j].references2[k] = [];\r\n          references2[k] = [];\r\n          let props = re.claims[itemProperties[i]][j].references[k][\"snaks-order\"];\r\n          for (let r = 0; r < props.length; r++) {\r\n            let reference = re.claims[itemProperties[i]][j].references[k].snaks[props[r]][0]; //ici on sélectionne l'array des propriétés relatives aux références ci-dessus\r\n            references2[k][r] = { datatype: undefined, id: undefined, label: undefined, description: undefined, aliases: undefined };   //ici on définit l'objet item reference                                                \r\n            references2[k][r].datatype = reference.datatype;\r\n            references2[k][r].id = reference.property;\r\n            references2[k][r].label = reference.label;\r\n            if (reference.description !== undefined)\r\n              references2[k][r].description = reference.description;\r\n            if (reference.aliases !== undefined)\r\n              references2[k][r].aliases = reference.aliases;\r\n            if (reference.externalLink !== undefined)\r\n              references2[k][r].externalLink = reference.externalLink;\r\n            re.claims[itemProperties[i]][j].references2[k].push(references2[k][r]); //ici je peuple references2 avec les l items\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return re\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SetTimeService {\r\n\r\n  constructor() { }\r\n\r\n  private months: { [lang: string]: string[] } = {\r\n    en: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n    fr: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\r\n    de: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\r\n    es: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\r\n    it: [\"gennaio\", \"febbraio\", \"marzo\", \"aprile\", \"maggio\", \"giugno\", \"luglio\", \"agosto\", \"settembre\", \"ottobre\", \"novembre\", \"dicembre\"]\r\n  };\r\n\r\n  private daySuffix(day: string, lang: string): string {\r\n    if (day === \"00\") return \"\";\r\n    if (lang === \"en\") return day === \"01\" ? \"1st\" : String(Number(day));\r\n    if (lang === \"fr\") return day === \"01\" ? \"1er\" : String(Number(day));\r\n    return String(Number(day));\r\n  }\r\n\r\n  setDate(time: string, lang: string): string {\r\n    if (!time) return \"\";\r\n\r\n    const era = time.charAt(0);\r\n    let date = time.substring(1);\r\n    let year = date.substring(0, 4).replace(/^0+/, '') || \"0\";\r\n    const monthNum = date.substring(5, 7);\r\n    const dayNum = date.substring(8, 10);\r\n\r\n    // Format day and month\r\n    const day = this.daySuffix(dayNum, lang);\r\n    const monthIdx = parseInt(monthNum, 10) - 1;\r\n    const month = monthNum !== \"00\" && this.months[lang]?.[monthIdx] ? this.months[lang][monthIdx] : \"\";\r\n\r\n    // Date string by language\r\n    let firstPart = \"\";\r\n    if (day && month) {\r\n      if (lang === \"de\") firstPart = `${day}. ${month} `;\r\n      else if (lang === \"es\") firstPart = `${day} de ${month} de `;\r\n      else firstPart = `${day} ${month} `;\r\n    } else if (month) {\r\n      firstPart = `${month} `;\r\n    }\r\n\r\n    let result = `${firstPart}${year}`;\r\n\r\n    // Era suffixes\r\n    if (era === \"-\") {\r\n      const suffixes = { en: \"BCE\", de: \"v. d. Z.\", fr: \"AEC\", es: \"a.e.c.\", it: \"a. C.\" };\r\n      result += \" \" + (suffixes[lang] || \"BCE\");\r\n    } else if (era === \"+\" && Number(year) < 500) {\r\n      const suffixes = { en: \"CE\", de: \"n. d. Z.\", fr: \"EC\", es: \"e.c.\", it: \"CE\" };\r\n      result += \" \" + (suffixes[lang] || \"CE\");\r\n    }\r\n\r\n    return result.trim();\r\n  }\r\n}\r\n","//service to set the subtitles of the FactGrid queries. It is used in the item-details.service.ts\r\n\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FactgridSubtitlesService {\r\n  private lang = inject(SelectedLangService);\r\n\r\n\r\n  //TODO: pass the lang selection to the SelectedLangService\r\n\r\n  setSubtitle1(re,propertyId,lang){  //to add a subtitle with a condition on the property\r\n  if (propertyId === \"P320\"){\r\n   re.claims[propertyId].sparql = \"List of members\";\r\n   if ( lang === \"de\") {re.claims[propertyId].sparql = \"Mitgliederverzeichnis\"}\r\n   else if ( lang === \"fr\") {re.claims[propertyId].sparql = \"Liste des membres\"}\r\n   else if ( lang === \"es\") {re.claims[propertyId].sparql = \"Lista de miembros\"}\r\n   else if (lang === \"it\") {re.claims[propertyId].sparql = \"Elenco dei membri\"}\r\n    else if (lang === \"hu\") {re.claims[propertyId].sparql = \"A tagok listája\"};\r\n  }\r\n  if ( lang === \"en\") {re.claims[propertyId].other = \"further\"}\r\n  else if ( lang === \"de\") {re.claims[propertyId].other = \"weiteren\"}\r\n  else if ( lang === \"fr\") {re.claims[propertyId].other = \"autres\"}\r\n  else if ( lang === \"es\") {re.claims[propertyId].other = \"más\"}\r\n   else if ( lang === \"it\") {re.claims[propertyId].other = \"di più\"}\r\n   else if ( lang === \"hu\") {re.claims[propertyId].other = \"további\"};\r\n // if ( lang === \"en\") {re.claims[propertyId].place = \"place\"}\r\n // else if ( lang === \"de\") {re.claims[propertyId].place = \"Ort\"}\r\n // else if ( lang === \"fr\") {re.claims[propertyId].place = \"lieu\"};\r\n  if ( lang === \"en\") {re.claims[propertyId].sources = \"Sources\"}\r\n  else if ( lang === \"de\") {re.claims[propertyId].sources = \"Quellen\"}\r\n  else if ( lang === \"fr\") {re.claims[propertyId].sources = \"Sources\"}\r\n  else if ( lang === \"es\") {re.claims[propertyId].sources = \"Fuentes\"}\r\n  else if ( lang === \"it\") {re.claims[propertyId].sources = \"Fonti\"}\r\n  else if ( lang === \"hu\") {re.claims[propertyId].sources = \"Források\"};\r\n  }\r\n\r\nsetSubtitle2(re,propertyId,number,lang){  //to add a subtitle with a condition on the value of a property (in general the property P2)\r\n  let j = number;\r\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q7\") { //person\r\n    re.claims[propertyId].person = \"person\";\r\n    if ( lang === \"en\") {re.claims[propertyId].main = \"Life and family\"}\r\n    else if ( lang === \"de\") {re.claims[propertyId].main = \"Leben und Familie\"}\r\n    else if ( lang === \"fr\") {re.claims[propertyId].main = \"Vie et famille\"}\r\n    else if ( lang === \"es\") {re.claims[propertyId].main = \"Vida y familia\"}\r\n    else if ( lang === \"it\") {re.claims[propertyId].main = \"Vita e famiglia\"}\r\n    else if ( lang === \"hu\") {re.claims[propertyId].main = \"Élet és család\"};\r\n\r\n    if ( lang === \"en\") {re.claims[propertyId].training = \"Education\"}\r\n    else if ( lang === \"de\") {re.claims[propertyId].training = \"Ausbildung\"}\r\n    else if ( lang === \"fr\") {re.claims[propertyId].training = \"Éducation\"}\r\n    else if ( lang === \"es\") {re.claims[propertyId].training = \"Educación\"}\r\n    else if ( lang === \"it\") {re.claims[propertyId].training = \"Educazione\"}\r\n    else if ( lang === \"hu\") {re.claims[propertyId].training = \"Oktatás\"};\r\n\r\n    if ( lang === \"en\") {re.claims[propertyId].career = \"Career and activities\"}\r\n    else if ( lang === \"de\") {re.claims[propertyId].career = \"Beruf und Aktivitäten\"}\r\n    else if ( lang === \"fr\") {re.claims[propertyId].career = \"Carrière et activités\"}\r\n    else if ( lang === \"es\") {re.claims[propertyId].career = \"Carrera y actividades\"}\r\n    else if ( lang === \"it\") {re.claims[propertyId].career = \"Carriera e attività\"}\r\n    else if ( lang === \"hu\") {re.claims[propertyId].career = \"Karrier és tevékenységek\"};\r\n\r\n\r\n    if ( lang === \"en\") {re.claims[propertyId].sociability = \"Sociability and culture\"}\r\n    else if ( lang === \"de\") {re.claims[propertyId].sociability = \"Soziabilität und Kultur\"}\r\n    else if ( lang === \"fr\") {re.claims[propertyId].sociability = \"Sociabilité et culture\"}\r\n    else if ( lang === \"es\") {re.claims[propertyId].sociability = \"Sociabilidad y cultura\"}\r\n    else if ( lang === \"it\") {re.claims[propertyId].sociability = \"Sociabilità e cultura\"}\r\n    else if ( lang === \"hu\") {re.claims[propertyId].sociability = \"Szociabilitás és kultúra\"};\r\n      }\r\n /*   if (re.claims[propertyId][j].mainsnak.datavalue.value.id !== \"Q7\") { //person\r\n      re.claims[propertyId].person = undefined;\r\n      re.claims[propertyId].training = undefined;\r\n      re.claims[propertyId].career = undefined;\r\n      re.claims[propertyId].sociability = undefined;\r\n       } ;\r\n*/\r\n\r\n   if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q22\") { //basic object\r\n      if ( lang === \"en\") {re.claims[propertyId].main = \"Basic object\"}\r\n      else if ( lang === \"de\") {re.claims[propertyId].main = \"Fundamentalobjekt\"}\r\n      else if ( lang === \"fr\") {re.claims[propertyId].main = \"Objet de base\"}\r\n      else if ( lang === \"es\") {re.claims[propertyId].main = \"Objeto básico\"}\r\n      else if ( lang === \"it\") {re.claims[propertyId].main = \"Oggetto di base\"}\r\n      else if ( lang === \"hu\") {re.claims[propertyId].main = \"Alapobjektum\"};\r\n   };\r\n\r\n\r\n   if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q147829\") { //basic object\r\n    if ( lang === \"en\") {re.claims[propertyId].main = \"Database\"}\r\n    else if ( lang === \"de\") {re.claims[propertyId].main = \"Datenbank\"}\r\n    else if ( lang === \"fr\") {re.claims[propertyId].main = \"Base de données\"}\r\n    else if ( lang === \"es\") {re.claims[propertyId].main = \"Base de datos\"}\r\n    else if ( lang === \"it\") {re.claims[propertyId].main = \"Base dati\"}\r\n    else if ( lang === \"hu\") {re.claims[propertyId].main = \"Adatbázis\"};\r\n   };\r\n\r\n    if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q8\" || \r\n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q11174\" ||\r\n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q21925\" ||\r\n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q164344\") { //place\r\n      re.claims[propertyId].place = \"place\";\r\n      re.claims[propertyId].main = \"Place\";\r\n      if ( lang === \"en\") {re.claims[propertyId].main = \"Place\"}\r\n      else if ( lang === \"de\") {re.claims[propertyId].main = \"Ort\"}\r\n      else if ( lang === \"fr\") {re.claims[propertyId].main = \"Lieu\"}\r\n      else if ( lang === \"es\") {re.claims[propertyId].main = \"Lugar\"}\r\n      else if ( lang === \"it\") {re.claims[propertyId].main = \"Luogo\"}\r\n      else if ( lang === \"hu\") {re.claims[propertyId].main = \"Hely\"};\r\n        };\r\n //   if (re.claims[propertyId][j].mainsnak.datavalue.value.id !== \"Q8\") { //place\r\n //     re.claims[propertyId].place = undefined; }\r\n    if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q9\") { //event\r\n      if ( lang === \"en\") {re.claims[propertyId].main = \"Event\"}\r\n      else if ( lang === \"de\") {re.claims[propertyId].main = \"Ereignis\"}\r\n      else if ( lang === \"fr\") {re.claims[propertyId].main = \"Évènement\"}\r\n      else if ( lang === \"es\") {re.claims[propertyId].main = \"Evento\"}\r\n      else if ( lang === \"it\") {re.claims[propertyId].main = \"Evento\"}\r\n      else if ( lang === \"hu\") {re.claims[propertyId].main = \"Esemény\"};\r\n    }\r\n //   if (re.claims[propertyId][j].mainsnak.datavalue.value.id !== \"Q9\") { //event\r\n //     re.claims[propertyId].event = undefined; }\r\n    if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q12\" || //org\r\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q220833\" ||  \r\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q140806\" ||\r\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q11214\" ) {\r\n      re.claims[propertyId].org = \"org\";\r\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Organisation\"}\r\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Organisation\"}\r\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Organisation\"}\r\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Organización\"}\r\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Organizzazione\"}\r\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Szervezet\"};\r\n          }\r\n  //  else re.claims[propertyId].org = undefined;\r\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q20\" ||\r\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q257227\") { //publication\r\n      re.claims[propertyId].document = \"publication\";\r\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Print publication\"}\r\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Druckpublikation\"}\r\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Publication imprimée\"}\r\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Publicación impresa\"}\r\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Pubblicazione stampata\"}\r\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Nyomtatott kiadvány\"};\r\n      }\r\n // if (re.claims[propertyId][j].mainsnak.datavalue.value.id !== \"Q20\") { //publication\r\n //     re.claims[propertyId].document = undefined; }\r\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q146602\" || //activity\r\n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q21909\" ||\r\n    re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q37073\") {\r\n      re.claims[propertyId].activity = \"activity\";\r\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Activity\"}\r\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Aktivität\"}\r\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Activité\"}\r\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Activitad\"}\r\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Attività\"}\r\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Tevékenység\"};\r\n      }\r\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q10671\" || //document\r\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q21407\") {\r\n      re.claims[propertyId].document = \"document\";\r\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Document\"}\r\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Dokument\"}\r\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Document\"}\r\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Documento\"}\r\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Documento\"}\r\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Dokumentum\"};\r\n         }\r\n  if (re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q10671\" || //FactGrid query\r\n      re.claims[propertyId][j].mainsnak.datavalue.value.id == \"Q21407\") {\r\n      re.claims[propertyId].document = \"document\";\r\n        if ( lang === \"en\") {re.claims[propertyId].main = \"Document\"}\r\n        else if ( lang === \"de\") {re.claims[propertyId].main = \"Dokument\"}\r\n        else if ( lang === \"fr\") {re.claims[propertyId].main = \"Document\"}\r\n        else if ( lang === \"es\") {re.claims[propertyId].main = \"Documento\"}\r\n        else if ( lang === \"it\") {re.claims[propertyId].main = \"Documento\"}\r\n        else if ( lang === \"hu\") {re.claims[propertyId].main = \"Dokumentum\"};\r\n          }\r\n  //  else re.claims[propertyId].document = undefined;\r\n  }\r\n}\r\n\r\n    \r\n","import { Injectable, inject } from '@angular/core';\r\nimport { RequestService } from './request.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TypologyService {\r\n  private request = inject(RequestService);\r\n\r\n\r\ngetValue(id){\r\n  let result = \"\";\r\n  let result2;\r\n  let prefix=\"https://database.factgrid.de/wiki/Special:EntityData/\";\r\n  let suffix=\".json\"; \r\n  let re=prefix+id+suffix;\r\n  this.request.getItem(re)\r\n  .pipe(map(res => { \r\n      Object.values(res[\"entities\"])[0][\"claims\"].P2[0].mainsnak.datavalue.value.id ;\r\n       ;\r\n    }\r\n  ))\r\n //  .subscribe(res => {   console.log(res) }\r\n //  )\r\n   return result\r\n  } \r\n  \r\n\r\n//  console.log(result)\r\n \r\n//    u = Object.values(res[\"entities\"])[0][\"claims\"].P2;\r\n // for (let i=0; i<u.length; i++){\r\n\r\n // res.subscribe (res =>console.log(res));\r\n}\r\n  \r\n\r\n/*  for (let i=0; i<re.claims.P2.length; i++){\r\n   let res = this.request.getItem(prefix+re.claims.P2[i].mainsnak.datavalue.value.id+suffix)\r\n  let u= res.pipe(map(res =>res= Object.values(res.entities)[0][\"claims\"].P2[0].mainsnak.datavalue.value.id));//.pipe(map(res => res[\"claims\"]))\r\n   u.subscribe(res=>{ result.push(res) });\r\n  }*/\r\n  //return result\r\n\r\n\r\n  /*  u = Object.values(res[\"entities\"])[0][\"claims\"].P2 ;\r\n   for (let i=0; i<u.length; i++){\r\n     result.push(u[i].mainsnak.datavalue.value.id)\r\n   }; \r\n   res = result} \r\n   )) */\r\n\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { RequestService } from './request.service';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemInfoService {\r\n  private request = inject(RequestService);\r\n  private lang = inject(SelectedLangService);\r\n\r\n\r\n // selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\r\n\r\n  langService:string = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\";\r\n\r\n  infoListBuilding(item) {\r\n    let id = item.id;\r\n    let instancesListQuery;\r\n    let subclassesListQuery:Observable<any> | undefined ;\r\n    let classesListQuery:Observable<any> | undefined ;\r\n    let natureOfListQuery:Observable<any> | undefined;\r\n    let infoList:any[];\r\n\r\n    instancesListQuery = this.instancesListBuilding(id);\r\n    subclassesListQuery = this.subclassesListBuilding(id)  ;\r\n    classesListQuery = this.classesListBuilding(id);\r\n    natureOfListQuery = this.natureOfListBuilding(id);\r\n  //  result=classesListQuery;\r\n   forkJoin([instancesListQuery,subclassesListQuery,classesListQuery,natureOfListQuery])\r\n  .subscribe(res => {infoList = res, item.infoList = infoList}); //ici on pourrait mettre un behaviorSubject pour l'infolist'\r\n   //item.infolist = result; // I made this change; to be checked .\r\n    //  return result  // the return does'nt seem to be necessary\r\n    \r\n    } \r\n\r\n  instancesListBuilding(id){\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%0AWHERE%20%7B%20%3Fitem%20wdt%3AP2%20wd%3A\";\r\n    let suffix = \"ORDER%20by%20%3FitemLabel\";\r\n    let suffix2 = \"%20%0ALIMIT%20200\";\r\n    let u = this.newSparqlAddress(prefix+id+this.langService+suffix+suffix2);\r\n//    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\r\n //     let u = prefix + id + this.langService + suffix + suffix2;\r\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\r\n        } \r\n\r\n  subclassesListBuilding(id){   \r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%0AWHERE%20%7B%20%3Fitem%20wdt%3AP3%2B%20wd%3A\";\r\n    let suffix = \"ORDER%20by%20%3FitemLabel\";\r\n    let u = this.newSparqlAddress(prefix+id+this.langService+suffix);\r\n  //  return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\r\n //   let u = prefix + id + this.langService + suffix;\r\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));;\r\n     } \r\n     \r\n  classesListBuilding(id){\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%7B%20%0A%3Fitem%20%5E%28wdt%3AP3%2Fwdt%3AP3%2a%29%20wd%3A\";\r\n    let suffix = \"ORDER%20by%20%3FitemLabel\";\r\n    let u = this.newSparqlAddress(prefix+id+this.langService+suffix);\r\n //   return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\r\n //   let u = prefix + id + this.langService + suffix;\r\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));;\r\n      }\r\n\r\n  natureOfListBuilding(id){\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%7B%20%3Fobject%20wdt%3AP3%2a%20%3Fitem%3B%20%5Ewdt%3AP2%20wd%3A\"\r\n    let u = this.newSparqlAddress(prefix+id+this.langService);\r\n //   return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));\r\n //   let u = prefix + id + this.langService;\r\n    return this.request.getList(u).pipe(map(res => this.listFromSparql(res)));;\r\n      }\r\n  \r\n  listFromSparql(res) {\r\n    if (res !== undefined){\r\n    if (res.results !== undefined) {\r\n      for (let i = 0; i < res.results.bindings.length; i++) {\r\n      res.results.bindings[i][\"item\"].id = res.results.bindings[i][\"item\"].value.replace(\r\n        \"https://database.factgrid.de/entity/\", \"\");\r\n        };  \r\n      }\r\n    }\r\n    return res.results.bindings\r\n  }\r\n\r\n newSparqlAddress(address:string) : string { \r\n     \r\n    const newPrefix = \"https://database.factgrid.de/sparql?query=\";\r\n    let oldPrefix = \"https://database.factgrid.de/query/#\";\r\n    if (address.includes('embed.html')){oldPrefix =\"https://database.factgrid.de/query/embed.html#\"};\r\n    if (address !== undefined) address = address.replace(oldPrefix, newPrefix);\r\n    return address\r\n    }\r\n   \r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LongestWordService {\r\n\r\n  constructor() { }\r\n\r\nfindLongestWord(str) {\r\n  var longestWord = str.split(' ').reduce(function(longest, currentWord) {\r\n    return currentWord.length > longest.length ? currentWord : longest;\r\n  }, \"\");\r\n  return longestWord.length;\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { SetTimeService } from './set-time.service';\r\nimport { FactgridSubtitlesService } from './factgrid-subtitles.service'\r\nimport { TypologyService } from './typology.service';\r\nimport { ItemInfoService } from './item-info.service';\r\nimport { LongestWordService } from './longest-word.service'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemDetailsService {\r\n  private setDate = inject(SetTimeService);\r\n  private factgrid = inject(FactgridSubtitlesService);\r\n  private typology = inject(TypologyService);\r\n  private itemInfo = inject(ItemInfoService);\r\n  private longestLength = inject(LongestWordService);\r\n\r\n\r\n  private baseWikimediaURL = 'http://commons.wikimedia.org/wiki/Special:FilePath/';\r\n\r\n  qualifiers2: any[];\r\n\r\n  addLongestWordLength(re) { re.longestWordLength = this.longestLength.findLongestWord(re.label) };\r\n\r\n  addClaimItemDetails(items, re, itemProperties, lang) { // add labels, descriptions and aliases to the items in the mainsnaks   \r\n    for (let i = 0; i < itemProperties.length; i++) {\r\n      let timeOrder = 23000000;\r\n      re.claims[itemProperties[i]].datatype = re.claims[itemProperties[i]][0].mainsnak.datatype;\r\n      //     if(re.claims[itemProperties[i]][0].mainsnak.datatype ==\"external-id\"){re.claims[itemProperties[i]].external =\"1\"}; // add external = \"1\" if external link property\r\n      for (let j = 0; j < re.claims[itemProperties[i]].length; j++) {\r\n        re.claims[itemProperties[i]][j].mainsnak.timeOrder = timeOrder;\r\n        if (re.claims[itemProperties[i]][j].mainsnak.datatype === \"time\") {\r\n          let value = re.claims[itemProperties[i]][j].mainsnak.datavalue.value.time;\r\n          value = value.substring(0, value.length - 10);\r\n          re.claims[itemProperties[i]][j].mainsnak.datavalue.value.date = this.setDate.setDate(value, lang);\r\n        }\r\n        //add typology, that is the nature of the item    \r\n        /*  if(itemProperties[i] === \"P2\"){\r\n            let u =\"\";\r\n           re.claims[itemProperties[i]][j].typology = this.typology.getValue(re.claims[itemProperties[i]][j].mainsnak.datavalue.value.id);\r\n         \r\n          }*/\r\n\r\n        if (itemProperties[i] === \"P189\" || itemProperties[i] === \"P556\" || itemProperties[i] === \"P181\" || itemProperties[i] === \"P1267\") {\r\n          re.claims[itemProperties[i]][j].picture = this.baseWikimediaURL + re.claims[itemProperties[i]][j].mainsnak.datavalue.value\r\n        }\r\n        if (itemProperties[i] === \"P188\") {\r\n          let u = re.claims[itemProperties[i]][j].mainsnak.datavalue.value.substring(0, 5);\r\n          if (u !== \"http:\") {\r\n            re.claims[itemProperties[i]][j].picture = re.claims[itemProperties[i]][j].mainsnak.datavalue.value\r\n          }\r\n        }\r\n        if (itemProperties[i] === \"P320\") {\r\n          re.claims[itemProperties[i]][j].mainsnak.datatype = \"sparql\";\r\n          //   if(re.claims[itemProperties[i]][j].mainsnak.datavalue.value.includes(\"item\")===false){ re.claims[itemProperties[i]][j].mainsnak.datavalue.value=\"undefined\"};\r\n        };\r\n\r\n        this.factgrid.setSubtitle1(re, itemProperties[i], lang); // to set a subtitle\r\n\r\n        if (re.claims[itemProperties[i]][j].mainsnak.datatype !== \"wikibase-item\") { continue }\r\n        let number: number = j;\r\n        this.factgrid.setSubtitle2(re, itemProperties[i], number, lang)\r\n        for (let k = 0; k < items.length; k++) {\r\n          if (re.claims[itemProperties[i]][j].mainsnak.datavalue.value.id === items[k].id) {\r\n            //     re.claims[itemProperties[i]][j].mainsnak.id = items[k].id;\r\n            re.claims[itemProperties[i]][j].mainsnak.label = items[k].label;\r\n            if (items[k].description !== undefined)\r\n              re.claims[itemProperties[i]][j].mainsnak.description = items[k].description;\r\n            items[k].description ? (re.claims[itemProperties[i]][j].mainsnak.separator = \", \") : (re.claims[itemProperties[i]][j].mainsnak.separator = \"\");\r\n            if (items[k].aliases !== undefined)\r\n              re.claims[itemProperties[i]][j].mainsnak.aliases = items[k].aliases;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return re\r\n  }\r\n\r\n  /**\r\n   * Enrichit chaque statement avec qualifiers2 (pour l'affichage)\r\n   * et gère le tri chronologique via timeOrder si un qualifier de type \"time\" existe.\r\n   */\r\n  /**\r\n  * Enrichit chaque statement avec qualifiers2 (pour l'affichage).\r\n  * Pour chaque qualifier, ajoute dans display un objet enrichi (id, label, description, aliases...).\r\n  * Gère aussi le tri chronologique via timeOrder si un qualifier de type \"time\" existe.\r\n  */\r\n  addQualifierItemDetails(items, re, itemProperties, lang) {\r\n    for (const prop of itemProperties) {\r\n      if (!re.claims[prop]) continue;\r\n      for (const statement of re.claims[prop]) {\r\n        if (!statement.qualifiers || !statement.qualifiers2) continue;\r\n\r\n        // Pour chaque propriété de qualifier\r\n        for (const qualifier2 of statement.qualifiers2) {\r\n          const qualifierProp = qualifier2.id;\r\n          const qualifierValues = statement.qualifiers[qualifierProp];\r\n          if (!Array.isArray(qualifierValues)) continue;\r\n\r\n          // Préparation du display enrichi\r\n          const display = [];\r\n\r\n          for (const q of qualifierValues) {\r\n            if (!q) continue;\r\n            if (q.datatype === \"wikibase-item\" && q.datavalue?.value) {\r\n              const val = q.datavalue.value;\r\n              const enriched = items.find(it => it.id === val.id);\r\n              display.push({\r\n                id: val.id,\r\n                label: enriched?.label || val.label || val.id,\r\n                description: enriched?.description || val.description || \"\",\r\n                aliases: enriched?.aliases || val.aliases || [],\r\n                datatype: \"wikibase-item\"\r\n              });\r\n            } else if (q.datatype === \"commonsMedia\" && q.datavalue?.value) {\r\n              display.push({\r\n                label: q.datavalue.value.label || q.datavalue.value,\r\n                description: q.datavalue.value.description || \"\",\r\n                aliases: q.datavalue.value.aliases || [],\r\n                datatype: \"commonsMedia\"\r\n              });\r\n            } else if (q.datatype === \"external-id\" && q.datavalue?.value) {\r\n              display.push({\r\n                value: q.datavalue.value,\r\n                datatype: \"external-id\"\r\n              });\r\n            } else if (q.datatype === \"time\" && q.datavalue?.value) {\r\n              let value = q.datavalue.value.time;\r\n              value = value.substring(0, value.length - 10);\r\n              const date = this.setDate.setDate(value, lang);\r\n              statement.mainsnak.timeOrder = value;\r\n              let era = value.charAt(0);\r\n              statement.mainsnak.timeOrder = Number(value.replace(/\\-/g, \"\").replace(/\\+/g, \"\").substring(0, 8));\r\n              if (era !== \"+\") {\r\n                statement.mainsnak.timeOrder = -Math.abs(statement.mainsnak.timeOrder);\r\n              }\r\n              display.push({\r\n                value,\r\n                date,\r\n                datatype: \"time\"\r\n              });\r\n            } else if (q.datatype === \"quantity\" && q.datavalue?.value) {\r\n              // Gestion du type quantity\r\n              display.push({\r\n                amount: q.datavalue.value.amount,\r\n                unit: q.datavalue.value.unit,\r\n                datatype: \"quantity\"\r\n              });\r\n            } else if (q.datatype === \"string\" && q.datavalue?.value) {\r\n              display.push({\r\n                string: q.datavalue.value,\r\n                datatype: \"string\"\r\n              });\r\n            } else if (q.datatype === \"monolingualtext\" && q.datavalue?.value) {\r\n              display.push({\r\n                string: q.datavalue.value,\r\n                datatype: \"monolingualtext\"\r\n              });\r\n            } else if (q.datavalue?.value) {\r\n              display.push({\r\n                value: q.datavalue.value,\r\n                datatype: q.datatype || \"unknown\"\r\n              });\r\n            }\r\n          }\r\n\r\n          // Ajoute le display enrichi à l'objet de qualifiers2\r\n          qualifier2.display = display;\r\n        }\r\n\r\n        // Si la propriété est \"P2\", on force timeOrder à \"0\"\r\n        if (prop === \"P2\") {\r\n          statement.mainsnak.timeOrder = \"0\";\r\n        }\r\n      }\r\n\r\n      // Tri chronologique des statements si un timeOrder a été trouvé\r\n      if (re.claims[prop].length > 1 && re.claims[prop][0].mainsnak.timeOrder !== undefined) {\r\n        re.claims[prop].sort((a, b) => {\r\n          if (a.mainsnak.timeOrder < b.mainsnak.timeOrder) return -1;\r\n          if (a.mainsnak.timeOrder > b.mainsnak.timeOrder) return 1;\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return re;\r\n  }\r\n\r\n\r\n\r\n\r\n  addReferenceItemDetails(items, re, itemProperties, lang) {  //add labels, definitions and aliases of items in the references\r\n    for (let i = 0; i < itemProperties.length; i++) {\r\n      for (let j = 0; j < re.claims[itemProperties[i]].length; j++) {\r\n        if (re.claims[itemProperties[i]][j].references === undefined) { continue }\r\n        for (let k = 0; k < re.claims[itemProperties[i]][j].references.length; k++) {\r\n          let props = Object.keys(re.claims[itemProperties[i]][j].references[k].snaks);\r\n          for (let l = 0; l < items.length; l++) {\r\n            for (let a = 0; a < props.length; a++) {\r\n              for (let b = 0; b < re.claims[itemProperties[i]][j].references[k].snaks[props[a]].length; b++) {\r\n                if (re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datatype === \"time\") {\r\n                  let value = re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datavalue.value.time;\r\n                  value = value.substring(0, value.length - 10);\r\n                  re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datavalue.value.date = this.setDate.setDate(value, lang);\r\n                }\r\n                if (re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datatype === \"external-id\") {\r\n                  this.setUrl(re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b], props[a]);\r\n                }\r\n                if (re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datatype !== \"wikibase-item\") { continue }\r\n                if (re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datavalue.value.id === items[l].id) {\r\n                  if (re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b] !== undefined) {\r\n                    re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datavalue.value.label = items[l].label;\r\n                    if (items[l].description !== undefined)\r\n                      re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datavalue.value.description = items[l].description;\r\n                    items[l].description ? re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datavalue.value.separator = \", \" : re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datavalue.value.separator = \"\";\r\n                    if (items[l].aliases !== undefined)\r\n                      re.claims[itemProperties[i]][j].references[k].snaks[props[a]][b].datavalue.value.aliases = items[l].aliases;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return re\r\n  }\r\n\r\n  addReference2ItemDetails(items, re, itemProperties) { //add the items of the qualifiers to the array qualifiers     \r\n\r\n    for (let i = 0; i < itemProperties.length; i++) {\r\n      for (let j = 0; j < re.claims[itemProperties[i]].length; j++) {\r\n        if (re.claims[itemProperties[i]][j].references2 === undefined) { continue }\r\n        for (let k = 0; k < re.claims[itemProperties[i]][j].references2.length; k++) {\r\n          for (let l = 0; l < re.claims[itemProperties[i]][j].references.length; l++) {\r\n            let props = Object.keys(re.claims[itemProperties[i]][j].references[l].snaks);\r\n            let referencesArray = Object.values(re.claims[itemProperties[i]][j].references[l].snaks);\r\n            for (let m = 0; m < props.length; m++) {\r\n              if (re.claims[itemProperties[i]][j].references2[k][m] === undefined) { continue };\r\n              let display = []\r\n              for (let n = 0; n < re.claims[itemProperties[i]][j].references[l].snaks[props[m]].length; n++) {\r\n                if (re.claims[itemProperties[i]][j].references2[k][m].id === props[m]) {\r\n                  if (re.claims[itemProperties[i]][j].references[l].snaks[props[m]][n].datavalue.value) {\r\n                    if (re.claims[itemProperties[i]][j].references[l].snaks[props[m]][n].datatype === \"external-id\") {\r\n                      display.push(re.claims[itemProperties[i]][j].references[l].snaks[props[m]][n].datavalue)\r\n                    }\r\n                    else if (re.claims[itemProperties[i]][j].references[l].snaks[props[m]][n].datatype === \"time\") {\r\n                      display.push(re.claims[itemProperties[i]][j].references[l].snaks[props[m]][n].datavalue.value.date)\r\n                    }\r\n                    else { display.push(re.claims[itemProperties[i]][j].references[l].snaks[props[m]][n].datavalue.value) }\r\n                  }\r\n                  re.claims[itemProperties[i]][j].references2[k][m].display = display\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // console.log(re);\r\n    return re\r\n  }\r\n\r\n\r\n\r\n\r\n  addSitelinksDetails(re) {\r\n    if (re.sitelinks.commonswiki !== undefined) {\r\n      let url = re.sitelinks.commonswiki.title.replace(\" \", \"_\");\r\n      re.sitelinks.commonswiki.url = \"https://commons.wikimedia.org/wiki/\" + url\r\n    }\r\n    if (re.sitelinks.enwiki !== undefined) {\r\n      let url = re.sitelinks.enwiki.title.replace(\" \", \"_\");\r\n      re.sitelinks.enwiki.url = \"https://en.wikipedia.org/wiki/\" + url\r\n    }\r\n    if (re.sitelinks.dewiki !== undefined) {\r\n      let url = re.sitelinks.dewiki.title.replace(\" \", \"_\");\r\n      re.sitelinks.dewiki.url = \"https://de.wikipedia.org/wiki/\" + url\r\n    }\r\n    if (re.sitelinks.frwiki !== undefined) {\r\n      let url = re.sitelinks.frwiki.title.replace(\" \", \"_\");\r\n      re.sitelinks.frwiki.url = \"https://fr.wikipedia.org/wiki/\" + url\r\n    }\r\n    if (re.sitelinks.wikidatawiki !== undefined) {\r\n      re.sitelinks.wikidatawiki.url = \"https://www.wikidata.org/wiki/\" + re.sitelinks.wikidatawiki.title\r\n    }\r\n  }\r\n\r\n  addItemInfo(re) {\r\n\r\n    // re.info = this.itemInfo.infoListBuilding(re)\r\n\r\n  }\r\n\r\n  setUrl(u, p) {\r\n\r\n    if (u.externalLink !== undefined) {\r\n\r\n      u.datavalue.link = u.externalLink.replace(\"$1\", u.datavalue.value);\r\n    }\r\n\r\n    if (p === \"P76\") { // id GND\r\n      u.datavalue.link = \"https://explore.gnd.network/gnd/\" + u.datavalue.value;\r\n    };\r\n    if (p === \"P368\") { // id VD16 +\r\n      u.datavalue.link = 'http://gateway-bayern.de/VD16+' + u.datavalue.value;\r\n    };\r\n    if (p === \"P369\") { //id VD17\r\n      u.datavalue.link = 'https://kxp.k10plus.de/DB=1.28/CMD?ACT=SRCHA&IKT=8079&TRM=%27:'\r\n        + u.datavalue.value + \"%27\";\r\n    };\r\n    if (p === \"P370\") {//id VD18\r\n      u.datavalue.link = 'https://kxp.k10plus.de/DB=1.65/CMD?ACT=SRCHA&IKT=8080&TRM=VD18' + u.datavalue.value\r\n    };\r\n    if (p === \"P650\") { // INE ID (Spain)\r\n      let province = u.datavalue.value.slice(0, 2);\r\n      let municipality = u.datavalue.value.slice(2, 5);\r\n      let parish = u.datavalue.value.slice(5, 7);\r\n      let es = u.datavalue.value.slice(7, 9);\r\n      u.datavalue.link = u.externalLink.replace(\"$1\", province);\r\n      u.datavalue.link = u.datavalue.link.replace(\"$2\", municipality);\r\n      u.datavalue.link = u.datavalue.link.replace(\"$3\", parish);\r\n      u.datavalue.link = u.datavalue.link.replace(\"$4\", es);\r\n      u.datavalue.link = u.datavalue.link.replace(\"$5\", \"00\");\r\n    };\r\n    if (p === \"P882\") { // Deusches Rechtswörterbuch\r\n      u.datavalue.link = 'https://drw-www.adw.uni-heidelberg.de/drw-cgi/zeige?index=lemmata&term=' + u.datavalue.value + '&darstellung=V';\r\n    };\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { SetLanguageService } from './set-language.service';\r\nimport { DetailsService } from './details.service';\r\nimport { PropertyDetailsService } from './property-details.service';\r\nimport { ItemDetailsService } from './item-details.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreateItemToDisplayService {\r\n  private setLanguage = inject(SetLanguageService);\r\n  private details = inject(DetailsService);\r\n  private addPropertyDetails = inject(PropertyDetailsService);\r\n  private addItemDetails = inject(ItemDetailsService);\r\n\r\n  createItemToDisplay(re, selectedLang) {\r\n    const itemProperties = Object.keys(re.claims);\r\n\r\n    return forkJoin({\r\n      properties: this.details.setPropertiesList(re),\r\n      items: this.details.setItemsList(re)\r\n    }).pipe(\r\n      map(res => {\r\n        // Prepare property and item metadata in the selected language\r\n        const propertiesDetails = this.setLanguage.item2(res.properties, selectedLang);\r\n        const itemsDetails = this.setLanguage.item2(res.items, selectedLang);\r\n\r\n        // Enrich the claims with all necessary details\r\n        this.enrichClaims(re, propertiesDetails, itemsDetails, itemProperties, selectedLang);\r\n\r\n        // Apply the P820 label transformation\r\n        this.transformClaimsWithP820(re);\r\n\r\n        // Retrieve qualifier and reference property lists\r\n        const qualifierProperties = this.addPropertyDetails.addQualifierPropertyDetails(propertiesDetails, re, itemProperties)[1];\r\n        const referenceProperties = this.details.getReferenceProperties(re);\r\n\r\n        // Build the final item structure\r\n        const item = this.addItemDetails.addReference2ItemDetails(itemsDetails, re, itemProperties);\r\n\r\n        return [item, itemProperties, qualifierProperties, referenceProperties];\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Groups all claim enrichment steps for clarity */\r\n  private enrichClaims(re, propertiesDetails, itemsDetails, itemProperties, selectedLang) {\r\n    this.addItemDetails.addSitelinksDetails(re);\r\n    this.addPropertyDetails.addClaimPropertyDetails(propertiesDetails, re, itemProperties);\r\n    this.addPropertyDetails.addQualifierPropertyDetails(propertiesDetails, re, itemProperties);\r\n    this.addPropertyDetails.addQualifier2PropertyDetails(propertiesDetails, re, itemProperties);\r\n    this.addPropertyDetails.addReferencePropertyDetails(propertiesDetails, re, itemProperties);\r\n    this.addPropertyDetails.addReference2PropertyDetails(propertiesDetails, re, itemProperties);\r\n\r\n    this.addItemDetails.addClaimItemDetails(itemsDetails, re, itemProperties, selectedLang);\r\n    this.addItemDetails.addQualifierItemDetails(itemsDetails, re, itemProperties, selectedLang);\r\n    this.addItemDetails.addReferenceItemDetails(itemsDetails, re, itemProperties, selectedLang);\r\n  }\r\n\r\n  /** Appends the P820 label (lowercase) in parentheses to the statement label and removes the qualifier */\r\n  private transformClaimsWithP820(item: any) {\r\n    let claims = item.claims;\r\n    if (!claims) return;\r\n\r\n    for (const prop of Object.keys(claims)) {\r\n      for (const statement of claims[prop]) {\r\n        if (!statement.qualifiers2 || !statement.qualifiers) continue;\r\n\r\n        const p820Qualifier2 = statement.qualifiers2.find(q => q.id === 'P820');\r\n        if (p820Qualifier2 && p820Qualifier2.display && p820Qualifier2.display.length > 0) {\r\n          // Lowercase the first letter of each label\r\n          const roleLabels = p820Qualifier2.display\r\n            .map(d => d.label ? d.label.charAt(0).toLowerCase() + d.label.slice(1) : '')\r\n            .filter(label => !!label)\r\n            .join(', ');\r\n\r\n          if (roleLabels && statement.mainsnak.label) {\r\n            statement.mainsnak.label += ` (${roleLabels})`;\r\n          } else if (roleLabels) {\r\n            statement.mainsnak.label = `(${roleLabels})`;\r\n          }\r\n        }\r\n\r\n        // Remove the now-unnecessary P820 qualifier\r\n        if (statement.qualifiers['P820']) {\r\n          delete statement.qualifiers['P820'];\r\n        }\r\n        if (statement.qualifiers2) {\r\n          statement.qualifiers2 = statement.qualifiers2.filter(q => q.id !== 'P820');\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { map, takeWhile, tap, switchMap, take, startWith, mergeMap, defaultIfEmpty } from 'rxjs/operators';\r\nimport { Observable, Subject, BehaviorSubject, forkJoin, Subscription, merge, mergeAll, combineLatest, concatAll, iif, of, toArray } from 'rxjs';\r\nimport { RequestService } from './request.service';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ItemSparqlService {\r\n  private request = inject(RequestService);\r\n  private lang = inject(SelectedLangService);\r\n\r\n\r\n  Q12Test: Observable<boolean>; // test subclasses of organisation\r\n  Q37073Test: Observable<boolean>; // test subclasses of career statement\r\n  Q456376Test: Observable<boolean>;  // test subclasses of creator\r\n  Q24499Test: Observable<boolean>; // test adresses\r\n  Q77457Test: Observable<boolean>; // test class of FactGrid properties\r\n  GOVTest: Observable<boolean>; // test GOV\r\n  Q8Test: Observable<boolean>; // test subclasses of locality\r\n  Q16200Test: Observable<boolean>; // test addresses\r\n  Q140759Test: Observable<boolean>; // test health practitioners\r\n  masterTest: Observable<boolean>; //test masters\r\n  listTest: Observable<boolean>; // test list\r\n  setTest: Observable<boolean>; // test set\r\n  superclassTest: Observable<boolean>; // test superclass\r\n  superclass1Test: Observable<boolean>; // test superclass (1st-order subclasses)\r\n\r\n\r\n  sparql0$: Observable<any>;    // for component sparql0\r\n  sparql1$: Observable<any>;    // for component sparql1\r\n  sparql2$: Observable<any>;\r\n  sparql3$: Observable<any>;\r\n  sparql4$: Observable<any[]>;\r\n\r\n\r\n  langService: string = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\" + this.lang.selectedLang + \"%22%2C%22en%22.%20%7D%0A%7D%0A\";\r\n\r\n  itemSparql(item) {  // get a list depending of the type of the item\r\n    let a: boolean = false;\r\n    this.Q16200Test = this.Q16200TestGet(item);  //boolean test for addresses\r\n    this.Q24499Test = this.Q24499TestGet(item);  // boolean test for family names\r\n    this.Q77457Test = this.Q77457TestGet(item);  // boolean test for classes of FactGrid properties\r\n    this.GOVTest = this.GOVTestGet(item); //boolean test for GOV\r\n    //   this.Q8Test = this.sparqlAsk(this.subclassTest(item.claims.P2[0].mainsnak.datavalue.value.id, \"Q8\")).pipe(startWith(false), tap(res => console.log(res)));  // boolean test for Q8 (locality)\r\n    //   this.Q12Test = this.sparqlAsk(this.subclassTest(item.claims.P2[0].mainsnak.datavalue.value.id, \"Q12\")).pipe(startWith(false), tap(res => console.log(res)));  // boolean test for Q12 (organisation)\r\n    //   this.Q37073Test = this.sparqlAsk(this.subclassTest(item.claims.P2[0].mainsnak.datavalue.value.id, \"Q37073\")).pipe(startWith(false), tap(res => console.log(res))); // boolean test for Q37073 (career statemnent)\r\n\r\n    this.Q8Test = this.sparqlAsk(this.subclassTest(item.id, \"Q8\")).pipe(startWith(false));  // boolean test for Q8 (locality)\r\n    //   this.Q12Test = this.sparqlAsk(this.subclassTest(item.id, \"Q12\")).pipe(startWith(false));// boolean test for Q12 (organisation)\r\n\r\n\r\n    this.Q12Test = this.sparqlAsk(this.Q12TestGet(item.id)).pipe(startWith(false));// boolean test for Q12 (organisation)\r\n\r\n    this.Q37073Test = this.sparqlAsk(this.subclassTest(item.id, \"Q37073\")).pipe(startWith(false)); // boolean test for Q37073 (career statemnent)\r\n\r\n    this.Q456376Test = this.activitiesTest(item)[0]; //boolean test for Q456376 (creators)\r\n    this.Q140759Test = this.activitiesTest(item)[1]; // boolean test for Q140759 (health practitioners)\r\n    this.masterTest = this.activitiesTest(item)[2]; // boolean test for masters\r\n    this.listTest = this.sparqlAsk(this.keywordTest(item.id, \"Q945294\")).pipe(startWith(false));  // boolean test for producing a FactGrid list (Q945294)\r\n    this.setTest = this.sparqlAsk(this.keywordTest(item.id, \"Q945258\")).pipe(startWith(false));  //booleean test for item as a set (Q945258)\r\n    this.superclassTest = this.sparqlAsk(this.keywordTest(item.id, \"Q945280\")).pipe(startWith(false)); // boolean test for item as a superclass (Q945280)\r\n    this.superclass1Test = this.sparqlAsk(this.keywordTest(item.id, \"Q960698\")).pipe(startWith(false)); // boolean test for item as a superclass (1st-order subclasses) (Q945280)\r\n\r\n    this.sparql0$ = forkJoin([this.superclassTest, this.superclass1Test]).pipe(switchMap(([test1, test2]) => this.selectSparql0(test1, test2, item)), startWith([undefined, undefined])); // data for the component sparql0: all subclasses of a superclass\r\n\r\n    this.sparql1$ = forkJoin([this.Q12Test, this.Q37073Test, this.Q456376Test, this.Q24499Test, this.Q16200Test, this.Q77457Test]) //data for the component sparql1 : organisations, career statements, creators, family names, addressses, classes of FactGrid properties\r\n      .pipe(switchMap(([test1, test2, test3, test4, test5, test6]) => this.selectSparql1(test1, test2, test3, test4, test5, test6, item)), startWith([undefined, undefined]));\r\n\r\n    this.sparql2$ = forkJoin([this.Q140759Test, this.Q16200Test]).pipe(switchMap(([test1, test2]) => this.selectSparql2(test1, test2, item)), startWith([undefined, undefined]));  // data for the component sparql2 : health pratictioners, current address\r\n\r\n    this.sparql3$ = forkJoin([this.masterTest, this.listTest, this.setTest, this.Q16200Test]).pipe(switchMap(([test1, test2, test3, test4]) => this.selectSparql3(test1, test2, test3, test4, item)), startWith([undefined, undefined]));  // data for the component sparql3 : pupils and students, list of items of a class, parts of a class\r\n\r\n    this.sparql4$ = forkJoin([this.Q8Test, this.GOVTest]).pipe(switchMap(([test1, test2]) => this.selectSparql4(test1, test2, item)), startWith([undefined, undefined]));  // data for the component sparql4: locality (buildings, etc.)\r\n\r\n    item.sparql = forkJoin([this.sparql0$, this.sparql1$, this.sparql2$, this.sparql3$, this.sparql4$])\r\n  }\r\n  /*-------------------------------------------------------- select the sparql query depending on the test --------------------------------------------------------------------------*/\r\n\r\n  // on selectSparql0 and selectSparql1 list and set don't work.\r\n\r\n  selectSparql0(test1, test2, item) {  // select the right result for sparql0\r\n    let result: Observable<any[]>;\r\n    if (test1 === true) {\r\n      result = this.superclassSparql(test1, item);  // all-orders subclasses\r\n    }\r\n    else {\r\n      if (test2 === true) {\r\n        result = this.superclass1Sparql(test2, item);   // 1st-order subclasses\r\n      }\r\n      else result = this.noResult();\r\n    }\r\n    return result\r\n  }\r\n\r\n  selectSparql1(test1, test2, test3, test4, test5, test6, item) {  // select the right result for the component sparql1\r\n    let result: Observable<any[]>;\r\n    if (test5 === true) {  // addresses\r\n      result = this.Q16200Sparql(item);\r\n    }\r\n    else {\r\n      if (test1 === true) {              // members of organisations\r\n        result = this.Q12Sparql(test1, item);\r\n      }\r\n      else {\r\n        if (test2 === true) {       // career statements\r\n          result = this.Q37073Sparql(test2, item)\r\n        }\r\n        else {\r\n          if (test3 === true) {   // creators\r\n            result = this.Q456376Sparql(test3, item)\r\n          }\r\n          else {\r\n            if (test4 === true) {  // family names\r\n              result = this.Q24499Sparql(item);\r\n            }\r\n            else {\r\n              if (test6 === true) {    // properties of a class of Factgrid properties\r\n                result = this.Q77457Sparql(item);\r\n              }\r\n              else result = this.noResult()\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  selectSparql2(test1, test2, item) {  // select the right result for sparql2\r\n    let result: Observable<any[]>;\r\n    if (test1 === true) {\r\n      result = this.Q140759Sparql(test1, item);  // health practitioners\r\n    } else {\r\n      if (test2 === true) {    // current address for an old address\r\n        result = this.noResult();\r\n      }\r\n      else result = this.noResult();\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  selectSparql3(test1, test2, test3, test4, item) {  // select the right result for sparql3\r\n    let result: Observable<any[]>;\r\n    if (test1 === true) {\r\n      result = this.masterSparql(test1, item);  // master\r\n    }\r\n    else {\r\n      if (test2 === true) {\r\n        result = this.listSparql(test2, item);  // FactGrid list\r\n      }\r\n      else {\r\n        if (test3 === true) {\r\n          result = this.setSparql(test3, item);  // set\r\n        }\r\n        else {\r\n          if (test4 === true) {\r\n            result = this.currentAddress(item);\r\n          }\r\n          else result = this.noResult();\r\n        }\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  selectSparql4(test1, test2, item) {\r\n    let result: Observable<any[]>;\r\n    if (test1 === true) {           // locality\r\n      result = this.Q8Sparql(item);\r\n    }\r\n    else {\r\n      if (test2 === true) { // GOV \r\n        result = this.GOVSparql(item);\r\n      }\r\n      else result = this.noResult();\r\n    }\r\n    return result\r\n  }\r\n\r\n\r\n  /**  tests **/\r\n\r\n\r\n  Q24499TestGet(item) {     // to get the boolean test for Q2449 (family name)\r\n    let test: boolean = false;\r\n    if (\r\n      item &&\r\n      item.claims &&\r\n      item.claims.P2 &&\r\n      Array.isArray(item.claims.P2) &&\r\n      item.claims.P2[0] &&\r\n      item.claims.P2[0].mainsnak &&\r\n      item.claims.P2[0].mainsnak.datavalue &&\r\n      item.claims.P2[0].mainsnak.datavalue.value &&\r\n      item.claims.P2[0].mainsnak.datavalue.value.id === \"Q24499\"\r\n    ) {\r\n      test = true;\r\n    }\r\n    return of(test);\r\n  }\r\n\r\n  Q8TestGet(item) {     // to get the boolean test for Q8 (locality); deprecated\r\n    let test: boolean = false;\r\n    if (item.claims.P2[0].mainsnak.datavalue.value.id == \"Q8\") {\r\n      test = true;\r\n    };\r\n    return of(test)\r\n  }\r\n\r\n\r\n  Q16200TestGet(item) {\r\n    let test: boolean = false;\r\n    if (\r\n      item &&\r\n      item.claims &&\r\n      item.claims.P2 &&\r\n      Array.isArray(item.claims.P2) &&\r\n      item.claims.P2[0] &&\r\n      item.claims.P2[0].mainsnak &&\r\n      item.claims.P2[0].mainsnak.datavalue &&\r\n      item.claims.P2[0].mainsnak.datavalue.value &&\r\n      item.claims.P2[0].mainsnak.datavalue.value.id === \"Q16200\"\r\n    ) {\r\n      test = true;\r\n    }\r\n    return of(test);\r\n  }\r\n\r\n\r\n  Q172192TestGet(item) {  // to get the boolean test for Q172192 (list); deprecated\r\n    let test: boolean = false;\r\n    if (item.claims.P2[0].mainsnak.datavalue.value.id == \"Q172192\") {\r\n      test = true;\r\n    };\r\n    return of(test)\r\n  }\r\n\r\n  Q77457TestGet(item) {  // to get the boolean test for Q77457 (class of FactGrid properties)\r\n    let test: boolean = false;\r\n    if (\r\n      item &&\r\n      item.claims &&\r\n      item.claims.P2 &&\r\n      Array.isArray(item.claims.P2) &&\r\n      item.claims.P2[0] &&\r\n      item.claims.P2[0].mainsnak &&\r\n      item.claims.P2[0].mainsnak.datavalue &&\r\n      item.claims.P2[0].mainsnak.datavalue.value &&\r\n      item.claims.P2[0].mainsnak.datavalue.value.id === \"Q77457\"\r\n    ) {\r\n      test = true;\r\n    }    return of(test)\r\n  }\r\n\r\n  GOVTestGet(item) {\r\n    let test: boolean = false;\r\n    if (\r\n      item &&\r\n      item.claims &&\r\n      item.claims.P2 &&\r\n      Array.isArray(item.claims.P2) &&\r\n      item.claims.P2[0] &&\r\n      item.claims.P2[0].mainsnak &&\r\n      item.claims.P2[0].mainsnak.datavalue &&\r\n      item.claims.P2[0].mainsnak.datavalue.value &&\r\n      item.claims.P2[0].mainsnak.datavalue.value.id === \"Q780657\"\r\n    ) {\r\n      test = true;\r\n    }\r\n    return of(test);\r\n  }\r\n\r\n\r\n\r\n  /********************************* queries with specific tests  **********************************************************/\r\n\r\n  Q12Sparql(test, res) {  // query organisation\r\n    if (test === true) {\r\n      let prefix1 = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%3FfLabel%20WHERE%20%7B%20%0A%7B%20%3Fitem%20p%3AP165%20%5Bps%3AP165%20%3Factivity%3B%20pq%3AP267%20wd%3A\"\r\n      let prefix2 = \"%5D%20.%20%7D%20UNION%20%20%20%7B%20%3Fitem%20wdt%3AP91%20wd%3A\";\r\n      let prefix3 = \"%20.%7D%20UNION%20%7B%20%3Fu%20%5Ewdt%3AP165%20%3Fitem%3B%20%20wdt%3AP267%20wd%3A\";\r\n      let prefix4 = \"%20%7D%20UNION%20%7B%20%3Fitem%20wdt%3AP315%20wd%3A\";\r\n      let suffix = \"%20.%20%7D%0A%3Fitem%20wdt%3AP247%20%3Ff\";\r\n      let u = prefix1 + res.id + prefix2 + res.id + prefix3 + res.id + prefix4 + res.id + suffix + this.langService + \"ORDER%20BY%20%3FfLabel\";\r\n      return this.sparqlQuery(u).pipe(map(res => [\"Q12\", this.listFromSparql(res).results.bindings]))\r\n    }\r\n  }\r\n\r\n  Q37073Sparql(test, res) {  // query  career statement\r\n    if (test === true) {\r\n      let prefix1 = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%3FfamilyNameLabel%20WHERE%20%7B%20%0A%20%7B%20%3Fitem%20wdt%3AP165%2Fwdt%3AP3%2a%20wd%3A\";\r\n      let prefix2 = \"%20%7D%20UNION%20%7B%20%3Fitem%20p%3AP165%20%5Bpq%3AP122%20wd%3A\";\r\n      let suffix = \"%5D%20%7D%0A%20%20%20%20%20%20%20OPTIONAL%20%7B%20%3Fitem%20wdt%3AP247%20%3FfamilyName%20%7D\";\r\n      //    let prefix1 = \"https://database.factgrid.de/query/#SELECT%20%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%3FfamilyNameLabel%0A%20%20WITH%20%7B%20SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%7B%0A%20%7B%20%3Fitem%20wdt%3AP165%2Fwdt%3AP3%2a%20wd%3A\";\r\n      //    let prefix2 = \"%20%7D%20%20UNION%20%7B%20%3Fitem%20p%3AP165%20%5Bpq%3AP122%20wd%3A\";\r\n      //   let suffix = \"%5D%20%7D%20%20%0A%20%20%20%20OPTIONAL%20%7B%20%3Fitem%20wdt%3AP247%20%3FfamilyName%20%7D%20.%0A%7D%7D%20AS%20%25results%0AWHERE%20%7B%0A%20include%20%25results\";\r\n      let u = prefix1 + res.id + prefix2 + res.id + suffix +\r\n        this.langService\r\n        + \"ORDER%20by%20%3FfamilyNameLabel%20%0ALIMIT%2010000\";\r\n      return this.sparqlQuery(u).pipe(map(res => [\"Q37073\", this.listFromSparql(res).results.bindings]))\r\n    }\r\n  }\r\n\r\n  Q456376Sparql(test, res) {   // query creators\r\n    if (test === true) {\r\n      let prefix1 = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%3Fyear%0AWHERE%20%7B%20%3Fitem%20%28wdt%3AP21%20%7C%20wdt%3AP552%29%20wd%3A\"\r\n      let prefix2 = \"%20.%0A%20%20OPTIONAL%20%7B%3Fitem%20wdt%3AP222%20%3Fdate%20.%20BIND%28YEAR%28%3Fdate%29%20AS%20%3Fyear%29%20.%7D%0A%20\";\r\n      let u = prefix1 + res.id + prefix2 + this.langService + \"ORDER%20BY%20%3Fyear\";\r\n      return this.sparqlQuery(u).pipe(map(res => [\"Q456376\", this.listFromSparql(res).results.bindings]))\r\n    }\r\n  }\r\n\r\n  Q140759Sparql(test, res) {  //  // query health practioners: the list of their patients\r\n    if (test === true) {\r\n      let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%3FfamilyNameLabel%20WHERE%20%7B%20%3Fitem%20wdt%3AP247%20%3FfamilyName%3B%20wdt%3AP512%20wd%3A\"\r\n      let u = prefix + res.id + this.langService + \"ORDER%20BY%20%3FfamilyNameLabel\";\r\n      return this.sparqlQuery(u).pipe(map(res => [\"Q140759\", this.listFromSparql(res).results.bindings]));\r\n    }\r\n  }\r\n\r\n\r\n  masterSparql(test, res) {  //  // query master: the list of their students and disciplines\r\n    if (test === true) {\r\n      let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%3FfamilyNameLabel%20WHERE%20%7B%20%3Fitem%20wdt%3AP247%20%3FfamilyName%3B%20wdt%3AP161%20wd%3A\"\r\n      let u = prefix + res.id + this.langService + \"ORDER%20BY%20%3FfamilyNameLabel\";\r\n      return this.sparqlQuery(u).pipe(map(res => [\"master\", this.listFromSparql(res).results.bindings]));\r\n    }\r\n  }\r\n\r\n  listSparql(test, res) {  //  // query list of class as list\r\n    if (test === true) {\r\n      let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%7B%20%3Fitem%20wdt%3AP2%2Fwdt%3AP3%2a%20%7C%20wdt%3AP626%2Fwdt%3AP3%2a%20%7C%20wdt%3AP1007%2Fwdt%3AP3%2a%20wd%3A\"\r\n      let u = prefix + res.id + this.langService + \"ORDER%20BY%20%3FitemLabel\";\r\n      return this.sparqlQuery(u).pipe(map(res => [\"Q172192\", this.listFromSparql(res).results.bindings]))\r\n    }\r\n  }\r\n\r\n  setSparql(test, res) {  // query parts of item as set\r\n    if (test === true) {\r\n      let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%7B%20%3Fitem%20wdt%3AP8%20%7C%20wdt%3AP319%20%20wd%3A\"\r\n      let u = prefix + res.id + this.langService + \"ORDER%20BY%20%3FitemLabel\";\r\n      return this.sparqlQuery(u).pipe(map(res => [\"Q945258\", this.listFromSparql(res).results.bindings]))\r\n\r\n    }\r\n  }\r\n\r\n  superclassSparql(test, res) {  // query subclasses of item\r\n    if (test === true) {\r\n      let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%7B%20%3Fitem%20wdt%3AP3%2B%20wd%3A\"\r\n      let u = prefix + res.id + this.langService + \"ORDER%20BY%20%3FitemLabel\";\r\n      return this.sparqlQuery(u).pipe(map(res => [\"Q945280\", this.listFromSparql(res).results.bindings]))\r\n    }\r\n  }\r\n\r\n  superclass1Sparql(test, res) {  // query 1st-order subclasses of item\r\n    if (test === true) {\r\n      let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%7B%20%3Fitem%20wdt%3AP3%20wd%3A\"\r\n      let u = prefix + res.id + this.langService + \"ORDER%20BY%20%3FitemLabel\";\r\n      return this.sparqlQuery(u).pipe(map(res => [\"Q960698\", this.listFromSparql(res).results.bindings]))\r\n    }\r\n  }\r\n\r\n  Q24499Sparql(res) {  // query family name Q24499\r\n    let u = \"\";\r\n    let suffix = \"ORDER%20by%20%3FitemLabel\";\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%20WHERE%20%7B%20%20%3Fitem%20wdt%3AP247%2Fwdt%3AP3%2a%20wd%3A\";\r\n    u = prefix + res.id + this.langService + suffix;\r\n    return this.sparqlQuery(u).pipe(map(res => [\"Q24499\", this.listFromSparql(res).results.bindings]));\r\n  }\r\n\r\n  Q8Sparql(res) {  // query locality\r\n    let u = \"\";\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%0A%7B%3Fitem%20wdt%3AP2%2Fwdt%3AP3%2a%20wd%3AQ160381%3B%20wdt%3AP83%20%7C%20wdt%3AP47%20wd%3A\";\r\n    let suffix = \"ORDER%20by%20%3FitemLabel\";\r\n    u = prefix + res.id + this.langService + suffix;\r\n    return this.sparqlQuery(u).pipe(map(res => [\"Q8\", this.listFromSparql(res).results.bindings]));\r\n  }\r\n\r\n  GOVSparql(res) {  //query GOV\r\n    let u = \"\";\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%20WHERE%20%7B%3Fitem%20wdt%3AP1075%20wd%3A\"\r\n    let suffix = \"ORDER%20by%20%3FitemLabel\";\r\n    u = prefix + res.id + this.langService + suffix;\r\n    return this.sparqlQuery(u).pipe(map(res => [\"GOV\", this.listFromSparql(res).results.bindings]));\r\n  }\r\n\r\n  Q16200Sparql(res) { // query address\r\n    let u = \"\";\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20DISTINCT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20%0AWHERE%20%0A%7B%0A%20%20%3Fitem%20wdt%3AP208%20wd%3A\"\r\n    u = prefix + res.id + this.langService + \"ORDER%20BY%20%3FfitemLabel\";\r\n    return this.sparqlQuery(u).pipe(map(res => [\"Q16200\", this.listFromSparql(res).results.bindings]));\r\n  }\r\n\r\n\r\n  Q77457Sparql(res) {  //  // query class of FactGrid properties: the list of the properties belonging to the class\r\n    let prefix = \"https://database.factgrid.de/query/#SELECT%20%3Fitem%20%3FitemLabel%20%3FitemDescription%20WHERE%20%7B%20%3Fitem%20wdt%3AP8%20wd%3A\"\r\n    let u = prefix + res.id + this.langService + \"ORDER%20BY%20%3FitemLabel\";\r\n    let v = this.sparqlQuery(u).pipe(map(res => [\"Q77457\", this.listFromSparql(res).results.bindings]));\r\n    return v\r\n  }\r\n\r\n\r\n\r\n  /*----------------------------------------- special queries --------------------------------------------*/\r\n\r\n  sparqlQuery(sparql) {\r\n    // sparql query to get a list to display : used in Q8Test(), etc...\r\n    sparql = this.newSparqlAdress(sparql);\r\n    return this.request.getList(sparql).pipe(\r\n      map(res => this.listFromSparql(res)));\r\n  }\r\n\r\n  sparqlAsk(sparql) {    // sparql query for a boolean test;\r\n    let u = \"\";\r\n    let sparqlResult: Observable<any> | undefined;\r\n    let selectedSparql = this.newSparqlAdress(sparql);\r\n    sparqlResult = this.request.getAsk(selectedSparql).pipe(map(res => res.boolean));\r\n    return sparqlResult;\r\n  }\r\n\r\n  currentAddress(item) {\r\n    let u = \"\";\r\n    let lat;\r\n    let lon;\r\n    let sparqlResult: Observable<any> | undefined;\r\n    if (item.claims.P48) {\r\n      lat = item.claims.P48[0].mainsnak.datavalue.value.latitude;\r\n      lon = item.claims.P48[0].mainsnak.datavalue.value.longitude;\r\n      u = \"https://nominatim.openstreetmap.org/reverse?lat=\" + lat + \"&lon=\" + lon + \"&format=json\";\r\n      sparqlResult = this.request.getItem(u);\r\n      return sparqlResult\r\n    }\r\n  }\r\n\r\n  /*-------------------------------------- Tests ----------------------------------------------------*/\r\n\r\n  Q12TestGet(a) {\r\n    let u = \"https://database.factgrid.de/query/#ASK%20%7Bwd%3A\" + a + \"%20wdt%3AP2%2Fwdt%3AP3%2a%20wd%3AQ12.%20FILTER%28NOT%20EXISTS%20%7Bwd%3A\" + a + \"%20wdt%3AP2%2Fwdt%3AP3%2a%20wd%3AQ8%7D%29%20%7D%0A%20\"\r\n    return u\r\n  }\r\n\r\n\r\n  subclassTest(a, type) {  // to test to check whether the class of an item is the subclass of a given superclass (in the hierarchy of classes)\r\n    //  let u = \"https://database.factgrid.de/query/#ASK%20%7Bwd%3A\" + a + \"%20wdt%3AP3%2a%20wd%3A\" + type + \".%7D%0A%20\";\r\n    let u = \"https://database.factgrid.de/query/#ASK%20%7Bwd%3A\" + a + \"%20wdt%3AP2%2Fwdt%3AP3%2a%20wd%3A\" + type + \".%7D%0A%20\";\r\n    return u\r\n  }\r\n\r\n  classTest(a, type) {  // to test to check whether t item is the subclass of a given superclass (in the hierarchy of classes)\r\n    //  let u = \"https://database.factgrid.de/query/#ASK%20%7Bwd%3A\" + a + \"%20wdt%3AP3%2a%20wd%3A\" + type + \".%7D%0A%20\";\r\n    let u = \"https://database.factgrid.de/query/#ASK%20%7Bwd%3A\" + a + \"%20wdt%3AP3%2a%20wd%3A\" + type + \".%7D%0A%20\";\r\n    return u\r\n  }\r\n\r\n  keywordTest(a, type) {  // to test to check whether the item is the subclass of a given superclass (in the hierarchy of classes) or of category OhdAB\r\n    let u = \"https://database.factgrid.de/query/#ASK%7Bwd%3A\" + a + \"%20wdt%3AP1132%20wd%3A\" + type + \"%7D\";\r\n    return u\r\n  }\r\n\r\n  masterSubclassTest(a) { // to check whether an item belongs to a subclass of painter/health care practioners/professors \r\n    let u = \"https://database.factgrid.de/query/#ASK%7BVALUES%3Fsuperclass%7Bwd%3AQ456376%20wd%3AQ140743%20wd%3AQ36765%7Dwd%3A\"\r\n      + a + \"%20wdt%3AP3%2a%3Fsuperclass.%7D\";\r\n    return u\r\n  }\r\n\r\n  activitiesTest(item) {   // extract boolean test out of the array of activities for the right activity, used in \r\n    let Q456376Tests = [];  // test for activity of creator\r\n    let Q140759Tests = [] // test for activity of health care practioner \r\n    let masterTests = [];  // test for activity of master (professor, painter, physician)\r\n    let b: boolean = false; // in case item.claims.P165 is undefined;\r\n    if (item &&\r\n      item.claims &&\r\n      item.claims.P165 &&\r\n      Array.isArray(item.claims.P165) &&\r\n      item.claims.P165.length > 0) {   // to fill the array Q456376Tests\r\n      for (let i = 0; i < item.claims.P165.length; i++) {\r\n        Q456376Tests.push(this.sparqlAsk(this.classTest(item.claims.P165[i].mainsnak.datavalue.value.id, \"Q456376\")).pipe(startWith(false))); //array of boolean tests for the activiy of creator (Q456376)\r\n        Q140759Tests.push(this.sparqlAsk(this.classTest(item.claims.P165[i].mainsnak.datavalue.value.id, \"Q140759\")).pipe(startWith(false))); //array of boolean tests for the activity of health care practitioner (Q140759)\r\n        masterTests.push(this.sparqlAsk(this.masterSubclassTest(item.claims.P165[i].mainsnak.datavalue.value.id)).pipe(startWith(false))); //array of boolean tests for the activiy of master\r\n      }\r\n    } else { Q456376Tests.push(of(b)); Q140759Tests.push(of(b)), masterTests.push(of(b)) };\r\n    let u0 = forkJoin(Q456376Tests).pipe(switchMap(res => this.testArrayGet(res)));  //boolean test for Q456376 (creators)\r\n    let u1 = forkJoin(Q140759Tests).pipe(switchMap(res => this.testArrayGet(res)));  //boolean test for Q140759 (health care practitioner);\r\n    let u2 = forkJoin(masterTests).pipe(switchMap(res => this.testArrayGet(res)));  //booelean test for master\r\n    return [u0, u1, u2]\r\n  }\r\n\r\n  /*----------------------------------------------- handlers --------------------------------------------------------*/\r\n\r\n  testArrayGet(res) {   // get the boolean test in the array of boolean tests, used in activitiesTest\r\n    let result\r\n    for (let i = 0; i < res.length; i++) {\r\n      if (res[i] === true) {\r\n        result = res[i];\r\n        break\r\n      } else { result = false }\r\n    }\r\n    return of(result)\r\n  }\r\n\r\n  newSparqlAdress(address: string): string {   // to create the right address for sparql query\r\n    const newPrefix = \"https://database.factgrid.de/sparql?query=\";\r\n    let oldPrefix = \"https://database.factgrid.de/query/#\";\r\n    if (address.includes('embed.html')) { oldPrefix = \"https://database.factgrid.de/query/embed.html#\" };\r\n    if (address !== undefined) address = address.replace(oldPrefix, newPrefix);\r\n    return address\r\n  }\r\n\r\n  listFromSparql(res) {  // to transform the sparql response into a list to display (used in sparqlQuery())\r\n    if (res !== undefined) {\r\n      if (res.results !== undefined) {\r\n        for (let i = 0; i < res.results.bindings.length; i++) {\r\n          //      let itemDescription = { value: \"\"};\r\n          //       if(res.results.bindings[i][\"itemDescription\"] === 0) {  res.results.bindings[i].itemDescription = itemDescription }\r\n          //    res.results.bindings[i][\"itemLabel\"].item = res.results.bindings[i][\"itemLabel\"].value + \", \" + res.results.bindings[i][\"itemDescription\"].value\r\n          res.results.bindings[i][\"item\"].id = res.results.bindings[i][\"item\"].value.replace(\r\n            \"https://database.factgrid.de/entity/\", \"\");\r\n          res.results.bindings[i][\"item\"].id.startsWith(\"P\") ? res.results.bindings[i][\"item\"].entity = \"property\" : res.results.bindings[i][\"item\"].entity = \"item\";\r\n          ;\r\n        }\r\n      };\r\n    }\r\n    else {\r\n      res = { head: { vars: ['item', 'itemLabel', 'itemDescription', 'fLabel', 'activityLabel'] }, results: { bindings: [] } }\r\n    };\r\n    console.log(res);\r\n    return res\r\n  }\r\n\r\n\r\n\r\n  noResult() {   // query in case there is no test\r\n    let u = \"\";\r\n    return this.sparqlQuery(u);\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { CreateItemToDisplayService } from './create-item-to-display.service';\r\nimport { ItemInfoService } from './item-info.service';\r\nimport { SetLanguageService } from './set-language.service';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\nimport { ItemSparqlService } from './item-sparql.service';\r\nimport { map, takeWhile, tap, switchMap, take } from 'rxjs/operators';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreateCompleteItemService {\r\n  private createItem = inject(CreateItemToDisplayService);\r\n  private itemInfo = inject(ItemInfoService);\r\n  private itemSparql = inject(ItemSparqlService);\r\n  private setLanguage = inject(SetLanguageService);\r\n  private lang = inject(SelectedLangService);\r\n\r\n\r\n  completeItem(res) {\r\n  \r\n    const itemArray = this.setLanguage.item(res, this.lang.selectedLang);\r\n    const firstItem = itemArray[0];\r\n   \r\n    this.itemSparql.itemSparql(firstItem);\r\n\r\n    let u = this.createItem.createItemToDisplay(firstItem, this.lang.selectedLang);\r\n\r\n    u.subscribe(res => console.log(res));\r\n\r\n    this.itemInfo.infoListBuilding(res);\r\n\r\n    return u;\r\n  }\r\n\r\n\r\n}\r\n","//service preparing data for display\r\n\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { SetLanguageService } from './set-language.service';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\nimport { RequestService } from './request.service';\r\nimport { switchMap, map, tap, takeWhile } from 'rxjs/operators';\r\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { CreateCompleteItemService } from './create-complete-item.service';\r\nimport { CreateItemToDisplayService } from './create-item-to-display.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class SetDataService {\r\n\tprivate createItem = inject(CreateItemToDisplayService);\r\n\tprivate createCompleteItem = inject(CreateCompleteItemService);\r\n\tprivate setLanguage = inject(SetLanguageService);\r\n\tprivate request = inject(RequestService);\r\n\tprivate lang = inject(SelectedLangService);\r\n\r\n\r\nsparqlResult = new Subject(); // In  case of BehaviorSubject I have to give an initial value\r\n\r\nselectedLang: string = (localStorage['selectedLang']===undefined)? \"en\": localStorage['selectedLang']; //initialization of the storage of the selected language (english)\r\nbaseGetURL = 'https://database.factgrid.de//w/api.php?action=wbgetentities&ids=' ;\r\ngetUrlSuffix= '&format=json&origin=*' ; \r\n\t\r\n\titemToDisplay(id) {\r\n\t\tlet labelLength: number = 0\r\n\t\tlet url = this.baseGetURL + id + this.getUrlSuffix;\r\n\t\tlet completeItem = this.request.getItem(url).pipe(\r\n\t\t\tmap(res => Object.values(res.entities)),\r\n\t\t\tmap(res => {\r\n\t\t\t\t// Réordonne qualifiers-order pour chaque claim de chaque propriété\r\n\t\t\t\tres.forEach((entity: any) => {\r\n\t\t\t\t\tif (entity.claims) {\r\n\t\t\t\t\t\tObject.values(entity.claims).forEach((claimArray: any[]) => {\r\n\t\t\t\t\t\t\tclaimArray.forEach((claim: any) => {\r\n\t\t\t\t\t\t\t\tif (claim[\"qualifiers-order\"]) {\r\n\t\t\t\t\t\t\t\t\tclaim[\"qualifiers-order\"] = this.reorderQualifiersOrder(claim[\"qualifiers-order\"]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn res;\r\n\t\t\t}),\r\n\t\t\tswitchMap(res => this.createCompleteItem.completeItem(res)),\r\n\t\t);\r\n\t\treturn completeItem;\r\n\t}\r\n\r\n\r\n sparqlAsk(sparql) {\r\n\t\tlet u = \"\";\r\n\t\tlet sparqlResult: Observable<any> | undefined;\r\n\t\tlet selectedSparql = this.newSparqlAdress(sparql);\r\n\t\tsparqlResult = this.request.getAsk(selectedSparql);\r\n\t\tsparqlResult.subscribe(re => { u = re.boolean ; return u });\r\n\t\treturn sparqlResult\r\n\t}\r\n\t \r\n\tsparqlToDisplay(sparql) {\r\n\t\t\tlet sparqlResult:Observable<any> | undefined;\r\n\t\t\tif(sparql.includes(\"item\")){\r\n\t\tlet selectedSparql = this.newSparqlAdress(sparql); //handle sparql queries 1. create the address \r\n\t\tsparqlResult = this.request.getList(selectedSparql);\r\n\t\t\t//handle sparql queries 2. list ready to display  \r\n\t}\r\n\t\treturn sparqlResult\r\n\t}\r\n\r\n sparqlToDownload(sparql){\r\n\t\tlet selectedSparql = this.newSparqlAdress(sparql);//handle sparql queries 1. create the address\r\n\t\tthis.request.downLoadList(selectedSparql);     //handle sparql queries 2. list ready to download  \r\n\t}\r\n\r\n\t\tnewSparqlAdress(address:string) : string { \r\n\t\t \r\n\t\t\tconst newPrefix = \"https://database.factgrid.de/sparql?query=\";\r\n\t\t\tlet oldPrefix = \"https://database.factgrid.de/query/#\";\r\n\t\t\tif (address.includes('embed.html')){oldPrefix =\"https://database.factgrid.de/query/embed.html#\"};\r\n\t\t\tif (address !== undefined) address = address.replace(oldPrefix, newPrefix);\r\n\t\t\treturn address\r\n\t}\r\n\r\n\r\n\treorderQualifiersOrder(qualifiersOrder: string[]): string[] {\r\n\tconst timePropsOrder = [\r\n\t\t\"P290\", \"P77\", \"P49\", \"P45\", \"P1124\", \"P1126\", \"P06\", \"P412\", \"P\", \"P41\", \"P38\", \"P50\", \"P1123\", \"P1125\", \"P291\", \"P612\"\r\n\t];\r\n\tlet ordered: string[] = [];\r\n\tif (qualifiersOrder.includes(\"P47\")) ordered.push(\"P47\");\r\n\tfor (const p of timePropsOrder) if (qualifiersOrder.includes(p) && !ordered.includes(p)) ordered.push(p);\r\n\tfor (const p of qualifiersOrder) if (!ordered.includes(p)) ordered.push(p);\r\n\treturn ordered;\r\n}\r\n\r\n\t}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { RequestService } from './request.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranscriptDisplayService {\r\n  private request = inject(RequestService);\r\n\r\n\r\n  transcript(u){\r\n    let txt;\r\n    console.log(u);\r\n    let v= u.replace(\"https://database.factgrid.de/wiki/\",\"\");\r\n    v=v.replace(\"#Transcript\",\"\");\r\n    v=this.request.getTranscript(v);\r\n   return v\r\n    \r\n    //.pipe(\r\n //     map(res =>res.subscribe(res=>console.log(res)),\r\n//     map(res =>{ console.log(res.parse) }));\r\n  //  )\r\n   // this.request.subscribe(res => console.log(res));\r\n    return v\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { RequestService } from './request.service'  ;\r\nimport { BackListDetailsService} from './back-list-details.service'\r\nimport { SelectedLangService } from '../selected-lang.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BackListService {\r\n  private requestService = inject(RequestService);\r\n  private backListDetails = inject(BackListDetailsService);\r\n  private langService = inject(SelectedLangService);\r\n\r\n  linkedItems: any[]; // backList\r\n\r\n  backList(item) {\r\n    const lang = this.langService.selectedLang;\r\n    return this.requestService.getBackList(item, lang);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SetSelectedItemsListService {\r\n\r\n  constructor() { }\r\n\r\n  addToSelectedItemsList(item) {let u = { value: {id: item.id}, label: item.label }\r\n  let selectedItemsList:any[] = JSON.parse(localStorage.getItem('selectedItems'));\r\n  if (selectedItemsList !== undefined){   //remove duplicates\r\n    for (let i=0; i<selectedItemsList.length; i++){\r\n      if (selectedItemsList[i] !== null) {\r\n       if (selectedItemsList[i].value.id === u.value.id){\r\n       selectedItemsList.splice(i,1);\r\n       break\r\n       }\r\n      }\r\n    }\r\n  }\r\n  selectedItemsList.unshift(u);\r\n  if (selectedItemsList.length=51) {\r\n     selectedItemsList.pop()};\r\n  localStorage.setItem(\"selectedItems\", JSON.stringify(selectedItemsList));\r\n  return localStorage\r\n  };\r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranscriptionService {\r\n\r\n  constructor() { }\r\n\r\ncleaning(u){\r\nlet v=\"\";\r\nlet u2;\r\nlet regex2 = /<\\s*s[^>]*>/g;\r\nu2=u.replace(regex2,\"\");\r\nlet regex = /<\\s*a[^>]*>/g\r\nu2=u2.replace(regex,\"\");\r\nlet regex1 = /<\\s*![^>]*>/g\r\nu2=u2.replace(regex1,\"\");\r\nu2=u2.replaceAll(\"span>edit\",\"\");\r\nu2=u2.replaceAll(\"modifier\",\"\");\r\nu2=u2.replaceAll(\">[<\",\"\");\r\nu2=u2.replaceAll(\">]<\",\"\");\r\nu2=u2.replaceAll(\"mw-healine\",\"property2\");\r\nu2=u2.replaceAll(\" (talk</a>)\",\"\");\r\nv=u2.replaceAll(\"</p><p>\",\"\");\r\n\r\n\r\nreturn v\r\n}\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'join',\r\n    standalone: true\r\n})\r\nexport class JoinPipe implements PipeTransform {\r\n  transform(input: Array<any>, sep = ' | '):string { if (input !==undefined)\r\n  { return input.join(sep) };\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterLink } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { SelectedLangService } from '../../selected-lang.service';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-item-info',\r\n    templateUrl: './item-info.component.html',\r\n    styleUrls: ['./item-info.component.scss'],\r\n    standalone: true,\r\n    imports: [CommonModule, NgClass, MatCardModule, NgFor, NgIf, RouterLink, MatIconModule]\r\n})\r\nexport class ItemInfoComponent implements OnChanges {\r\n  private lang = inject(SelectedLangService);\r\n\r\n\r\n  @Input() infoList;\r\n  \r\n\r\n  \r\n  selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\r\n  list1:any[] = [];\r\n  list2:any[] = [];\r\n  list3:any[] = [];\r\n  list4: any[] = [];\r\n  technicalities: any[] = [];\r\n  list1Number;\r\n  list2Number;\r\n  list3Number;\r\n  list4Number;\r\n  technicalitiesNumber;\r\n  isList1:boolean = false;\r\n  isList2:boolean = false;\r\n  isList3:boolean = false;\r\n  isList4:boolean = false;\r\n  isInfo:boolean = false;\r\n  instancesListTitle = \"instances of the Q-item:\";\r\n  subclassesListTitle = \"subclasses of the Q-item:\"\r\n  subInfoTitle:string = \"Information on the Q-item\";\r\n  classesListTitle:string = \"classes of the Q-item:\"\r\n  natureOfListTitle:string = \"instance of\";\r\n  prefix1:string = \"class hierarchy: class depending on \";\r\n  prefix2:string = \"class hierarchy: class with \";\r\n  suffix1: string = \"classes:\";\r\n\r\n\r\n  openImage(image) { //handling click for picture (open in new tab) \r\n    window.open(image);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    this.instancesListTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n    this.subclassesListTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n    this.classesListTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n    this.natureOfListTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n    this.subInfoTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n    this.prefix1 = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n    this.prefix2 = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n    this.suffix1 = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n\r\n    // Utilisation des listes depuis infoList\r\n    this.list1 = this.infoList?.subclassesList ?? [];\r\n    this.list2 = this.infoList?.instancesList ?? [];\r\n    this.list3 = this.infoList?.classesList ?? [];\r\n    this.list4 = this.infoList?.natureOfList ?? [];\r\n    this.technicalities = this.infoList?.technicalities ?? [];\r\n\r\n    this.list1Number = this.list1.length;\r\n    this.list2Number = this.list2.length;\r\n    this.list3Number = this.list3.length;\r\n    this.list4Number = this.list4.length;\r\n    this.technicalitiesNumber = this.technicalities.length;\r\n\r\n    this.isInfo =\r\n      this.list1Number + this.list2Number + this.list3Number + this.list4Number + this.technicalitiesNumber > 0;\r\n\r\n    this.isList1 = this.list1.length > 0;\r\n    this.isList2 = this.list2.length > 0;\r\n    this.isList3 = this.list3.length > 0;\r\n    this.isList4 = this.list4.length > 0;\r\n  }\r\n\r\n    } \r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n","<div [ngClass]=\"isInfo ? 'show-division':'hide-division'\">\n\n  <mat-card appearance=\"outlined\" class=\"mat-elevation-z8 itemInformation-mat-card\">\n    <mat-card-content class=\"cardBackground\">\n\n      <div class=\"subdivisionTitle\">{{ subInfoTitle }}</div>\n\n      <!-- Technicalities -->\n      <div *ngIf=\"technicalitiesNumber > 0\">\n        <h4>Technicalities</h4>\n        <ul>\n          <li *ngFor=\"let P of technicalities\">\n            <span class=\"propertyStyle\">{{ P.label }}:</span>\n            <!-- Affichage détaillé selon la structure de P -->\n            <span *ngIf=\"P.value\">{{ P.value }}</span>\n            <!-- Ajoute ici d'autres champs si besoin -->\n          </li>\n        </ul>\n        <hr>\n      </div>\n\n      <!-- Nature Of -->\n      <div *ngIf=\"isList4\">\n        <div class=\"listStyle\">\n          <div class=\"labelTitlePadding\">\n            <div class=\"propertyStyle\">{{ natureOfListTitle }} {{ list4Number }} {{ suffix1 }} </div>\n          </div>\n          <hr>\n          <div *ngFor=\"let L of list4\">\n            <div class=\"details\">\n              <div>\n                <label *ngIf=\"L.itemLabel?.value\">\n                  {{ L.itemLabel.value }}\n                  <span *ngIf=\"L.itemDescription\" class=\"description-text\">({{ L.itemDescription.value }})</span>\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', L.item.id]\">\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\n                  </mat-icon-button>\n                </label>\n              </div>\n              <hr>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Classes -->\n      <div *ngIf=\"isList3\">\n        <div class=\"property2\">{{ prefix1 }} {{ list3Number }} {{ classesListTitle }}</div>\n        <hr>\n        <div *ngFor=\"let L of list3\">\n          <div class=\"details\">\n            <div>\n              <label *ngIf=\"L.itemLabel?.value\">\n                {{ L.itemLabel.value }}\n                <span *ngIf=\"L.itemDescription\" class=\"description-text\">({{ L.itemDescription.value }})</span>\n                <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', L.item.id]\">\n                  <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\n                </mat-icon-button>\n              </label>\n            </div>\n            <hr>\n          </div>\n        </div>\n      </div>\n\n      <!-- Subclasses -->\n      <div *ngIf=\"isList1\">\n        <div class=\"property2\">{{ prefix2 }} {{ list1Number }} {{ subclassesListTitle }}</div>\n        <hr>\n        <div *ngFor=\"let L of list1\">\n          <div class=\"details\">\n            <div>\n              <label *ngIf=\"L.itemLabel?.value\">\n                {{ L.itemLabel.value }}\n                <span *ngIf=\"L.itemDescription\" class=\"description-text\">({{ L.itemDescription.value }})</span>\n                <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', L.item.id]\">\n                  <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\n                </mat-icon-button>\n              </label>\n            </div>\n            <hr>\n          </div>\n        </div>\n      </div>\n\n      <!-- Instances -->\n      <div *ngIf=\"isList2\">\n        <div class=\"property2\">{{ list2Number }} {{ instancesListTitle }}</div>\n        <hr>\n        <div *ngFor=\"let L of list2\">\n          <div class=\"details\">\n            <div>\n              <label *ngIf=\"L.itemLabel?.value\">\n                {{ L.itemLabel.value }}\n                <span *ngIf=\"L.itemDescription\" class=\"description-text\">({{ L.itemDescription.value }})</span>\n                <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', L.item.id]\">\n                  <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\n                </mat-icon-button>\n              </label>\n            </div>\n            <hr>\n          </div>\n        </div>\n      </div>\n\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Pipe, PipeTransform, inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Pipe({\r\n    name: 'unit',\r\n    standalone: true,\r\n})\r\nexport class UnitPipe implements PipeTransform {\r\n  private http = inject(HttpClient);\r\n\r\n\r\n  \r\n  unit:any = null;\r\n\r\n  transform(value: string): any {\r\n    let lang:string = localStorage['selectedLang'];\r\n    let unit = \"Unit: \"\r\n    if (lang === \"de\") { unit = \"Einheit: \" };\r\n    if (lang === \"fr\") { unit = \"Unité: \" };\r\n    if (lang === \"es\") { unit = \"Unidad: \" };\r\n    if (lang === \"hu\") { unit = \"Egység: \" };\r\n    if (lang === \"it\") { unit = \"Unità: \" };\r\n    value=value.replace('https://database.factgrid.de/entity/','');\r\n    let params = new HttpParams().set('action',\"wbgetentities\")\r\n    .set('languages',lang)\r\n    .set('props','labels')\r\n    .set('ids',value)\r\n    .set('format',\"json\")\r\n    .set('origin',\"*\");\r\n  let response= this.http.get('https://database.factgrid.de//w/api.php', { params: params}).\r\n  pipe(\r\n    map(res=>unit + Object.values(Object.values(Object.values(Object.values(Object.values(res)[0])[0])[2])[0])[1]))\r\n  return response\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterLink } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { UnitPipe } from '../../unit.pipe';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header-display',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\r\n  templateUrl: './header-display.component.html',\r\n  styleUrl: './header-display.component.scss'\r\n})\r\nexport class HeaderDisplayComponent {\r\n\r\n  @Input() headerDetail;\r\n\r\n  showReferences = false; // état du volet\r\n\r\n  toggleReferences() {\r\n    this.showReferences = !this.showReferences;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<mat-card-content class=\"cardBackground\">\r\n  @for (P of headerDetail; track P) {\r\n  <div class=\"listStyle\">\r\n    <div class=\"labelTitlePadding\">\r\n      <span class=\"propertyStyle hover-bg-light\"\r\n            matTooltip=\"[{{P.id}}] {{P.description || ''}}\"\r\n            matTooltipPosition=\"right\">\r\n        {{P.label}}:\r\n      </span>\r\n    </div>\r\n    @for (M of P; track M) {\r\n    <div class=\"statementStyle\">\r\n      <div [ngStyle]=\"{'background-color': (M.rank=='deprecated') ? '#f1f1f1' : '#ffffff'}\">\r\n        @if (M.mainsnak.datatype ==='time') {\r\n        <span>{{M.mainsnak.datavalue.value.date}}</span>\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\r\n        <span class=\"calendarStyle\">\r\n          greg.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\r\n        <span class=\"calendarStyle\">\r\n          jul.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        }\r\n        @if (M.mainsnak.datatype==='monolingualtext') {\r\n        <span>{{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'string') {\r\n        <span class=\"displayLayout\">{{M.mainsnak.datavalue.value }}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'url') {\r\n        <span class=\"displayLayout\">\r\n          <a href=\"{{M.mainsnak.datavalue.value}}\" target=\"_blank\">{{M.mainsnak.datavalue.value}}</a>\r\n        </span>\r\n        }\r\n        <span>{{M.mainsnak.datavalue.value.amount}}</span>\r\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\r\n        <span>latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype==='commonsMedia') {\r\n        <div>\r\n          <span>\r\n            <img class=\"cover\" src={{M.picture}} (click)=\"openImage(M.picture)\">\r\n          </span>\r\n        </div>\r\n        }\r\n        @if (M.mainsnak.datatype==='wikibase-item') {\r\n        <span>\r\n          {{M.mainsnak.label}}\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', M.mainsnak.datavalue.value.id]\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>\r\n          &nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        {{M.mainsnak.separator}}\r\n        <span class=\"description-text\">{{M.mainsnak.description}}&nbsp;</span>\r\n        }\r\n        @if (M.rank=='deprecated') {\r\n        <span class=\"warningDeprecated\"> &nbsp;({{M.rank}})</span>\r\n        }\r\n      </div>\r\n      <div class=\"qualifierStyle\">\r\n        @if (M['qualifiers-order']) {\r\n        <span>\r\n          @for (Q of M.qualifiers2; track Q) {\r\n          <div>\r\n            <span class=\"qualifierProperty hover-bg-light\"\r\n                  matTooltip=\"[{{Q.id}}] {{Q.description || ''}}\"\r\n                  matTooltipPosition=\"right\">\r\n              <em>{{Q.label}}:&nbsp;</em>\r\n            </span>\r\n            @for (D of Q.display; track D; let isLast = $last) {\r\n            <span>\r\n              @if (D.datatype === 'time') {\r\n              <span>\r\n                {{D.date}}\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\r\n                <span class=\"calendarStyle\">\r\n                  greg.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\r\n                <span class=\"calendarStyle\">\r\n                  jul.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='string') {\r\n              <span>\r\n                {{D.string}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='monolingualtext') {\r\n              <span>\r\n                {{D.string.text}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              <span>{{D.amount}}</span>\r\n              @if (D.unit) {\r\n              <span><em>&nbsp;({{D.unit | unit |async}})</em>&nbsp;</span>\r\n              }\r\n              @if (D.datatype === 'external-id') {\r\n              <span>\r\n                <a href=\"{{D.link}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype === 'url') {\r\n              <span class=\"displayLayout\">\r\n                <a href=\"{{D.string}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype==='wikibase-item') {\r\n              <span>\r\n                {{D.label}}\r\n                <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', D.id]\">\r\n                  <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                </mat-icon-button>\r\n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\r\n                {{D.separator}}<span class=\"description-text\">{{D.description}}</span>\r\n              </span>\r\n              }\r\n              @if (D.datatype==='commonsMedia') {\r\n              <div>\r\n                <span>\r\n                  <img src={{D.commons}} (click)=\"openImage(D.commons)\">\r\n                </span>\r\n              </div>\r\n              }\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n          </div>\r\n          }\r\n        </span>\r\n        }\r\n      </div>\r\n      <!-- References -->\r\n      @if (M['references2'] && M['references2'].length > 0) {\r\n      <button mat-button\r\n              class=\"references-toggle-btn\"\r\n              (click)=\"toggleReferences()\">\r\n        <span class=\"triangle-icon\" [class.open]=\"showReferences\"></span>\r\n        Références\r\n      </button>\r\n      @if (showReferences && M['references2']) {\r\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\r\n      <div class=\"referenceStyle\">\r\n        @for (N of Ma; track N; let isLast = $last) {\r\n        <div class=\"inlineStyle\">\r\n          <span class=\"referenceProperty hover-bg-light\"\r\n                matTooltip=\"[{{ N.id }}] {{ N.description ? N.description + ' ' : '' }}\"\r\n                matTooltipPosition=\"right\">\r\n            {{N.label}}:\r\n          </span>\r\n          <span>\r\n            @for (P of N.display; track P; let isLast = $last) {\r\n            @if (N.datatype === 'wikibase-item') {\r\n            <span>\r\n              {{P.label}}\r\n              <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', P.id]\">\r\n                <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n              </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n              {{P.separator}}<span class=\"description-text\">{{P.description}}</span>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype==='time') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype==='string') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype === 'url') {\r\n            <span class=\"displayLayout\">\r\n              <a href=\"{{P}}\" target=\"_blank\">{{P}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype === 'external-id') {\r\n            <span>\r\n              <a href=\"{{P.link}}\" target=\"_blank\">{{P.value}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            }\r\n          </span>\r\n          @if (!isLast) {\r\n          <span>,&nbsp;</span>\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n      }\r\n      }\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n</mat-card-content>\r\n","import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterLink } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { UnitPipe } from '../../unit.pipe';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-career-display',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\r\n  templateUrl: './career-display.component.html',\r\n  styleUrl: './career-display.component.scss'\r\n})\r\nexport class CareerDisplayComponent {\r\n\r\n @Input() careerAndActivities;\r\n @Input() career;\r\n\r\n  showReferences = false; // état du volet\r\n\r\n  toggleReferences() {\r\n    this.showReferences = !this.showReferences;\r\n  }\r\n\r\n openImage(image){ //handling click for picture (open in new tab) \r\n    window.open(image);}\r\n\r\n}\r\n","<mat-card-content class=\"cardBackground\">\r\n  <div class=\"subdivisionTitle\">{{career}}</div>\r\n  @for (P of careerAndActivities; track P) {\r\n  <div class=\"listStyle\">\r\n    <div class=\"labelTitlePadding\">\r\n      <span class=\"propertyStyle hover-bg-light\"\r\n            matTooltip=\"[{{P.id}}] {{P.description || ''}}\"\r\n            matTooltipPosition=\"right\">\r\n        {{P.label}}:\r\n      </span>\r\n    </div>\r\n    @for (M of P; track M) {\r\n    <div class=\"statementStyle\">\r\n      <div [ngStyle]=\"{'background-color': (M.rank=='deprecated') ? '#f1f1f1' : '#ffffff'}\">\r\n        @if (M.mainsnak.datatype ==='time') {\r\n        <span>{{M.mainsnak.datavalue.value.date}}</span>\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\r\n        <span class=\"calendarStyle\">\r\n          greg.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\r\n        <span class=\"calendarStyle\">\r\n          jul.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        }\r\n        @if (M.mainsnak.datatype==='monolingualtext') {\r\n        <span>{{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'string') {\r\n        <span class=\"displayLayout\">{{M.mainsnak.datavalue.value }}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'url') {\r\n        <span class=\"displayLayout\">\r\n          <a href=\"{{M.mainsnak.datavalue.value}}\" target=\"_blank\">{{M.mainsnak.datavalue.value}}</a>\r\n        </span>\r\n        }\r\n        <span>{{M.mainsnak.datavalue.value.amount}}</span>\r\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\r\n        <span>latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype==='commonsMedia') {\r\n        <div>\r\n          <span>\r\n            <img class=\"cover\" src={{M.picture}} (click)=\"openImage(M.picture)\">\r\n          </span>\r\n        </div>\r\n        }\r\n        @if (M.mainsnak.datatype==='wikibase-item') {\r\n        <span>\r\n          {{M.mainsnak.label}}\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', M.mainsnak.datavalue.value.id]\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>\r\n          &nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        {{M.mainsnak.separator}}\r\n        <span class=\"description-text\">{{M.mainsnak.description}}&nbsp;</span>\r\n        }\r\n        @if (M.rank=='deprecated') {\r\n        <span class=\"warningDeprecated\"> &nbsp;({{M.rank}})</span>\r\n        }\r\n      </div>\r\n      <div class=\"qualifierStyle\">\r\n        @if (M['qualifiers-order']) {\r\n        <span>\r\n          @for (Q of M.qualifiers2; track Q) {\r\n          <div>\r\n            <span class=\"qualifierProperty hover-bg-light\"\r\n                    matTooltip=\"[{{Q.id}}] {{Q.description || ''}}\"\r\n                    matTooltipPosition=\"right\">\r\n                <em>{{Q.label}}:&nbsp;</em>\r\n              </span>\r\n              @for (D of Q.display; track D; let isLast = $last) {\r\n              <span>\r\n                @if (D.datatype === 'time') {\r\n                <span>\r\n                  {{D.date}}\r\n                  @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\r\n                  <span class=\"calendarStyle\">\r\n                    greg.\r\n                    <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n                      <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                    </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                  </span>\r\n                  }\r\n                  @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\r\n                  <span class=\"calendarStyle\">\r\n                    jul.\r\n                    <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n                      <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                    </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                  </span>\r\n                  }\r\n                </span>\r\n                }\r\n                @if (D.datatype==='string') {\r\n                <span>\r\n                  {{D.string}}\r\n                  @if (!isLast) {\r\n                  <span>,&nbsp;</span>\r\n                  }\r\n                </span>\r\n                }\r\n                @if (D.datatype==='monolingualtext') {\r\n                <span>\r\n                  {{D.string.text}}\r\n                  @if (!isLast) {\r\n                  <span>,&nbsp;</span>\r\n                  }\r\n                </span>\r\n                }\r\n                <span>{{D.amount}}</span>\r\n                @if (D.unit) {\r\n                <span><em>&nbsp;({{D.unit | unit |async}})</em>&nbsp;</span>\r\n                }\r\n                @if (D.datatype === 'external-id') {\r\n                <span>\r\n                  <a href=\"{{D.link}}\" target=\"_blank\">{{D.string}}</a>\r\n                </span>\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n                }\r\n                @if (D.datatype === 'url') {\r\n                <span class=\"displayLayout\">\r\n                  <a href=\"{{D.string}}\" target=\"_blank\">{{D.string}}</a>\r\n                </span>\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n                }\r\n                @if (D.datatype==='wikibase-item') {\r\n                <span>\r\n                  {{D.label}}\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', D.id]\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>\r\n                  @if(D.description){ &nbsp;&nbsp;&nbsp;}\r\n                  {{D.separator}}<span class=\"description-text\">{{D.description}}</span>\r\n                </span>\r\n                }\r\n                @if (D.datatype==='commonsMedia') {\r\n                <div>\r\n                  <span>\r\n                    <img src={{D.commons}} (click)=\"openImage(D.commons)\">\r\n                  </span>\r\n                </div>\r\n                }\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n</div>\r\n          }\r\n        </span>\r\n        }\r\n      </div>\r\n      <!-- References -->\r\n      @if (M['references2'] && M['references2'].length > 0) {\r\n      <button mat-button\r\n              class=\"references-toggle-btn\"\r\n              (click)=\"toggleReferences()\">\r\n        <span class=\"triangle-icon\" [class.open]=\"showReferences\"></span>\r\n        Références\r\n      </button>\r\n      @if (showReferences && M['references2']) {\r\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\r\n      <div class=\"referenceStyle\">\r\n        @for (N of Ma; track N; let isLast = $last) {\r\n        <div class=\"inlineStyle\">\r\n          <span class=\"referenceProperty hover-bg-light\"\r\n                matTooltip=\"[{{ N.id }}] {{ N.description ? N.description + ' ' : '' }}\"\r\n                matTooltipPosition=\"right\">\r\n          {{N.label}}:\r\n          </span>\r\n          <span>\r\n            @for (P of N.display; track P; let isLast = $last) {\r\n            @if (N.datatype === 'wikibase-item') {\r\n            <span>\r\n              {{P.label}}\r\n              <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', P.id]\">\r\n                <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n              </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n              {{P.separator}}<span class=\"description-text\">{{P.description}}</span>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype==='time') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype==='string') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype === 'url') {\r\n            <span class=\"displayLayout\">\r\n              <a href=\"{{P}}\" target=\"_blank\">{{P}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype === 'external-id') {\r\n            <span>\r\n              <a href=\"{{P.link}}\" target=\"_blank\">{{P.value}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            }\r\n          </span>\r\n          @if (!isLast) {\r\n          <span>,&nbsp;</span>\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n      }\r\n      }\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n</mat-card-content>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { UnitPipe } from '../../unit.pipe';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@Component({\r\n  selector: 'app-main-display',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, RouterOutlet, UnitPipe, MatTooltipModule],\r\n  templateUrl: './main-display.component.html',\r\n  styleUrl: './main-display.component.scss'\r\n})\r\nexport class MainDisplayComponent {\r\n\r\n  @Input() mainList;\r\n  @Input() mainTitle;\r\n  @Input() list;\r\n\r\n  \r\n\r\n \r\n  showReferences = false; // état du volet\r\n\r\n  toggleReferences() {\r\n    this.showReferences = !this.showReferences;\r\n  }\r\n\r\n\r\n openImage(image){ //handling click for picture (open in new tab) \r\n    window.open(image);\r\n  }\r\n\r\n}\r\n","<mat-card-content class=\"cardBackground\">\r\n  <div class=\"subdivisionTitle\">{{mainTitle}}</div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  @for (P of mainList; track P.id) {\r\n  <div class=\"listStyle\">\r\n    <div class=\"labelTitlePadding\">\r\n      <span class=\"propertyStyle hover-bg-light\"\r\n            matTooltip=\"[{{P.id}}] {{P.description || ''}}\"\r\n            matTooltipPosition=\"right\">\r\n        {{P.label}}:\r\n      </span>\r\n    </div>\r\n    @for (M of P; track M) {\r\n    <div class=\"statementStyle\">\r\n      <div [ngStyle]=\"{'background-color': (M.rank=='deprecated') ? '#f1f1f1' : '#ffffff'}\">\r\n        @if (M.mainsnak.datatype ==='time') {\r\n        <span>{{M.mainsnak.datavalue.value.date}}</span>\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\r\n        <span class=\"calendarStyle\">\r\n          greg.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\r\n        <span class=\"calendarStyle\">\r\n          jul.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        }\r\n        @if (M.mainsnak.datatype==='monolingualtext') {\r\n        <span>{{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'string') {\r\n        <span class=\"displayLayout\">{{M.mainsnak.datavalue.value }}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'url') {\r\n        <span class=\"displayLayout\">\r\n          <a href=\"{{M.mainsnak.datavalue.value}}\" target=\"_blank\">{{M.mainsnak.datavalue.value}}</a>\r\n        </span>\r\n        }\r\n        <span>{{M.mainsnak.datavalue.value.amount}}</span>\r\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\r\n        <span>latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype==='commonsMedia') {\r\n        <div>\r\n          <span>\r\n            <img class=\"cover\" src={{M.picture}} (click)=\"openImage(M.picture)\">\r\n          </span>\r\n        </div>\r\n        }\r\n        @if (M.mainsnak.datatype==='wikibase-item') {\r\n        <span>\r\n          {{M.mainsnak.label}}\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', M.mainsnak.datavalue.value.id]\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>\r\n          &nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        {{M.mainsnak.separator}}\r\n        <span class=\"description-text\">{{M.mainsnak.description}}&nbsp;</span>\r\n        }\r\n        @if (M.rank=='deprecated') {\r\n        <span class=\"warningDeprecated\"> &nbsp;({{M.rank}})</span>\r\n        }\r\n      </div>\r\n      <div class=\"qualifierStyle\">\r\n        @if (M['qualifiers-order']) {\r\n        <span>\r\n          @for (Q of M.qualifiers2; track Q) {\r\n          <div>\r\n            <span class=\"qualifierProperty hover-bg-light\"\r\n                  matTooltip=\"[{{Q.id}}] {{Q.description || ''}}\"\r\n                  matTooltipPosition=\"right\">\r\n              <em>{{Q.label}}:&nbsp;</em>\r\n            </span>\r\n            @for (D of Q.display; track D; let isLast = $last) {\r\n            <span>\r\n              @if (D.datatype === 'time') {\r\n              <span>\r\n                {{D.date}}\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\r\n                <span class=\"calendarStyle\">\r\n                  greg.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\r\n                <span class=\"calendarStyle\">\r\n                  jul.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='string') {\r\n              <span>\r\n                {{D.string}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='monolingualtext') {\r\n              <span>\r\n                {{D.string.text}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              <span>{{D.amount}}</span>\r\n              @if (D.unit) {\r\n              <span><em>&nbsp;({{D.unit | unit |async}})</em>&nbsp;</span>\r\n              }\r\n              @if (D.datatype === 'external-id') {\r\n              <span>\r\n                <a href=\"{{D.link}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype === 'url') {\r\n              <span class=\"displayLayout\">\r\n                <a href=\"{{D.string}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype==='wikibase-item') {\r\n              <span>\r\n                {{D.label}}\r\n                <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', D.id]\">\r\n                  <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                </mat-icon-button>\r\n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\r\n                {{D.separator}}<span class=\"description-text\">{{D.description}}</span>\r\n              </span>\r\n              }\r\n              @if (D.datatype==='commonsMedia') {\r\n              <div>\r\n                <span>\r\n                  <img src={{D.commons}} (click)=\"openImage(D.commons)\">\r\n                </span>\r\n              </div>\r\n              }\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n          </div>\r\n          }\r\n        </span>\r\n        }\r\n      </div>\r\n      <!-- References -->\r\n      @if (M['references2'] && M['references2'].length > 0) {\r\n      <button mat-button\r\n              class=\"references-toggle-btn\"\r\n              (click)=\"toggleReferences()\">\r\n        <span class=\"triangle-icon\" [class.open]=\"showReferences\"></span>\r\n        Références\r\n      </button>\r\n      @if (showReferences && M['references2']) {\r\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\r\n      <div class=\"referenceStyle\">\r\n        @for (N of Ma; track N; let isLast = $last) {\r\n        <div class=\"inlineStyle\">\r\n          <span class=\"referenceProperty hover-bg-light\"\r\n                matTooltip=\"[{{ N.id }}] {{ N.description ? N.description + ' ' : '' }}\"\r\n                matTooltipPosition=\"right\">\r\n            {{N.label}}:\r\n          </span>\r\n          <span>\r\n            @for (P of N.display; track P; let isLast = $last) {\r\n            @if (N.datatype === 'wikibase-item') {\r\n            <span>\r\n              {{P.label}}\r\n              <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', P.id]\">\r\n                <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n              </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n              {{P.separator}}<span class=\"description-text\">{{P.description}}</span>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype==='time') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype==='string') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype === 'url') {\r\n            <span class=\"displayLayout\">\r\n              <a href=\"{{P}}\" target=\"_blank\">{{P}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype === 'external-id') {\r\n            <span>\r\n              <a href=\"{{P.link}}\" target=\"_blank\">{{P.value}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            }\r\n          </span>\r\n          @if (!isLast) {\r\n          <span>,&nbsp;</span>\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n      }\r\n      }\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n</mat-card-content>\r\n","import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterLink } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { UnitPipe } from '../../unit.pipe';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@Component({\r\n  selector: 'app-education-display',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\r\n  templateUrl: './education-display.component.html',\r\n  styleUrl: './education-display.component.scss'\r\n})\r\nexport class EducationDisplayComponent {\r\n\r\n @Input() education;\r\n @Input() training;\r\n\r\n\r\n  showReferences = false; // état du volet\r\n\r\n  toggleReferences() {\r\n    this.showReferences = !this.showReferences;\r\n  }\r\n\r\n  openImage(image){ //handling click for picture (open in new tab) \r\n    window.open(image);}\r\n}\r\n","<mat-card-content class=\"cardBackground\">\r\n  <div class=\"subdivisionTitle\">{{training}}</div>\r\n  @for (P of education; track P) {\r\n  <div class=\"listStyle\">\r\n    <div class=\"labelTitlePadding\">\r\n      <span class=\"propertyStyle hover-bg-light\"\r\n            matTooltip=\"[{{P.id}}] {{P.description || ''}}\"\r\n            matTooltipPosition=\"right\">\r\n        {{P.label}}:\r\n      </span>\r\n    </div>\r\n    @for (M of P; track M) {\r\n    <div class=\"statementStyle\">\r\n      <div [ngStyle]=\"{'background-color': (M.rank=='deprecated') ? '#f1f1f1' : '#ffffff'}\">\r\n        @if (M.mainsnak.datatype ==='time') {\r\n        <span>{{M.mainsnak.datavalue.value.date}}</span>\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\r\n        <span class=\"calendarStyle\">\r\n          greg.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\r\n        <span class=\"calendarStyle\">\r\n          jul.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        }\r\n        @if (M.mainsnak.datatype==='monolingualtext') {\r\n        <span>{{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'string') {\r\n        <span class=\"displayLayout\">{{M.mainsnak.datavalue.value }}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'url') {\r\n        <span class=\"displayLayout\">\r\n          <a href=\"{{M.mainsnak.datavalue.value}}\" target=\"_blank\">{{M.mainsnak.datavalue.value}}</a>\r\n        </span>\r\n        }\r\n        <span>{{M.mainsnak.datavalue.value.amount}}</span>\r\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\r\n        <span>latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype==='commonsMedia') {\r\n        <div>\r\n          <span>\r\n            <img class=\"cover\" src={{M.picture}} (click)=\"openImage(M.picture)\">\r\n          </span>\r\n        </div>\r\n        }\r\n        @if (M.mainsnak.datatype==='wikibase-item') {\r\n        <span>\r\n          {{M.mainsnak.label}}\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', M.mainsnak.datavalue.value.id]\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>\r\n          &nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        {{M.mainsnak.separator}}\r\n        <span class=\"description-text\">{{M.mainsnak.description}}&nbsp;</span>\r\n        }\r\n        @if (M.rank=='deprecated') {\r\n        <span class=\"warningDeprecated\"> &nbsp;({{M.rank}})</span>\r\n        }\r\n      </div>\r\n      <div class=\"qualifierStyle\">\r\n        @if (M['qualifiers-order']) {\r\n        <span>\r\n          @for (Q of M.qualifiers2; track Q) {\r\n          <div>\r\n            <span class=\"qualifierProperty hover-bg-light\"\r\n                  matTooltip=\"[{{Q.id}}] {{Q.description || ''}}\"\r\n                  matTooltipPosition=\"right\">\r\n              <em>{{Q.label}}:&nbsp;</em>\r\n            </span>\r\n            @for (D of Q.display; track D; let isLast = $last) {\r\n            <span>\r\n              @if (D.datatype === 'time') {\r\n              <span>\r\n                {{D.date}}\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\r\n                <span class=\"calendarStyle\">\r\n                  greg.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\r\n                <span class=\"calendarStyle\">\r\n                  jul.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='string') {\r\n              <span>\r\n                {{D.string}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='monolingualtext') {\r\n              <span>\r\n                {{D.string.text}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              <span>{{D.amount}}</span>\r\n              @if (D.unit) {\r\n              <span><em>&nbsp;({{D.unit | unit |async}})</em>&nbsp;</span>\r\n              }\r\n              @if (D.datatype === 'external-id') {\r\n              <span>\r\n                <a href=\"{{D.link}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype === 'url') {\r\n              <span class=\"displayLayout\">\r\n                <a href=\"{{D.string}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype==='wikibase-item') {\r\n              <span>\r\n                {{D.label}}\r\n                <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', D.id]\">\r\n                  <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                </mat-icon-button>\r\n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\r\n                {{D.separator}}<span class=\"description-text\">{{D.description}}</span>\r\n              </span>\r\n              }\r\n              @if (D.datatype==='commonsMedia') {\r\n              <div>\r\n                <span>\r\n                  <img src={{D.commons}} (click)=\"openImage(D.commons)\">\r\n                </span>\r\n              </div>\r\n              }\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n          </div>\r\n          }\r\n        </span>\r\n        }\r\n      </div>\r\n      <!-- References -->\r\n      @if (M['references2'] && M['references2'].length > 0) {\r\n      <button mat-button\r\n              class=\"references-toggle-btn\"\r\n              (click)=\"toggleReferences()\">\r\n        <span class=\"triangle-icon\" [class.open]=\"showReferences\"></span>\r\n        Références\r\n      </button>\r\n      @if (showReferences && M['references2']) {\r\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\r\n      <div class=\"referenceStyle\">\r\n        @for (N of Ma; track N; let isLast = $last) {\r\n        <div class=\"inlineStyle\">\r\n          <span class=\"referenceProperty hover-bg-light\"\r\n                matTooltip=\"[{{ N.id }}] {{ N.description ? N.description + ' ' : '' }}\"\r\n                matTooltipPosition=\"right\">\r\n            {{N.label}}:\r\n          </span>\r\n          <span>\r\n            @for (P of N.display; track P; let isLast = $last) {\r\n            @if (N.datatype === 'wikibase-item') {\r\n            <span>\r\n              {{P.label}}\r\n              <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', P.id]\">\r\n                <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n              </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n              {{P.separator}}<span class=\"description-text\">{{P.description}}</span>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype==='time') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype==='string') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype === 'url') {\r\n            <span class=\"displayLayout\">\r\n              <a href=\"{{P}}\" target=\"_blank\">{{P}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype === 'external-id') {\r\n            <span>\r\n              <a href=\"{{P.link}}\" target=\"_blank\">{{P.value}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            }\r\n          </span>\r\n          @if (!isLast) {\r\n          <span>,&nbsp;</span>\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n      }\r\n      }\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n</mat-card-content>\r\n","import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterLink } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { UnitPipe } from '../../unit.pipe';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@Component({\r\n  selector: 'app-sociability-display',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\r\n  templateUrl: './sociability-display.component.html',\r\n  styleUrl: './sociability-display.component.scss'\r\n})\r\nexport class SociabilityDisplayComponent {\r\n\r\n@Input() sociabilityAndCulture;\r\n@Input() sociability;\r\n\r\n showReferences = false; // état du volet\r\n\r\n toggleReferences() {\r\n    this.showReferences = !this.showReferences;\r\n  }\r\n\r\n openImage(image){ //handling click for picture (open in new tab) \r\n    window.open(image);}\r\n\r\n}\r\n","<mat-card-content class=\"cardBackground\">\r\n  <div class=\"subdivisionTitle\">{{sociability}}</div>\r\n  @for (P of sociabilityAndCulture; track P) {\r\n  <div class=\"listStyle\">\r\n    <div class=\"labelTitlePadding\">\r\n      <span class=\"propertyStyle hover-bg-light\"\r\n            matTooltip=\"[{{P.id}}] {{P.description || ''}}\"\r\n            matTooltipPosition=\"right\">\r\n        {{P.label}}:\r\n      </span>\r\n    </div>\r\n    @for (M of P; track M) {\r\n    <div class=\"statementStyle\">\r\n      <div [ngStyle]=\"{'background-color': (M.rank=='deprecated') ? '#f1f1f1' : '#ffffff'}\">\r\n        @if (M.mainsnak.datatype ==='time') {\r\n        <span>{{M.mainsnak.datavalue.value.date}}</span>\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\r\n        <span class=\"calendarStyle\">\r\n          greg.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\r\n        <span class=\"calendarStyle\">\r\n          jul.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        }\r\n        @if (M.mainsnak.datatype==='monolingualtext') {\r\n        <span>{{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'string') {\r\n        <span class=\"displayLayout\">{{M.mainsnak.datavalue.value }}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'url') {\r\n        <span class=\"displayLayout\">\r\n          <a href=\"{{M.mainsnak.datavalue.value}}\" target=\"_blank\">{{M.mainsnak.datavalue.value}}</a>\r\n        </span>\r\n        }\r\n        <span>{{M.mainsnak.datavalue.value.amount}}</span>\r\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\r\n        <span>latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype==='commonsMedia') {\r\n        <div>\r\n          <span>\r\n            <img class=\"cover\" src={{M.picture}} (click)=\"openImage(M.picture)\">\r\n          </span>\r\n        </div>\r\n        }\r\n        @if (M.mainsnak.datatype==='wikibase-item') {\r\n        <span>\r\n          {{M.mainsnak.label}}\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', M.mainsnak.datavalue.value.id]\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>\r\n          &nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        {{M.mainsnak.separator}}\r\n        <span class=\"description-text\">{{M.mainsnak.description}}&nbsp;</span>\r\n        }\r\n        @if (M.rank=='deprecated') {\r\n        <span class=\"warningDeprecated\"> &nbsp;({{M.rank}})</span>\r\n        }\r\n      </div>\r\n      <div class=\"qualifierStyle\">\r\n        @if (M['qualifiers-order']) {\r\n        <span>\r\n          @for (Q of M.qualifiers2; track Q) {\r\n          <div>\r\n            <span class=\"qualifierProperty hover-bg-light\"\r\n                  matTooltip=\"[{{Q.id}}] {{Q.description || ''}}\"\r\n                  matTooltipPosition=\"right\">\r\n              <em>{{Q.label}}:&nbsp;</em>\r\n            </span>\r\n            @for (D of Q.display; track D; let isLast = $last) {\r\n            <span>\r\n              @if (D.datatype === 'time') {\r\n              <span>\r\n                {{D.date}}\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\r\n                <span class=\"calendarStyle\">\r\n                  greg.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\r\n                <span class=\"calendarStyle\">\r\n                  jul.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='string') {\r\n              <span>\r\n                {{D.string}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='monolingualtext') {\r\n              <span>\r\n                {{D.string.text}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              <span>{{D.amount}}</span>\r\n              @if (D.unit) {\r\n              <span><em>&nbsp;({{D.unit | unit |async}})</em>&nbsp;</span>\r\n              }\r\n              @if (D.datatype === 'external-id') {\r\n              <span>\r\n                <a href=\"{{D.link}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype === 'url') {\r\n              <span class=\"displayLayout\">\r\n                <a href=\"{{D.string}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype==='wikibase-item') {\r\n              <span>\r\n                {{D.label}}\r\n                <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', D.id]\">\r\n                  <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                </mat-icon-button>\r\n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\r\n                {{D.separator}}<span class=\"description-text\">{{D.description}}</span>\r\n              </span>\r\n              }\r\n              @if (D.datatype==='commonsMedia') {\r\n              <div>\r\n                <span>\r\n                  <img src={{D.commons}} (click)=\"openImage(D.commons)\">\r\n                </span>\r\n              </div>\r\n              }\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n          </div>\r\n          }\r\n        </span>\r\n        }\r\n      </div>\r\n      <!-- References -->\r\n      @if (M['references2'] && M['references2'].length > 0) {\r\n      <button mat-button\r\n              class=\"references-toggle-btn\"\r\n              (click)=\"toggleReferences()\">\r\n        <span class=\"triangle-icon\" [class.open]=\"showReferences\"></span>\r\n        Références\r\n      </button>\r\n      @if (showReferences && M['references2']) {\r\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\r\n      <div class=\"referenceStyle\">\r\n        @for (N of Ma; track N; let isLast = $last) {\r\n        <div class=\"inlineStyle\">\r\n          <span class=\"referenceProperty hover-bg-light\"\r\n                matTooltip=\"[{{ N.id }}] {{ N.description ? N.description + ' ' : '' }}\"\r\n                matTooltipPosition=\"right\">\r\n            {{N.label}}:\r\n          </span>\r\n          <span>\r\n            @for (P of N.display; track P; let isLast = $last) {\r\n            @if (N.datatype === 'wikibase-item') {\r\n            <span>\r\n              {{P.label}}\r\n              <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', P.id]\">\r\n                <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n              </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n              {{P.separator}}<span class=\"description-text\">{{P.description}}</span>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype==='time') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype==='string') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype === 'url') {\r\n            <span class=\"displayLayout\">\r\n              <a href=\"{{P}}\" target=\"_blank\">{{P}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype === 'external-id') {\r\n            <span>\r\n              <a href=\"{{P.link}}\" target=\"_blank\">{{P.value}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            }\r\n          </span>\r\n          @if (!isLast) {\r\n          <span>,&nbsp;</span>\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n      }\r\n      }\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n</mat-card-content>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterLink } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { UnitPipe } from '../../unit.pipe';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@Component({\r\n  selector: 'app-sources-display',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule, MatCardModule, RouterLink, UnitPipe, MatTooltipModule],\r\n  templateUrl: './sources-display.component.html',\r\n  styleUrl: './sources-display.component.scss'\r\n})\r\n\r\nexport class SourcesDisplayComponent {\r\n\r\n@Input() sourcesList ;\r\n  @Input() sources;\r\n\r\n  ngOninit() {\r\n    console.log('Sources List:', this.sourcesList);\r\n  }\r\n\r\n  showReferences = false; // état du volet\r\n\r\n  toggleReferences() {\r\n    this.showReferences = !this.showReferences;\r\n  }\r\n\r\n openImage(image){ //handling click for picture (open in new tab) \r\n    window.open(image);}\r\n\r\n}\r\n","<mat-card-content class=\"cardBackground\">\r\n  <div class=\"subdivisionTitle\">{{sources}}</div>\r\n  @for (P of sourcesList; track P) {\r\n  <div class=\"listStyle\">\r\n    <div class=\"labelTitlePadding\">\r\n      <span class=\"propertyStyle hover-bg-light\"\r\n            matTooltip=\"[{{P.id}}] {{P.description || ''}}\"\r\n            matTooltipPosition=\"right\">\r\n        {{P.label}}:\r\n      </span>\r\n    </div>\r\n    @for (M of P; track M) {\r\n    <div class=\"statementStyle\">\r\n      <div [ngStyle]=\"{'background-color': (M.rank=='deprecated') ? '#f1f1f1' : '#ffffff'}\">\r\n        @if (M.mainsnak.datatype ==='time') {\r\n        <span>{{M.mainsnak.datavalue.value.date}}</span>\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985727\") {\r\n        <span class=\"calendarStyle\">\r\n          greg.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        @if (M.mainsnak.datavalue.value.calendarmodel === \"http://www.wikidata.org/entity/Q1985786\") {\r\n        <span class=\"calendarStyle\">\r\n          jul.\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        }\r\n        }\r\n        @if (M.mainsnak.datatype==='monolingualtext') {\r\n        <span>{{M.mainsnak.datavalue.value.text}}, {{M.mainsnak.datavalue.value.language}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'string') {\r\n        <span class=\"displayLayout\">{{M.mainsnak.datavalue.value }}</span>\r\n        }\r\n        @if (M.mainsnak.datatype === 'url') {\r\n        <span class=\"displayLayout\">\r\n          <a href=\"{{M.mainsnak.datavalue.value}}\" target=\"_blank\">{{M.mainsnak.datavalue.value}}</a>\r\n        </span>\r\n        }\r\n        <span>{{M.mainsnak.datavalue.value.amount}}</span>\r\n        @if (M.mainsnak.datatype === 'globe-coordinate') {\r\n        <span>latitude: {{M.mainsnak.datavalue.value.latitude}}, longitude: {{M.mainsnak.datavalue.value.longitude}}</span>\r\n        }\r\n        @if (M.mainsnak.datatype==='commonsMedia') {\r\n        <div>\r\n          <span>\r\n            <img class=\"cover\" src={{M.picture}} (click)=\"openImage(M.picture)\">\r\n          </span>\r\n        </div>\r\n        }\r\n        @if (M.mainsnak.datatype==='wikibase-item') {\r\n        <span>\r\n          {{M.mainsnak.label}}\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', M.mainsnak.datavalue.value.id]\">\r\n            <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n          </mat-icon-button>\r\n          &nbsp;&nbsp;&nbsp;\r\n        </span>\r\n        {{M.mainsnak.separator}}\r\n        <span class=\"description-text\">{{M.mainsnak.description}}&nbsp;</span>\r\n        }\r\n        @if (M.rank=='deprecated') {\r\n        <span class=\"warningDeprecated\"> &nbsp;({{M.rank}})</span>\r\n        }\r\n      </div>\r\n      <div class=\"qualifierStyle\">\r\n        @if (M['qualifiers-order']) {\r\n        <span>\r\n          @for (Q of M.qualifiers2; track Q) {\r\n          <div>\r\n            <span class=\"qualifierProperty hover-bg-light\"\r\n                  matTooltip=\"[{{Q.id}}] {{Q.description || ''}}\"\r\n                  matTooltipPosition=\"right\">\r\n              <em>{{Q.label}}:&nbsp;</em>\r\n            </span>\r\n            @for (D of Q.display; track D; let isLast = $last) {\r\n            <span>\r\n              @if (D.datatype === 'time') {\r\n              <span>\r\n                {{D.date}}\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985727\") {\r\n                <span class=\"calendarStyle\">\r\n                  greg.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q220486']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n                @if (D.calendar === \"http://www.wikidata.org/entity/Q1985786\") {\r\n                <span class=\"calendarStyle\">\r\n                  jul.\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item','Q505980']\">\r\n                    <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                  </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='string') {\r\n              <span>\r\n                {{D.string}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              @if (D.datatype==='monolingualtext') {\r\n              <span>\r\n                {{D.string.text}}\r\n                @if (!isLast) {\r\n                <span>,&nbsp;</span>\r\n                }\r\n              </span>\r\n              }\r\n              <span>{{D.amount}}</span>\r\n              @if (D.unit) {\r\n              <span><em>&nbsp;({{D.unit | unit |async}})</em>&nbsp;</span>\r\n              }\r\n              @if (D.datatype === 'external-id') {\r\n              <span>\r\n                <a href=\"{{D.link}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype === 'url') {\r\n              <span class=\"displayLayout\">\r\n                <a href=\"{{D.string}}\" target=\"_blank\">{{D.string}}</a>\r\n              </span>\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n              }\r\n              @if (D.datatype==='wikibase-item') {\r\n              <span>\r\n                {{D.label}}\r\n                <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', D.id]\">\r\n                  <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n                </mat-icon-button>\r\n                @if(D.description){ &nbsp;&nbsp;&nbsp;}\r\n                {{D.separator}}<span class=\"description-text\">{{D.description}}</span>\r\n              </span>\r\n              }\r\n              @if (D.datatype==='commonsMedia') {\r\n              <div>\r\n                <span>\r\n                  <img src={{D.commons}} (click)=\"openImage(D.commons)\">\r\n                </span>\r\n              </div>\r\n              }\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n          </div>\r\n          }\r\n        </span>\r\n        }\r\n      </div>\r\n      <!-- References -->\r\n      @if (M['references2'] && M['references2'].length > 0) {\r\n      <button mat-button\r\n              class=\"references-toggle-btn\"\r\n              (click)=\"toggleReferences()\">\r\n        <span class=\"triangle-icon\" [class.open]=\"showReferences\"></span>\r\n        Références\r\n      </button>\r\n      @if (showReferences && M['references2']) {\r\n      @for (Ma of M['references2']; track Ma; let isLast = $last) {\r\n      <div class=\"referenceStyle\">\r\n        @for (N of Ma; track N; let isLast = $last) {\r\n        <div class=\"inlineStyle\">\r\n          <span class=\"referenceProperty hover-bg-light\"\r\n                matTooltip=\"[{{ N.id }}] {{ N.description ? N.description + ' ' : '' }}\"\r\n                matTooltipPosition=\"right\">\r\n            {{N.label}}:\r\n          </span>\r\n          <span>\r\n            @for (P of N.display; track P; let isLast = $last) {\r\n            @if (N.datatype === 'wikibase-item') {\r\n            <span>\r\n              {{P.label}}\r\n              <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', P.id]\">\r\n                <mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon>\r\n              </mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n              {{P.separator}}<span class=\"description-text\">{{P.description}}</span>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype==='time') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype==='string') {\r\n            <span>\r\n              {{P}}\r\n              @if (!isLast) {\r\n              <span>,&nbsp;</span>\r\n              }\r\n            </span>\r\n            }\r\n            @if (N.datatype === 'url') {\r\n            <span class=\"displayLayout\">\r\n              <a href=\"{{P}}\" target=\"_blank\">{{P}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            @if (N.datatype === 'external-id') {\r\n            <span>\r\n              <a href=\"{{P.link}}\" target=\"_blank\">{{P.value}}</a>\r\n            </span>\r\n            @if (!isLast) {\r\n            <span>,&nbsp;</span>\r\n            }\r\n            }\r\n            }\r\n          </span>\r\n          @if (!isLast) {\r\n          <span>,&nbsp;</span>\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n      }\r\n      }\r\n      }\r\n    </div>\r\n    }\r\n  </div>\r\n  }\r\n</mat-card-content>\r\n","import { Component, Input, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button'\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { RouterLink } from '@angular/router';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SelectedLangService } from '../../selected-lang.service';\r\nimport { ArrayToCsvService} from '../../services/array-to-csv.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-sparql0-display',\r\n    templateUrl: 'sparql0-display.component.html',\r\n    styleUrls: ['sparql0-display.component.scss'],\r\n    standalone: true,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [MatCardModule, NgClass, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, FormsModule, MatButtonModule]\r\n})\r\nexport class Sparql0DisplayComponent implements OnChanges, OnDestroy {\r\n  private lang = inject(SelectedLangService);\r\n  private csv = inject(ArrayToCsvService);\r\n\r\n \r\n  @Input() sparqlSubject;\r\n  @Input() sparqlData;\r\n\r\n  list:any[] = [];\r\n  isList:boolean = false;\r\n  isSearch:boolean = false;\r\n  subTitle:string = \"\";\r\n  instancesListTitle_50 = \"Instances (limit: 50):\";\r\n  subclassesListTitle = \"Subclasses:\";\r\n  isWorks:boolean=false ;\r\n  query:string;\r\n  listWithoutDuplicate:any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n   this.query = \"\";\r\n   this.isWorks = false;\r\n   this.isList = false;\r\n   this.isSearch = false;\r\n\r\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\r\n      if (this.sparqlData[0] !== undefined) { this.isList = true };\r\n       changes.sparqlData.currentValue.forEach( function (el) {\r\n         if(el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\r\n         else el.itemText = el.itemLabel.value + el.itemDescription.value\r\n       })\r\n\r\n      this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \r\n\r\n      this.list=this.listWithoutDuplicate;\r\n\r\n      if(this.list.length > 15) this.isSearch = true;\r\n     \r\n    } \r\n  \r\n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\r\n      this.subTitle = this.sparqlSubject;\r\n          \r\n      if (this.subTitle == \"Q945280\" || this.subTitle ==\"Q960698\"){  //FactGrid superclass\r\n      this.isWorks=true; \r\n      this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n      }\r\n     \r\n                 else {\r\n                      this.subTitle = \"\";\r\n                      this.list =[]; }\r\n                      }\r\n          \r\n  }\r\n\r\n  applyFilter(event) {\r\n    this.query = event.target.value.trim().toLowerCase();\r\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query)   ;\r\n    }\r\n\r\n  filterItem(arr:any[], query) { \r\n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\r\n    }\r\n\r\n   onClick(query){ //handling click for downlooding the filtered data\r\n      let u= query;\r\n       u = this.databaseToDownload(query);\r\n      let v= this.csv.arrayToCsv(u);\r\n       this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\r\n    }\r\n\r\n\r\n   databaseToDownload(data){\r\n      let dataToDownload:any[][] = [ [\"item.id\",\"item.label\",\"item.description\"] ];\r\n      for (let i=0; i<data.length; i++){ dataToDownload[i+1] = [data[i].item.id, data[i].itemLabel.value, data[i].itemDescription.value] } \r\n      return dataToDownload\r\n     }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n        this.sparqlSubject = \"\";\r\n        this.sparqlData = \"\";\r\n        this.list = [];\r\n        this.query = \"\";\r\n        this.isSearch = false;\r\n        this.isList = false;\r\n    }\r\n  } \r\n   \r\n\r\n\r\n\r\n","<div [ngClass]=\"isList ? 'show-division':'hide-division'\">\r\n  <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n    <mat-card-content class=\"cardBackground\">\r\n\r\n      <div [ngClass]=\"isWorks ? 'subdivisionTitle' : 'propertyStyle'\">\r\n        {{subTitle}}\r\n      </div>\r\n\r\n      @if(isSearch === true) {\r\n      <div class=\"searchFormPadding\">\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n        </mat-form-field>\r\n        <span>\r\n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\r\n        </span>\r\n      </div>\r\n      }\r\n\r\n      @for (L of list; track L) {\r\n\r\n      <div class=\"sparql-div statementStyle\">\r\n\r\n        @if (L.itemLabel) {\r\n        <label>\r\n\r\n          {{L.itemLabel.value}}\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', L.item.id]\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n          @if (L.itemDescription) {\r\n          <span>, {{L.itemDescription.value}}</span>\r\n          }\r\n          @if (L.year) {\r\n          <span>, {{L.year.value}}</span>\r\n          }\r\n        </label>\r\n        }\r\n      </div>\r\n      <hr>\r\n      }\r\n\r\n      <button mat-icon-button color=\"primary\" class=\"internalLink\" #content (click)=\"onClick(this.list)\">\r\n        <mat-icon color=\"primary\" [inline]=\"true\">download</mat-icon>\r\n      </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    </mat-card-content>\r\n  </mat-card>\r\n </div>\r\n\r\n","import { Component, Input, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { RouterLink } from '@angular/router';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SelectedLangService } from '../../selected-lang.service';\r\nimport { ArrayToCsvService } from '../../services/array-to-csv.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sparql1-display',\r\n  templateUrl: 'sparql1-display.component.html',\r\n  styleUrls: ['sparql1-display.component.scss'],\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [MatCardModule, NgClass, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, FormsModule, MatButtonModule]\r\n})\r\nexport class Sparql1DisplayComponent implements OnChanges, OnDestroy {\r\n  private lang = inject(SelectedLangService);\r\n  private csv = inject(ArrayToCsvService);\r\n\r\n\r\n  @Input() sparqlSubject;\r\n  @Input() sparqlData;\r\n\r\n  list: any[] = [];\r\n  isList: boolean = false;\r\n  isSearch: boolean = false;\r\n  subTitle: string = \"\";\r\n  instancesListTitle_50 = \"Instances (limit: 50):\";\r\n  subclassesListTitle = \"Subclasses:\";\r\n  isWorks: boolean = false;\r\n  buildingTitle: string = \"Buildings and monuments:\";\r\n  familyNameTitle: string = \"Bearing this family name:\";\r\n  contextTitle: string = \"Present in this context:\";\r\n  organisationTitle: string = \"Members:\";\r\n  activityTitle: string = \"With this activity:\";\r\n  addressTitle: string = \"Domiciled at this address:\";\r\n  workTitle: string = \"Works\";\r\n  pupilTitle: string = \"Pupils and disciples\";\r\n  listTitle: string = \"List\";\r\n  query: string;\r\n  listWithoutDuplicate: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    this.query = \"\";\r\n    this.isWorks = false;\r\n    this.isList = false;\r\n\r\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\r\n      if (this.sparqlData[0] !== undefined) { this.isList = true };\r\n      changes.sparqlData.currentValue.forEach(function (el) {\r\n        if (el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\r\n        else el.itemText = el.itemLabel.value + el.itemDescription.value\r\n      })\r\n\r\n      this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \r\n\r\n      this.list = this.listWithoutDuplicate;\r\n\r\n      if (this.list.length > 15) this.isSearch = true;\r\n\r\n    }\r\n\r\n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\r\n      this.subTitle = this.sparqlSubject;\r\n\r\n      if (this.subTitle == \"Q8\") {  //location\r\n        this.isWorks = true;\r\n        this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n      }\r\n      else {\r\n        if (this.subTitle == \"Q24499\") { //family name\r\n          this.isWorks = false;\r\n          this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n        }\r\n        else {\r\n          if (this.subTitle == \"Q12\") { //organisation\r\n            this.isWorks = false;\r\n            if (this.list[0] && this.list[0].activity) {  // people active in this organisation\r\n              this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n            }\r\n            else {   //people members of this organisation\r\n              this.isWorks = true;\r\n              this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n            }\r\n          }\r\n          else {\r\n            if (this.subTitle == \"Q37073\") { //activity\r\n              this.isWorks = true;\r\n              this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n            }\r\n            else {\r\n              if (this.subTitle == \"Q16200\") {  //address\r\n                this.isWorks = true;\r\n                this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n              }\r\n              else {\r\n                if (this.subTitle == \"Q456376\") { //author\r\n                  this.isWorks = true;\r\n                  this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n                }\r\n                else {\r\n                  if (this.subTitle = \"Q172192\") { //list\r\n                    this.isWorks = true;\r\n                    this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n                  }\r\n                  else {\r\n                    this.subTitle = \"\";\r\n                    this.list = [];\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  applyFilter(event) {\r\n    this.query = event.target.value.trim().toLowerCase();\r\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query);\r\n  }\r\n\r\n  filterItem(arr: any[], query) {\r\n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\r\n  }\r\n\r\n  onClick(query) { //handling click for downlooding the filtered data\r\n    let u = query;\r\n    u = this.databaseToDownload(query);\r\n    let v = this.csv.arrayToCsv(u);\r\n    this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\r\n  }\r\n\r\n\r\n  databaseToDownload(data) {\r\n    let dataToDownload: any[][] = [[\"item.id\", \"item.label\", \"item.description\"]];\r\n    for (let i = 0; i < data.length; i++) { dataToDownload[i + 1] = [data[i].item.id, data[i].itemLabel.value, data[i].itemDescription.value] }\r\n    return dataToDownload\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.sparqlSubject = \"\";\r\n    this.sparqlData = \"\";\r\n    this.list = [];\r\n    this.query = \"\";\r\n    this.isSearch = false;\r\n    this.isList = false;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","<div [ngClass]=\"isList ? 'show-division':'hide-division'\">\r\n  <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n    <mat-card-content class=\"cardBackground\">\r\n\r\n      <div [ngClass]=\"isWorks ? 'subdivisionTitle' : 'propertyStyle'\">\r\n        {{subTitle}}\r\n      </div>\r\n\r\n     @if(isSearch === true) {\r\n      <div class=\"searchFormPadding\">\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n        </mat-form-field>\r\n        <span>\r\n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\r\n        </span>\r\n      </div>\r\n      }\r\n      \r\n     @for (L of list; track L.item) {\r\n      <div class=\"sparql-div statementStyle\">.\r\n        <!---      <label>{{L}}</label>   -->\r\n        @if (L.itemLabel) {\r\n        <label>\r\n         @if (L.item.entity === \"property\") {\r\n          <span>\r\n            <a href=\"{{L.item.value}}\" target=\"_blank\">\r\n              {{L.item.id}}</a>\r\n              : {{L.itemLabel.value}}\r\n           </span>\r\n            @if (L.itemDescription) {\r\n            <span>, {{L.itemDescription.value}}</span>\r\n            }\r\n        }\r\n         @else {\r\n            {{L.itemLabel.value}}\r\n            <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', L.item.id]\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n            @if (L.itemDescription) {\r\n            <span>, {{L.itemDescription.value}}</span>\r\n            }\r\n            @if (L.year) {\r\n            <span>, {{L.year.value}}</span>\r\n            }\r\n            }\r\n        </label>\r\n     }\r\n        <hr>\r\n    </div>\r\n     }\r\n      <span>\r\n        <button mat-icon-button color=\"primary\" class=\"internalLink\" #content (click)=\"onClick(this.list)\">\r\n          <mat-icon color=\"primary\" [inline]=\"true\">download</mat-icon>\r\n        </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </span>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n","import { Component, Input, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { RouterLink } from '@angular/router';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SelectedLangService } from '../../selected-lang.service';\r\nimport { ArrayToCsvService } from '../../services/array-to-csv.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sparql2-display',\r\n  standalone: true,\r\n  imports: [MatCardModule, NgClass, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, MatButtonModule, FormsModule],\r\n  templateUrl: './sparql2-display.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrl: './sparql2-display.component.scss'\r\n})\r\nexport class Sparql2DisplayComponent implements OnChanges, OnDestroy {\r\n  private lang = inject(SelectedLangService);\r\n  private csv = inject(ArrayToCsvService);\r\n\r\n\r\n  @Input() sparqlSubject;\r\n  @Input() sparqlData;\r\n\r\n  list: any[] = [];\r\n  isList: boolean = false;\r\n  isSearch: boolean = false;\r\n  subTitle: string = \"\";\r\n  isWorks: boolean = false;\r\n  patientsTitle: string = \"Patients\";\r\n  listTitle: string = \"List\";\r\n  query: string;\r\n  listWithoutDuplicate: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    this.query = \"\";\r\n    this.isWorks = false;\r\n    this.isList = false;\r\n    this.isSearch = false;\r\n\r\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\r\n      if (this.sparqlData[0] !== undefined) { this.isList = true };\r\n\r\n      changes.sparqlData.currentValue.forEach(function (el) {\r\n        if (el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\r\n        else el.itemText = el.itemLabel.value + el.itemDescription.value\r\n      })\r\n\r\n      this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \r\n\r\n      this.list = this.listWithoutDuplicate;\r\n\r\n      if (this.list.length > 15) this.isSearch = true;\r\n\r\n    }\r\n\r\n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\r\n      this.subTitle = this.sparqlSubject;\r\n\r\n      if (this.subTitle == \"Q140759\") {  //patients\r\n        this.isWorks = true;\r\n        this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n      }\r\n      else {\r\n        this.subTitle = \"\";\r\n        this.list = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  applyFilter(event) {\r\n    this.query = event.target.value.trim().toLowerCase();\r\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query);\r\n  }\r\n\r\n  filterItem(arr: any[], query) {\r\n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\r\n  }\r\n\r\n  onClick(query) { //handling click for downlooding the filtered data\r\n    let u = query;\r\n    u = this.databaseToDownload(query);\r\n    let v = this.csv.arrayToCsv(u);\r\n    this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\r\n  }\r\n\r\n  databaseToDownload(data) {\r\n    let dataToDownload: any[][] = [[\"item.id\", \"item.label\", \"item.description\"]];\r\n    for (let i = 0; i < data.length; i++) { dataToDownload[i + 1] = [data[i].item.value, data[i].itemLabel.value, data[i].itemDescription.value] }\r\n    return dataToDownload\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sparqlSubject = \"\";\r\n    this.sparqlData = \"\";\r\n    this.list = [];\r\n    this.query = \"\";\r\n    this.isSearch = false;\r\n    this.isList = false;\r\n  }\r\n\r\n} \r\n","<div [ngClass]=\"isList ? 'show-division':'hide-division'\">\r\n  <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n    <mat-card-content class=\"cardBackground\">\r\n      <div [ngClass]=\"isWorks ? 'subdivisionTitle' : 'propertyStyle'\">{{subTitle}}</div>\r\n\r\n\r\n      @if(isSearch === true){\r\n      <div class=\"searchFormPadding\">\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n        </mat-form-field>\r\n        <span>\r\n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\r\n        </span>\r\n      </div>\r\n      }\r\n\r\n      @for (L of list; track L) {\r\n        <div class=\"sparql-div statementStyle\">\r\n          @if (L.itemLabel.value) {\r\n          <label>\r\n            {{L.itemLabel.value}}\r\n            <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', L.item.id]\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n            @if (L.itemDescription) {\r\n            <span>, {{L.itemDescription.value}}</span>\r\n            }\r\n            @if (L.year) {\r\n            <span>, {{L.year.value}}</span>\r\n            }\r\n\r\n          </label>\r\n          }\r\n        <hr>\r\n      </div>\r\n      }\r\n      <span>\r\n        <button mat-icon-button color=\"primary\" class=\"internalLink\" #content (click)=\"onClick(this.list)\">\r\n          <mat-icon color=\"primary\" [inline]=\"true\">download</mat-icon>\r\n        </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </span>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n","import { Component, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { RouterLink } from '@angular/router';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SelectedLangService } from '../../selected-lang.service';\r\nimport { ArrayToCsvService } from '../../services/array-to-csv.service';\r\n\r\n\r\n\r\n@Component({\r\n   selector: 'app-sparql3-display',\r\n   standalone: true,\r\n    imports: [MatCardModule, NgClass, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, MatButtonModule, FormsModule],\r\n    templateUrl: './sparql3-display.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    styleUrl: './sparql3-display.component.scss'\r\n})\r\nexport class Sparql3DisplayComponent implements OnChanges, OnDestroy {\r\n  private lang = inject(SelectedLangService);\r\n  private csv = inject(ArrayToCsvService);\r\n\r\n  sparqlSubject = input<string>();\r\n  sparqlData = input();\r\n\r\n  list: any[] = [];\r\n  isList: boolean = false;\r\n  isSearch: boolean = false;\r\n  subTitle: string = \"\";\r\n  isWorks: boolean = false;\r\n  pupilTitle: string = \"Pupils and disciples\";\r\n  currentAddress: string = \"Current address\";\r\n  listTitle: string = \"List\";\r\n  setTitle: string = \"Include:\";\r\n  query: string;\r\n  listWithoutDuplicate: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    this.query = \"\";\r\n    this.isWorks = false;\r\n    this.isList = false;\r\n    this.isSearch = false;\r\n\r\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\r\n\r\n      if (this.sparqlData()[0] !== undefined) { this.isList = true };\r\n\r\n        changes.sparqlData.currentValue.forEach(function (el) {\r\n          if (el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\r\n          else el.itemText = el.itemLabel.value + el.itemDescription.value\r\n        })\r\n\r\n        this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \r\n\r\n        this.list = this.listWithoutDuplicate;\r\n       \r\n      if (this.list.length > 15) this.isSearch = true\r\n\r\n    }\r\n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\r\n      this.subTitle = this.sparqlSubject();\r\n      if (this.subTitle == \"master\") {  //pupils and disciples\r\n        this.isWorks = true;\r\n        this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n      } else {\r\n        if (this.subTitle == \"Q945258\") { //set\r\n          this.isWorks = true;\r\n          this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n        } else {\r\n          if (this.subTitle == \"Q172192\") { //list\r\n            this.isWorks = true;\r\n            this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n          } else {\r\n            if (this.subTitle == \"current address:\") { //current address\r\n              this.isWorks = false;\r\n              this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n              console.log(this.subTitle);\r\n            }\r\n            else {\r\n            this.subTitle = \"\";\r\n            this.list = [];\r\n          }\r\n         }\r\n        }\r\n       }\r\n     }\r\n    \r\n  }\r\n\r\n  applyFilter(event) {\r\n    this.query = event.target.value.trim().toLowerCase();\r\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query);\r\n  }\r\n\r\n  filterItem(arr: any[], query) {\r\n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\r\n  }\r\n\r\n  onClick(query) { //handling click for downlooding the filtered data\r\n    let u = query;\r\n    u = this.databaseToDownload(query);\r\n    let v = this.csv.arrayToCsv(u);\r\n    this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\r\n  }\r\n\r\n  databaseToDownload(data) {\r\n    let dataToDownload: any[][] = [[\"item.id\", \"item.label\", \"item.description\"]];\r\n    for (let i = 0; i < data.length; i++) { dataToDownload[i + 1] = [data[i].item.value, data[i].itemLabel.value, data[i].itemDescription.value] }\r\n    return dataToDownload\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n//    this.sparqlSubject() = \"\";\r\n//    this.sparqlData() = \"\";\r\n    this.list = [];\r\n    this.query = \"\";\r\n    this.isSearch = false;\r\n    this.isList = false;\r\n  }\r\n} \r\n","<div [ngClass]=\"isList ? 'show-division':'hide-division'\">\r\n  <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n    <mat-card-content class=\"cardBackground\">\r\n      <div [ngClass]=\"isWorks ? 'subdivisionTitle' : 'propertyStyle'\">{{subTitle}}</div>\r\n\r\n      @if(isSearch === true) {\r\n     <div class=\"searchFormPadding\">\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n        </mat-form-field>\r\n        <span>\r\n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\r\n        </span>\r\n      </div>\r\n      }\r\n     \r\n      @for (L of list; track L) {\r\n        <div class=\"sparql-div statementStyle\">\r\n          @if (L.itemLabel.value) {\r\n          <label>\r\n            {{L.itemLabel.value}}\r\n            <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', L.item.id]\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n            @if (L.itemDescription) {\r\n            <span>, {{L.itemDescription.value}}</span>\r\n            }\r\n            @if (L.year) {\r\n            <span>, {{L.year.value}}</span>\r\n            }\r\n\r\n          </label>\r\n          }\r\n        <hr>\r\n      </div>\r\n      }\r\n      <span>\r\n        <button mat-icon-button color=\"primary\" class=\"internalLink\" #content (click)=\"onClick(this.list)\">\r\n          <mat-icon color=\"primary\" [inline]=\"true\">download</mat-icon>\r\n        </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </span>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>","import { Component, OnChanges, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy, SimpleChanges, inject, input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { RouterLink } from '@angular/router';\r\nimport { NgClass } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SelectedLangService } from '../../selected-lang.service';\r\nimport { ArrayToCsvService } from '../../services/array-to-csv.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sparql4-display',\r\n  standalone: true,\r\n    imports: [MatCardModule, NgClass, RouterLink, MatIconModule, MatFormFieldModule, MatInputModule, MatButtonModule, FormsModule],\r\n    templateUrl: './sparql4-display.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    styleUrl: './sparql4-display.component.scss'\r\n})\r\nexport class Sparql4DisplayComponent implements OnChanges, OnDestroy {\r\n  private lang = inject(SelectedLangService);\r\n  private csv = inject(ArrayToCsvService);\r\n\r\n\r\n  sparqlSubject = input<string>();\r\n  sparqlData = input();\r\n\r\n  list: any[] = [];\r\n  isList: boolean = false;\r\n  isSearch: boolean = false;\r\n  subTitle: string = \"\";\r\n  isWorks: boolean = false;\r\n  buildingTitle: string = \"Buildings and monuments:\";\r\n  query: string;\r\n  listWithoutDuplicate: any[];\r\n  listTitle: string = \"List\";\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    this.query = \"\";\r\n    this.isWorks = false;\r\n    this.isList = false;\r\n    this.isSearch = false;\r\n\r\n    if (changes.sparqlData && changes.sparqlData.currentValue) {\r\n      if (this.sparqlData()[0] !== undefined) { this.isList = true; console.log(this.sparqlData())};\r\n\r\n      changes.sparqlData.currentValue.forEach(function (el) {\r\n        if (el.itemDescription === undefined) { el.itemText = el.itemLabel.value }\r\n        else el.itemText = el.itemLabel.value + el.itemDescription.value\r\n      })\r\n\r\n      this.listWithoutDuplicate = [...new Map(changes.sparqlData.currentValue.reverse().map(v => [JSON.stringify([v.itemText]), v])).values()].reverse();  // remove the duplicates \r\n\r\n      this.list = this.listWithoutDuplicate;\r\n\r\n      if (this.list.length > 15) this.isSearch = true;\r\n\r\n    }\r\n\r\n    if (changes.sparqlSubject && changes.sparqlSubject.currentValue) {\r\n      this.subTitle = this.sparqlSubject();\r\n\r\n\r\n      if (this.subTitle == \"Q8\") {  //location\r\n        this.isWorks = true;\r\n        this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n      }\r\n      else {\r\n\r\n        if (this.subTitle == \"GOV\") {  //GOV\r\n          this.isWorks = true;\r\n          //      this.subTitle = this.lang.buildingTitle(this.buildingTitle\r\n          this.subTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n        }\r\n\r\n        else {\r\n          this.subTitle = \"\";\r\n          this.list = [];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  applyFilter(event) {\r\n    this.query = event.target.value.trim().toLowerCase();\r\n    this.list = this.filterItem(this.listWithoutDuplicate, this.query);\r\n  }\r\n\r\n  filterItem(arr: any[], query) {\r\n    return arr.filter((el) => el.itemText.toLowerCase().includes(this.query.toLowerCase()))\r\n  }\r\n\r\n  onClick(query) { //handling click for downlooding the filtered data\r\n    let u = query;\r\n    u = this.databaseToDownload(query);\r\n    let v = this.csv.arrayToCsv(u);\r\n    this.csv.downloadBlob(v, \"factGrid\", \"text/csv;charset=utf-8;\")\r\n  }\r\n\r\n  databaseToDownload(data) {\r\n    let dataToDownload: any[][] = [[\"item.id\", \"item.label\", \"item.description\"]];\r\n    for (let i = 0; i < data.length; i++) { dataToDownload[i + 1] = [data[i].item.value, data[i].itemLabel.value, data[i].itemDescription.value] }\r\n    return dataToDownload\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n //   this.sparqlSubject() = \"\";\r\n //   this.sparqlData() = \"\";\r\n    this.list = [];\r\n    this.query = \"\";\r\n    this.isSearch = false;\r\n    this.isList = false;\r\n  }\r\n} \r\n","<div [ngClass]=\"isList ? 'show-division':'hide-division'\">\r\n  <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n    <mat-card-content class=\"cardBackground\">\r\n      <div class=\"subTitlePadding\" [ngClass]=\"isWorks ? 'subdivisionTitle' : 'propertyStyle'\">{{subTitle}}</div>\r\n\r\n\r\n      @if(isSearch === true){\r\n      <div class=\"searchFormPadding\">\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\r\n        </mat-form-field>\r\n        <span>\r\n          &nbsp;&nbsp;&nbsp;{{this.list.length}}\r\n        </span>\r\n      </div>\r\n      }\r\n\r\n      @for (L of list; track L) {\r\n      <div class=\"sparql-div statementStyle\">\r\n        @if (L.itemLabel.value) {\r\n        <label>\r\n          {{L.itemLabel.value}}\r\n          <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', L.item.id]\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>&nbsp;&nbsp;&nbsp;\r\n          @if (L.itemDescription) {\r\n          <span>, {{L.itemDescription.value}}</span>\r\n          }\r\n          @if (L.year) {\r\n          <span>, {{L.year.value}}</span>\r\n          }\r\n\r\n        </label>\r\n        }\r\n        <hr>\r\n      </div>\r\n      }\r\n      <span>\r\n        <button mat-icon-button color=\"primary\" class=\"internalLink\" #content (click)=\"onClick(this.list)\">\r\n          <mat-icon color=\"primary\" [inline]=\"true\">download</mat-icon>\r\n        </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </span>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n","import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-iframes-display',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule, MatCardModule],\r\n  templateUrl: './iframes-display.component.html',\r\n  styleUrl: './iframes-display.component.scss'\r\n})\r\nexport class IframesDisplayComponent {\r\n\r\n  @Input() claims;\r\n\r\n  private _urlSafe1: SafeResourceUrl;\r\n  @Input() set urlSafe1(url: string) {\r\n    this._urlSafe1 = this.sanitize(url);\r\n  }\r\n  get urlSafe1(): SafeResourceUrl { return this._urlSafe1; }\r\n\r\n  private _urlSafe2: SafeResourceUrl;\r\n  @Input() set urlSafe2(url: string) { this._urlSafe2 = this.sanitize(url); }\r\n  get urlSafe2(): SafeResourceUrl { return this._urlSafe2; }\r\n\r\n  private _urlSafe3: SafeResourceUrl;\r\n  @Input() set urlSafe3(url: string) { this._urlSafe3 = this.sanitize(url); }\r\n  get urlSafe3(): SafeResourceUrl { return this._urlSafe3; }\r\n\r\n  private _urlSafe4: SafeResourceUrl;\r\n  @Input() set urlSafe4(url: string) { this._urlSafe4 = this.sanitize(url); }\r\n  get urlSafe4(): SafeResourceUrl { return this._urlSafe4; }\r\n\r\n  private _urlSafe5: SafeResourceUrl;\r\n  @Input() set urlSafe5(url: string) { this._urlSafe5 = this.sanitize(url); }\r\n  get urlSafe5(): SafeResourceUrl { return this._urlSafe5; }\r\n\r\n  private _urlSafe6: SafeResourceUrl;\r\n  @Input() set urlSafe6(url: string) { this._urlSafe6 = this.sanitize(url); }\r\n  get urlSafe6(): SafeResourceUrl { return this._urlSafe6; }\r\n\r\n  private _urlSafe7: SafeResourceUrl;\r\n  @Input() set urlSafe7(url: string) { this._urlSafe7 = this.sanitize(url); }\r\n  get urlSafe7(): SafeResourceUrl { return this._urlSafe7; }\r\n\r\n  private _urlSafe8: SafeResourceUrl;\r\n  @Input() set urlSafe8(url: string) { this._urlSafe8 = this.sanitize(url); }\r\n  get urlSafe8(): SafeResourceUrl { return this._urlSafe8; }\r\n\r\n  private _urlSafe9: SafeResourceUrl;\r\n  @Input() set urlSafe9(url: string) { this._urlSafe9 = this.sanitize(url); }\r\n  get urlSafe9(): SafeResourceUrl { return this._urlSafe9; }\r\n\r\n  private _urlSafe10: SafeResourceUrl;\r\n  @Input() set urlSafe10(url: string) { this._urlSafe10 = this.sanitize(url); }\r\n  get urlSafe10(): SafeResourceUrl { return this._urlSafe10; }\r\n\r\n  private _urlSafe11: SafeResourceUrl;\r\n  @Input() set urlSafe11(url: string) { this._urlSafe11 = this.sanitize(url); }\r\n  get urlSafe11(): SafeResourceUrl { return this._urlSafe11; }\r\n\r\n  private _urlSafe12: SafeResourceUrl;\r\n  @Input() set urlSafe12(url: string) { this._urlSafe12 = this.sanitize(url); }\r\n  get urlSafe12(): SafeResourceUrl { return this._urlSafe12; }\r\n\r\n  private _urlSafe13: SafeResourceUrl;\r\n  @Input() set urlSafe13(url: string) { this._urlSafe13 = this.sanitize(url); }\r\n  get urlSafe13(): SafeResourceUrl { return this._urlSafe13; }\r\n\r\n  private _urlSafe14: SafeResourceUrl;\r\n  @Input() set urlSafe14(url: string) { this._urlSafe14 = this.sanitize(url); }\r\n  get urlSafe14(): SafeResourceUrl { return this._urlSafe14; }\r\n\r\n  private _urlSafe15: SafeResourceUrl;\r\n  @Input() set urlSafe15(url: string) { this._urlSafe15 = this.sanitize(url); }\r\n  get urlSafe15(): SafeResourceUrl { return this._urlSafe15; }\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  private sanitize(url: string): SafeResourceUrl {\r\n    return url ? this.sanitizer.bypassSecurityTrustResourceUrl(url) : null;\r\n  }\r\n}\r\n","\t\t\t\t\t\t\t <mat-card-content class=\"cardBackground\">  \r\n\t\t\t\t\t\t\t\t\t\t\t@if (claims.P309) {\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"iframeTitlePadding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"propertyStyle\">{{claims.P309.label}}:</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P309[0]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P309[0].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t @if (claims.P309[0].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P309[0].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe1\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P309[1]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P309[1].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t @if (claims.P309[1].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P309[1].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe2\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P309[2]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P309[2].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P309[2].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P309[2].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe3\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t@if (claims.P320) {\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"iframeTitlePadding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"propertyStyle\">{{claims.P320.label}}:</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P320[0]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t @if (claims.P320[0].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P320[0].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P679[0].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe4\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P320[1]) {\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P320[1].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P320[1].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P679[0].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe5\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P320[2]) {\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P320[2].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P320[2].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P679[0].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe6\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"iframeTitlePadding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"propertyStyle\">{{claims.P679.label}}:</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679[0]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679[0].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679[0].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P679[0].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe7\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679[1]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679[1].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679[1].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\">@if (claims.P679[1].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{{claims.P679[1].qualifiers2[0].value.label}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe8\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679[2]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679[2].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P679[2].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\">@if (claims.P679[2].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{{claims.P679[2].qualifiers2[0].value.label}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe9\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693) {\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"iframeTitlePadding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"propertyStyle\">{{claims.P693.label}}:</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693[0]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693[0].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693[0].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P693[0].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe10\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693[1]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693[1].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693[1].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P693[1].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe11\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693[2]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693[2].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P693[2].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P693[2].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe12\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t@if (claims.P720) {\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"iframeTitlePadding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"propertyStyle\">{{claims.P720.label}}:</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P720[0]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P720[0].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P720[0].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P720[0].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe13\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P720[1]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P720[1].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t @if (claims.P720[1].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"iFrameComment\"><span>{{claims.P720[1].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe14\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P720[2]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P720[2].qualifiers2) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@if (claims.P720[2].qualifiers2[0].value.label) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"iFrameComment\"><span>{{claims.P720[2].qualifiers2[0].value.label}}</span></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe style=\"width: 100%; height: 100vh; border: none;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[src]=\"urlSafe15\"></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</mat-card-content>\r\n","import { Component, Input, OnChanges, ChangeDetectorRef, SimpleChanges, SimpleChange, inject } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { NgClass } from '@angular/common';\r\n\r\n\r\n@Component({\r\n    selector: 'app-text-display',\r\n    templateUrl: './text-display.component.html',\r\n    styleUrls: ['./text-display.component.scss'],\r\n    standalone: true,\r\n    imports: [NgClass, MatCardModule]\r\n})\r\nexport class TextDisplayComponent implements OnChanges {\r\n  private changeDetector = inject(ChangeDetectorRef);\r\n\r\n\r\n  @Input() trans ;\r\n\r\n  selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\r\n  text:string =\"\";\r\n  transcription:string\r\n  isTrans:boolean = false;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n          this.transcription = \"Transcription\";\r\n          if (this.selectedLang === \"de\") { this.transcription = \"Transkription\" };\r\n          if (this.selectedLang === \"fr\") { this.transcription = \"Transcription\" };\r\n           if (this.selectedLang === \"es\") { this.transcription = \"Transcripción\" };\r\n           if(this.trans === undefined){ this.isTrans = false };\r\n          const currentTrans:SimpleChange = changes.trans;\r\n    \r\n          this.text = currentTrans.currentValue;\r\n          if(this.text !== undefined){ this.isTrans = true };\r\n          if(this.text ==\"\"){ this.isTrans = false };\r\n          console.log(this.text);\r\n          console.log(this.isTrans);\r\n          \r\n    }\r\n\r\n}\r\n","<div [ngClass]=\"isTrans ? 'show-division':'hide-division'\">\r\n<mat-card-content class=\"cardBackground\">\r\n    <div class=\"subdivision-title\">{{transcription}}</div>\r\n    <div [innerHtml]=\"text\"></div>\r\n</mat-card-content>\r\n</div>\r\n","import { FocusKeyManager, _IdGenerator, CdkMonitorFocus, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, CdkScrollable } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, TemplateRef, Directive, ViewContainerRef, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChild, ViewChild, ElementRef, ChangeDetectorRef, NgZone, Injector, Renderer2, EventEmitter, afterNextRender, numberAttribute, Output, ContentChildren, QueryList, ViewChildren, signal, forwardRef, computed, HostAttributeToken, NgModule } from '@angular/core';\nimport { Subject, of, merge, EMPTY, Observable, timer, Subscription, BehaviorSubject } from 'rxjs';\nimport { debounceTime, takeUntil, startWith, switchMap, skip, filter } from 'rxjs/operators';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { CdkObserveContent } from '@angular/cdk/observers';\nimport { M as MatRipple, a as MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-BYgV4oZC.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/coercion';\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst _c0 = [\"*\"];\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c1 = [\"tabListContainer\"];\nconst _c2 = [\"tabList\"];\nconst _c3 = [\"tabListInner\"];\nconst _c4 = [\"nextPaginator\"];\nconst _c5 = [\"previousPaginator\"];\nconst _c6 = [\"content\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\nconst _c7 = [\"tabBodyWrapper\"];\nconst _c8 = [\"tabHeader\"];\nfunction MatTabGroup_For_3_Conditional_6_ng_template_0_Template(rf, ctx) {}\nfunction MatTabGroup_For_3_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_For_3_Conditional_6_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\nfunction MatTabGroup_For_3_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\nfunction MatTabGroup_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7, 2);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_For_3_Template_div_click_0_listener() {\n      const ctx_r2 = i0.ɵɵrestoreView(_r2);\n      const tab_r4 = ctx_r2.$implicit;\n      const $index_r5 = ctx_r2.$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      const tabHeader_r7 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5._handleClick(tab_r4, tabHeader_r7, $index_r5));\n    })(\"cdkFocusChange\", function MatTabGroup_For_3_Template_div_cdkFocusChange_0_listener($event) {\n      const $index_r5 = i0.ɵɵrestoreView(_r2).$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._tabFocusChanged($event, $index_r5));\n    });\n    i0.ɵɵelement(2, \"span\", 8)(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10)(5, \"span\", 11);\n    i0.ɵɵconditionalCreate(6, MatTabGroup_For_3_Conditional_6_Template, 1, 1, null, 12)(7, MatTabGroup_For_3_Conditional_7_Template, 1, 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const $index_r5 = ctx.$index;\n    const tabNode_r8 = i0.ɵɵreference(1);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r4.labelClass);\n    i0.ɵɵclassProp(\"mdc-tab--active\", ctx_r5.selectedIndex === $index_r5);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabLabelId(tab_r4, $index_r5))(\"disabled\", tab_r4.disabled)(\"fitInkBarToContent\", ctx_r5.fitInkBarToContent);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r5._getTabIndex($index_r5))(\"aria-posinset\", $index_r5 + 1)(\"aria-setsize\", ctx_r5._tabs.length)(\"aria-controls\", ctx_r5._getTabContentId($index_r5))(\"aria-selected\", ctx_r5.selectedIndex === $index_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matRippleTrigger\", tabNode_r8)(\"matRippleDisabled\", tab_r4.disabled || ctx_r5.disableRipple);\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(tab_r4.templateLabel ? 6 : 7);\n  }\n}\nfunction MatTabGroup_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatTabGroup_For_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 13);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_For_8_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._removeTabBodyWrapperHeight());\n    })(\"_onCentering\", function MatTabGroup_For_8_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._setTabBodyWrapperHeight($event));\n    })(\"_beforeCentering\", function MatTabGroup_For_8_Template_mat_tab_body__beforeCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._bodyCentered($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r10 = ctx.$implicit;\n    const $index_r11 = ctx.$index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r10.bodyClass);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabContentId($index_r11))(\"content\", tab_r10.content)(\"position\", tab_r10.position)(\"animationDuration\", ctx_r5.animationDuration)(\"preserveContent\", ctx_r5.preserveContent);\n    i0.ɵɵattribute(\"tabindex\", ctx_r5.contentTabIndex != null && ctx_r5.selectedIndex === $index_r11 ? ctx_r5.contentTabIndex : null)(\"aria-labelledby\", ctx_r5._getTabLabelId(tab_r10, $index_r11))(\"aria-hidden\", ctx_r5.selectedIndex !== $index_r11);\n  }\n}\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _c10 = [\"mat-tab-link\", \"\"];\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n  template = inject(TemplateRef);\n  constructor() {}\n  static ɵfac = function MatTabContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTabContent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTabContent,\n    selectors: [[\"\", \"matTabContent\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_TAB_CONTENT,\n      useExisting: MatTabContent\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabContent, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabContent]',\n      providers: [{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n  _closestTab = inject(MAT_TAB, {\n    optional: true\n  });\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatTabLabel_BaseFactory;\n    return function MatTabLabel_Factory(__ngFactoryType__) {\n      return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = i0.ɵɵgetInheritedFactory(MatTabLabel)))(__ngFactoryType__ || MatTabLabel);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTabLabel,\n    selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_TAB_LABEL,\n      useExisting: MatTabLabel\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-label], [matTabLabel]',\n      providers: [{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab {\n  _viewContainerRef = inject(ViewContainerRef);\n  _closestTabGroup = inject(MAT_TAB_GROUP, {\n    optional: true\n  });\n  /** whether the tab is disabled. */\n  disabled = false;\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  get templateLabel() {\n    return this._templateLabel;\n  }\n  set templateLabel(value) {\n    this._setTemplateLabelInput(value);\n  }\n  _templateLabel;\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  _explicitContent = undefined;\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  _implicitContent;\n  /** Plain text label for the tab, used when there is no template label. */\n  textLabel = '';\n  /** Aria label for the tab. */\n  ariaLabel;\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  ariaLabelledby;\n  /** Classes to be passed to the tab label inside the mat-tab-header container. */\n  labelClass;\n  /** Classes to be passed to the tab mat-tab-body container. */\n  bodyClass;\n  /**\n   * Custom ID for the tab, overriding the auto-generated one by Material.\n   * Note that when using this input, it's your responsibility to ensure that the ID is unique.\n   */\n  id = null;\n  /** Portal that will be the hosted content of the tab */\n  _contentPortal = null;\n  /** @docs-private */\n  get content() {\n    return this._contentPortal;\n  }\n  /** Emits whenever the internal state of the tab changes. */\n  _stateChanges = new Subject();\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position = null;\n  // TODO(crisbeto): we no longer use this, but some internal apps appear to rely on it.\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin = null;\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n  }\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setTemplateLabelInput(value) {\n    // Only update the label if the query managed to find one. This works around an issue where a\n    // user may have manually set `templateLabel` during creation mode, which would then get\n    // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n    // tab matches the current one so that we don't pick up labels from nested tabs.\n    if (value && value._closestTab === this) {\n      this._templateLabel = value;\n    }\n  }\n  static ɵfac = function MatTab_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTab)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTab,\n    selectors: [[\"mat-tab\"]],\n    contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatTabContent, 7, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n      }\n    },\n    viewQuery: function MatTab_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n      }\n    },\n    hostAttrs: [\"hidden\", \"\"],\n    hostVars: 1,\n    hostBindings: function MatTab_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", null);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      textLabel: [0, \"label\", \"textLabel\"],\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      labelClass: \"labelClass\",\n      bodyClass: \"bodyClass\",\n      id: \"id\"\n    },\n    exportAs: [\"matTab\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_TAB,\n      useExisting: MatTab\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatTab_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTab, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab',\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matTab',\n      providers: [{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }],\n      host: {\n        // This element will be rendered on the server in order to support hydration.\n        // Hide it so it doesn't cause a layout shift when it's removed on the client.\n        'hidden': '',\n        // Clear any custom IDs from the tab since they'll be forwarded to the actual tab.\n        '[attr.id]': 'null'\n      },\n      template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\"\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    templateLabel: [{\n      type: ContentChild,\n      args: [MatTabLabel]\n    }],\n    _explicitContent: [{\n      type: ContentChild,\n      args: [MatTabContent, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    textLabel: [{\n      type: Input,\n      args: ['label']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    labelClass: [{\n      type: Input\n    }],\n    bodyClass: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Class that is applied when a tab indicator is active. */\nconst ACTIVE_CLASS = 'mdc-tab-indicator--active';\n/** Class that is applied when the tab indicator should not transition. */\nconst NO_TRANSITION_CLASS = 'mdc-tab-indicator--no-transition';\n/**\n * Abstraction around the MDC tab indicator that acts as the tab header's ink bar.\n * @docs-private\n */\nclass MatInkBar {\n  _items;\n  /** Item to which the ink bar is aligned currently. */\n  _currentItem;\n  constructor(_items) {\n    this._items = _items;\n  }\n  /** Hides the ink bar. */\n  hide() {\n    this._items.forEach(item => item.deactivateInkBar());\n    this._currentItem = undefined;\n  }\n  /** Aligns the ink bar to a DOM node. */\n  alignToElement(element) {\n    const correspondingItem = this._items.find(item => item.elementRef.nativeElement === element);\n    const currentItem = this._currentItem;\n    if (correspondingItem === currentItem) {\n      return;\n    }\n    currentItem?.deactivateInkBar();\n    if (correspondingItem) {\n      const domRect = currentItem?.elementRef.nativeElement.getBoundingClientRect?.();\n      // The ink bar won't animate unless we give it the `DOMRect` of the previous item.\n      correspondingItem.activateInkBar(domRect);\n      this._currentItem = correspondingItem;\n    }\n  }\n}\nclass InkBarItem {\n  _elementRef = inject(ElementRef);\n  _inkBarElement;\n  _inkBarContentElement;\n  _fitToContent = false;\n  /** Whether the ink bar should fit to the entire tab or just its content. */\n  get fitInkBarToContent() {\n    return this._fitToContent;\n  }\n  set fitInkBarToContent(newValue) {\n    if (this._fitToContent !== newValue) {\n      this._fitToContent = newValue;\n      if (this._inkBarElement) {\n        this._appendInkBarElement();\n      }\n    }\n  }\n  /** Aligns the ink bar to the current item. */\n  activateInkBar(previousIndicatorClientRect) {\n    const element = this._elementRef.nativeElement;\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect || !element.getBoundingClientRect || !this._inkBarContentElement) {\n      element.classList.add(ACTIVE_CLASS);\n      return;\n    }\n    // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n    // Calculate the dimensions based on the dimensions of the previous indicator\n    const currentClientRect = element.getBoundingClientRect();\n    const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    element.classList.add(NO_TRANSITION_CLASS);\n    this._inkBarContentElement.style.setProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n    // Force repaint before updating classes and transform to ensure the transform properly takes effect\n    element.getBoundingClientRect();\n    element.classList.remove(NO_TRANSITION_CLASS);\n    element.classList.add(ACTIVE_CLASS);\n    this._inkBarContentElement.style.setProperty('transform', '');\n  }\n  /** Removes the ink bar from the current item. */\n  deactivateInkBar() {\n    this._elementRef.nativeElement.classList.remove(ACTIVE_CLASS);\n  }\n  /** Initializes the foundation. */\n  ngOnInit() {\n    this._createInkBarElement();\n  }\n  /** Destroys the foundation. */\n  ngOnDestroy() {\n    this._inkBarElement?.remove();\n    this._inkBarElement = this._inkBarContentElement = null;\n  }\n  /** Creates and appends the ink bar element. */\n  _createInkBarElement() {\n    const documentNode = this._elementRef.nativeElement.ownerDocument || document;\n    const inkBarElement = this._inkBarElement = documentNode.createElement('span');\n    const inkBarContentElement = this._inkBarContentElement = documentNode.createElement('span');\n    inkBarElement.className = 'mdc-tab-indicator';\n    inkBarContentElement.className = 'mdc-tab-indicator__content mdc-tab-indicator__content--underline';\n    inkBarElement.appendChild(this._inkBarContentElement);\n    this._appendInkBarElement();\n  }\n  /**\n   * Appends the ink bar to the tab host element or content, depending on whether\n   * the ink bar should fit to content.\n   */\n  _appendInkBarElement() {\n    if (!this._inkBarElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Ink bar element has not been created and cannot be appended');\n    }\n    const parentElement = this._fitToContent ? this._elementRef.nativeElement.querySelector('.mdc-tab__content') : this._elementRef.nativeElement;\n    if (!parentElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Missing element to host the ink bar');\n    }\n    parentElement.appendChild(this._inkBarElement);\n  }\n  static ɵfac = function InkBarItem_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || InkBarItem)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: InkBarItem,\n    inputs: {\n      fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InkBarItem, [{\n    type: Directive\n  }], null, {\n    fitInkBarToContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends InkBarItem {\n  elementRef = inject(ElementRef);\n  /** Whether the tab is disabled. */\n  disabled = false;\n  /** Sets focus on the wrapper element */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatTabLabelWrapper_BaseFactory;\n    return function MatTabLabelWrapper_Factory(__ngFactoryType__) {\n      return (ɵMatTabLabelWrapper_BaseFactory || (ɵMatTabLabelWrapper_BaseFactory = i0.ɵɵgetInheritedFactory(MatTabLabelWrapper)))(__ngFactoryType__ || MatTabLabelWrapper);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTabLabelWrapper,\n    selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n    hostVars: 3,\n    hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabLabelWrapper]',\n      host: {\n        '[class.mat-mdc-tab-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n      }\n    }]\n  }], null, {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _viewportRuler = inject(ViewportRuler);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _ngZone = inject(NgZone);\n  _platform = inject(Platform);\n  _sharedResizeObserver = inject(SharedResizeObserver);\n  _injector = inject(Injector);\n  _renderer = inject(Renderer2);\n  _animationsDisabled = _animationsDisabled();\n  _eventCleanups;\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  _scrollDistance = 0;\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  _selectedIndexChanged = false;\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  _tabLabelCount;\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  _scrollDistanceChanged;\n  /** Used to manage focus between the tabs. */\n  _keyManager;\n  /** Cached text content of the header. */\n  _currentTextContent;\n  /** Stream that will stop the automated scrolling. */\n  _stopScrolling = new Subject();\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  disablePagination = false;\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(v) {\n    const value = isNaN(v) ? 0 : v;\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n  _selectedIndex = 0;\n  /** Event emitted when the option is selected. */\n  selectFocusedIndex = new EventEmitter();\n  /** Event emitted when a label is focused. */\n  indexFocused = new EventEmitter();\n  constructor() {\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    this._eventCleanups = this._ngZone.runOutsideAngular(() => [this._renderer.listen(this._elementRef.nativeElement, 'mouseleave', () => this._stopInterval())]);\n  }\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    this._eventCleanups.push(this._renderer.listen(this._previousPaginator.nativeElement, 'touchstart', () => this._handlePaginatorPress('before'), passiveEventListenerOptions), this._renderer.listen(this._nextPaginator.nativeElement, 'touchstart', () => this._handlePaginatorPress('after'), passiveEventListenerOptions));\n  }\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : of('ltr');\n    // We need to debounce resize events because the alignment logic is expensive.\n    // If someone animates the width of tabs, we don't want to realign on every animation frame.\n    // Once we haven't seen any more resize events in the last 32ms (~2 animaion frames) we can\n    // re-align.\n    const resize = this._sharedResizeObserver.observe(this._elementRef.nativeElement).pipe(debounceTime(32), takeUntil(this._destroyed));\n    // Note: We do not actually need to watch these events for proper functioning of the tabs,\n    // the resize events above should capture any viewport resize that we care about. However,\n    // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n    const viewportResize = this._viewportRuler.change(150).pipe(takeUntil(this._destroyed));\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n    this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap()\n    // Allow focus to land on disabled tabs, as per https://w3c.github.io/aria-practices/#kbd_disabled_controls\n    .skipPredicate(() => false);\n    // Fall back to the first link as being active if there isn't a selected one.\n    // This is relevant primarily for the tab nav bar.\n    this._keyManager.updateActiveItem(Math.max(this._selectedIndex, 0));\n    // Note: We do not need to realign after the first render for proper functioning of the tabs\n    // the resize events above should fire when we first start observing the element. However,\n    // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n    afterNextRender(realign, {\n      injector: this._injector\n    });\n    // On dir change or resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, viewportResize, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate\n      // the element dimensions. The call has to be wrapped in `NgZone.run`,\n      // because the viewport change handler runs outside of Angular.\n      this._ngZone.run(() => {\n        Promise.resolve().then(() => {\n          // Clamp the scroll distance, because it can change with the number of tabs.\n          this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n          realign();\n        });\n      });\n      this._keyManager?.withHorizontalOrientation(this._getLayoutDirection());\n    });\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n  /** Sends any changes that could affect the layout of the items. */\n  _itemsResized() {\n    if (typeof ResizeObserver !== 'function') {\n      return EMPTY;\n    }\n    return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n      const resizeObserver = new ResizeObserver(entries => observer.next(entries));\n      tabItems.forEach(item => resizeObserver.observe(item.elementRef.nativeElement));\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }))),\n    // Skip the first emit since the resize observer emits when an item\n    // is observed for new items when the tab is already inserted\n    skip(1),\n    // Skip emissions where all the elements are invisible since we don't want\n    // the header to try and re-render with invalid measurements. See #25574.\n    filter(entries => entries.some(e => e.contentRect.width > 0 && e.contentRect.height > 0)));\n  }\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngOnDestroy() {\n    this._eventCleanups.forEach(cleanup => cleanup());\n    this._keyManager?.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          const item = this._items.get(this.focusIndex);\n          if (item && !item.disabled) {\n            this.selectFocusedIndex.emit(this.focusIndex);\n            this._itemSelected(event);\n          }\n        }\n        break;\n      default:\n        this._keyManager?.onKeydown(event);\n    }\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index) {\n    return this._items ? !!this._items.toArray()[index] : true;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /** The layout direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    if (this._platform.TRIDENT || this._platform.EDGE) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex) {\n    if (this.disablePagination) {\n      return;\n    }\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n    if (!selectedLabel) {\n      return;\n    }\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {\n      offsetLeft,\n      offsetWidth\n    } = selectedLabel.elementRef.nativeElement;\n    let labelBeforePos, labelAfterPos;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += Math.min(labelAfterPos - afterVisiblePos, labelBeforePos - beforeVisiblePos);\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const scrollWidth = this._tabListInner.nativeElement.scrollWidth;\n      const containerWidth = this._elementRef.nativeElement.offsetWidth;\n      // Usually checking that the scroll width is greater than the container width should be\n      // enough, but on Safari at specific widths the browser ends up rounding up when there's\n      // no pagination and rounding down once the pagination is added. This can throw the component\n      // into an infinite loop where the pagination shows up and disappears constantly. We work\n      // around it by adding a threshold to the calculation. From manual testing the threshold\n      // can be lowered to 2px and still resolve the issue, but we set a higher one to be safe.\n      // This shouldn't cause any content to be clipped, because tabs have a 24px horizontal\n      // padding. See b/316395154 for more information.\n      const isEnabled = scrollWidth - containerWidth >= 5;\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n      if (isEnabled !== this._showPaginationControls) {\n        this._showPaginationControls = isEnabled;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance() {\n    const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab() {\n    const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction, mouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    }\n    // Avoid overlapping timers.\n    this._stopInterval();\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n    // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction);\n      // Stop the timer if we've reached the start or the end.\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  _scrollTo(position) {\n    if (this.disablePagination) {\n      return {\n        maxScrollDistance: 0,\n        distance: 0\n      };\n    }\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n  static ɵfac = function MatPaginatedTabHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPaginatedTabHeader)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatPaginatedTabHeader,\n    inputs: {\n      disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n      selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute]\n    },\n    outputs: {\n      selectFocusedIndex: \"selectFocusedIndex\",\n      indexFocused: \"indexFocused\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n    type: Directive\n  }], () => [], {\n    disablePagination: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectedIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    selectFocusedIndex: [{\n      type: Output\n    }],\n    indexFocused: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends MatPaginatedTabHeader {\n  _items;\n  _tabListContainer;\n  _tabList;\n  _tabListInner;\n  _nextPaginator;\n  _previousPaginator;\n  _inkBar;\n  /** Aria label of the header. */\n  ariaLabel;\n  /** Sets the `aria-labelledby` of the header. */\n  ariaLabelledby;\n  /** Whether the ripple effect is disabled or not. */\n  disableRipple = false;\n  ngAfterContentInit() {\n    this._inkBar = new MatInkBar(this._items);\n    super.ngAfterContentInit();\n  }\n  _itemSelected(event) {\n    event.preventDefault();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatTabHeader_BaseFactory;\n    return function MatTabHeader_Factory(__ngFactoryType__) {\n      return (ɵMatTabHeader_BaseFactory || (ɵMatTabHeader_BaseFactory = i0.ɵɵgetInheritedFactory(MatTabHeader)))(__ngFactoryType__ || MatTabHeader);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTabHeader,\n    selectors: [[\"mat-tab-header\"]],\n    contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n      }\n    },\n    viewQuery: function MatTabHeader_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n        i0.ɵɵviewQuery(_c3, 7);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-tab-header\"],\n    hostVars: 4,\n    hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n      }\n    },\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 13,\n    vars: 10,\n    consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-label-container\", 3, \"keydown\"], [\"role\", \"tablist\", 1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-labels\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\"]],\n    template: function MatTabHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 5, 0);\n        i0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n        })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n        })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._stopInterval());\n        });\n        i0.ɵɵelement(2, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 7, 1);\n        i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handleKeydown($event));\n        });\n        i0.ɵɵelementStart(5, \"div\", 8, 2);\n        i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onContentChanges());\n        });\n        i0.ɵɵelementStart(7, \"div\", 9, 3);\n        i0.ɵɵprojection(9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 10, 4);\n        i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n        })(\"click\", function MatTabHeader_Template_div_click_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n        })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._stopInterval());\n        });\n        i0.ɵɵelement(12, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationsDisabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby || null);\n        i0.ɵɵadvance(5);\n        i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n      }\n    },\n    dependencies: [MatRipple, CdkObserveContent],\n    styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-pagination-icon-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-divider-height, 1px);border-bottom-color:var(--mat-tab-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-divider-height, 1px);border-top-color:var(--mat-tab-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-labels,.mat-mdc-tab-labels.cdk-drop-list{min-height:var(--mat-tab-container-height, 48px)}.mat-mdc-tab::before{margin:5px}@media(forced-colors: active){.mat-mdc-tab[aria-disabled=true]{color:GrayText}}\\n\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-header',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        'class': 'mat-mdc-tab-header',\n        '[class.mat-mdc-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-mdc-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n      },\n      imports: [MatRipple, CdkObserveContent],\n      template: \"<!--\\n Note that this intentionally uses a `div` instead of a `button`, because it's not part of\\n the regular tabs flow and is only here to support mouse users. It should also not be focusable.\\n-->\\n<div class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-before\\\"\\n     #previousPaginator\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div\\n  class=\\\"mat-mdc-tab-label-container\\\"\\n  #tabListContainer\\n  (keydown)=\\\"_handleKeydown($event)\\\"\\n  [class._mat-animation-noopable]=\\\"_animationsDisabled\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-mdc-tab-list\\\"\\n    role=\\\"tablist\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-mdc-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-after\\\"\\n     #nextPaginator\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n      styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-pagination-icon-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-divider-height, 1px);border-bottom-color:var(--mat-tab-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-divider-height, 1px);border-top-color:var(--mat-tab-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-labels,.mat-mdc-tab-labels.cdk-drop-list{min-height:var(--mat-tab-container-height, 48px)}.mat-mdc-tab::before{margin:5px}@media(forced-colors: active){.mat-mdc-tab[aria-disabled=true]{color:GrayText}}\\n\"]\n    }]\n  }], null, {\n    _items: [{\n      type: ContentChildren,\n      args: [MatTabLabelWrapper, {\n        descendants: false\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  _host = inject(MatTabBody);\n  /** Subscription to events for when the tab body begins centering. */\n  _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  _leavingSub = Subscription.EMPTY;\n  constructor() {\n    super();\n  }\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition())).subscribe(isCentering => {\n      if (this._host._content && isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      if (!this._host.preserveContent) {\n        this.detach();\n      }\n    });\n  }\n  /** Clean up centering subscription. */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n  static ɵfac = function MatTabBodyPortal_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTabBodyPortal)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTabBodyPortal,\n    selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBodyPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabBodyHost]'\n    }]\n  }], () => [], null);\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody {\n  _elementRef = inject(ElementRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _ngZone = inject(NgZone);\n  _injector = inject(Injector);\n  _renderer = inject(Renderer2);\n  _diAnimationsDisabled = _animationsDisabled();\n  _eventCleanups;\n  _initialized;\n  _fallbackTimer;\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  _positionIndex;\n  /** Subscription to the directionality change observable. */\n  _dirChangeSubscription = Subscription.EMPTY;\n  /** Current position of the body within the tab group. */\n  _position;\n  /** Previous position of the body. */\n  _previousPosition;\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  _onCentering = new EventEmitter();\n  /** Event emitted before the centering of the tab begins. */\n  _beforeCentering = new EventEmitter();\n  /** Event emitted before the centering of the tab begins. */\n  _afterLeavingCenter = new EventEmitter();\n  /** Event emitted when the tab completes its animation towards the center. */\n  _onCentered = new EventEmitter(true);\n  /** The portal host inside of this container into which the tab body content will be loaded. */\n  _portalHost;\n  /** Element in which the content is rendered. */\n  _contentElement;\n  /** The tab body content to display. */\n  _content;\n  // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n  // anyway to prevent the animations module from throwing an error if the body is used on its own.\n  /** Duration for the tab's animation. */\n  animationDuration = '500ms';\n  /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n  preserveContent = false;\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  set position(position) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n  constructor() {\n    if (this._dir) {\n      const changeDetectorRef = inject(ChangeDetectorRef);\n      this._dirChangeSubscription = this._dir.change.subscribe(dir => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  ngOnInit() {\n    this._bindTransitionEvents();\n    if (this._position === 'center') {\n      this._setActiveClass(true);\n      // Allows for the dynamic height to animate properly on the initial run.\n      afterNextRender(() => this._onCentering.emit(this._elementRef.nativeElement.clientHeight), {\n        injector: this._injector\n      });\n    }\n    this._initialized = true;\n  }\n  ngOnDestroy() {\n    clearTimeout(this._fallbackTimer);\n    this._eventCleanups?.forEach(cleanup => cleanup());\n    this._dirChangeSubscription.unsubscribe();\n  }\n  /** Sets up the transition events. */\n  _bindTransitionEvents() {\n    this._ngZone.runOutsideAngular(() => {\n      const element = this._elementRef.nativeElement;\n      const transitionDone = event => {\n        if (event.target === this._contentElement?.nativeElement) {\n          this._elementRef.nativeElement.classList.remove('mat-tab-body-animating');\n          // Only fire the actual callback when a transition is fully finished,\n          // otherwise the content can jump around when the next transition starts.\n          if (event.type === 'transitionend') {\n            this._transitionDone();\n          }\n        }\n      };\n      this._eventCleanups = [this._renderer.listen(element, 'transitionstart', event => {\n        if (event.target === this._contentElement?.nativeElement) {\n          this._elementRef.nativeElement.classList.add('mat-tab-body-animating');\n          this._transitionStarted();\n        }\n      }), this._renderer.listen(element, 'transitionend', transitionDone), this._renderer.listen(element, 'transitioncancel', transitionDone)];\n    });\n  }\n  /** Called when a transition has started. */\n  _transitionStarted() {\n    clearTimeout(this._fallbackTimer);\n    const isCentering = this._position === 'center';\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /** Called when a transition is done. */\n  _transitionDone() {\n    if (this._position === 'center') {\n      this._onCentered.emit();\n    } else if (this._previousPosition === 'center') {\n      this._afterLeavingCenter.emit();\n    }\n  }\n  /** Sets the active styling on the tab body based on its current position. */\n  _setActiveClass(isActive) {\n    this._elementRef.nativeElement.classList.toggle('mat-mdc-tab-body-active', isActive);\n  }\n  /** The text direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition() {\n    return this._positionIndex === 0;\n  }\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    this._previousPosition = this._position;\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n    if (this._animationsDisabled()) {\n      this._simulateTransitionEvents();\n    } else if (this._initialized && (this._position === 'center' || this._previousPosition === 'center')) {\n      // The transition events are load-bearing and in some cases they might not fire (e.g.\n      // tests setting `* {transition: none}` to disable animations). This timeout will simulate\n      // them if a transition doesn't start within a certain amount of time.\n      clearTimeout(this._fallbackTimer);\n      this._fallbackTimer = this._ngZone.runOutsideAngular(() => setTimeout(() => this._simulateTransitionEvents(), 100));\n    }\n  }\n  /** Simulates the body's transition events in an environment where they might not fire. */\n  _simulateTransitionEvents() {\n    this._transitionStarted();\n    afterNextRender(() => this._transitionDone(), {\n      injector: this._injector\n    });\n  }\n  /** Whether animations are disabled for the tab group. */\n  _animationsDisabled() {\n    return this._diAnimationsDisabled || this.animationDuration === '0ms' || this.animationDuration === '0s';\n  }\n  static ɵfac = function MatTabBody_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTabBody)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTabBody,\n    selectors: [[\"mat-tab-body\"]],\n    viewQuery: function MatTabBody_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatTabBodyPortal, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentElement = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-tab-body\"],\n    hostVars: 1,\n    hostBindings: function MatTabBody_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"inert\", ctx._position === \"center\" ? null : \"\");\n      }\n    },\n    inputs: {\n      _content: [0, \"content\", \"_content\"],\n      animationDuration: \"animationDuration\",\n      preserveContent: \"preserveContent\",\n      position: \"position\"\n    },\n    outputs: {\n      _onCentering: \"_onCentering\",\n      _beforeCentering: \"_beforeCentering\",\n      _onCentered: \"_onCentered\"\n    },\n    decls: 3,\n    vars: 6,\n    consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-mdc-tab-body-content\"], [\"matTabBodyHost\", \"\"]],\n    template: function MatTabBody_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-tab-body-content-left\", ctx._position === \"left\")(\"mat-tab-body-content-right\", ctx._position === \"right\")(\"mat-tab-body-content-can-animate\", ctx._position === \"center\" || ctx._previousPosition === \"center\");\n      }\n    },\n    dependencies: [MatTabBodyPortal, CdkScrollable],\n    styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto;transform:none;visibility:hidden}.mat-tab-body-animating>.mat-mdc-tab-body-content,.mat-mdc-tab-body-active>.mat-mdc-tab-body-content{visibility:visible}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-tab-body-content-can-animate{transition:transform var(--mat-tab-animation-duration) 1ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable .mat-tab-body-content-can-animate{transition:none}.mat-tab-body-content-left{transform:translate3d(-100%, 0, 0)}.mat-tab-body-content-right{transform:translate3d(100%, 0, 0)}\\n\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBody, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-body',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        'class': 'mat-mdc-tab-body',\n        // In most cases the `visibility: hidden` that we set on the off-screen content is enough\n        // to stop interactions with it, but if a child element sets its own `visibility`, it'll\n        // override the one from the parent. This ensures that even those elements will be removed\n        // from the accessibility tree.\n        '[attr.inert]': '_position === \"center\" ? null : \"\"'\n      },\n      imports: [MatTabBodyPortal, CdkScrollable],\n      template: \"<div\\n   class=\\\"mat-mdc-tab-body-content\\\"\\n   #content\\n   cdkScrollable\\n   [class.mat-tab-body-content-left]=\\\"_position === 'left'\\\"\\n   [class.mat-tab-body-content-right]=\\\"_position === 'right'\\\"\\n   [class.mat-tab-body-content-can-animate]=\\\"_position === 'center' || _previousPosition === 'center'\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n      styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto;transform:none;visibility:hidden}.mat-tab-body-animating>.mat-mdc-tab-body-content,.mat-mdc-tab-body-active>.mat-mdc-tab-body-content{visibility:visible}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-tab-body-content-can-animate{transition:transform var(--mat-tab-animation-duration) 1ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable .mat-tab-body-content-can-animate{transition:none}.mat-tab-body-content-left{transform:translate3d(-100%, 0, 0)}.mat-tab-body-content-right{transform:translate3d(100%, 0, 0)}\\n\"]\n    }]\n  }], () => [], {\n    _onCentering: [{\n      type: Output\n    }],\n    _beforeCentering: [{\n      type: Output\n    }],\n    _onCentered: [{\n      type: Output\n    }],\n    _portalHost: [{\n      type: ViewChild,\n      args: [MatTabBodyPortal]\n    }],\n    _contentElement: [{\n      type: ViewChild,\n      args: ['content']\n    }],\n    _content: [{\n      type: Input,\n      args: ['content']\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    preserveContent: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _ngZone = inject(NgZone);\n  _tabsSubscription = Subscription.EMPTY;\n  _tabLabelSubscription = Subscription.EMPTY;\n  _tabBodySubscription = Subscription.EMPTY;\n  _diAnimationsDisabled = _animationsDisabled();\n  /**\n   * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n   * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n   */\n  _allTabs;\n  _tabBodies;\n  _tabBodyWrapper;\n  _tabHeader;\n  /** All of the tabs that belong to the group. */\n  _tabs = new QueryList();\n  /** The tab index that should be selected after the content has been checked. */\n  _indexToSelect = 0;\n  /** Index of the tab that was focused last. */\n  _lastFocusedTabIndex = null;\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  _tabBodyWrapperHeight = 0;\n  /**\n   * Theme color of the tab group. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/tabs/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Whether the ink bar should fit its width to the size of the tab label content. */\n  get fitInkBarToContent() {\n    return this._fitInkBarToContent;\n  }\n  set fitInkBarToContent(value) {\n    this._fitInkBarToContent = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  _fitInkBarToContent = false;\n  /** Whether tabs should be stretched to fill the header. */\n  stretchTabs = true;\n  /** Alignment for tabs label. */\n  alignTabs = null;\n  /** Whether the tab group should grow to the size of the active tab. */\n  dynamicHeight = false;\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value) {\n    this._indexToSelect = isNaN(value) ? null : value;\n  }\n  _selectedIndex = null;\n  /** Position of the tab header. */\n  headerPosition = 'above';\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    const stringValue = value + '';\n    this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n  }\n  _animationDuration;\n  /**\n   * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n   * accessibility when the tab does not have focusable elements or if it has scrollable content.\n   * The `tabindex` will be removed automatically for inactive tabs.\n   * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n   */\n  get contentTabIndex() {\n    return this._contentTabIndex;\n  }\n  set contentTabIndex(value) {\n    this._contentTabIndex = isNaN(value) ? null : value;\n  }\n  _contentTabIndex;\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  disablePagination = false;\n  /** Whether ripples in the tab group are disabled. */\n  disableRipple = false;\n  /**\n   * By default tabs remove their content from the DOM while it's off-screen.\n   * Setting this to `true` will keep it in the DOM which will prevent elements\n   * like iframes and videos from reloading next time it comes back into the view.\n   */\n  preserveContent = false;\n  /**\n   * Theme color of the background of the tab group. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/tabs/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   *\n   * @deprecated The background color should be customized through Sass theming APIs.\n   * @breaking-change 20.0.0 Remove this input\n   */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n    if (value) {\n      classList.add('mat-tabs-with-background', `mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  _backgroundColor;\n  /** Aria label of the inner `tablist` of the group. */\n  ariaLabel;\n  /** Sets the `aria-labelledby` of the inner `tablist` of the group. */\n  ariaLabelledby;\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  selectedIndexChange = new EventEmitter();\n  /** Event emitted when focus has changed within a tab group. */\n  focusChange = new EventEmitter();\n  /** Event emitted when the body animation has completed */\n  animationDone = new EventEmitter();\n  /** Event emitted when the tab selection has changed. */\n  selectedTabChange = new EventEmitter(true);\n  _groupId;\n  /** Whether the tab group is rendered on the server. */\n  _isServer = !inject(Platform).isBrowser;\n  constructor() {\n    const defaultConfig = inject(MAT_TABS_CONFIG, {\n      optional: true\n    });\n    this._groupId = inject(_IdGenerator).getId('mat-tab-group-');\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n    if (defaultConfig?.contentTabIndex != null) {\n      this.contentTabIndex = defaultConfig.contentTabIndex;\n    }\n    this.preserveContent = !!defaultConfig?.preserveContent;\n    this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n    this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n    this.alignTabs = defaultConfig && defaultConfig.alignTabs != null ? defaultConfig.alignTabs : null;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n        // Preserve the height so page doesn't scroll up during tab change.\n        // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.minHeight = wrapper.clientHeight + 'px';\n      }\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n          // Clear the min-height, this was needed during tab change to avoid\n          // unnecessary scrolling.\n          this._tabBodyWrapper.nativeElement.style.minHeight = '';\n        }\n      });\n    }\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab, index) => {\n      tab.position = index - indexToSelect;\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._lastFocusedTabIndex = null;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n    this._subscribeToTabLabels();\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n        let selectedTab;\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            this._lastFocusedTabIndex = null;\n            selectedTab = tabs[i];\n            break;\n          }\n        }\n        // If we haven't found an active tab and a tab exists at the selected index, it means\n        // that the active tab was swapped out. Since this won't be picked up by the rendering\n        // loop in `ngAfterContentChecked`, we need to sync it up manually.\n        if (!selectedTab && tabs[indexToSelect]) {\n          Promise.resolve().then(() => {\n            tabs[indexToSelect].isActive = true;\n            this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          });\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  ngAfterViewInit() {\n    this._tabBodySubscription = this._tabBodies.changes.subscribe(() => this._bodyCentered(true));\n  }\n  /** Listens to changes in all of the tabs. */\n  _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n      this._tabs.reset(tabs.filter(tab => {\n        return tab._closestTabGroup === this || !tab._closestTabGroup;\n      }));\n      this._tabs.notifyOnChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._tabs.destroy();\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n    this._tabBodySubscription.unsubscribe();\n  }\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * Recalculates the tab group's pagination dimensions.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    if (this._tabHeader) {\n      this._tabHeader.updatePagination();\n    }\n  }\n  /**\n   * Sets focus to a particular tab.\n   * @param index Index of the tab to be focused.\n   */\n  focusTab(index) {\n    const header = this._tabHeader;\n    if (header) {\n      header.focusIndex = index;\n    }\n  }\n  _focusChanged(index) {\n    this._lastFocusedTabIndex = index;\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n  _createChangeEvent(index) {\n    const event = new MatTabChangeEvent();\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(tab, index) {\n    return tab.id || `${this._groupId}-label-${index}`;\n  }\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(index) {\n    return `${this._groupId}-content-${index}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this.dynamicHeight || !this._tabBodyWrapperHeight) {\n      this._tabBodyWrapperHeight = tabHeight;\n      return;\n    }\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight() {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this._ngZone.run(() => this.animationDone.emit());\n  }\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab, tabHeader, index) {\n    tabHeader.focusIndex = index;\n    if (!tab.disabled) {\n      this.selectedIndex = index;\n    }\n  }\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(index) {\n    const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n    return index === targetIndex ? 0 : -1;\n  }\n  /** Callback for when the focused state of a tab has changed. */\n  _tabFocusChanged(focusOrigin, index) {\n    // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n    // can cause the tab to be moved out from under the pointer, interrupting the\n    // click sequence (see #21898). We don't need to scroll the tab into view for\n    // such cases anyway, because it will be done when the tab becomes selected.\n    if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n      this._tabHeader.focusIndex = index;\n    }\n  }\n  /**\n   * Callback invoked when the centered state of a tab body changes.\n   * @param isCenter Whether the tab will be in the center.\n   */\n  _bodyCentered(isCenter) {\n    // Marks all the existing tabs as inactive and the center tab as active. Note that this can\n    // be achieved much easier by using a class binding on each body. The problem with\n    // doing so is that we can't control the timing of when the class is removed from the\n    // previously-active element and added to the newly-active one. If there's a tick between\n    // removing the class and adding the new one, the content will jump in a very jarring way.\n    // We go through the trouble of setting the classes ourselves to guarantee that they're\n    // swapped out at the same time.\n    if (isCenter) {\n      this._tabBodies?.forEach((body, i) => body._setActiveClass(i === this._selectedIndex));\n    }\n  }\n  _animationsDisabled() {\n    return this._diAnimationsDisabled || this.animationDuration === '0' || this.animationDuration === '0ms';\n  }\n  static ɵfac = function MatTabGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTabGroup)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTabGroup,\n    selectors: [[\"mat-tab-group\"]],\n    contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n      }\n    },\n    viewQuery: function MatTabGroup_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c8, 5);\n        i0.ɵɵviewQuery(MatTabBody, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodies = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-tab-group\"],\n    hostVars: 11,\n    hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"mat-align-tabs\", ctx.alignTabs);\n        i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n        i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n        i0.ɵɵclassProp(\"mat-mdc-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-mdc-tab-group-inverted-header\", ctx.headerPosition === \"below\")(\"mat-mdc-tab-group-stretch-tabs\", ctx.stretchTabs);\n      }\n    },\n    inputs: {\n      color: \"color\",\n      fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n      stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n      alignTabs: [0, \"mat-align-tabs\", \"alignTabs\"],\n      dynamicHeight: [2, \"dynamicHeight\", \"dynamicHeight\", booleanAttribute],\n      selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute],\n      headerPosition: \"headerPosition\",\n      animationDuration: \"animationDuration\",\n      contentTabIndex: [2, \"contentTabIndex\", \"contentTabIndex\", numberAttribute],\n      disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      preserveContent: [2, \"preserveContent\", \"preserveContent\", booleanAttribute],\n      backgroundColor: \"backgroundColor\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"]\n    },\n    outputs: {\n      selectedIndexChange: \"selectedIndexChange\",\n      focusChange: \"focusChange\",\n      animationDone: \"animationDone\",\n      selectedTabChange: \"selectedTabChange\"\n    },\n    exportAs: [\"matTabGroup\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_TAB_GROUP,\n      useExisting: MatTabGroup\n    }])],\n    ngContentSelectors: _c0,\n    decls: 9,\n    vars: 8,\n    consts: [[\"tabHeader\", \"\"], [\"tabBodyWrapper\", \"\"], [\"tabNode\", \"\"], [3, \"indexFocused\", \"selectFocusedIndex\", \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"aria-label\", \"aria-labelledby\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-focus-indicator\", 3, \"id\", \"mdc-tab--active\", \"class\", \"disabled\", \"fitInkBarToContent\"], [1, \"mat-mdc-tab-body-wrapper\"], [\"role\", \"tabpanel\", 3, \"id\", \"class\", \"content\", \"position\", \"animationDuration\", \"preserveContent\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-focus-indicator\", 3, \"click\", \"cdkFocusChange\", \"id\", \"disabled\", \"fitInkBarToContent\"], [1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"_onCentered\", \"_onCentering\", \"_beforeCentering\", \"id\", \"content\", \"position\", \"animationDuration\", \"preserveContent\"]],\n    template: function MatTabGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"mat-tab-header\", 3, 0);\n        i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._focusChanged($event));\n        })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.selectedIndex = $event);\n        });\n        i0.ɵɵrepeaterCreate(2, MatTabGroup_For_3_Template, 8, 17, \"div\", 4, i0.ɵɵrepeaterTrackByIdentity);\n        i0.ɵɵelementEnd();\n        i0.ɵɵconditionalCreate(4, MatTabGroup_Conditional_4_Template, 1, 0);\n        i0.ɵɵelementStart(5, \"div\", 5, 1);\n        i0.ɵɵrepeaterCreate(7, MatTabGroup_For_8_Template, 1, 10, \"mat-tab-body\", 6, i0.ɵɵrepeaterTrackByIdentity);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        i0.ɵɵadvance(2);\n        i0.ɵɵrepeater(ctx._tabs);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._isServer ? 4 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationsDisabled());\n        i0.ɵɵadvance(2);\n        i0.ɵɵrepeater(ctx._tabs);\n      }\n    },\n    dependencies: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n    styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mat-tab-container-height, 48px);font-family:var(--mat-tab-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-tab-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-tab-label-text-tracking, var(--mat-sys-title-small-tracking));line-height:var(--mat-tab-label-text-line-height, var(--mat-sys-title-small-line-height));font-weight:var(--mat-tab-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mat-tab-active-indicator-height, 2px);border-radius:var(--mat-tab-active-indicator-shape, 0)}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-inactive-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-inactive-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-active-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-active-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-active-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-hover-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-active-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-focus-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-disabled-ripple-color, var(--mat-sys-on-surface-variant))}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-inactive-label-text-color, var(--mat-sys-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-focus-indicator::before{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\\n\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-group',\n      exportAs: 'matTabGroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }],\n      host: {\n        'class': 'mat-mdc-tab-group',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mat-mdc-tab-group-dynamic-height]': 'dynamicHeight',\n        '[class.mat-mdc-tab-group-inverted-header]': 'headerPosition === \"below\"',\n        '[class.mat-mdc-tab-group-stretch-tabs]': 'stretchTabs',\n        '[attr.mat-align-tabs]': 'alignTabs',\n        '[style.--mat-tab-animation-duration]': 'animationDuration'\n      },\n      imports: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n      template: \"<mat-tab-header #tabHeader\\n                [selectedIndex]=\\\"selectedIndex || 0\\\"\\n                [disableRipple]=\\\"disableRipple\\\"\\n                [disablePagination]=\\\"disablePagination\\\"\\n                [aria-label]=\\\"ariaLabel\\\"\\n                [aria-labelledby]=\\\"ariaLabelledby\\\"\\n                (indexFocused)=\\\"_focusChanged($event)\\\"\\n                (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n\\n  @for (tab of _tabs; track tab) {\\n    <div class=\\\"mdc-tab mat-mdc-tab mat-focus-indicator\\\"\\n        #tabNode\\n        role=\\\"tab\\\"\\n        matTabLabelWrapper\\n        cdkMonitorElementFocus\\n        [id]=\\\"_getTabLabelId(tab, $index)\\\"\\n        [attr.tabIndex]=\\\"_getTabIndex($index)\\\"\\n        [attr.aria-posinset]=\\\"$index + 1\\\"\\n        [attr.aria-setsize]=\\\"_tabs.length\\\"\\n        [attr.aria-controls]=\\\"_getTabContentId($index)\\\"\\n        [attr.aria-selected]=\\\"selectedIndex === $index\\\"\\n        [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n        [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n        [class.mdc-tab--active]=\\\"selectedIndex === $index\\\"\\n        [class]=\\\"tab.labelClass\\\"\\n        [disabled]=\\\"tab.disabled\\\"\\n        [fitInkBarToContent]=\\\"fitInkBarToContent\\\"\\n        (click)=\\\"_handleClick(tab, tabHeader, $index)\\\"\\n        (cdkFocusChange)=\\\"_tabFocusChanged($event, $index)\\\">\\n      <span class=\\\"mdc-tab__ripple\\\"></span>\\n\\n      <!-- Needs to be a separate element, because we can't put\\n          `overflow: hidden` on tab due to the ink bar. -->\\n      <div\\n        class=\\\"mat-mdc-tab-ripple\\\"\\n        mat-ripple\\n        [matRippleTrigger]=\\\"tabNode\\\"\\n        [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"></div>\\n\\n      <span class=\\\"mdc-tab__content\\\">\\n        <span class=\\\"mdc-tab__text-label\\\">\\n          <!--\\n            If there is a label template, use it, otherwise fall back to the text label.\\n            Note that we don't have indentation around the text label, because it adds\\n            whitespace around the text which breaks some internal tests.\\n          -->\\n          @if (tab.templateLabel) {\\n            <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n          } @else {{{tab.textLabel}}}\\n        </span>\\n      </span>\\n    </div>\\n  }\\n</mat-tab-header>\\n\\n<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n<div\\n  class=\\\"mat-mdc-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationsDisabled()\\\"\\n  #tabBodyWrapper>\\n  @for (tab of _tabs; track tab;) {\\n    <mat-tab-body role=\\\"tabpanel\\\"\\n                 [id]=\\\"_getTabContentId($index)\\\"\\n                 [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === $index) ? contentTabIndex : null\\\"\\n                 [attr.aria-labelledby]=\\\"_getTabLabelId(tab, $index)\\\"\\n                 [attr.aria-hidden]=\\\"selectedIndex !== $index\\\"\\n                 [class]=\\\"tab.bodyClass\\\"\\n                 [content]=\\\"tab.content!\\\"\\n                 [position]=\\\"tab.position!\\\"\\n                 [animationDuration]=\\\"animationDuration\\\"\\n                 [preserveContent]=\\\"preserveContent\\\"\\n                 (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n                 (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"\\n                 (_beforeCentering)=\\\"_bodyCentered($event)\\\"/>\\n  }\\n</div>\\n\",\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mat-tab-container-height, 48px);font-family:var(--mat-tab-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-tab-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-tab-label-text-tracking, var(--mat-sys-title-small-tracking));line-height:var(--mat-tab-label-text-line-height, var(--mat-sys-title-small-line-height));font-weight:var(--mat-tab-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mat-tab-active-indicator-height, 2px);border-radius:var(--mat-tab-active-indicator-shape, 0)}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-inactive-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-inactive-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-active-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-active-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-active-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-hover-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-active-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-focus-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-disabled-ripple-color, var(--mat-sys-on-surface-variant))}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-inactive-label-text-color, var(--mat-sys-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-focus-indicator::before{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\\n\"]\n    }]\n  }], () => [], {\n    _allTabs: [{\n      type: ContentChildren,\n      args: [MatTab, {\n        descendants: true\n      }]\n    }],\n    _tabBodies: [{\n      type: ViewChildren,\n      args: [MatTabBody]\n    }],\n    _tabBodyWrapper: [{\n      type: ViewChild,\n      args: ['tabBodyWrapper']\n    }],\n    _tabHeader: [{\n      type: ViewChild,\n      args: ['tabHeader']\n    }],\n    color: [{\n      type: Input\n    }],\n    fitInkBarToContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    stretchTabs: [{\n      type: Input,\n      args: [{\n        alias: 'mat-stretch-tabs',\n        transform: booleanAttribute\n      }]\n    }],\n    alignTabs: [{\n      type: Input,\n      args: [{\n        alias: 'mat-align-tabs'\n      }]\n    }],\n    dynamicHeight: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectedIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    contentTabIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    disablePagination: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    preserveContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    selectedTabChange: [{\n      type: Output\n    }]\n  });\n})();\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index;\n  /** Reference to the currently-selected tab. */\n  tab;\n}\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends MatPaginatedTabHeader {\n  _focusedItem = signal(null);\n  /** Whether the ink bar should fit its width to the size of the tab label content. */\n  get fitInkBarToContent() {\n    return this._fitInkBarToContent.value;\n  }\n  set fitInkBarToContent(value) {\n    this._fitInkBarToContent.next(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  _fitInkBarToContent = new BehaviorSubject(false);\n  /** Whether tabs should be stretched to fill the header. */\n  stretchTabs = true;\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    const stringValue = value + '';\n    this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n  }\n  _animationDuration;\n  /** Query list of all tab links of the tab navigation. */\n  _items;\n  /**\n   * Theme color of the background of the tab nav. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/tabs/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n    if (value) {\n      classList.add('mat-tabs-with-background', `mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  _backgroundColor;\n  /** Whether the ripple effect is disabled or not. */\n  get disableRipple() {\n    return this._disableRipple();\n  }\n  set disableRipple(value) {\n    this._disableRipple.set(value);\n  }\n  _disableRipple = signal(false);\n  /**\n   * Theme color of the nav bar. This API is supported in M2 themes only, it has\n   * no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/tabs/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color = 'primary';\n  /**\n   * Associated tab panel controlled by the nav bar. If not provided, then the nav bar\n   * follows the ARIA link / navigation landmark pattern. If provided, it follows the\n   * ARIA tabs design pattern.\n   */\n  tabPanel;\n  _tabListContainer;\n  _tabList;\n  _tabListInner;\n  _nextPaginator;\n  _previousPaginator;\n  _inkBar;\n  constructor() {\n    const defaultConfig = inject(MAT_TABS_CONFIG, {\n      optional: true\n    });\n    super();\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n    this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n  }\n  _itemSelected() {\n    // noop\n  }\n  ngAfterContentInit() {\n    this._inkBar = new MatInkBar(this._items);\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => this.updateActiveLink());\n    super.ngAfterContentInit();\n    // Turn the `change` stream into a signal to try and avoid \"changed after checked\" errors.\n    this._keyManager.change.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => this._focusedItem.set(this._keyManager?.activeItem || null));\n  }\n  ngAfterViewInit() {\n    if (!this.tabPanel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new Error('A mat-tab-nav-panel must be specified via [tabPanel].');\n    }\n    super.ngAfterViewInit();\n  }\n  /** Notifies the component that the active link has been changed. */\n  updateActiveLink() {\n    if (!this._items) {\n      return;\n    }\n    const items = this._items.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        if (this.tabPanel) {\n          this.tabPanel._activeTabId = items[i].id;\n        }\n        // Updating the `selectedIndex` won't trigger the `change` event on\n        // the key manager so we need to set the signal from here.\n        this._focusedItem.set(items[i]);\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n    this.selectedIndex = -1;\n  }\n  _getRole() {\n    return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n  }\n  _hasFocus(link) {\n    return this._keyManager?.activeItem === link;\n  }\n  static ɵfac = function MatTabNav_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTabNav)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTabNav,\n    selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n    contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n      }\n    },\n    viewQuery: function MatTabNav_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n        i0.ɵɵviewQuery(_c3, 7);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-tab-nav-bar\", \"mat-mdc-tab-header\"],\n    hostVars: 17,\n    hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx._getRole());\n        i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n        i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-mdc-tab-nav-bar-stretch-tabs\", ctx.stretchTabs)(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"_mat-animation-noopable\", ctx._animationsDisabled);\n      }\n    },\n    inputs: {\n      fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n      stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n      animationDuration: \"animationDuration\",\n      backgroundColor: \"backgroundColor\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      color: \"color\",\n      tabPanel: \"tabPanel\"\n    },\n    exportAs: [\"matTabNavBar\", \"matTabNav\"],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c9,\n    ngContentSelectors: _c0,\n    decls: 13,\n    vars: 6,\n    consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-link-container\", 3, \"keydown\"], [1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-links\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\"]],\n    template: function MatTabNav_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 5, 0);\n        i0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n        })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n        })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._stopInterval());\n        });\n        i0.ɵɵelement(2, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 7, 1);\n        i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handleKeydown($event));\n        });\n        i0.ɵɵelementStart(5, \"div\", 8, 2);\n        i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onContentChanges());\n        });\n        i0.ɵɵelementStart(7, \"div\", 9, 3);\n        i0.ɵɵprojection(9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 10, 4);\n        i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n        })(\"click\", function MatTabNav_Template_div_click_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n        })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._stopInterval());\n        });\n        i0.ɵɵelement(12, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        i0.ɵɵadvance(10);\n        i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n      }\n    },\n    dependencies: [MatRipple, CdkObserveContent],\n    styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-pagination-icon-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-links,.mat-mdc-tab-links.cdk-drop-list{min-height:var(--mat-tab-container-height, 48px)}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-divider-height, 1px);border-bottom-color:var(--mat-tab-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-focus-indicator::before{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-foreground-color)}\\n\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNav, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-nav-bar]',\n      exportAs: 'matTabNavBar, matTabNav',\n      host: {\n        '[attr.role]': '_getRole()',\n        'class': 'mat-mdc-tab-nav-bar mat-mdc-tab-header',\n        '[class.mat-mdc-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-mdc-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n        '[class.mat-mdc-tab-nav-bar-stretch-tabs]': 'stretchTabs',\n        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[style.--mat-tab-animation-duration]': 'animationDuration'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      imports: [MatRipple, CdkObserveContent],\n      template: \"<!--\\n Note that this intentionally uses a `div` instead of a `button`, because it's not part of\\n the regular tabs flow and is only here to support mouse users. It should also not be focusable.\\n-->\\n<div class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-before\\\"\\n     #previousPaginator\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-mdc-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-mdc-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-mdc-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-after\\\"\\n     #nextPaginator\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-pagination-icon-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-links,.mat-mdc-tab-links.cdk-drop-list{min-height:var(--mat-tab-container-height, 48px)}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-divider-height, 1px);border-bottom-color:var(--mat-tab-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-focus-indicator::before{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-foreground-color)}\\n\"]\n    }]\n  }], () => [], {\n    fitInkBarToContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    stretchTabs: [{\n      type: Input,\n      args: [{\n        alias: 'mat-stretch-tabs',\n        transform: booleanAttribute\n      }]\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    _items: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatTabLink), {\n        descendants: true\n      }]\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    tabPanel: [{\n      type: Input\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n/**\n * Link inside a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends InkBarItem {\n  _tabNavBar = inject(MatTabNav);\n  elementRef = inject(ElementRef);\n  _focusMonitor = inject(FocusMonitor);\n  _destroyed = new Subject();\n  /** Whether the tab link is active or not. */\n  _isActive = false;\n  _tabIndex = computed(() => this._tabNavBar._focusedItem() === this ? this.tabIndex : -1);\n  /** Whether the link is active. */\n  get active() {\n    return this._isActive;\n  }\n  set active(value) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink();\n    }\n  }\n  /** Whether the tab link is disabled. */\n  disabled = false;\n  /** Whether ripples are disabled on the tab link. */\n  get disableRipple() {\n    return this._disableRipple();\n  }\n  set disableRipple(value) {\n    this._disableRipple.set(value);\n  }\n  _disableRipple = signal(false);\n  tabIndex = 0;\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig;\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  /** Unique id for the tab. */\n  id = inject(_IdGenerator).getId('mat-tab-link-');\n  constructor() {\n    super();\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n      optional: true\n    });\n    const tabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n    if (_animationsDisabled()) {\n      this.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n    this._tabNavBar._fitInkBarToContent.pipe(takeUntil(this._destroyed)).subscribe(fitInkBarToContent => {\n      this.fitInkBarToContent = fitInkBarToContent;\n    });\n  }\n  /** Focuses the tab link. */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    super.ngOnDestroy();\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n  _handleFocus() {\n    // Since we allow navigation through tabbing in the nav bar, we\n    // have to update the focused index whenever the link receives focus.\n    this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === SPACE || event.keyCode === ENTER) {\n      if (this.disabled) {\n        event.preventDefault();\n      } else if (this._tabNavBar.tabPanel) {\n        // Only prevent the default action on space since it can scroll the page.\n        // Don't prevent enter since it can break link navigation.\n        if (event.keyCode === SPACE) {\n          event.preventDefault();\n        }\n        this.elementRef.nativeElement.click();\n      }\n    }\n  }\n  _getAriaControls() {\n    return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n  }\n  _getAriaSelected() {\n    if (this._tabNavBar.tabPanel) {\n      return this.active ? 'true' : 'false';\n    } else {\n      return this.elementRef.nativeElement.getAttribute('aria-selected');\n    }\n  }\n  _getAriaCurrent() {\n    return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n  }\n  _getRole() {\n    return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n  }\n  static ɵfac = function MatTabLink_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTabLink)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTabLink,\n    selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n    hostAttrs: [1, \"mdc-tab\", \"mat-mdc-tab-link\", \"mat-focus-indicator\"],\n    hostVars: 11,\n    hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._tabIndex())(\"role\", ctx._getRole());\n        i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled)(\"mdc-tab--active\", ctx.active);\n      }\n    },\n    inputs: {\n      active: [2, \"active\", \"active\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n      id: \"id\"\n    },\n    exportAs: [\"matTabLink\"],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c10,\n    ngContentSelectors: _c0,\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"]],\n    template: function MatTabLink_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"span\", 0)(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"span\", 2)(3, \"span\", 3);\n        i0.ɵɵprojection(4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"matRippleTrigger\", ctx.elementRef.nativeElement)(\"matRippleDisabled\", ctx.rippleDisabled);\n      }\n    },\n    dependencies: [MatRipple],\n    styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mat-tab-container-height, 48px);font-family:var(--mat-tab-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-tab-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-tab-label-text-tracking, var(--mat-sys-title-small-tracking));line-height:var(--mat-tab-label-text-line-height, var(--mat-sys-title-small-line-height));font-weight:var(--mat-tab-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mat-tab-active-indicator-height, 2px);border-radius:var(--mat-tab-active-indicator-shape, 0)}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-inactive-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-inactive-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-active-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-active-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-active-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-hover-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-active-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-focus-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-disabled-ripple-color, var(--mat-sys-on-surface-variant))}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-inactive-label-text-color, var(--mat-sys-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLink, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-link], [matTabLink]',\n      exportAs: 'matTabLink',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'mdc-tab mat-mdc-tab-link mat-focus-indicator',\n        '[attr.aria-controls]': '_getAriaControls()',\n        '[attr.aria-current]': '_getAriaCurrent()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.id]': 'id',\n        '[attr.tabIndex]': '_tabIndex()',\n        '[attr.role]': '_getRole()',\n        '[class.mat-mdc-tab-disabled]': 'disabled',\n        '[class.mdc-tab--active]': 'active',\n        '(focus)': '_handleFocus()',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      imports: [MatRipple],\n      template: \"<span class=\\\"mdc-tab__ripple\\\"></span>\\n\\n<div\\n  class=\\\"mat-mdc-tab-ripple\\\"\\n  mat-ripple\\n  [matRippleTrigger]=\\\"elementRef.nativeElement\\\"\\n  [matRippleDisabled]=\\\"rippleDisabled\\\"></div>\\n\\n<span class=\\\"mdc-tab__content\\\">\\n  <span class=\\\"mdc-tab__text-label\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n\",\n      styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mat-tab-container-height, 48px);font-family:var(--mat-tab-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-tab-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-tab-label-text-tracking, var(--mat-sys-title-small-tracking));line-height:var(--mat-tab-label-text-line-height, var(--mat-sys-title-small-line-height));font-weight:var(--mat-tab-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mat-tab-active-indicator-height, 2px);border-radius:var(--mat-tab-active-indicator-shape, 0)}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-inactive-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-inactive-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-active-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-active-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-active-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-hover-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-active-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-focus-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-disabled-ripple-color, var(--mat-sys-on-surface-variant))}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-inactive-label-text-color, var(--mat-sys-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\\n\"]\n    }]\n  }], () => [], {\n    active: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n  /** Unique id for the tab panel. */\n  id = inject(_IdGenerator).getId('mat-tab-nav-panel-');\n  /** Id of the active tab in the nav bar. */\n  _activeTabId;\n  static ɵfac = function MatTabNavPanel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTabNavPanel)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTabNavPanel,\n    selectors: [[\"mat-tab-nav-panel\"]],\n    hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-mdc-tab-nav-panel\"],\n    hostVars: 2,\n    hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    },\n    exportAs: [\"matTabNavPanel\"],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatTabNavPanel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNavPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-nav-panel',\n      exportAs: 'matTabNavPanel',\n      template: '<ng-content></ng-content>',\n      host: {\n        '[attr.aria-labelledby]': '_activeTabId',\n        '[attr.id]': 'id',\n        'class': 'mat-mdc-tab-nav-panel',\n        'role': 'tabpanel'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\nclass MatTabsModule {\n  static ɵfac = function MatTabsModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTabsModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatTabsModule,\n    imports: [MatCommonModule, MatTabContent, MatTabLabel, MatTab, MatTabGroup, MatTabNav, MatTabNavPanel, MatTabLink],\n    exports: [MatCommonModule, MatTabContent, MatTabLabel, MatTab, MatTabGroup, MatTabNav, MatTabNavPanel, MatTabLink]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatTabContent, MatTabLabel, MatTab, MatTabGroup, MatTabNav, MatTabNavPanel, MatTabLink],\n      exports: [MatCommonModule, MatTabContent, MatTabLabel, MatTab, MatTabGroup, MatTabNav, MatTabNavPanel, MatTabLink]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0.\n */\nconst matTabsAnimations = {\n  // Represents:\n  // trigger('translateTab', [\n  //   // Transitions to `none` instead of 0, because some browsers might blur the content.\n  //   state(\n  //     'center, void, left-origin-center, right-origin-center',\n  //     style({transform: 'none', visibility: 'visible'}),\n  //   ),\n  //   // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  //   // in order to ensure that the element has a height before its state changes. This is\n  //   // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  //   // not have a static height and is not rendered. See related issue: #9465\n  //   state(\n  //     'left',\n  //     style({\n  //       transform: 'translate3d(-100%, 0, 0)',\n  //       minHeight: '1px',\n  //       // Normally this is redundant since we detach the content from the DOM, but if the user\n  //       // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n  //       visibility: 'hidden',\n  //     }),\n  //   ),\n  //   state(\n  //     'right',\n  //     style({\n  //       transform: 'translate3d(100%, 0, 0)',\n  //       minHeight: '1px',\n  //       visibility: 'hidden',\n  //     }),\n  //   ),\n  //   transition(\n  //     '* => left, * => right, left => center, right => center',\n  //     animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //   ),\n  //   transition('void => left-origin-center', [\n  //     style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'}),\n  //     animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //   ]),\n  //   transition('void => right-origin-center', [\n  //     style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'}),\n  //     animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //   ]),\n  // ])\n  /** Animation translates a tab along the X axis. */\n  translateTab: {\n    type: 7,\n    name: 'translateTab',\n    definitions: [{\n      type: 0,\n      name: 'center, void, left-origin-center, right-origin-center',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'none',\n          visibility: 'visible'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'left',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(-100%, 0, 0)',\n          minHeight: '1px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'right',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(100%, 0, 0)',\n          minHeight: '1px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: '* => left, * => right, left => center, right => center',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: 'void => left-origin-center',\n      animation: [{\n        type: 6,\n        styles: {\n          transform: 'translate3d(-100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }, {\n        type: 4,\n        styles: null,\n        timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n      }],\n      options: null\n    }, {\n      type: 1,\n      expr: 'void => right-origin-center',\n      animation: [{\n        type: 6,\n        styles: {\n          transform: 'translate3d(100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }, {\n        type: 4,\n        styles: null,\n        timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n      }],\n      options: null\n    }],\n    options: {}\n  }\n};\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_CONTENT, MAT_TAB_GROUP, MAT_TAB_LABEL, MatInkBar, MatPaginatedTabHeader, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MAT_INK_BAR_POSITIONER_FACTORY, matTabsAnimations };\n","export const PLACE_DISPLAY_PROPERTIES = [\r\n  { property: 'P48', comment: 'geographic coordinates' },\r\n  { property: 'P58', comment: 'number of inhabitants' },\r\n  { property: 'P297', comment: 'territorial affiliation' },\r\n  { property: 'P466', comment: 'capital of' },\r\n  { property: 'P538', comment: 'historical county' },\r\n  { property: 'P461', comment: 'named after' },\r\n  { property: 'P140', comment: 'Illuminati code name (ng ser)' },\r\n  { property: 'P139', comment: 'Illuminati code name of' },\r\n  { property: 'P267', comment: 'organisational context' }\r\n];\r\n\r\nexport const CAREER_DISPLAY_PROPERTIES = [ //by display order\r\n  { property: 'P164', comment: 'position' },\r\n  { property: 'P165', comment: 'activities' },\r\n  { property: 'P865', comment: 'professional address' },\r\n  { property: 'P315', comment: 'employer' },\r\n  { property: 'P242', comment: 'events witness' },\r\n  { property: 'P119', comment: 'active participant to' },\r\n  { property: 'P776', comment: 'business partner' },\r\n];\r\n\r\nexport const ACTIVITY_DISPLAY_PROPERTIES = [ //by display order\r\n  { property: 'P267', comment: 'organisational context' },\r\n];\r\n\r\nexport const DOCUMENT_DISPLAY_PROPERTIES = [ //by display order\r\n  { property: 'P21', comment: 'author' },\r\n  { property: 'P20', comment: 'author as (misleadingly) stated' },\r\n  { property: 'P561', comment: 'quality of author identification' },\r\n  { property: 'P24', comment: 'translated by' },\r\n  { property: 'P583', comment: 'translator as (misleading) stated' },\r\n  { property: 'P584', comment: 'quality of translator identification' },\r\n  { property: 'P25', comment: 'handwritten by' },\r\n  { property: 'P11', comment: 'title' },\r\n  { property: 'P5', comment: 'title page transcript' },\r\n  { property: 'P572', comment: 'focus title' },\r\n  { property: 'P39', comment: 'begin of composition' },\r\n  { property: 'P106', comment: 'date' },\r\n  { property: 'P15', comment: 'media type' },\r\n  { property: 'P121', comment: 'type of work (standardised)' },\r\n  { property: 'P107', comment: 'number of pages/leafs/sheets' },\r\n  { property: 'P93', comment: 'format' },\r\n  { property: 'P95', comment: 'place of origin' },\r\n  { property: 'P28', comment: 'recipient' },\r\n  { property: 'P410', comment: 'was co-signed by' },\r\n  { property: 'P33', comment: 'persons mentioned' },\r\n  { property: 'P306', comment: 'quoting' },\r\n  { property: 'P72', comment: 'digest in German' },\r\n  { property: 'P204', comment: 'extract' },\r\n  { property: 'P144', comment: 'type of publication' },\r\n  { property: 'P115', comment: 'originality of the item' },\r\n  { property: 'P578', comment: 'original publication' },\r\n  { property: 'P233', comment: 'preceding in stemma' },\r\n  { property: 'P222', comment: 'date of publication according to imprint' },\r\n  { property: 'P241', comment: 'place of pubication (without fictitious information)' },\r\n  { property: 'P240', comment: 'place of publication as misleading stated' },\r\n  { property: 'P122', comment: 'wilder field of genre' },\r\n  { property: 'P576', comment: 'genre/subject' },\r\n  { property: 'P568', comment: 'plot ingredient' },\r\n  { property: 'P565', comment: 'self-statement on historicity/fictionality' },\r\n  { property: 'P18', comment: 'language' },\r\n  { property: 'P126', comment: 'owner' },\r\n  { property: 'P47', comment: 'localisation' },\r\n  { property: 'P329', comment: 'holding institution' },\r\n  { property: 'P323', comment: 'next higher archival level' },\r\n  { property: 'P101', comment: 'position in sequence <string>' },\r\n  { property: 'P30', comment: 'old shelf mark' },\r\n  { property: 'P125', comment: 'document accessibility' },\r\n  { property: 'P229', comment: 'provenance' },\r\n  { property: 'P136', comment: 'history of provenance' },\r\n  { property: 'P64', comment: 'published in' },\r\n  { property: 'P124', comment: 'listed in' },\r\n  { property: 'P251', comment: 'FactGrid transcript' },\r\n  { property: 'P226', comment: 'FactGrid transcript' },\r\n  { property: 'P138', comment: 'Online Digitalisation' },\r\n];\r\n\r\nexport const EDUCATION_DISPLAY_PROPERTIES = [\r\n  { property: 'P160', comment: 'educating institutions' },\r\n  { property: 'P304', comment: 'subjects studied at university' },\r\n  { property: 'P170', comment: 'academic degree' },\r\n  { property: 'P161', comment: 'teachers' }\r\n];\r\n\r\nexport const EVENT_DISPLAY_PROPERTIES = [\r\n  { property: 'P47', comment: 'localisation' },\r\n  { property: 'P106', comment: 'date' },\r\n  { property: 'P66', comment: 'institution signing responsible' },\r\n  { property: 'P133', comment: 'participants' }\r\n];\r\n\r\nexport const EXCLUDED_DISPLAY_PROPERTIES = [\r\n  { property: 'P899', comment: \"object type properties\" }, // Ajoutez ici les identifiants des propriétés à ne pas afficher\r\n  { property: 'P679', comment: \"FactGrid map\" } //\r\n  // ...\r\n];\r\n\r\nexport const ORG_DISPLAY_PROPERTIES = [\r\n  { property: 'P8', comment: 'part of' },\r\n  { property: 'P83', comment: 'place' },\r\n  // { property: 'P208', comment: 'address' }, // commenté dans le service\r\n  { property: 'P49', comment: 'begin date' },\r\n  { property: 'P6', comment: 'continuation of' },\r\n  { property: 'P50', comment: 'end date' },\r\n  { property: 'P7', comment: 'continued by' },\r\n  { property: 'P449', comment: 'partner organizations' },\r\n  { property: 'P428', comment: 'next higher hierarchy level' },\r\n  { property: 'P14', comment: 'in leading positions' },\r\n  { property: 'P465', comment: 'capital' },\r\n  { property: 'P297', comment: 'territorial affiliation' },\r\n  { property: 'P9', comment: 'includes' },\r\n  { property: 'P268', comment: 'founded by' },\r\n  { property: 'P327', comment: 'documented list of members' },\r\n  { property: 'P137', comment: 'history' },\r\n  { property: 'P34', comment: 'name history' },\r\n  { property: 'P521', comment: 'system adhered to' },\r\n  // { property: 'P320', comment: 'FactGrid list of members' }, // commenté dans le service\r\n  { property: 'P338', comment: 'founding members' },\r\n  { property: 'P342', comment: 'worshipful master (masonic lodge)' },\r\n  { property: 'P319', comment: 'organisational roof' },\r\n  { property: 'P267', comment: 'organisational context' },\r\n  { property: 'P430', comment: 'grand lodge (masonic lodge)' },\r\n  { property: 'P422', comment: 'subclass' }\r\n];\r\n\r\nexport const PERSON_DISPLAY_PROPERTIES = [\r\n  { property: 'P154', comment: 'sex' },\r\n  { property: 'P247', comment: 'name' },\r\n  { property: \"Q266694\", comment: 'birth name' },\r\n  { property: \"Q468366\", comment: 'married name' },\r\n  { property: 'P248', comment: 'forenames' },\r\n  { property: 'P140', comment: 'Illuminati code name' },\r\n  { property: 'P139', comment: 'Illuminati code name of' },\r\n  { property: 'P363', comment: 'Strict Observance code name' },\r\n  { property: 'P148', comment: 'Strict Observance order name of' },\r\n  { property: 'P530', comment: 'Name with the Asiatic Brethren' },\r\n  { property: 'P354', comment: 'Rosicrucian code name' },\r\n  { property: 'P77', comment: 'birthday' },\r\n  { property: 'P37', comment: 'date of baptism' },\r\n  { property: 'P82', comment: 'birthplace' },\r\n  { property: 'P290', comment: 'life span (at least) from' },\r\n  { property: 'P186', comment: 'medical conditions' },\r\n  { property: 'P580', comment: 'escape/emigration to' },\r\n  { property: 'P38', comment: 'deathday' },\r\n  { property: 'P168', comment: 'deathplace' },\r\n  { property: 'P162', comment: 'cause of death' },\r\n  { property: 'P40', comment: 'burialdate' },\r\n  { property: 'P79', comment: 'grave' },\r\n  { property: 'P141', comment: 'father' },\r\n  { property: 'P142', comment: 'mother' },\r\n  { property: 'P203', comment: 'siblings' },\r\n  { property: 'P84', comment: 'marriage' },\r\n  { property: 'P200', comment: 'number of children' },\r\n  { property: 'P150', comment: 'children' },\r\n  { property: 'P150', comment: 'brother or sister-in-law' },\r\n  { property: 'Q400624', comment: 'children' },\r\n  { property: 'P172', comment: 'religion' },\r\n  { property: 'P83', comment: 'place (residence)' },\r\n  { property: 'P296', comment: 'sejour' },\r\n  { property: 'P208', comment: 'address' },\r\n  { property: 'P1267', comment: 'signature' },\r\n];\r\n\r\nexport const EXTERNAL_LINKS_DISPLAY_PROPERTIES = [\r\n  // Cette liste est très longue et dynamique dans le service, mais voici les plus explicites :\r\n  { property: 'P146', comment: 'Online information' },\r\n  { property: 'P378', comment: 'id Viaf' },\r\n  { property: 'P76', comment: 'id GND' },\r\n  { property: 'P500', comment: 'id Data BnF' },\r\n  { property: 'P346', comment: 'id PPN' },\r\n  { property: 'P367', comment: 'BnF ID' },\r\n  { property: 'P366', comment: 'IRef ID' },\r\n  { property: 'P418', comment: 'id Geonames' },\r\n  { property: 'P368', comment: 'id VD16' },\r\n  { property: 'P369', comment: 'id VD17' },\r\n  { property: 'P370', comment: 'id VD18' },\r\n  { property: 'P424', comment: 'id Harmonia Universalis' },\r\n  { property: 'P533', comment: 'id Amburger' },\r\n  { property: 'P374', comment: 'id Geni.com' },\r\n  { property: 'P414', comment: 'INSEE municipality code' },\r\n  // ... ajoutez d'autres propriétés selon vos besoins\r\n];\r\n\r\nexport const SOCIABILITY_DISPLAY_PROPERTIES = [\r\n  { property: 'P91', comment: 'member of' },\r\n  { property: 'P454', comment: 'proposed to become a member of' },\r\n  { property: 'P192', comment: 'friendship' },\r\n  { property: 'P703', comment: 'personal connections' },\r\n  { property: 'P447', comment: 'masonic degree' },\r\n  { property: 'P497', comment: 'interested in' },\r\n  { property: 'P167', comment: 'contributor to' },\r\n  { property: 'P278', comment: 'subscriptions signed' }\r\n];\r\n\r\nexport const HEADER_DISPLAY_PROPERTIES = [\r\n  { property: 'P2', comment: 'instance of' },\r\n  { property: 'P3', comment: 'subclass of' },\r\n  { property: 'P8', comment: 'part of' },\r\n  { property: 'P97', comment: 'field of research' },\r\n  { property: 'P131', comment: 'research projects that contributed to this data set' }\r\n];\r\n\r\nexport const SOURCES_DISPLAY_PROPERTIES = [\r\n  { property: 'P12', comment: 'literature' },\r\n  { property: 'P51', comment: 'primary source' },\r\n  { property: 'P143', comment: 'mentioned in' },\r\n  { property: 'P185', comment: 'archives at' },\r\n  { property: 'P146', comment: 'on line information' }\r\n];\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  PERSON_DISPLAY_PROPERTIES,\r\n  PLACE_DISPLAY_PROPERTIES,\r\n  CAREER_DISPLAY_PROPERTIES,\r\n  DOCUMENT_DISPLAY_PROPERTIES,\r\n  ACTIVITY_DISPLAY_PROPERTIES,\r\n  EDUCATION_DISPLAY_PROPERTIES,\r\n  EVENT_DISPLAY_PROPERTIES,\r\n  ORG_DISPLAY_PROPERTIES,\r\n  SOCIABILITY_DISPLAY_PROPERTIES,\r\n  HEADER_DISPLAY_PROPERTIES,\r\n  SOURCES_DISPLAY_PROPERTIES,\r\n  EXTERNAL_LINKS_DISPLAY_PROPERTIES,\r\n  EXCLUDED_DISPLAY_PROPERTIES\r\n} from '../../config/dispatcher.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlockDisplayService {\r\n\r\n  /**\r\n   * Méthode générique pour peupler un tableau à partir d'une constante de propriétés.\r\n   */\r\n  private populateDisplay(item: any, targetArray: any[], properties: { property: string }[]): any[] {\r\n    for (const { property } of properties) {\r\n      if (item[0].claims[property] !== undefined) {\r\n        item[1].splice(item[1].indexOf(property), 1);\r\n        targetArray.push(item[0].claims[property]);\r\n      }\r\n    }\r\n    return targetArray;\r\n  }\r\n\r\n\r\n  setExcludedProperties(item: any, excludedProperties: any[]): any[] {\r\n    return this.populateDisplay(item, excludedProperties, EXCLUDED_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setHeaderDisplay(item: any, headerDetail: any[]): any[] {\r\n    return this.populateDisplay(item, headerDetail, HEADER_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setPlaceDisplay(item: any, locationAndSituation: any[]): any[] {\r\n    return this.populateDisplay(item, locationAndSituation, PLACE_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setPersonDisplay(item: any, lifeAndFamily: any[]): any[] {\r\n    return this.populateDisplay(item, lifeAndFamily, PERSON_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setCareerDisplay(item: any, careerAndActivities: any[]): any[] {\r\n    return this.populateDisplay(item, careerAndActivities, CAREER_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setSociabilityDisplay(item: any, sociabilityAndCulture: any[]): any[] {\r\n    return this.populateDisplay(item, sociabilityAndCulture, SOCIABILITY_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setEducationDisplay(item: any, education: any[]): any[] {\r\n    return this.populateDisplay(item, education, EDUCATION_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setOrgDisplay(item: any, locationAndContext: any[]): any[] {\r\n    return this.populateDisplay(item, locationAndContext, ORG_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setActivityDisplay(item: any, activityDetail: any[]): any[] {\r\n    return this.populateDisplay(item, activityDetail, ACTIVITY_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setEventDisplay(item: any, eventDetail: any[]): any[] {\r\n    return this.populateDisplay(item, eventDetail, EVENT_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setDocumentDisplay(item: any, documentDetail: any[]): any[] {\r\n    return this.populateDisplay(item, documentDetail, DOCUMENT_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n  setSourcesDisplay(item: any, sourcesList: any[]): any[] {\r\n    return this.populateDisplay(item, sourcesList, SOURCES_DISPLAY_PROPERTIES);\r\n  }\r\n\r\n \r\n\r\n\r\n  setItemInfoDisplay(item: any, target: any): void {\r\n    const infoList = item[0]?.infoList || [];\r\n\r\n    target.instancesList = Array.isArray(infoList[0]) ? [...infoList[0]] : [];\r\n    target.subclassesList = Array.isArray(infoList[1]) ? [...infoList[1]] : [];\r\n    target.classesList = Array.isArray(infoList[2]) ? [...infoList[2]] : [];\r\n    target.natureOfList = Array.isArray(infoList[3]) ? [...infoList[3]] : [];\r\n\r\n  }\r\n\r\n\r\n\r\n  setExternalLinksDisplay(item: any, externalLinks: any[]): any[] {\r\n    return this.setUrlDisplay(item, externalLinks);\r\n  }\r\n\r\n  setUrlDisplay(item: any, externalLinks: any[]): any[] {\r\n    const properties = Object.keys(item[0].claims);\r\n    for (const prop of properties) {\r\n      if (prop === 'P1306' || prop === 'P650') continue; // Exclure les propriétés obsolètes\r\n      const claim = item[0].claims[prop];\r\n      if (!claim || claim.datatype !== \"external-id\") continue;\r\n\r\n      // Retirer la propriété de l'affichage général\r\n      item[1].splice(item[1].indexOf(prop), 1);\r\n\r\n      // Générer l'URL selon la logique métier\r\n      this.setUrl(item, prop);\r\n\r\n      // Ajouter à la liste des liens externes\r\n      externalLinks.push(claim);\r\n    }\r\n    return externalLinks;\r\n  }\r\n\r\n  private setUrl(item: any, p: string): void {\r\n    const claim = item[0].claims[p];\r\n    if (!claim) return;\r\n\r\n    if (claim.externalLink !== undefined) {\r\n      claim.url = claim.externalLink.replace(\"$1\", claim[0].mainsnak.datavalue.value);\r\n    }\r\n\r\n    if (item[0].claims.P76 !== undefined) {\r\n      item[0].claims.P76.url = \"https://explore.gnd.network/gnd/\" + item[0].claims.P76[0].mainsnak.datavalue.value;\r\n    }\r\n    if (item[0].claims.P368 !== undefined) {\r\n      item[0].claims.P368.url = 'http://gateway-bayern.de/VD16+' + item[0].claims.P368[0].mainsnak.datavalue.value;\r\n    }\r\n    if (item[0].claims.P369 !== undefined) {\r\n      item[0].claims.P369.url = 'https://kxp.k10plus.de/DB=1.28/CMD?ACT=SRCHA&IKT=8079&TRM=%27:' +\r\n        item[0].claims.P369[0].mainsnak.datavalue.value + \"%27\";\r\n    }\r\n    if (item[0].claims.P370 !== undefined) {\r\n      item[0].claims.P370.url = 'https://kxp.k10plus.de/DB=1.65/CMD?ACT=SRCHA&IKT=8080&TRM=VD18' +\r\n        item[0].claims.P370[0].mainsnak.datavalue.value;\r\n    }\r\n    if (item[0].claims.P650 !== undefined) {\r\n      let value = item[0].claims.P650[0].mainsnak.datavalue.value;\r\n      let province = value.slice(0, 2);\r\n      let municipality = value.slice(2, 5);\r\n      let parish = value.slice(5, 7);\r\n      let es = value.slice(7, 9);\r\n      if (item[0].claims.P650.externalLink !== undefined) {\r\n        let url = item[0].claims.P650.externalLink.replace(\"$1\", province)\r\n          .replace(\"$2\", municipality)\r\n          .replace(\"$3\", parish)\r\n          .replace(\"$4\", es)\r\n          .replace(\"$5\", \"00\");\r\n        console.log(\"URL for P650:\", url); // Debug log\r\n        item[0].claims.P650.url = url;\r\n      }\r\n    }\r\n    if (item[0].claims.P882 !== undefined) {\r\n      item[0].claims.P882.url = 'https://drw-www.adw.uni-heidelberg.de/drw-cgi/zeige?index=lemmata&term=' +\r\n        item[0].claims.P882[0].mainsnak.datavalue.value + '&darstellung=V';\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TechnicalitiesDisplayService {\r\n\r\n  constructor() { }\r\n\r\n  setTechnicalitiesDisplay(item, technicalities) {\r\n\r\n    // technicalities\r\n\r\n    if (item[0].claims.P994 !== undefined) { //vocabulary PhiloBiblon-terms\r\n      item[1].splice(item[1].indexOf(\"P994\"), 1);\r\n      technicalities.push(item[0].claims.P994);\r\n    }\r\n\r\n    if (item[0].claims.P1132 !== undefined) { //FactGrid keyword\r\n      item[1].splice(item[1].indexOf(\"P1132\"), 1);\r\n      technicalities.push(item[0].claims.P1132);\r\n    }\r\n  }\r\n  }\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WikiDisplayService {\r\n\r\n  url = \"\";\r\n\r\n  constructor() { }\r\n\r\n  setWikiDisplay(item, wikis) {\r\n\r\n    if (item[0].sitelinks !== undefined) {\r\n\r\n    if (item[0].sitelinks.commonswiki !== undefined) {\r\n      wikis.push(item[0].sitelinks.commonswiki);\r\n    }\r\n    if (item[0].sitelinks.enwiki !== undefined) {\r\n      wikis.push(item[0].sitelinks.enwiki);\r\n    }\r\n    if (item[0].sitelinks.dewiki !== undefined) {\r\n      wikis.push(item[0].sitelinks.dewiki);\r\n    }\r\n    if (item[0].sitelinks.frwiki !== undefined) {\r\n      wikis.push(item[0].sitelinks.frwiki);\r\n    }\r\n    if (item[0].sitelinks.itwiki !== undefined) {\r\n      wikis.push(item[0].sitelinks.itwiki);\r\n    }\r\n    if (item[0].sitelinks.nlwiki !== undefined) {\r\n      wikis.push(item[0].sitelinks.nlwiki);\r\n    }\r\n    if (item[0].sitelinks.eswiki !== undefined) {\r\n      wikis.push(item[0].sitelinks.eswiki);\r\n    }\r\n    if (item[0].sitelinks.wikidatawiki !== undefined) {\r\n      wikis.push(item[0].sitelinks.wikidatawiki);\r\n    }\r\n    if (item[0].sitelinks.enwikisource !== undefined) {\r\n      this.url = item[0].sitelinks.enwikisource.title.replace(/ /g, \"_\")+\"_\";\r\n      this.url = \"https://en.wikisource.org/wiki/\" + this.url;\r\n      item[0].sitelinks.enwikisource.url=this.url;\r\n      wikis.push(item[0].sitelinks.enwikisource);\r\n    }\r\n    if (item[0].sitelinks.dewikisource !== undefined) {\r\n      this.url = item[0].sitelinks.dewikisource.title.replace(/ /g, \"_\")+\"_\";\r\n      this.url = \"https://de.wikisource.org/wiki/\" + this.url;\r\n      item[0].sitelinks.dewikisource.url=this.url;\r\n      wikis.push(item[0].sitelinks.dewikisource);\r\n    }\r\n    if (item[0].sitelinks.frwikisource !== undefined) {\r\n      this.url = item[0].sitelinks.frwikisource.title.replace(/ /g, \"_\")+\"_\";\r\n      this.url = \"https://fr.wikisource.org/wiki/\" + this.url;\r\n      item[0].sitelinks.frwikisource.url=this.url;\r\n      wikis.push(item[0].sitelinks.frwikisource);\r\n      }\r\n    }\r\n    return wikis\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { BlockDisplayService } from './block-display.service';\r\n//import { IframesDisplayService } from './iframes-display.service';\r\nimport { TechnicalitiesDisplayService } from './technicalities-display.service';\r\nimport { WikiDisplayService } from './wiki-display.service';\r\n\r\n\r\nexport interface DisplayFlags {\r\n  isPlace: boolean;\r\n  isCareer: boolean;\r\n  isSociability: boolean;\r\n  isTraining: boolean;\r\n  isOrg: boolean;\r\n  isActivity: boolean;\r\n  isEvent: boolean;\r\n  isSource: boolean;\r\n  isDocument: boolean;\r\n  isOther: boolean;\r\n  isMain: boolean;\r\n  isWikis: boolean;\r\n  isInfoList: boolean;\r\n  isFrames: boolean;\r\n  isExternalLinks: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItemDisplayDispatcherService {\r\n  \r\n  private blockDisplay = inject(BlockDisplayService);\r\n  private wikiDisplay = inject(WikiDisplayService);\r\n // private iframesDisplay = inject(IframesDisplayService);\r\n  private technicalitiesDisplay = inject(TechnicalitiesDisplayService);\r\n\r\n  dispatch(item: any, target: any): DisplayFlags {\r\n    const claims = item[0].claims;\r\n\r\n    //Excluded properties\r\n    target.excludedProperties = [];\r\n    this.blockDisplay.setExcludedProperties(item, target.excludedProperties);\r\n\r\n    // Header\r\n    target.headerDetail = [];\r\n    this.blockDisplay.setHeaderDisplay(item, target.headerDetail);\r\n\r\n    // Place\r\n    target.locationAndSituation = [];\r\n    let isPlace = false;\r\n    if (claims.P2?.place !== undefined) {\r\n      this.blockDisplay.setPlaceDisplay(item, target.locationAndSituation);\r\n      isPlace = target.locationAndSituation.length > 0;\r\n    }\r\n\r\n    // Person\r\n    target.lifeAndFamily = [];\r\n    let isCareer = false;\r\n    let isSociability = false;\r\n    let isTraining = false;\r\n    if (claims.P2?.person !== undefined) {\r\n      this.blockDisplay.setPersonDisplay(item, target.lifeAndFamily);\r\n\r\n      // Career\r\n      target.careerAndActivities = [];\r\n      this.blockDisplay.setCareerDisplay(item, target.careerAndActivities);\r\n      isCareer = target.careerAndActivities.length > 0;\r\n      if (isCareer && claims.P2?.career !== undefined) {\r\n        target.career = claims.P2.career;\r\n      }\r\n\r\n      // Sociability\r\n      target.sociabilityAndCulture = [];\r\n      this.blockDisplay.setSociabilityDisplay(item, target.sociabilityAndCulture);\r\n      isSociability = target.sociabilityAndCulture.length > 0;\r\n      if (isSociability && claims.P2?.sociability !== undefined) {\r\n        target.sociability = claims.P2.sociability;\r\n      }\r\n\r\n      // Education\r\n      target.education = [];\r\n      this.blockDisplay.setEducationDisplay(item, target.education);\r\n      isTraining = target.education.length > 0;\r\n      if (isTraining && claims.P2?.training !== undefined) {\r\n        target.training = claims.P2.training;\r\n      }\r\n    }\r\n\r\n    // Organization\r\n    target.locationAndContext = [];\r\n    let isOrg = false;\r\n    if (claims.P2?.org !== undefined) {\r\n      this.blockDisplay.setOrgDisplay(item, target.locationAndContext);\r\n      isOrg = target.locationAndContext.length > 0;\r\n    }\r\n\r\n    // Activity\r\n    target.activityDetail = [];\r\n    let isActivity = false;\r\n    if (claims.P2?.activity !== undefined) {\r\n      this.blockDisplay.setActivityDisplay(item, target.activityDetail);\r\n      isActivity = target.activityDetail.length > 0;\r\n    }\r\n\r\n    // Event\r\n    target.eventDetail = [];\r\n    let isEvent = false;\r\n    if (claims.P2?.event !== undefined) {\r\n      this.blockDisplay.setEventDisplay(item, target.eventDetail);\r\n      isEvent = target.eventDetail.length > 0;\r\n    }\r\n\r\n    // Document\r\n    target.documentDetail = [];\r\n    let isDocument = false;\r\n    if (claims.P2?.document !== undefined) {\r\n      this.blockDisplay.setDocumentDisplay(item, target.documentDetail);\r\n      isDocument = target.documentDetail.length > 0;\r\n    }\r\n\r\n    // Sources\r\n    target.sourcesList = [];\r\n    let isSource = false;\r\n    this.blockDisplay.setSourcesDisplay(item, target.sourcesList);\r\n    isSource = target.sourcesList.length > 0;\r\n    target.sources = claims.P2?.sources;\r\n\r\n    // External links\r\n    target.externalLinks = [];\r\n    let isExternalLinks = false;\r\n    this.blockDisplay.setExternalLinksDisplay(item, target.externalLinks);\r\n    isExternalLinks = target.externalLinks.length > 0;\r\n\r\n    // Others\r\n    target.otherClaims = [];\r\n    let isOther = false;\r\n    if (item[1] && Array.isArray(item[1])) {\r\n      for (let i = 0; i < item[1].length; i++) {\r\n        const P: string = item[1][i];\r\n        if (claims[P] !== undefined) {\r\n          target.otherClaims.push(claims[P]);\r\n        }\r\n      }\r\n      if (claims.P2?.other !== undefined) {\r\n        target.other = claims.P2.other;\r\n      }\r\n      isOther = target.otherClaims.length > 0;\r\n    }\r\n\r\n    // Item info\r\n\r\n\r\n\r\n    // MainList\r\n    target.mainList = [];\r\n    let isMain = false;\r\n\r\n    if (claims.P2 === undefined) {\r\n      if (claims.P3 !== undefined) {\r\n        target.mainList.push(claims.P3);\r\n      }\r\n    } else {\r\n      target.mainList = []\r\n        .concat(\r\n          target.lifeAndFamily || [],\r\n          target.locationAndContext || [],\r\n          target.locationAndSituation || [],\r\n          target.activityDetail || [],\r\n          target.eventDetail || [],\r\n          target.documentDetail || [],\r\n          target.otherClaims || []\r\n      );\r\n\r\n /*     Object.keys(claims).forEach(key => {\r\n        if (key.startsWith('Q') && Array.isArray(claims[key])) {\r\n          // Par exemple, pour les ajouter à mainList :\r\n          target.mainList.push(claims[key]);\r\n        }\r\n      });\r\n      */\r\n\r\n    }\r\n    isMain = target.mainList.length > 0;\r\n    if (claims.P2 !== undefined && claims.P2[0]?.mainsnak?.label !== undefined) {\r\n      target.mainTitle = claims.P2[0].mainsnak.label;\r\n    }\r\n\r\n    // ... après la construction de target.mainList\r\n\r\n\r\n\r\n    let isFrames = false;\r\n\r\n    /* iframes\r\n    target.iframes = [];\r\n    \r\n    this.iframesDisplay.setIframesDisplay(item, target.iframes);\r\n    isFrames = target.iframes.length > 0;\r\n    */\r\n\r\n    // InfoList\r\n   \r\n    this.blockDisplay.setItemInfoDisplay(item, target);\r\n\r\n    let technicalities: any[] = [];\r\n    this.technicalitiesDisplay.setTechnicalitiesDisplay(item, technicalities);\r\n\r\n    target.infoList = {\r\n      instancesList: target.instancesList,\r\n      subclassesList: target.subclassesList,\r\n      classesList: target.classesList,\r\n      natureOfList: target.natureOfList,\r\n      technicalities: technicalities\r\n    };\r\n\r\n    // Flag unique pour l'affichage\r\n    let isInfoList =\r\n      (target.infoList.instancesList && target.infoList.instancesList.length > 0) ||\r\n      (target.infoList.subclassesList && target.infoList.subclassesList.length > 0) ||\r\n      (target.infoList.classesList && target.infoList.classesList.length > 0) ||\r\n      (target.infoList.natureOfList && target.infoList.natureOfList.length > 0) ||\r\n      (target.infoList.technicalities && target.infoList.technicalities.length > 0);\r\n\r\n\r\n    // Wikis\r\n    target.wikis = [];\r\n    let isWikis = false;\r\n    this.wikiDisplay.setWikiDisplay(item, target.wikis);\r\n    isWikis = target.wikis.length > 0;\r\n\r\n\r\n    // ... (autres propriétés comme dans votre code)\r\n\r\n\r\n    // Retourne les flags utiles\r\n    return {\r\n      isPlace,\r\n      isCareer,\r\n      isSociability,\r\n      isTraining,\r\n      isActivity,\r\n      isDocument,\r\n      isEvent,\r\n      isSource,\r\n      isOrg,\r\n      isOther,\r\n      isInfoList,\r\n      isMain,\r\n      isWikis,\r\n      isFrames,\r\n      isExternalLinks\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, AfterViewInit, inject } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BackListDetailsService } from '../services/back-list-details.service';\r\nimport { IframesDisplayService } from './services/iframes-display.service';\r\nimport { SetDataService } from '../services/set-data.service';\r\nimport { TranscriptDisplayService } from '../services/transcript-display.service';\r\nimport { BackListService } from '../services/back-list.service';\r\nimport { SetSelectedItemsListService } from '../services/set-selected-items-list.service';\r\nimport { TranscriptionService } from './services/transcription.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { JoinPipe } from '../join.pipe';\r\nimport { ItemInfoComponent } from './item-info/item-info.component';\r\nimport { HeaderDisplayComponent } from './header-display/header-display.component';\r\nimport { CareerDisplayComponent } from './career-display/career-display.component';\r\nimport { MainDisplayComponent } from './main-display/main-display.component';\r\nimport { EducationDisplayComponent } from './education-display/education-display.component';\r\nimport { SociabilityDisplayComponent } from './sociability-display/sociability-display.component';\r\nimport { SourcesDisplayComponent } from './sources-display/sources-display.component';\r\nimport { Sparql0DisplayComponent } from './sparql0-display/sparql0-display.component';\r\nimport { Sparql1DisplayComponent } from './sparql1-display/sparql1-display.component';\r\nimport { Sparql2DisplayComponent } from './sparql2-display/sparql2-display.component';\r\nimport { Sparql3DisplayComponent } from './sparql3-display/sparql3-display.component';\r\nimport { Sparql4DisplayComponent } from './sparql4-display/sparql4-display.component';\r\nimport { IframesDisplayComponent } from './iframes-display/iframes-display.component';\r\nimport { TextDisplayComponent } from './text-display/text-display.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { NgIf, NgFor, NgClass } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ItemDisplayDispatcherService } from './services/item-display-dispatcher.service';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-display',\r\n  templateUrl: 'display.component.html',\r\n  styleUrls: ['./display.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule, MatTabsModule, MatButtonModule, RouterModule, NgIf, MatProgressSpinnerModule, MatSidenavModule,\r\n    MatIconModule, MatCardModule, NgFor, NgClass, TextDisplayComponent, Sparql0DisplayComponent,\r\n    Sparql1DisplayComponent, Sparql2DisplayComponent, Sparql3DisplayComponent, Sparql4DisplayComponent,\r\n    ItemInfoComponent, MainDisplayComponent, HeaderDisplayComponent, SociabilityDisplayComponent,\r\n    SourcesDisplayComponent, EducationDisplayComponent, CareerDisplayComponent, IframesDisplayComponent, JoinPipe\r\n  ]\r\n})\r\nexport class DisplayComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  public from: string;\r\n\r\n  // Services\r\n  private lang = inject(SelectedLangService);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private setData = inject(SetDataService);\r\n  private setList = inject(SetSelectedItemsListService);\r\n  private backList = inject(BackListService);\r\n  private backListDetails = inject(BackListDetailsService);\r\n  private itemDisplayDispatcher = inject(ItemDisplayDispatcherService);\r\n  private changeTranscript = inject(TranscriptionService);\r\n  private transcript = inject(TranscriptDisplayService);\r\n  private iframesDisplay = inject(IframesDisplayService);\r\n  private sanitizer = inject(DomSanitizer);\r\n  private observer = inject(BreakpointObserver);\r\n\r\n  // Données principales\r\n  item: any;\r\n  claims: any;\r\n  itemId: string;\r\n  id: string;\r\n  label: string;\r\n  description: string;\r\n  aliases: string[];\r\n  mainTitle: string;\r\n  main: any;\r\n  career: any;\r\n  sociability: any;\r\n  training: any;\r\n  other: any;\r\n  listTitle: string;\r\n  event: any;\r\n  natureOf: any;\r\n  urlId: string;\r\n  linkedItems: any[];\r\n  linkedItems2: any[];\r\n  factGridUrl: string;\r\n  sources: any;\r\n  mainList: any[] = [];\r\n  list: any[] = [];\r\n  selectedItemsList: any;\r\n  wikis: any[] = [];\r\n  pictures: any[] = [];\r\n  sourcesList: any[] = [];\r\n  externalLinks: any[] = [];\r\n  iframes: any[] = [];\r\n  headerDetail: any[] = [];\r\n  education: any[] = [];\r\n  careerAndActivities: any[] = [];\r\n  sociabilityAndCulture: any[] = [];\r\n  locationAndSituation: any[] = [];\r\n  technicalities: any[] = [];\r\n  activityDetail: any[] = [];\r\n  eventDetail: any[] = [];\r\n  documentDetail: any[] = [];\r\n  lifeAndFamily: any[] = [];\r\n  otherClaims: any[] = [];\r\n  locationAndContext: any[] = [];\r\n  info: any[] = [];\r\n  instancesList: any[] = [];\r\n  subclassesList: any[] = [];\r\n  classesList: any[] = [];\r\n  natureOfList: any[] = [];\r\n  selectedItems: any[];\r\n  infoList: any;\r\n\r\n\r\n  // Affichage\r\n  isSpinner = false;\r\n  isMain = false;\r\n  isExternalLinks = false;\r\n  isWikis = false;\r\n  isPicture = false;\r\n  isTopPicture = false;\r\n  isTraining = false;\r\n  isCareer = false;\r\n  isSociability = false;\r\n  isOther = false;\r\n  isSource = false;\r\n  isActivity = false;\r\n  isDocument = false;\r\n  isEvent = false;\r\n  isList = false;\r\n  isOrg = false;\r\n  isPlace = false;\r\n  isIframes = false;\r\n  isStemma = false;\r\n  isFamilyTree = false;\r\n  isFrames = false;\r\n  isSparql0 = false;\r\n  isSparql1 = false;\r\n  isSparql2 = false;\r\n  isSparql3 = false;\r\n  isSparql4 = false;\r\n  isTechnicality = false;\r\n  isTranscription = false;\r\n  isInfo = false;\r\n  isMobile = false;\r\n  isAliases = false;\r\n\r\n  // Divers\r\n  trans: any = '';\r\n  zoom: number;\r\n  latitude: number;\r\n  longitude: number;\r\n  coords: any;\r\n  urlSafe1: string;\r\n  urlSafe2: string;\r\n  urlSafe3: string;\r\n  urlSafe4: string;\r\n  urlSafe5: string;\r\n  urlSafe6: string;\r\n  urlSafe7: string;\r\n  urlSafe8: string;\r\n  urlSafe9: string;\r\n  urlSafe10: string;\r\n  urlSafe11: string;\r\n  urlSafe12: string;\r\n  urlSafe13: string;\r\n  urlSafe14: string;\r\n  urlSafe15: string;\r\n\r\n  // SPARQL\r\n  sparqlData0: any[] = [];\r\n  sparqlData1: any[] = [];\r\n  sparqlData2: any[] = [];\r\n  sparqlData3: any[] = [];\r\n  sparqlData4: any[] = [];\r\n  sparqlSubject0: string;\r\n  sparqlSubject1: string;\r\n  sparqlSubject2: string;\r\n  sparqlSubject3: string;\r\n  sparqlSubject4: string;\r\n\r\n  // Subscriptions\r\n  subscription0: Subscription;\r\n  subscription1: Subscription;\r\n  subscription2: Subscription;\r\n  subscription3: Subscription;\r\n\r\n  // Textes d’interface\r\n  newSearch: string = \"new search\";\r\n  linkedPagesTitle: string = \"linked pages\";\r\n  mainPage: string = \"main page\";\r\n  externalLinksTitle: string = \"External links\";\r\n  formerVisitsTitle: string = \"you have visited:\";\r\n  factGridQuery: string = \"FactGrid query\";\r\n  clickToDisplay: string = \"click to display\";\r\n  clickToDownload: string = \"click to download\";\r\n  stemma: string = \"stemma\";\r\n  factGridLogo: string = 'https://upload.wikimedia.org/wikipedia/commons/b/b6/FactGrid-Logo4.png';\r\n\r\n  ngOnInit(): void {\r\n\r\n    const selectedResearchField = localStorage.getItem('selectedResearchField');\r\n\r\n    this.from = (selectedResearchField === 'Q10441') ? 'paris' : 'search';\r\n\r\n    this.isSpinner = true;\r\n    this.isInfo = false;\r\n    this.newSearch = this.lang.getTranslation('newSearch', this.lang.selectedLang);\r\n    this.linkedPagesTitle = this.lang.getTranslation('linkedPagesTitle', this.lang.selectedLang);\r\n    this.mainPage = this.lang.getTranslation('mainPage', this.lang.selectedLang);\r\n    this.factGridQuery = this.lang.getTranslation('factGridQuery', this.lang.selectedLang);\r\n    this.externalLinksTitle = this.lang.getTranslation('externalLinksTitle', this.lang.selectedLang);\r\n    this.formerVisitsTitle = this.lang.getTranslation('formerVisitsTitle', this.lang.selectedLang);\r\n    this.clickToDownload = this.lang.getTranslation('clickToDownLoad', this.lang.selectedLang);\r\n    this.clickToDisplay = this.lang.getTranslation('clickToDisplay', this.lang.selectedLang);\r\n    this.stemma = this.lang.getTranslation('stemma', this.lang.selectedLang);\r\n\r\n    this.subscription0 = this.route.paramMap.subscribe(params => {\r\n      this.itemId = params.get('id');\r\n      this.loadBackList();\r\n      this.loadItem();\r\n    });\r\n  }\r\n\r\n  private loadBackList() {\r\n    this.subscription1 = this.backList.backList(this.itemId)\r\n      .pipe(map(res => {\r\n        if (res[0].query !== undefined) {\r\n          this.linkedItems = this.backListDetails.setBackList(res[0].query.pages);\r\n        } else {\r\n          this.linkedItems = [{ id: \"Q21898\", label: this.lang.getTranslation('$1', this.lang.selectedLang) }];\r\n        }\r\n      }))\r\n      .subscribe();\r\n  }\r\n\r\n  private getNoneLabel(lang: string): string {\r\n    switch (lang) {\r\n      case \"de\": return \"keine\";\r\n      case \"fr\": return \"aucune\";\r\n      case \"en\": return \"none\";\r\n      case \"es\": return \"ninguno\";\r\n      case \"hu\": return \"nincs\";\r\n      case \"it\": return \"nessuno\";\r\n      case \"zh\": return \"无\";\r\n      default: return \"none\";\r\n    }\r\n  }\r\n\r\n  private loadItem() {\r\n    this.subscription2 = this.setData.itemToDisplay(this.itemId).subscribe(item => {\r\n      this.isMain = this.isOther = this.isPicture = this.isSource = this.isTraining = this.isCareer =\r\n        this.isFamilyTree = this.isSociability = this.isIframes = this.isActivity = this.isWikis =\r\n        this.isExternalLinks = this.isInfo = false;\r\n\r\n      if (!item) return;\r\n      this.item = item;\r\n      console.log('Item loaded:', this.item); \r\n      this.setList.addToSelectedItemsList(item[0]);\r\n      this.claims = item[0].claims;\r\n      this.setList.addToSelectedItemsList(item[0]);\r\n      if (!this.claims.P2) { alert(\"property P2 undefined\"); return; }\r\n      if (!this.claims.P320) { this.hideList(); }\r\n      this.natureOf = this.claims.P2[0].mainsnak.datavalue.value.id;\r\n      this.event = this.claims.P2.event;\r\n      this.listTitle = this.claims.P2.listTitle;\r\n      this.main = this.claims.P2.main;\r\n      if (this.mainTitle == \"Humain\") { this.mainTitle = \"Personne\"; }\r\n      if ([\"Q37073\", \"Q257052\"].includes(this.claims.P2[0].mainsnak.datavalue.value.id)) {\r\n        this.mainTitle = this.lang.getTranslation('$1', this.lang.selectedLang);\r\n      }\r\n      this.urlId = this.factGridUrl + this.id;\r\n\r\n      this.id = this.item[0].id;\r\n      this.label = this.item[0].label;\r\n      this.description = this.item[0].description;\r\n      this.aliases = this.item[0].aliases;\r\n      if (this.aliases) { this.isAliases === true; }\r\n\r\n      // Flags d'affichage\r\n      const flags = this.itemDisplayDispatcher.dispatch(this.item, this);\r\n      Object.assign(this, flags);\r\n\r\n      // Carte\r\n      if (this.claims.P48) {\r\n        this.zoom = 12;\r\n        let xy = this.claims.P2[0].mainsnak.datavalue.value.id;\r\n        if (xy == \"Q176131\") this.zoom = 3;\r\n        if (xy == \"Q21925\") this.zoom = 4;\r\n        if (xy == \"Q21876\") this.zoom = 6;\r\n        if (xy == \"Q16200\") this.zoom = 18;\r\n        if ([\"Q266101\", \"Q469609\", \"Q172249\", \"Q36239\", \"Q164328\", \"Q36251\", \"Q141472\", \"Q395380\", \"Q375357\"].includes(xy)) this.zoom = 16;\r\n        this.coords = this.claims.P48[0].mainsnak.datavalue.value;\r\n        this.latitude = this.coords.latitude;\r\n        this.longitude = this.coords.longitude;\r\n        this.router.navigate([this.latitude, this.longitude, this.zoom], { relativeTo: this.route });\r\n      }\r\n\r\n      // Selected Items\r\n      this.selectedItemsList = JSON.parse(localStorage.getItem('selectedItems'));\r\n\r\n      // Images\r\n      this.pictures = this.claims.P189\r\n        ? this.claims.P189.map((picture, index) => {\r\n          const imageUrl = picture.picture;\r\n          const thumbnailUrl = `${imageUrl}?width=300`;\r\n          this.preloadImage(thumbnailUrl);\r\n          this.preloadImage(imageUrl);\r\n          return {\r\n            thumbnail: thumbnailUrl,\r\n            full: imageUrl,\r\n            uniqueKey: imageUrl || `picture-${index}`\r\n          };\r\n        })\r\n        : [];\r\n      this.isPicture = this.pictures.length > 0;\r\n      if (this.isPicture) {\r\n        this.observer.observe([Breakpoints.HandsetPortrait]).subscribe(result => {\r\n          if (result.matches) {\r\n            this.isMobile = true;\r\n            this.isTopPicture = true;\r\n            this.isPicture = false;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Iframes\r\n      this.iframes = [];\r\n      this.iframesDisplay.setIframesDisplay(this.item, this.iframes);\r\n      this.isIframes = this.iframes.length > 0;\r\n\r\n      // Extraction des URLs brutes pour les iframes\r\n      this.urlSafe1 = this.claims.P309?.[0]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe2 = this.claims.P309?.[1]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe3 = this.claims.P309?.[2]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe4 = this.claims.P320?.[0]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe5 = this.claims.P320?.[1]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe6 = this.claims.P320?.[2]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe7 = this.claims.P679?.[0]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe8 = this.claims.P679?.[1]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe9 = this.claims.P679?.[2]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe10 = this.claims.P693?.[0]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe11 = this.claims.P693?.[1]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe12 = this.claims.P693?.[2]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe13 = this.claims.P720?.[0]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe14 = this.claims.P720?.[1]?.mainsnak?.datavalue?.value || '';\r\n      this.urlSafe15 = this.claims.P720?.[2]?.mainsnak?.datavalue?.value || '';\r\n\r\n      // Transcription\r\n      if (this.claims.P251 && this.claims.P251[0].mainsnak.datavalue.value) {\r\n        let a = this.transcript.transcript(this.claims.P251[0].mainsnak.datavalue.value);\r\n        this.subscription3 = a.subscribe(res => {\r\n          this.trans = Object.keys(res)[0] == \"error\" ? \"no transcription\" : res.parse.text;\r\n          this.trans = this.changeTranscript.cleaning(this.trans);\r\n        });\r\n      } else {\r\n        this.trans = \"\";\r\n      }\r\n\r\n      // Info lists\r\n      if (this.item[0].infoList) {\r\n        this.instancesList = this.item[0].infoList[0];\r\n        this.subclassesList = this.item[0].infoList[1];\r\n        this.classesList = this.item[0].infoList[2];\r\n        this.natureOfList = this.item[0].infoList[3];\r\n      }\r\n\r\n      // sparql lists\r\n        this.item[0].sparql.subscribe(res => this.sparqlDisplay(res));\r\n \r\n      // Spinner\r\n      this.isSpinner = false;\r\n\r\n      // Trees\r\n      this.isFamilyTree = !!(this.claims.P150 || this.claims.P141 || this.claims.P142);\r\n      this.isStemma = !!this.claims.P233;\r\n    });\r\n  }\r\n\r\n  private preloadImage(url: string): void {\r\n    const link = document.createElement('link');\r\n    link.rel = 'preload';\r\n    link.as = 'image';\r\n    link.href = url;\r\n    document.head.appendChild(link);\r\n  }\r\n\r\n  onThumbnailLoad(picture: any): void { }\r\n\r\n  sparqlDisplay(u) {\r\n    if (!u) return;\r\n    if (u[0]) {\r\n      this.sparqlSubject0 = u[0][0];\r\n      this.sparqlData0 = u[0][1];\r\n      this.isSparql0 = !!(this.sparqlData0 && this.sparqlData0[0]);\r\n    }\r\n    if (u[1]) {\r\n      this.sparqlSubject1 = u[1][0];\r\n      this.sparqlData1 = u[1][1];\r\n      this.isSparql1 = !!(this.sparqlData1 && this.sparqlData1[0]);\r\n    }\r\n    if (u[2]) {\r\n      this.sparqlSubject2 = u[2][0];\r\n      this.sparqlData2 = u[2][1];\r\n      this.isSparql2 = !!(this.sparqlData2 && this.sparqlData2[0]);\r\n    }\r\n    if (u[3]) {\r\n      this.sparqlSubject3 = u[3][0];\r\n      if (u[3].osm_id) {\r\n        this.sparqlSubject3 = \"current address:\";\r\n        let label = { value: u[3].display_name };\r\n        let osm_id = { id: \"Q1188609\" };\r\n        let v = { item: osm_id, itemLabel: label };\r\n        this.sparqlData3 = [v];\r\n      } else {\r\n        this.sparqlData3 = u[3][1];\r\n      }\r\n      this.isSparql3 = !!(this.sparqlData3 && this.sparqlData3[0]);\r\n    }\r\n    if (u[4]) {\r\n      this.sparqlSubject4 = u[4][0];\r\n      this.sparqlData4 = u[4][1];\r\n      this.isSparql4 = !!(this.sparqlData4 && this.sparqlData4[0]);\r\n    }\r\n  }\r\n\r\n  openImage(url: string): void {\r\n    console.log(url);\r\n    if (url) {\r\n      window.open(url, '_blank');\r\n    }\r\n  }\r\n\r\n  toggleInfo(): void {\r\n    this.isInfo = !this.isInfo;\r\n  }\r\n\r\n  hideList() {\r\n    const el = document.getElementById(\"listing\");\r\n    if (el) el.style.visibility = 'hidden';\r\n  }\r\n\r\n  getUrl(u) {\r\n    return this.sanitizer.bypassSecurityTrustUrl(u);\r\n  }\r\n\r\n  ngAfterViewInit(): void { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription0?.unsubscribe();\r\n    this.subscription1?.unsubscribe();\r\n    this.subscription2?.unsubscribe();\r\n    this.subscription3?.unsubscribe();\r\n  }\r\n}\r\n","<head>\r\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\r\n        integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\r\n        crossorigin=\"\" />\r\n\r\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n        rel=\"stylesheet\">\r\n\r\n  <script src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\r\n          integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\r\n          crossorigin=\"\"></script>\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n\r\n  <div class=\"center\">\r\n\r\n    <button mat-button color=\"primary\" class=\"mat-typography\"\r\n            [routerLink]=\"from === 'paris' ? '/paris' : '/'\">\r\n      {{newSearch}}\r\n    </button>\r\n\r\n\r\n\r\n  </div>\r\n\r\n    <div class=\"spinner\">\r\n      @if (isSpinner) {\r\n      <mat-spinner diameter=50 mode=\"indeterminate\"></mat-spinner>\r\n      }\r\n    </div>\r\n\r\n    @if (!isSpinner) {\r\n    <div>\r\n      <mat-drawer-container class=\"drawer-container\">\r\n        <mat-drawer #drawer mode=\"push\">\r\n          <div class=\"ground-div0\">\r\n            <div class=\"icon mat-button\"\r\n                 style=\"display: flex; align-items: center; justify-content: flex-end;\">\r\n              <span class=\"blueButton\">{{mainPage}}</span>\r\n              <button mat-icon-button (click)=\"drawer.toggle()\">\r\n                <mat-icon class=\"blueButton\">chevron_right</mat-icon>\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          <div>\r\n          <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n            <mat-card-content class=\"cardBackground\">\r\n            <div class=\"listTitleStart\">  <!-- ListTitleStart seems to be deprecated -->\r\n            @if (\"main\"!==undefined) {\r\n          <div class=\"subdivisionTitle\">{{linkedPagesTitle}}</div>   \r\n}\r\n            </div>\r\n              @for (item of linkedItems; track item.id) {\r\n           <div>   \r\n                <span>\r\n                  &nbsp;&nbsp;{{ item.label }}, {{ item.id }}\r\n                  <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', item.id]\"><mat-icon color=\"primary\" [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                <hr>\r\n              </div>\r\n}\r\n          </mat-card-content>\r\n          </mat-card>\r\n          </div>\r\n        </mat-drawer>\r\n        <mat-drawer-content class=\"drawer-background\">\r\n          <div class=\"ground-div1\">\r\n            <div class=\"icon mat-button\" style=\"display: flex; align-items: center;\">\r\n              <button mat-icon-button (click)=\"drawer.toggle()\"><mat-icon class=\"blueButton\">chevron_left</mat-icon></button><span class=\"blueButton\">{{linkedPagesTitle}}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"parent\">\r\n            <div class=\"child1\">\r\n              <div class=\"matCardPadding\">\r\n                <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n                  <div class=\"cardBackground\">\r\n\r\n                    <mat-card-content>\r\n                      \r\n                        <div class=\"itemTitle\" [attr.lang]=\"selectedLang === 'de' ? 'de' : null\">{{ label }}</div>\r\n\r\n                      \r\n                      <div [ngClass]=\"isAliases ? 'hide-division':'show-division'\" class=\"aliases\">\r\n                        {{ aliases | join }}\r\n                      </div>\r\n                      <div class=\"itemDescription\">\r\n                        {{ description }}\r\n                      </div>\r\n                      <br>\r\n                      <div>\r\n                        <span class=\"propertyStyle\">FactGrid ID:&nbsp;&nbsp;</span> @if (id) {\r\n                        <span class=\"percent4\">\r\n                          <a href=\"https://database.factgrid.de/wiki/Item:{{id}}\" target=\"_blank\" rel=\"noopener\">{{ id }}</a>\r\n                        </span>\r\n                        }\r\n                      </div>\r\n                      <!---               image on the top for small screens                       --->\r\n                      @for (picture of pictures; track picture.uniqueKey) {\r\n                      <div [ngClass]=\"isTopPicture ? 'show-division':'hide-division'\">\r\n                        <div class=\"img2\">\r\n                          <!--                  <mat-card appearance=\"outlined\" class=mat-elevation-z2>\r\n              <img mat-card-image src={{picture.picture}} (click)=\"openImage(picture.picture)\">-->\r\n\r\n                          <img mat-card-image [src]=\"picture.thumbnail\"\r\n                               [attr.data-src]=\"picture.full\"\r\n                               loading=\"lazy\"\r\n                               alt=\"Image description\"\r\n                               (error)=\"onImageError($event)\"\r\n                               (click)=\"openImage(picture.full)\" />\r\n                          <!--                  </mat-card>   -->\r\n                        </div>\r\n                      </div>\r\n                      }\r\n                      <!--                   end of image on the top for small screens             --->\r\n                    </mat-card-content>\r\n                    <app-header-display [headerDetail]=\"this.headerDetail\"></app-header-display>\r\n                  </div>\r\n                </mat-card>\r\n              </div>\r\n              <div>\r\n              </div>\r\n\r\n              <!--********************** section Main  *********************** -->\r\n\r\n\r\n              <div class=\"matCardPadding\" [ngClass]=\"isMain ? 'show-division':'hide-division'\">\r\n                <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n                  <app-main-display [mainList]=\"this.mainList\" [mainTitle]=\"this.mainTitle\" [list]=\"this.list\"></app-main-display>\r\n                </mat-card>\r\n              </div>\r\n\r\n\r\n\r\n              <!--************************ end of main section *********************-->\r\n              @if (this.trans !== \"\") {   <app-text-display [trans]=\"this.trans\"></app-text-display>   } <!----transcription-->\r\n              <!-- ********************************section Training ******************************-->\r\n\r\n              <div class=\"matCardPadding\" [ngClass]=\"isTraining ? 'show-division':'hide-division'\">\r\n                <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n                  <app-education-display [education]=\"this.education\" [training]=\"this.training\"></app-education-display>\r\n                </mat-card>\r\n              </div>\r\n\r\n\r\n              <!--  ******************************* section Career ****************************************  -->\r\n\r\n              <div class=\"matCardPadding\" [ngClass]=\"isCareer ? 'show-division':'hide-division'\">\r\n                <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n                  <app-career-display [careerAndActivities]=\"this.careerAndActivities\" [career]=\"this.career\"></app-career-display>\r\n                </mat-card>\r\n              </div>\r\n\r\n              <!---************************************ section Sociability **********************************-->\r\n\r\n              <div class=\"matCardPadding\" [ngClass]=\"isSociability ? 'show-division':'hide-division'\">\r\n                <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n                  <app-sociability-display [sociabilityAndCulture]=\"this.sociabilityAndCulture\" [sociability]=\"this.sociability\"></app-sociability-display>\r\n                </mat-card>\r\n              </div>\r\n\r\n              <!-- ******************************* iFrames ****************************************  -->\r\n\r\n              <div class=\"matCardPadding\" [ngClass]=\"isIframes ? 'show-division':'hide-division'\">\r\n                <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n                  <app-iframes-display [claims]=\"claims\"\r\n                                       [urlSafe1]=\"urlSafe1\"\r\n                                       [urlSafe2]=\"urlSafe2\"\r\n                                       [urlSafe3]=\"urlSafe3\"\r\n                                       [urlSafe4]=\"urlSafe4\"\r\n                                       [urlSafe5]=\"urlSafe5\"\r\n                                       [urlSafe6]=\"urlSafe6\"\r\n                                       [urlSafe7]=\"urlSafe7\"\r\n                                       [urlSafe8]=\"urlSafe8\"\r\n                                       [urlSafe9]=\"urlSafe9\"\r\n                                       [urlSafe10]=\"urlSafe10\"\r\n                                       [urlSafe11]=\"urlSafe11\"\r\n                                       [urlSafe12]=\"urlSafe12\"\r\n                                       [urlSafe13]=\"urlSafe13\"\r\n                                       [urlSafe14]=\"urlSafe14\"\r\n                                       [urlSafe15]=\"urlSafe15\">\r\n                  </app-iframes-display>\r\n                </mat-card>\r\n              </div>\r\n\r\n              <!-- ************************************* sparql0 **************************************** -->\r\n              <div [ngClass]=\"isSparql0 ? 'show-division':'hide-division'\">\r\n                <app-sparql0-display [sparqlData]=\"this.sparqlData0\" [sparqlSubject]=\"this.sparqlSubject0\"></app-sparql0-display>\r\n              </div>\r\n\r\n              <!-- ************************************* sparql3 **************************************** -->\r\n              <div [ngClass]=\"isSparql3 ? 'show-division':'hide-division'\">\r\n                <app-sparql3-display [sparqlData]=\"this.sparqlData3\" [sparqlSubject]=\"this.sparqlSubject3\"></app-sparql3-display>\r\n              </div>\r\n\r\n              <!--      ************************************* sparql1 **************************************** -->\r\n              <div [ngClass]=\"isSparql1 ? 'show-division':'hide-division'\">\r\n                <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n                  <app-sparql1-display [sparqlData]=\"this.sparqlData1\" [sparqlSubject]=\"this.sparqlSubject1\"></app-sparql1-display>\r\n                </mat-card>\r\n              </div>\r\n\r\n              <!-- ************************************* sparql2 **************************************** -->\r\n              <div [ngClass]=\"isSparql2 ? 'show-division':'hide-division'\">\r\n                <app-sparql2-display [sparqlData]=\"this.sparqlData2\" [sparqlSubject]=\"this.sparqlSubject2\"></app-sparql2-display>\r\n              </div>\r\n\r\n              <!-- ************************************* sparql4 **************************************** -->\r\n              <div [ngClass]=\"isSparql4 ? 'show-division':'hide-division'\">\r\n                <app-sparql4-display [sparqlData]=\"this.sparqlData4\" [sparqlSubject]=\"this.sparqlSubject4\"></app-sparql4-display>\r\n              </div>\r\n\r\n              <!-- ******************************* section Sources ****************************************  -->\r\n\r\n              <div [ngClass]=\"isSource ? 'show-division':'hide-division'\">\r\n                <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n                  <app-sources-display [sourcesList]=\"this.sourcesList\" [sources]=\"this.sources\"></app-sources-display>\r\n                </mat-card>\r\n              </div>\r\n\r\n              <!--  ************************************* sparql3 ****************************************\r\n  <div class=\"matCardPadding\" [ngClass]=\"isSparql0 ? 'show-division':'hide-division'\">\r\n    <mat-card appearance=\"outlined\" class=mat-elevation-z12>\r\n      <app-sparql3-display [item]=\"this.item\"></app-sparql3-display>\r\n    </mat-card>\r\n  </div>-->\r\n              <!-- ******************************* Info ****************************************  -->\r\n              <mat-card appearance=\"outlined\" class=\"mat-elevation-z12\">\r\n                <div>\r\n                  <div class=\"ground-div2\">\r\n                    <div class=\"mat-button mat-small\">\r\n                      <button mat-icon-button (click)=\"toggleInfo()\" class=\"icon whiteText\">\r\n                        <mat-icon class=\"icon whiteButton\">\r\n                          {{ isInfo ? 'expand_less' : 'expand_more' }}\r\n                        </mat-icon>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"ground-div2\" [ngClass]=\"isInfo ? 'show-division' : 'hide-division'\">\r\n                    <app-item-info [infoList]=\"infoList\"></app-item-info>\r\n\r\n                  </div>\r\n                </div>\r\n              </mat-card>\r\n\r\n            </div>\r\n\r\n              <!-- ****************************************** Pictures ****************************************  -->\r\n              <div class=\"child2\">\r\n                <mat-card appearance=\"outlined\">\r\n                  <div class=\"img2\" [ngClass]=\"isPicture ? 'show-division':'hide-division'\">\r\n                    @for (picture of pictures; track picture.uniqueKey) {\r\n                    <div>\r\n                      <!---     <mat-card appearance=\"outlined\" class=mat-elevation-z8>\r\n  <img mat-card-image src={{picture.picture}} (click)=\"openImage(picture.picture)\">--->\r\n\r\n\r\n                      <img mat-card-image [src]=\"picture.thumbnail\"\r\n                           [attr.data-src]=\"picture.full\"\r\n                           loading=\"lazy\"\r\n                           alt=\"Image description\"\r\n                           (load)=\"onThumbnailLoad(picture)\"\r\n                           (error)=\"onImageError($event)\"\r\n                           (click)=\"openImage(picture.full)\" />\r\n\r\n                      <!---</mat-card> --->\r\n                    </div>\r\n                  }\r\n               </div>\r\n            </mat-card>\r\n\r\n  <!-- ************************************* external links ****************************************  -->\r\n                      <!--          <div>   -->\r\n                      <mat-card appearance=\"outlined\" class=\"external-links\">\r\n                        <mat-card-content [ngClass]=\"isExternalLinks ? 'show-division':'hide-division'\">\r\n                          <div class=\"externalLinksPadding\">\r\n                            <div class=\"divisionTitle\">{{externalLinksTitle}}</div>\r\n                            <hr>\r\n                          </div>\r\n                          @for (externalLink of externalLinks; track externalLink.label) {\r\n                          <div class=\"externalLinksText\">\r\n                            <span>{{externalLink.label}}: </span><a href=\"{{externalLink.url}}\" target=\"_blank\">\r\n                              {{externalLink[0].mainsnak.datavalue.value}}\r\n                            </a><span>&nbsp;&nbsp;</span>\r\n                          </div>\r\n                          }\r\n                        </mat-card-content>\r\n\r\n\r\n                        <!-- ************************************* wikis links ****************************************  -->\r\n\r\n                        <mat-card-content class=\"header-spacer\" [ngClass]=\"isWikis ? 'show-division':'hide-division'\">\r\n                          <div class=\"externalLinksPadding\">\r\n                            <div class=\"divisionTitle\">Wikis</div>\r\n                            <hr>\r\n                          </div>\r\n                          @for (wiki of wikis; track wiki.url) {\r\n                          <!--          <div>   -->\r\n                          <div class=\"externalLinksText\">\r\n                            <span>{{wiki.site}}: </span><a href=\"{{wiki.url}}\" target=\"_blank\">{{wiki.title}}</a><span>&nbsp;&nbsp;</span>\r\n                          </div>\r\n                          <!--                <br>    -->\r\n                          <!--          </div>   -->\r\n                          }\r\n                        </mat-card-content>\r\n                      </mat-card>\r\n                      <!--              </div> -->\r\n                      <!-- ************************************* selected items  ****************************************  -->\r\n                      <!--         <div>  -->\r\n                      <mat-card appearance=\"outlined\" class=\"mat-elevation-z8 \">\r\n                        <div class=\"itemSelected-mat-card\">\r\n                          <mat-card-content>\r\n                            <div class=\"selectedListTitle\">{{formerVisitsTitle}}</div>\r\n                            <br>\r\n                            <div>\r\n                              <div *ngFor=\"let selectedItem of selectedItemsList\">\r\n                                <div>\r\n                                  <span *ngIf=\"selectedItem\" class=\"selectedItemText\">\r\n                                    {{selectedItem.label}}\r\n                                    <mat-icon-button class=\"internalLink\" [routerLink]=\"['/item', selectedItem.value.id]\"><mat-icon [inline]=\"true\">open_in_new</mat-icon></mat-icon-button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                  </span>\r\n                                </div>\r\n                                <br>\r\n                              </div>\r\n                            </div>\r\n                          </mat-card-content>\r\n                        </div>\r\n                      </mat-card>\r\n                      <!--          </div>  -->\r\n\r\n                    </div>\r\n            </div>\r\n        </mat-drawer-content>\r\n      </mat-drawer-container>\r\n    </div>\r\n    }\r\n  </body>\r\n"],"mappings":"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","names":["res","res","input","_c0","_c1","_c2","_c3","_c0","_c1","_c2","_c3","_c0","_c1","_c2","_c3","_c0","_c1","_c2","_c3","_c0","_c1","_c2","_c3","_c0","_c0","_c0","_forTrack0","_c0","_c0","_c0","_c0","_c1","_c2","_c3","_c0","_forTrack0"],"x_google_ignoreList":[48]}